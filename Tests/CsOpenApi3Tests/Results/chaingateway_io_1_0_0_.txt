//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// getLastBlockNumber
		/// Get the latest block number
		/// Getlastblocknumber4 v2/bitcoin/blocks/number
		/// </summary>
		/// <returns>getBlockNumber</returns>
		public async Task<Getlastblocknumber4Return> Getlastblocknumber4Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/blocks/number";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getlastblocknumber4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBlock
		/// getBlock
		/// Getblock4 v2/bitcoin/blocks/{block}
		/// </summary>
		/// <returns>getBlock</returns>
		public async Task<Getblock4Return> Getblock4Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/blocks/{block}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getblock4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getFees
		/// The fees are parted into three categroies
		/// 
		/// fast (10min / 1 block)
		/// medium (30 min / 3 blocks)
		/// slow (60 min / 6 blocks)
		/// 
		/// this tells you in wich block distance your transaction get confirmed. A block is around \~10 minutes.
		/// 
		/// Please note that fees are dynamic by transaction size. This is only an estimation!
		/// Getfees v2/bitcoin/fees
		/// </summary>
		/// <returns>getFees</returns>
		public async Task<GetfeesReturn> GetfeesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/fees";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetfeesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBlockchaIninfo
		/// getBlockchaIninfo
		/// Getblockchaininfo v2/bitcoin/info
		/// </summary>
		/// <returns>getBlockchaIninfo</returns>
		public async Task<GetblockchaininfoReturn> GetblockchaininfoAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/info";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetblockchaininfoReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTransaction
		/// sendTransaction
		/// Sendtransaction4 v2/bitcoin/transactions
		/// </summary>
		public async Task Sendtransaction4Async(Sendtransaction4PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/transactions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransaction
		/// You can get your transaction decoded by add /decoded to your api call. If you want to get the transaction encoded, youst remove the /decoded part
		/// Gettransaction4 v2/bitcoin/transactions/{id}/decoded
		/// </summary>
		/// <returns>getTransaction (decoded)</returns>
		public async Task<Gettransaction4Return> Gettransaction4Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/transactions/{id}/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransaction4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getWallet
		/// getWallet
		/// Getwallet v2/bitcoin/wallets
		/// </summary>
		/// <returns>getWallets</returns>
		public async Task<GetwalletReturn> GetwalletAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/wallets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetwalletReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// createWallet
		/// createWallet
		/// Createwallet v2/bitcoin/wallets
		/// </summary>
		/// <returns>200</returns>
		public async Task<CreatewalletReturn> CreatewalletAsync(CreatewalletPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/wallets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreatewalletReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// exportAddressPrivateKey
		/// exportAddressPrivateKey
		/// Exportaddressprivatekey v2/bitcoin/wallets/{name}/addresses/{address}/export
		/// </summary>
		/// <returns>200</returns>
		public async Task<ExportaddressprivatekeyReturn> ExportaddressprivatekeyAsync(ExportaddressprivatekeyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/wallets/{name}/addresses/{address}/export";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ExportaddressprivatekeyReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getWalletAddresses
		/// getWalletAddresses
		/// Getwalletaddresses v2/bitcoin/wallets/{wallet_name}/addresses
		/// </summary>
		/// <returns>200</returns>
		public async Task<GetwalletaddressesReturn> GetwalletaddressesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/wallets/{wallet_name}/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetwalletaddressesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// createWalletAddress
		/// createWalletAddress
		/// Createwalletaddress v2/bitcoin/wallets/{wallet_name}/addresses
		/// </summary>
		/// <returns>200</returns>
		public async Task<CreatewalletaddressReturn> CreatewalletaddressAsync(string requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/wallets/{wallet_name}/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreatewalletaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// deleteWallet
		/// deleteWallet
		/// Deletewallet v2/bitcoin/wallets/{walletname}
		/// </summary>
		/// <returns>deleteWallet</returns>
		public async Task<DeletewalletReturn> DeletewalletAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/wallets/{walletname}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeletewalletReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listSubscribedAddresses
		/// Returns all subscriptions/IPNs created with an account.
		/// Listsubscribedaddresses4 v2/bitcoin/webhooks
		/// </summary>
		/// <returns>listSubscribedAddresses</returns>
		public async Task<Listsubscribedaddresses4Return> Listsubscribedaddresses4Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listsubscribedaddresses4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// subscribeAddress
		/// Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.
		/// 
		/// Subscribeaddress4 v2/bitcoin/webhooks
		/// </summary>
		/// <returns>subscribeAddress</returns>
		public async Task<Subscribeaddress4Return> Subscribeaddress4Async(Subscribeaddress4PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Subscribeaddress4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listFailedIPNs
		/// Returns all subscriptions/IPNs created with an account.
		/// Listfailedipns4 v2/bitcoin/webhooks/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<Listfailedipns4Return> Listfailedipns4Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/webhooks/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listfailedipns4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// resendFailedIPN
		/// Returns all subscriptions/IPNs created with an account.
		/// Resendfailedipn4 v2/bitcoin/webhooks/notifications/failed/{notification_id}
		/// </summary>
		/// <returns>resendFailedIPN</returns>
		public async Task<Resendfailedipn4Return> Resendfailedipn4Async(string requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/webhooks/notifications/failed/{notification_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Resendfailedipn4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// unsubscribeAddress
		/// Deletes an existing subscription/IPN for the given address (and contractaddress).
		/// Unsubscribeaddress4 v2/bitcoin/webhooks/{id}
		/// </summary>
		/// <returns>unsubscribeAddress</returns>
		public async Task<Unsubscribeaddress4Return> Unsubscribeaddress4Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bitcoin/webhooks/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Unsubscribeaddress4Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listAddress
		/// listAddress
		/// Listaddress v2/bsc/addresses
		/// </summary>
		/// <returns>listAddress</returns>
		public async Task<ListaddressReturn> ListaddressAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// newAddress
		/// newAddress
		/// Newaddress2 v2/bsc/addresses
		/// </summary>
		/// <returns>newAddress</returns>
		public async Task<Newaddress2Return> Newaddress2Async(Newaddress2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Newaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// exportAddress
		/// exportAddress
		/// Exportaddress2 v2/bsc/addresses/export/{address}
		/// </summary>
		/// <returns>exportAddress</returns>
		public async Task<Exportaddress2Return> Exportaddress2Async(Exportaddress2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/addresses/export/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Exportaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// importAddress
		/// importAddress
		/// Importaddress2 v2/bsc/addresses/import
		/// </summary>
		/// <returns>importAddress</returns>
		public async Task<Importaddress2Return> Importaddress2Async(Importaddress2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/addresses/import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Importaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// deleteAddress
		/// deleteAddress
		/// Deleteaddress2 v2/bsc/addresses/{address}
		/// </summary>
		/// <returns>deleteAddress</returns>
		public async Task<Deleteaddress2Return> Deleteaddress2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/addresses/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Deleteaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListTransactionsByAddress
		/// Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.
		/// 
		/// Each page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.
		/// 
		/// To use the paginator, you can include parameter in your request: "page" . The "page" parameter specifies which page of results to retrieve,
		/// 
		/// For example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/1
		/// 
		/// ```
		/// 
		/// If there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the "page" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/2
		/// ```
		/// 
		/// By using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.
		/// 
		/// each request tells you the max pages within the Request in the **max_pages** field
		/// 
		/// `"max_pages": 515`
		/// Listtransactionsbyaddress2 v2/bsc/addresses/{address}/transactions/{page}
		/// </summary>
		/// <returns>200</returns>
		public async Task<Listtransactionsbyaddress2Return> Listtransactionsbyaddress2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/addresses/{address}/transactions/{page}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listtransactionsbyaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBinanceCoinBalance
		/// Get the balance of an address
		/// Getbinancecoinbalance v2/bsc/balances/{address}
		/// </summary>
		/// <returns>getBinanceCoinBalance</returns>
		public async Task<GetbinancecoinbalanceReturn> GetbinancecoinbalanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/balances/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetbinancecoinbalanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBEP20Balance
		/// Get the balance of a BEP20 address
		/// Getbep20balance v2/bsc/balances/{contract}/bep20/{token_id}
		/// </summary>
		/// <returns>getBEP20Balance</returns>
		public async Task<Getbep20balanceReturn> Getbep20balanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/balances/{contract}/bep20/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getbep20balanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBEP20
		/// Receive information of a BEP20 address
		/// Getbep20 v2/bsc/bep20/{contract}
		/// </summary>
		/// <returns>getBEP20</returns>
		public async Task<Getbep20Return> Getbep20Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/bep20/{contract}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getbep20Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getLastBlocknumber
		/// Get the latest block number
		/// Getlastblocknumber2 v2/bsc/blocks/number
		/// </summary>
		/// <returns>getBlocknumber</returns>
		public async Task<Getlastblocknumber2Return> Getlastblocknumber2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/blocks/number";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getlastblocknumber2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBlock
		/// Get information of a specific block
		/// Getblock2 v2/bsc/blocks/{block}
		/// </summary>
		/// <returns>getBlock</returns>
		public async Task<Getblock2Return> Getblock2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/blocks/{block}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getblock2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getGasPrice
		/// Get gas price
		/// Getgasprice2 v2/bsc/gasprice
		/// </summary>
		/// <returns>getGasPrice</returns>
		public async Task<Getgasprice2Return> Getgasprice2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/gasprice";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getgasprice2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getNFTOwner
		/// Get the Owner of an NFT
		/// Getnftowner2 v2/bsc/nfts/{contract}/owner/{token_id}
		/// </summary>
		/// <returns>getNFTOwner</returns>
		public async Task<Getnftowner2Return> Getnftowner2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/nfts/{contract}/owner/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getnftowner2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getNFTUri
		/// Get the URI of an NFT
		/// Getnfturi2 v2/bsc/nfts/{contract}/uri/{token_id}
		/// </summary>
		/// <returns>getNFTUri</returns>
		public async Task<Getnfturi2Return> Getnfturi2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/nfts/{contract}/uri/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getnfturi2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTransaction
		/// sendTransaction
		/// Sendtransaction2 v2/bsc/transactions
		/// </summary>
		public async Task Sendtransaction2Async(Sendtransaction2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/transactions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendBEP20
		/// sendBEP20
		/// Sendbep20 v2/bsc/transactions/bep20
		/// </summary>
		public async Task Sendbep20Async(Sendbep20PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/transactions/bep20";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendBEP721
		/// sendBEP721
		/// Sendbep721 v2/bsc/transactions/bep721
		/// </summary>
		public async Task Sendbep721Async(Sendbep721PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/transactions/bep721";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// broadcastTransaction
		/// Broadcast raw transactions
		/// Broadcasttransaction2 v2/bsc/transactions/broadcast
		/// </summary>
		/// <returns>broadcastTransaction</returns>
		public async Task<Broadcasttransaction2Return> Broadcasttransaction2Async(Broadcasttransaction2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/transactions/broadcast";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Broadcasttransaction2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransaction
		/// Get info about a transaction
		/// 
		/// You can get your transaction decoded by add /decoded to your api call. If you want to get the transaction encoded, youst remove the /decoded part
		/// Gettransaction2 v2/bsc/transactions/{transaction}/decoded
		/// </summary>
		/// <returns>getTransaction (encoded)</returns>
		public async Task<Gettransaction2Return> Gettransaction2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/transactions/{transaction}/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransaction2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransactionReceipt
		/// Get info about a transaction receipt
		/// 
		/// You can get your transaction decoded by add /decoded to your api call. If you want to get the transaction encoded, youst remove the /decoded part
		/// Gettransactionreceipt2 v2/bsc/transactions/{transaction}/receipt/decoded
		/// </summary>
		/// <returns>getTransactionReceipt (encoded)</returns>
		public async Task<Gettransactionreceipt2Return> Gettransactionreceipt2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/transactions/{transaction}/receipt/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransactionreceipt2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listSubscribedAddresses
		/// Returns all subscriptions/IPNs created with an account.
		/// Listsubscribedaddresses2 v2/bsc/webhooks
		/// </summary>
		/// <returns>listSubscribedAddresses</returns>
		public async Task<Listsubscribedaddresses2Return> Listsubscribedaddresses2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listsubscribedaddresses2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// subscribeAddress
		/// Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.
		/// 
		/// Subscribeaddress2 v2/bsc/webhooks
		/// </summary>
		/// <returns>subscribeAddress</returns>
		public async Task<Subscribeaddress2Return> Subscribeaddress2Async(Subscribeaddress2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Subscribeaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listFailedIPNs
		/// Returns all subscriptions/IPNs created with an account.
		/// Listfailedipns2 v2/bsc/webhooks/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<Listfailedipns2Return> Listfailedipns2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/webhooks/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listfailedipns2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// resendFailedIPN
		/// Returns all subscriptions/IPNs created with an account.
		/// Resendfailedipn2 v2/bsc/webhooks/notifications/failed/{notification_id}
		/// </summary>
		/// <returns>resendFailedIPN</returns>
		public async Task<Resendfailedipn2Return> Resendfailedipn2Async(string requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/webhooks/notifications/failed/{notification_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Resendfailedipn2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// unsubscribeAddress
		/// Deletes an existing subscription/IPN for the given address (and contractaddress).
		/// Unsubscribeaddress2 v2/bsc/webhooks/{webhook}
		/// </summary>
		/// <returns>unsubscribeAddress</returns>
		public async Task<Unsubscribeaddress2Return> Unsubscribeaddress2Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/bsc/webhooks/{webhook}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Unsubscribeaddress2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// broadcastTransaction
		/// Broadcast raw transactions
		/// Broadcasttransaction v2/eth/transactions/broadcast
		/// </summary>
		/// <returns>broadcastTransaction</returns>
		public async Task<BroadcasttransactionReturn> BroadcasttransactionAsync(BroadcasttransactionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/eth/transactions/broadcast";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BroadcasttransactionReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listAddresses
		/// listAddresses
		/// Listaddresses v2/ethereum/addresses
		/// </summary>
		/// <returns>listAddresses</returns>
		public async Task<ListaddressesReturn> ListaddressesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListaddressesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// newAddress
		/// newAddress
		/// Newaddress v2/ethereum/addresses
		/// </summary>
		/// <returns>newAddress</returns>
		public async Task<NewaddressReturn> NewaddressAsync(NewaddressPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<NewaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// exportAddress
		/// exportAddress
		/// Exportaddress v2/ethereum/addresses/export/{address}
		/// </summary>
		/// <returns>exportAddress</returns>
		public async Task<ExportaddressReturn> ExportaddressAsync(ExportaddressPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/addresses/export/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ExportaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// importAddress
		/// importAddress
		/// Importaddress v2/ethereum/addresses/import
		/// </summary>
		/// <returns>importAddress</returns>
		public async Task<ImportaddressReturn> ImportaddressAsync(ImportaddressPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/addresses/import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ImportaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// deleteAddress
		/// deleteAddress
		/// Deleteaddress v2/ethereum/addresses/{address}
		/// </summary>
		/// <returns>deleteAddress</returns>
		public async Task<DeleteaddressReturn> DeleteaddressAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/addresses/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListTransactionsByAddress
		/// Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.
		/// 
		/// Each page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.
		/// 
		/// To use the paginator, you can include parameter in your request: "page" . The "page" parameter specifies which page of results to retrieve,
		/// 
		/// For example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/1
		/// 
		/// ```
		/// 
		/// If there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the "page" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/2
		/// ```
		/// 
		/// By using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.
		/// 
		/// each request tells you the max pages within the Request in the **max_pages** field
		/// 
		/// `"max_pages": 515`
		/// Listtransactionsbyaddress v2/ethereum/addresses/{address}/transactions/{page}
		/// </summary>
		/// <returns>ListTransactionsByAddress</returns>
		public async Task<ListtransactionsbyaddressReturn> ListtransactionsbyaddressAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/addresses/{address}/transactions/{page}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListtransactionsbyaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getEthereumBalance
		/// Get the balance of an address
		/// Getethereumbalance v2/ethereum/balances/{address}
		/// </summary>
		/// <returns>getEthereumBalance</returns>
		public async Task<GetethereumbalanceReturn> GetethereumbalanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/balances/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetethereumbalanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getAllERC20Balance
		/// Get the balance of an ERC20 address
		/// Getallerc20balance v2/ethereum/balances/{address}/erc20/{erc20_token}
		/// </summary>
		/// <returns>getERC20Balance</returns>
		public async Task<Getallerc20balanceReturn> Getallerc20balanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/balances/{address}/erc20/{erc20_token}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getallerc20balanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getLastBlockNumber
		/// Get the latest block number
		/// Getlastblocknumber v2/ethereum/blocks/number
		/// </summary>
		/// <returns>getLastBlockNumber</returns>
		public async Task<GetlastblocknumberReturn> GetlastblocknumberAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/blocks/number";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetlastblocknumberReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBlock
		/// Get information of a specific block
		/// Getblock v2/ethereum/blocks/{block}
		/// </summary>
		/// <returns>getBlock</returns>
		public async Task<GetblockReturn> GetblockAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/blocks/{block}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetblockReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getERC20
		/// Get information about an ERC20 token
		/// Geterc20 v2/ethereum/erc20/{erc20_token}
		/// </summary>
		/// <returns>getERC20</returns>
		public async Task<Geterc20Return> Geterc20Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/erc20/{erc20_token}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Geterc20Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getGasPrice
		/// Get gas price
		/// Getgasprice v2/ethereum/gasprice
		/// </summary>
		/// <returns>getGasPrice</returns>
		public async Task<GetgaspriceReturn> GetgaspriceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/gasprice";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetgaspriceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getNFTOwner
		/// Get the Owner of an NFT
		/// Getnftowner v2/ethereum/nfts/{contract}/owner/{token_id}
		/// </summary>
		/// <returns>getNFTOwner</returns>
		public async Task<GetnftownerReturn> GetnftownerAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/nfts/{contract}/owner/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetnftownerReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getNFTUri
		/// Get the URI of an NFT
		/// Getnfturi v2/ethereum/nfts/{contract}/uri/{token_id}
		/// </summary>
		/// <returns>getNFTUri</returns>
		public async Task<GetnfturiReturn> GetnfturiAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/nfts/{contract}/uri/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetnfturiReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTransaction
		/// sendTransaction
		/// Sendtransaction v2/ethereum/transactions
		/// </summary>
		public async Task SendtransactionAsync(SendtransactionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/transactions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendERC20
		/// sendERC20
		/// Senderc20 v2/ethereum/transactions/erc20
		/// </summary>
		public async Task Senderc20Async(Senderc20PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/transactions/erc20";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendERC721
		/// sendERC721
		/// Senderc721 v2/ethereum/transactions/erc721
		/// </summary>
		public async Task Senderc721Async(Senderc721PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/transactions/erc721";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransaction
		/// Get info about a transaction
		/// 
		/// You can choose if you want to get the Transaction encoded or decoded by add /decoded to your request. See examlpes for details
		/// Gettransaction v2/ethereum/transactions/{transaction}/decoded
		/// </summary>
		/// <returns>getTransactionReceipt (encoded)</returns>
		public async Task<GettransactionReturn> GettransactionAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/transactions/{transaction}/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GettransactionReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransactionReceipt
		/// Get info about a transaction receipt
		/// 
		/// You can choose if you want to get the Transaction encoded or decoded by add /decoded to your request. See examlpes for details
		/// Gettransactionreceipt v2/ethereum/transactions/{transaction}/receipt/decoded
		/// </summary>
		/// <returns>getTransactionReceipt (encoded)</returns>
		public async Task<GettransactionreceiptReturn> GettransactionreceiptAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/transactions/{transaction}/receipt/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GettransactionreceiptReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listSubscribedAddresses
		/// Returns all subscriptions/IPNs created with an account.
		/// Listsubscribedaddresses v2/ethereum/webhooks
		/// </summary>
		/// <returns>listSubscribedAddresses</returns>
		public async Task<ListsubscribedaddressesReturn> ListsubscribedaddressesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListsubscribedaddressesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// subscribeAddress
		/// Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.
		/// 
		/// You can choose one or more from following filter criterias
		/// 
		/// | **Parameter** | **Description** |
		/// | --- | --- |
		/// | from | ethereum address |
		/// | to | ethereum address |
		/// | contractaddress | contract address |
		/// | tokenid | token id |
		/// 
		/// You also need to dpecify the parameter "type". you can choose between \['ETH', 'ERC20', 'ERC721', null\]
		/// Subscribeaddress v2/ethereum/webhooks
		/// </summary>
		/// <returns>subscribeAddress</returns>
		public async Task<SubscribeaddressReturn> SubscribeaddressAsync(SubscribeaddressPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SubscribeaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// resendFailedIPN
		/// Returns all subscriptions/IPNs created with an account.
		/// Resendfailedipn v2/ethereum/webhooks/notifications/failed/{notification}
		/// </summary>
		/// <returns>resendFailedIPN</returns>
		public async Task<ResendfailedipnReturn> ResendfailedipnAsync(string requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/webhooks/notifications/failed/{notification}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResendfailedipnReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// unsubscribeAddress
		/// Deletes an existing subscription/IPN for the given address (and contractaddress).
		/// Unsubscribeaddress v2/ethereum/webhooks/{webhook}
		/// </summary>
		/// <returns>unsubscribeAddress</returns>
		public async Task<UnsubscribeaddressReturn> UnsubscribeaddressAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/webhooks/{webhook}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UnsubscribeaddressReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listIPNsByWebhookId
		/// Returns all subscriptions/IPNs created with an account.
		/// Listipnsbywebhookid v2/ethereum/webkhooks/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<ListipnsbywebhookidReturn> ListipnsbywebhookidAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/webkhooks/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListipnsbywebhookidReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listFailedIPNs
		/// Returns all subscriptions/IPNs created with an account.
		/// Listfailedipns v2/ethereum/webkhooks/{webhook}/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<ListfailedipnsReturn> ListfailedipnsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/ethereum/webkhooks/{webhook}/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListfailedipnsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getCurrencies
		/// getCurrencies
		/// Getcurrencies v2/markets/currencies
		/// </summary>
		/// <returns>getCurrencies</returns>
		public async Task<GetcurrenciesReturn> GetcurrenciesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/markets/currencies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetcurrenciesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getPriceDataByCurrency
		/// getPriceDataByCurrency
		/// Getpricedatabycurrency v2/markets/data/{currency1}/{currency2}
		/// </summary>
		/// <returns>getPriceDataByCurrency</returns>
		public async Task<GetpricedatabycurrencyReturn> GetpricedatabycurrencyAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/markets/data/{currency1}/{currency2}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetpricedatabycurrencyReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getRateByCurrency
		/// getRateByCurrency
		/// Getratebycurrency v2/markets/prices/{currency1}/{currency2}
		/// </summary>
		/// <returns>getRateByCurrency</returns>
		public async Task<GetratebycurrencyReturn> GetratebycurrencyAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/markets/prices/{currency1}/{currency2}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetratebycurrencyReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getAllTimeLow
		/// getAllTimeLow
		/// Getalltimelow v2/markets/prices/{currency1}/{currency2}/atl
		/// </summary>
		/// <returns>getAllTimeLow</returns>
		public async Task<GetalltimelowReturn> GetalltimelowAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/markets/prices/{currency1}/{currency2}/atl";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetalltimelowReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getAllTimeHigh
		/// getAllTimeHigh
		/// Getalltimehigh v2/markets/prices/{currency1}/{currenty2}/ath
		/// </summary>
		/// <returns>getAllTimeHigh</returns>
		public async Task<GetalltimehighReturn> GetalltimehighAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/markets/prices/{currency1}/{currenty2}/ath";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetalltimehighReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listAddresses
		/// listAddresses
		/// Listaddresses1 v2/polygon/addresses
		/// </summary>
		/// <returns>listAddresses</returns>
		public async Task<Listaddresses1Return> Listaddresses1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listaddresses1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// newAddress
		/// newAddress
		/// Newaddress1 v2/polygon/addresses
		/// </summary>
		/// <returns>newAddress</returns>
		public async Task<Newaddress1Return> Newaddress1Async(Newaddress1PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Newaddress1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// importAddress
		/// importAddress
		/// Importaddress1 v2/polygon/addresses/import
		/// </summary>
		/// <returns>importAddress</returns>
		public async Task<Importaddress1Return> Importaddress1Async(Importaddress1PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/addresses/import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Importaddress1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// deleteAddress
		/// deleteAddress
		/// Deleteaddress1 v2/polygon/addresses/{address}
		/// </summary>
		/// <returns>deleteAddress</returns>
		public async Task<Deleteaddress1Return> Deleteaddress1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/addresses/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Deleteaddress1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListTransactionsByAddress
		/// Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.
		/// 
		/// Each page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.
		/// 
		/// To use the paginator, you can include parameter in your request: "page" . The "page" parameter specifies which page of results to retrieve,
		/// 
		/// For example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/1
		/// 
		/// ```
		/// 
		/// If there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the "page" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/2
		/// ```
		/// 
		/// By using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.
		/// 
		/// each request tells you the max pages within the Request in the **max_pages** field
		/// 
		/// `"max_pages": 515`
		/// Listtransactionsbyaddress1 v2/polygon/addresses/{address}/transactions/{page}
		/// </summary>
		/// <returns>200</returns>
		public async Task<Listtransactionsbyaddress1Return> Listtransactionsbyaddress1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/addresses/{address}/transactions/{page}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listtransactionsbyaddress1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getPolygonBalance
		/// Get the balance of an address
		/// Getpolygonbalance v2/polygon/balances/{address}
		/// </summary>
		/// <returns>getEthereumBalance</returns>
		public async Task<GetpolygonbalanceReturn> GetpolygonbalanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/balances/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetpolygonbalanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getERC20Balance
		/// Get the balance of an ERC20 address
		/// Geterc20balance1 v2/polygon/balances/{address}/erc20/{erc20_token}
		/// </summary>
		/// <returns>getERC20Balance</returns>
		public async Task<Geterc20balance1Return> Geterc20balance1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/balances/{address}/erc20/{erc20_token}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Geterc20balance1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getLastBlockNumber
		/// Get the latest block number
		/// Getlastblocknumber1 v2/polygon/blocks/number
		/// </summary>
		/// <returns>getLastBlockNumber</returns>
		public async Task<Getlastblocknumber1Return> Getlastblocknumber1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/blocks/number";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getlastblocknumber1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBlock
		/// Get information of a specific block
		/// Getblock1 v2/polygon/blocks/{block}
		/// </summary>
		/// <returns>getBlock</returns>
		public async Task<Getblock1Return> Getblock1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/blocks/{block}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getblock1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getERC20
		/// Get information about an ERC20 token
		/// Geterc201 v2/polygon/erc20/{erc20_token}
		/// </summary>
		/// <returns>getERC20</returns>
		public async Task<Geterc201Return> Geterc201Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/erc20/{erc20_token}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Geterc201Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getGasPrice
		/// Get gas price
		/// Getgasprice1 v2/polygon/gasprice
		/// </summary>
		/// <returns>getGasPrice</returns>
		public async Task<Getgasprice1Return> Getgasprice1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/gasprice";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getgasprice1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getNFTOwner
		/// Get the Owner of an NFT
		/// Getnftowner1 v2/polygon/nfts/{contract}/owner/{token_id}
		/// </summary>
		/// <returns>getNFTOwner</returns>
		public async Task<Getnftowner1Return> Getnftowner1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/nfts/{contract}/owner/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getnftowner1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getNFTUri
		/// Get the URI of an NFT
		/// Getnfturi1 v2/polygon/nfts/{ft_contract}/uri/{token_id}
		/// </summary>
		/// <returns>getNFTUri</returns>
		public async Task<Getnfturi1Return> Getnfturi1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/nfts/{ft_contract}/uri/{token_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getnfturi1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTransaction
		/// sendTransaction
		/// Sendtransaction1 v2/polygon/transactions
		/// </summary>
		public async Task Sendtransaction1Async(Sendtransaction1PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/transactions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// broadcastTransaction
		/// Broadcast raw transactions
		/// Broadcasttransaction1 v2/polygon/transactions/broadcast
		/// </summary>
		/// <returns>broadcastTransaction</returns>
		public async Task<Broadcasttransaction1Return> Broadcasttransaction1Async(Broadcasttransaction1PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/transactions/broadcast";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Broadcasttransaction1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendERC20
		/// sendERC20
		/// Senderc201 v2/polygon/transactions/erc20
		/// </summary>
		public async Task Senderc201Async(Senderc201PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/transactions/erc20";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendERC721
		/// sendERC721
		/// Senderc7211 v2/polygon/transactions/erc721
		/// </summary>
		public async Task Senderc7211Async(Senderc7211PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/transactions/erc721";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransaction
		/// Get info about a transaction
		/// 
		/// You can choose if you want to get the Transaction encoded or decoded by add /decoded to your request. See examlpes for details
		/// Gettransaction1 v2/polygon/transactions/{transaction}/decoded
		/// </summary>
		/// <returns>getTransactionReceipt (encoded)</returns>
		public async Task<Gettransaction1Return> Gettransaction1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/transactions/{transaction}/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransaction1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransactionReceipt
		/// Get info about a transaction receipt
		/// 
		/// You can choose if you want to get the Transaction encoded or decoded by add /decoded to your request. See examlpes for details
		/// Gettransactionreceipt1 v2/polygon/transactions/{transaction}/receipt/decoded
		/// </summary>
		/// <returns>getTransactionReceipt (encoded)</returns>
		public async Task<Gettransactionreceipt1Return> Gettransactionreceipt1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/transactions/{transaction}/receipt/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransactionreceipt1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listSubscribedAddresses
		/// Returns all subscriptions/IPNs created with an account.
		/// Listsubscribedaddresses1 v2/polygon/webhooks
		/// </summary>
		/// <returns>listSubscribedAddresses</returns>
		public async Task<Listsubscribedaddresses1Return> Listsubscribedaddresses1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listsubscribedaddresses1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// subscribeAddress
		/// Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.
		/// 
		/// You can choose one or more from following filter criterias
		/// 
		/// | **Parameter** | **Description** |
		/// | --- | --- |
		/// | from | ethereum address |
		/// | to | ethereum address |
		/// | contractaddress | contract address |
		/// | tokenid | token id |
		/// 
		/// You also need to dpecify the parameter "type". you can choose between \['ETH', 'ERC20', 'ERC721', null\]
		/// Subscribeaddress1 v2/polygon/webhooks
		/// </summary>
		/// <returns>subscribeAddress</returns>
		public async Task<Subscribeaddress1Return> Subscribeaddress1Async(Subscribeaddress1PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Subscribeaddress1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// resendFailedIPN
		/// Returns all subscriptions/IPNs created with an account.
		/// Resendfailedipn1 v2/polygon/webhooks/notifications/failed/{notification_id}
		/// </summary>
		/// <returns>resendFailedIPN</returns>
		public async Task<Resendfailedipn1Return> Resendfailedipn1Async(string requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/webhooks/notifications/failed/{notification_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Resendfailedipn1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// unsubscribeAddress
		/// Deletes an existing subscription/IPN for the given address (and contractaddress).
		/// Unsubscribeaddress1 v2/polygon/webhooks/{webhook}
		/// </summary>
		/// <returns>unsubscribeAddress</returns>
		public async Task<Unsubscribeaddress1Return> Unsubscribeaddress1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/webhooks/{webhook}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Unsubscribeaddress1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listIPNsByWebhookId
		/// Returns all subscriptions/IPNs created with an account.
		/// Listipnsbywebhookid1 v2/polygon/webkhooks/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<Listipnsbywebhookid1Return> Listipnsbywebhookid1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/webkhooks/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listipnsbywebhookid1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listFailedIPNs
		/// Returns all subscriptions/IPNs created with an account.
		/// Listfailedipns1 v2/polygon/webkhooks/{webhook}/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<Listfailedipns1Return> Listfailedipns1Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/polygon/webkhooks/{webhook}/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listfailedipns1Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getAccountResources
		/// getAccountResources
		/// Getaccountresources v2/tron/account/{address}/resources
		/// </summary>
		/// <returns>getAccountResources</returns>
		public async Task<GetaccountresourcesReturn> GetaccountresourcesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/account/{address}/resources";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetaccountresourcesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// newAddress
		/// newAddress
		/// Newaddress3 v2/tron/addresses
		/// </summary>
		/// <returns>newAddress</returns>
		public async Task<Newaddress3Return> Newaddress3Async(Newaddress3PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Newaddress3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListTransactionsByAddress
		/// Our API provides an endpoint for retrieving all transactions associated with a particular blockchain address. To use this endpoint, you will need to provide the wallet address as a parameter in the request.
		/// 
		/// Each page of results returned by this endpoint contains up to 100 entries, and you can use a paginator to navigate through the pages of results.
		/// 
		/// To use the paginator, you can include parameter in your request: "page" . The "page" parameter specifies which page of results to retrieve,
		/// 
		/// For example, to retrieve the first 100 transactions associated with a particular blockchain address, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/1
		/// 
		/// ```
		/// 
		/// If there are more than 100 transactions associated with the blockchain address, you can retrieve additional pages of results by incrementing the "page" parameter in your request. For example, to retrieve the next 100 transactions, you would make a request to the following URL:
		/// 
		/// ```
		/// /addresses//transactions/2
		/// ```
		/// 
		/// By using the paginator, you can retrieve all transactions associated with a particular blockchain address, regardless of the total number of transactions in the blockchain.
		/// 
		/// each request tells you the max pages within the Request in the **max_pages** field
		/// 
		/// `"max_pages": 515`
		/// Listtransactionsbyaddress3 v2/tron/addresses/{address}/transactions/{page}
		/// </summary>
		/// <returns>200</returns>
		public async Task<Listtransactionsbyaddress3Return> Listtransactionsbyaddress3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/addresses/{address}/transactions/{page}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listtransactionsbyaddress3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTRC10Balance
		/// getTRC10Balance
		/// Gettrc10balance v2/tron/balances/{account}/trc10/{tokenId}
		/// </summary>
		/// <returns>getTRC10Balance</returns>
		public async Task<Gettrc10balanceReturn> Gettrc10balanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/balances/{account}/trc10/{tokenId}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettrc10balanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTRC20Balance
		/// getTRC20Balance
		/// Gettrc20balance v2/tron/balances/{account}/trc20/{token}
		/// </summary>
		/// <returns>getTRC20Balance</returns>
		public async Task<Gettrc20balanceReturn> Gettrc20balanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/balances/{account}/trc20/{token}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettrc20balanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTronBalance
		/// getTronBalance
		/// Gettronbalance v2/tron/balances/{address}
		/// </summary>
		/// <returns>getTronBalance</returns>
		public async Task<GettronbalanceReturn> GettronbalanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/balances/{address}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GettronbalanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getLastBlockNumber
		/// Get the latest block number
		/// Getlastblocknumber3 v2/tron/blocks/number
		/// </summary>
		/// <returns>getBlockNumber</returns>
		public async Task<Getlastblocknumber3Return> Getlastblocknumber3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/blocks/number";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getlastblocknumber3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getBlock
		/// getBlock
		/// Getblock3 v2/tron/blocks/{block}
		/// </summary>
		/// <returns>getBlock</returns>
		public async Task<Getblock3Return> Getblock3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/blocks/{block}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Getblock3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getChainParameters
		/// getChainParameters
		/// Getchainparameters v2/tron/chainparameters
		/// </summary>
		/// <returns>getChainParameters</returns>
		public async Task<GetchainparametersReturn> GetchainparametersAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/chainparameters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetchainparametersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTransaction
		/// sendTransaction
		/// Sendtransaction3 v2/tron/transactions
		/// </summary>
		/// <returns>sendTransaction</returns>
		public async Task<Sendtransaction3Return> Sendtransaction3Async(Sendtransaction3PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/transactions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Sendtransaction3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTRC10
		/// sendTRC10
		/// Sendtrc10 v2/tron/transactions/trc10
		/// </summary>
		/// <returns>sendTRC10</returns>
		public async Task<Sendtrc10Return> Sendtrc10Async(Sendtrc10PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/transactions/trc10";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Sendtrc10Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// sendTRC20
		/// sendTRC20
		/// Sendtrc20 v2/tron/transactions/trc20
		/// </summary>
		/// <returns>sendTRC20</returns>
		public async Task<Sendtrc20Return> Sendtrc20Async(Sendtrc20PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/transactions/trc20";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Sendtrc20Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransaction
		/// You can get your transaction decoded by add /decoded to your api call. If you want to get the transaction encoded, youst remove the /decoded part
		/// Gettransaction3 v2/tron/transactions/{transaction}/decoded
		/// </summary>
		/// <returns>getTransaction (encoded)</returns>
		public async Task<Gettransaction3Return> Gettransaction3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/transactions/{transaction}/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransaction3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getTransactionReceipt
		/// You can get your transaction decoded by add /decoded to your api call. If you want to get the transaction encoded, youst remove the /decoded part
		/// Gettransactionreceipt3 v2/tron/transactions/{transaction}/receipt/decoded
		/// </summary>
		/// <returns>getTransactionReceipt (encoded)</returns>
		public async Task<Gettransactionreceipt3Return> Gettransactionreceipt3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/transactions/{transaction}/receipt/decoded";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Gettransactionreceipt3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listSubscribedAddresses
		/// Returns all subscriptions/IPNs created with an account.
		/// Listsubscribedaddresses3 v2/tron/webhooks
		/// </summary>
		/// <returns>listSubscribedAddresses</returns>
		public async Task<Listsubscribedaddresses3Return> Listsubscribedaddresses3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listsubscribedaddresses3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// subscribeAddress
		/// Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.
		/// 
		/// Subscribeaddress3 v2/tron/webhooks
		/// </summary>
		/// <returns>subscribeAddress</returns>
		public async Task<Subscribeaddress3Return> Subscribeaddress3Async(Subscribeaddress3PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Subscribeaddress3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// listFailedIPNs
		/// Returns all subscriptions/IPNs created with an account.
		/// Listfailedipns3 v2/tron/webhooks/notifications/failed
		/// </summary>
		/// <returns>listFailedIPNs</returns>
		public async Task<Listfailedipns3Return> Listfailedipns3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/webhooks/notifications/failed";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Listfailedipns3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// resendFailedIPN
		/// Returns all subscriptions/IPNs created with an account.
		/// Resendfailedipn3 v2/tron/webhooks/notifications/failed/62640817eb594da78c7bee00
		/// </summary>
		/// <returns>resendFailedIPN</returns>
		public async Task<Resendfailedipn3Return> Resendfailedipn3Async(string requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/webhooks/notifications/failed/62640817eb594da78c7bee00";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Resendfailedipn3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// unsubscribeAddress
		/// Deletes an existing subscription/IPN for the given address (and contractaddress).
		/// Unsubscribeaddress3 v2/tron/webhooks/{webhookid}
		/// </summary>
		/// <returns>unsubscribeAddress</returns>
		public async Task<Unsubscribeaddress3Return> Unsubscribeaddress3Async(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/tron/webhooks/{webhookid}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Unsubscribeaddress3Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class Getlastblocknumber4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getlastblocknumber4ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getlastblocknumber4ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blocknumber")]
		public System.Nullable<System.Double> Blocknumber { get; set; }
	}
	
	public class Getblock4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getblock4ReturnData[] Getblock4ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getblock4ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public object Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Double> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public Getblock4ReturnDataResult Result { get; set; }
	}
	
	public class Getblock4ReturnDataResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="bits")]
		public string Bits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chainwork")]
		public string Chainwork { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmations")]
		public System.Nullable<System.Double> Confirmations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="difficulty")]
		public System.Nullable<System.Double> Difficulty { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Double> Height { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediantime")]
		public System.Nullable<System.Double> Mediantime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="merkleroot")]
		public string Merkleroot { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nTx")]
		public System.Nullable<System.Double> NTx { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextblockhash")]
		public string Nextblockhash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nonce")]
		public System.Nullable<System.Double> Nonce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previousblockhash")]
		public string Previousblockhash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Double> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strippedsize")]
		public System.Nullable<System.Double> Strippedsize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time")]
		public System.Nullable<System.Double> Time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tx")]
		public string[] Tx { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Double> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="versionHex")]
		public string VersionHex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public System.Nullable<System.Double> Weight { get; set; }
	}
	
	public class GetfeesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetfeesReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetfeesReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blocks")]
		public System.Nullable<System.Double> Blocks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feerate")]
		public string Feerate { get; set; }
	}
	
	public class GetblockchaininfoReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetblockchaininfoReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetblockchaininfoReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="bestblockhash")]
		public string Bestblockhash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blocks")]
		public System.Nullable<System.Double> Blocks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chain")]
		public string Chain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chainwork")]
		public string Chainwork { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="difficulty")]
		public System.Nullable<System.Double> Difficulty { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public System.Nullable<System.Double> Headers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="initialblockdownload")]
		public System.Nullable<System.Boolean> Initialblockdownload { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediantime")]
		public System.Nullable<System.Double> Mediantime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pruned")]
		public System.Nullable<System.Boolean> Pruned { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size_on_disk")]
		public System.Nullable<System.Double> Size_on_disk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time")]
		public System.Nullable<System.Double> Time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="verificationprogress")]
		public System.Nullable<System.Double> Verificationprogress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public string Warnings { get; set; }
	}
	
	public class Sendtransaction4PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="speed")]
		public string Speed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtractfee")]
		public System.Nullable<System.Boolean> Subtractfee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="walletname")]
		public string Walletname { get; set; }
	}
	
	public class Gettransaction4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransaction4ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransaction4ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockhash")]
		public string Blockhash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmations")]
		public System.Nullable<System.Double> Confirmations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hex")]
		public string Hex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receivers")]
		public Gettransaction4ReturnDataReceivers[] Gettransaction4ReturnDataReceivers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="senders")]
		public string[] Senders { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time")]
		public System.Nullable<System.Double> Time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class Gettransaction4ReturnDataReceivers
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="n")]
		public System.Nullable<System.Double> N { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class GetwalletReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetwalletReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetwalletReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="wallets")]
		public string[] Wallets { get; set; }
	}
	
	public class CreatewalletPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class CreatewalletReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CreatewalletReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class CreatewalletReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="bitcoinwallet")]
		public string Bitcoinwallet { get; set; }
	}
	
	public class ExportaddressprivatekeyPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class ExportaddressprivatekeyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ExportaddressprivatekeyReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ExportaddressprivatekeyReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="private_key")]
		public string Private_key { get; set; }
	}
	
	public class GetwalletaddressesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class CreatewalletaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CreatewalletaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class CreatewalletaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
	}
	
	public class DeletewalletReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DeletewalletReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class DeletewalletReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="walletname")]
		public string Walletname { get; set; }
	}
	
	public class Listsubscribedaddresses4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listsubscribedaddresses4ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listsubscribedaddresses4ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipns")]
		public Listsubscribedaddresses4ReturnDataIpns[] Listsubscribedaddresses4ReturnDataIpns { get; set; }
	}
	
	public class Listsubscribedaddresses4ReturnDataIpns
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public object Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public object To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public object Tokenid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public object Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress4PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Subscribeaddress4ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Subscribeaddress4ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public object Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public object Tokenid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public object Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Listfailedipns4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="failed_ipns")]
		public Listfailedipns4ReturnFailed_ipns[] Listfailedipns4ReturnFailed_ipns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Listfailedipns4ReturnFailed_ipns
	{
		
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Resendfailedipn4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Double> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Unsubscribeaddress4Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Unsubscribeaddress4ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Unsubscribeaddress4ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	public class ListaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ListaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ListaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public string[] Addresses { get; set; }
	}
	
	public class Newaddress2PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class Newaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Newaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Newaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="bscaddress")]
		public string Bscaddress { get; set; }
	}
	
	public class Exportaddress2PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class Exportaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Exportaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Exportaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public Exportaddress2ReturnDataContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
	}
	
	public class Exportaddress2ReturnDataContent
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="crypto")]
		public Exportaddress2ReturnDataContentCrypto Crypto { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Double> Version { get; set; }
	}
	
	public class Exportaddress2ReturnDataContentCrypto
	{
		
		[System.Runtime.Serialization.DataMember(Name="cipher")]
		public string Cipher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cipherparams")]
		public Exportaddress2ReturnDataContentCryptoCipherparams Cipherparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ciphertext")]
		public string Ciphertext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdf")]
		public string Kdf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdfparams")]
		public Exportaddress2ReturnDataContentCryptoKdfparams Kdfparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mac")]
		public string Mac { get; set; }
	}
	
	public class Exportaddress2ReturnDataContentCryptoCipherparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="iv")]
		public string Iv { get; set; }
	}
	
	public class Exportaddress2ReturnDataContentCryptoKdfparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="dklen")]
		public System.Nullable<System.Double> Dklen { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="n")]
		public System.Nullable<System.Double> N { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="p")]
		public System.Nullable<System.Double> P { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="r")]
		public System.Nullable<System.Double> R { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="salt")]
		public string Salt { get; set; }
	}
	
	public class Importaddress2PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public Importaddress2PostBodyContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class Importaddress2PostBodyContent
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="crypto")]
		public Importaddress2PostBodyContentCrypto Crypto { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Double> Version { get; set; }
	}
	
	public class Importaddress2PostBodyContentCrypto
	{
		
		[System.Runtime.Serialization.DataMember(Name="cipher")]
		public string Cipher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cipherparams")]
		public Importaddress2PostBodyContentCryptoCipherparams Cipherparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ciphertext")]
		public string Ciphertext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdf")]
		public string Kdf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdfparams")]
		public Importaddress2PostBodyContentCryptoKdfparams Kdfparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mac")]
		public string Mac { get; set; }
	}
	
	public class Importaddress2PostBodyContentCryptoCipherparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="iv")]
		public string Iv { get; set; }
	}
	
	public class Importaddress2PostBodyContentCryptoKdfparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="dklen")]
		public System.Nullable<System.Double> Dklen { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="n")]
		public System.Nullable<System.Double> N { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="p")]
		public System.Nullable<System.Double> P { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="r")]
		public System.Nullable<System.Double> R { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="salt")]
		public string Salt { get; set; }
	}
	
	public class Importaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Importaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Importaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
	}
	
	public class Deleteaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Deleteaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Deleteaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="binancecoinaddress")]
		public string Binancecoinaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
	}
	
	public class Listtransactionsbyaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listtransactionsbyaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="current_page")]
		public System.Nullable<System.Double> Current_page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="max_pages")]
		public System.Nullable<System.Double> Max_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Listtransactionsbyaddress2ReturnDataMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public Listtransactionsbyaddress2ReturnDataTransactions[] Listtransactionsbyaddress2ReturnDataTransactions { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountedFor")]
		public Listtransactionsbyaddress2ReturnDataMetaAccountedFor AccountedFor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chain")]
		public string Chain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="client")]
		public System.Nullable<System.Double> Client { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public System.Nullable<System.Double> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finalized")]
		public System.Nullable<System.Double> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_block")]
		public System.Nullable<System.Double> First_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_block")]
		public string Last_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedFrom")]
		public string[] NamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedTo")]
		public Listtransactionsbyaddress2ReturnDataMetaNamedTo NamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkId")]
		public System.Nullable<System.Double> NetworkId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ripe")]
		public System.Nullable<System.Double> Ripe { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="staging")]
		public System.Nullable<System.Double> Staging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedFrom")]
		public Listtransactionsbyaddress2ReturnDataMetaUnNamedFrom UnNamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedTo")]
		public Listtransactionsbyaddress2ReturnDataMetaUnNamedTo UnNamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unripe")]
		public System.Nullable<System.Double> Unripe { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataMetaAccountedFor
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="petname")]
		public string Petname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataMetaNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf")]
		public Listtransactionsbyaddress2ReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf _0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Double> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isContract")]
		public System.Nullable<System.Boolean> IsContract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataMetaUnNamedFrom
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0039b625b1d8632c7a0057c964ec58a9f39789d3")]
		public System.Nullable<System.Double> _0x0039b625b1d8632c7a0057c964ec58a9f39789d3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x005fde5294199d5c3eb5eb7a6e51954123b74b1c")]
		public System.Nullable<System.Double> _0x005fde5294199d5c3eb5eb7a6e51954123b74b1c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x006e920000ec97e58900b61e00800010005aa831")]
		public System.Nullable<System.Double> _0x006e920000ec97e58900b61e00800010005aa831 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd")]
		public System.Nullable<System.Double> _0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00dee1f836998bcc736022f314df906588d44808")]
		public System.Nullable<System.Double> _0x00dee1f836998bcc736022f314df906588d44808 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x042523db4f3effc33d2742022b2490258494f8b3")]
		public System.Nullable<System.Double> _0x042523db4f3effc33d2742022b2490258494f8b3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1")]
		public System.Nullable<System.Double> _0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x09e0781a47e9fd2b6258be09bd074f42022b9760")]
		public System.Nullable<System.Double> _0x09e0781a47e9fd2b6258be09bd074f42022b9760 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0d0b3f21d7c90d0b957aa6acbc993621311208e4")]
		public System.Nullable<System.Double> _0x0d0b3f21d7c90d0b957aa6acbc993621311208e4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x177b8ebe208cb71da818b6b8814c946c027240cd")]
		public System.Nullable<System.Double> _0x177b8ebe208cb71da818b6b8814c946c027240cd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a")]
		public System.Nullable<System.Double> _0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e")]
		public System.Nullable<System.Double> _0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26fd09c8b44af53df38a9bad41d5abc55a1786af")]
		public System.Nullable<System.Double> _0x26fd09c8b44af53df38a9bad41d5abc55a1786af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x30a1b724c9dfe2e12a19ed84878312d199d1519e")]
		public System.Nullable<System.Double> _0x30a1b724c9dfe2e12a19ed84878312d199d1519e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x33cef21eb6068ebfcf70c7404efb8aaa08cad388")]
		public System.Nullable<System.Double> _0x33cef21eb6068ebfcf70c7404efb8aaa08cad388 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3443006ed920730005d88267c49f77abcde749af")]
		public System.Nullable<System.Double> _0x3443006ed920730005d88267c49f77abcde749af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x346c802df3404bec2f265603db28b815321251ee")]
		public System.Nullable<System.Double> _0x346c802df3404bec2f265603db28b815321251ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x34ec9e3a1ac200ea58744ced891015152130e400")]
		public System.Nullable<System.Double> _0x34ec9e3a1ac200ea58744ced891015152130e400 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb")]
		public System.Nullable<System.Double> _0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fb530b53036b5d8de892ad1eda14a576a22e6d6")]
		public System.Nullable<System.Double> _0x3fb530b53036b5d8de892ad1eda14a576a22e6d6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fbaea01b228368e67ca40d8cb195018fd095318")]
		public System.Nullable<System.Double> _0x3fbaea01b228368e67ca40d8cb195018fd095318 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x431b5a84acc1297eda88259f300262f1bc3a74f3")]
		public System.Nullable<System.Double> _0x431b5a84acc1297eda88259f300262f1bc3a74f3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x479bc00624e58398f4cf59d78884d12fb515790a")]
		public System.Nullable<System.Double> _0x479bc00624e58398f4cf59d78884d12fb515790a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x50efbf12580138bc263c95757826df4e24eb81c9")]
		public System.Nullable<System.Double> _0x50efbf12580138bc263c95757826df4e24eb81c9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5a243879d1a43f48042c33bbc8051c69756f67d4")]
		public System.Nullable<System.Double> _0x5a243879d1a43f48042c33bbc8051c69756f67d4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7")]
		public System.Nullable<System.Double> _0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f")]
		public System.Nullable<System.Double> _0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x72bb8c608c4ea4a887266985e680a04c056f5b2a")]
		public System.Nullable<System.Double> _0x72bb8c608c4ea4a887266985e680a04c056f5b2a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76dd32063b2899a59f6e15dbc474a160cc922751")]
		public System.Nullable<System.Double> _0x76dd32063b2899a59f6e15dbc474a160cc922751 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76e40d0a69fd81826b5eb7d18145626d46eafdef")]
		public System.Nullable<System.Double> _0x76e40d0a69fd81826b5eb7d18145626d46eafdef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c")]
		public System.Nullable<System.Double> _0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8")]
		public System.Nullable<System.Double> _0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e8f818d3371f797a2db7edb32803607c8b3c6a9")]
		public System.Nullable<System.Double> _0x8e8f818d3371f797a2db7edb32803607c8b3c6a9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x91aae0aafd9d2d730111b395c6871f248d7bd728")]
		public System.Nullable<System.Double> _0x91aae0aafd9d2d730111b395c6871f248d7bd728 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x92824d144c6543f70a649b2c3e7596612375fd4d")]
		public System.Nullable<System.Double> _0x92824d144c6543f70a649b2c3e7596612375fd4d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x93f635372008b7c5d770aaa6ff313454c8dc498c")]
		public System.Nullable<System.Double> _0x93f635372008b7c5d770aaa6ff313454c8dc498c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee")]
		public System.Nullable<System.Double> _0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0")]
		public System.Nullable<System.Double> _0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa6807d794411d9a80bc435dfc4cda0ba0ddde979")]
		public System.Nullable<System.Double> _0xa6807d794411d9a80bc435dfc4cda0ba0ddde979 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa855d1198c67839e596b9a5d7c46f8ea31cfefde")]
		public System.Nullable<System.Double> _0xa855d1198c67839e596b9a5d7c46f8ea31cfefde { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb0804b228c1c1449cdc94dd16fc8910421f45df1")]
		public System.Nullable<System.Double> _0xb0804b228c1c1449cdc94dd16fc8910421f45df1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78")]
		public System.Nullable<System.Double> _0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb30b1dabe7451fe6646a15631d7537df64b193ce")]
		public System.Nullable<System.Double> _0xb30b1dabe7451fe6646a15631d7537df64b193ce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xba4ff5f9d6508000b7fd0035bd616aaec070384f")]
		public System.Nullable<System.Double> _0xba4ff5f9d6508000b7fd0035bd616aaec070384f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbbad96336943a36e3e292d973b3382dd0ba4d1ef")]
		public System.Nullable<System.Double> _0xbbad96336943a36e3e292d973b3382dd0ba4d1ef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xc11099d3cd9686158db0a40e88267e7b1740958c")]
		public System.Nullable<System.Double> _0xc11099d3cd9686158db0a40e88267e7b1740958c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64")]
		public System.Nullable<System.Double> _0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe58e5ed4544f58831a84c18178b911a5957ada08")]
		public System.Nullable<System.Double> _0xe58e5ed4544f58831a84c18178b911a5957ada08 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeca2e2d894d19778939bd4dfc34d2a3c45e96456")]
		public System.Nullable<System.Double> _0xeca2e2d894d19778939bd4dfc34d2a3c45e96456 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0")]
		public System.Nullable<System.Double> _0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7")]
		public System.Nullable<System.Double> _0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xfb9779477e5b4834bf2bc02dd29b97b344d0f700")]
		public System.Nullable<System.Double> _0xfb9779477e5b4834bf2bc02dd29b97b344d0f700 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xff82bf5238637b7e5e345888bab9cd99f5ebe331")]
		public System.Nullable<System.Double> _0xff82bf5238637b7e5e345888bab9cd99f5ebe331 { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataMetaUnNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000007f150bd6f54c40a34d7c3d5e9f56")]
		public System.Nullable<System.Double> _0x0000000000007f150bd6f54c40a34d7c3d5e9f56 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x000000000035b5e5ad9019092c665357240f594e")]
		public System.Nullable<System.Double> _0x000000000035b5e5ad9019092c665357240f594e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000a84d1a9b0063a910315c7ffa9cd248")]
		public System.Nullable<System.Double> _0x0000000000a84d1a9b0063a910315c7ffa9cd248 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0077732907bfc6208933cfd2a51afb8f33ca5958")]
		public System.Nullable<System.Double> _0x0077732907bfc6208933cfd2a51afb8f33ca5958 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074")]
		public System.Nullable<System.Double> _0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d")]
		public System.Nullable<System.Double> _0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x388c818ca8b9251b393131c08a736a67ccb19297")]
		public System.Nullable<System.Double> _0x388c818ca8b9251b393131c08a736a67ccb19297 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3e2766167aa2acb097c311d5a2e9eb17cad38b06")]
		public System.Nullable<System.Double> _0x3e2766167aa2acb097c311d5a2e9eb17cad38b06 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6")]
		public System.Nullable<System.Double> _0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5050e08626c499411b5d0e0b5af0e83d3fd82edf")]
		public System.Nullable<System.Double> _0x5050e08626c499411b5d0e0b5af0e83d3fd82edf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x535b918f3724001fd6fb52fcc6cbc220592990a3")]
		public System.Nullable<System.Double> _0x535b918f3724001fd6fb52fcc6cbc220592990a3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94")]
		public System.Nullable<System.Double> _0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x665179031a86561ac845f43d6b6341cffbcea040")]
		public System.Nullable<System.Double> _0x665179031a86561ac845f43d6b6341cffbcea040 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x7d9da47e83b82a52a2b45353cdad735afb43e6f0")]
		public System.Nullable<System.Double> _0x7d9da47e83b82a52a2b45353cdad735afb43e6f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x81153f0889ab398c4acb42cb58b565a5392bba95")]
		public System.Nullable<System.Double> _0x81153f0889ab398c4acb42cb58b565a5392bba95 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87b3f3c934a13c779e100a5d6e6d7ef577e86671")]
		public System.Nullable<System.Double> _0x87b3f3c934a13c779e100a5d6e6d7ef577e86671 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7")]
		public System.Nullable<System.Double> _0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e")]
		public System.Nullable<System.Double> _0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa69babef1ca67a37ffaf7a485dfff3382056e78c")]
		public System.Nullable<System.Double> _0xa69babef1ca67a37ffaf7a485dfff3382056e78c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbeefbabeea323f07c59926295205d3b7a17e8638")]
		public System.Nullable<System.Double> _0xbeefbabeea323f07c59926295205d3b7a17e8638 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xcfc7e96be27d836b034b37132052549611341108")]
		public System.Nullable<System.Double> _0xcfc7e96be27d836b034b37132052549611341108 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c")]
		public System.Nullable<System.Double> _0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeb00c80f00ca1585000000b84f00940000ed40e5")]
		public System.Nullable<System.Double> _0xeb00c80f00ca1585000000b84f00940000ed40e5 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xebec795c9c8bbd61ffc14a6662944748f299cacf")]
		public System.Nullable<System.Double> _0xebec795c9c8bbd61ffc14a6662944748f299cacf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeee27662c2b8eba3cd936a23f039f3189633e4c8")]
		public System.Nullable<System.Double> _0xeee27662c2b8eba3cd936a23f039f3189633e4c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf828add1619bfb64712654076490b2609ae6d774")]
		public System.Nullable<System.Double> _0xf828add1619bfb64712654076490b2609ae6d774 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xffd22b84fb1d46ef74ed6530b2635be61340f347")]
		public System.Nullable<System.Double> _0xffd22b84fb1d46ef74ed6530b2635be61340f347 { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataTransactions
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public System.Nullable<System.Double> BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compressedTx")]
		public string CompressedTx { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public string Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ether")]
		public System.Nullable<System.Double> Ether { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etherGasCost")]
		public System.Nullable<System.Double> EtherGasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="function")]
		public string Function { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasCost")]
		public System.Nullable<System.Double> GasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public System.Nullable<System.Double> GasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hasToken")]
		public System.Nullable<System.Double> HasToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Double> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxFeePerGas")]
		public System.Nullable<System.Double> MaxFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxPriorityFeePerGas")]
		public System.Nullable<System.Double> MaxPriorityFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public Listtransactionsbyaddress2ReturnDataTransactionsReceipt Receipt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="traces")]
		public string[] Traces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public System.Nullable<System.Double> TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class Listtransactionsbyaddress2ReturnDataTransactionsReceipt
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractAddress")]
		public string ContractAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public System.Nullable<System.Double> EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public string[] Logs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetbinancecoinbalanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetbinancecoinbalanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetbinancecoinbalanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class Getbep20balanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getbep20balanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getbep20balanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class Getbep20Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getbep20ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getbep20ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalSupply")]
		public string TotalSupply { get; set; }
	}
	
	public class Getlastblocknumber2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getlastblocknumber2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getlastblocknumber2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blocknumber")]
		public System.Nullable<System.Double> Blocknumber { get; set; }
	}
	
	public class Getblock2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getblock2ReturnData[] Getblock2ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getblock2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="difficulty")]
		public System.Nullable<System.Double> Difficulty { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="extraData")]
		public string ExtraData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasLimit")]
		public System.Nullable<System.Double> GasLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public string GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logsBloom")]
		public string LogsBloom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="miner")]
		public string Miner { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mixHash")]
		public string MixHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nonce")]
		public string Nonce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number")]
		public System.Nullable<System.Double> Number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parentHash")]
		public string ParentHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receiptsRoot")]
		public string ReceiptsRoot { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sha3Uncles")]
		public string Sha3Uncles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Double> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateRoot")]
		public string StateRoot { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalDifficulty")]
		public System.Nullable<System.Double> TotalDifficulty { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public string[] Transactions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionsRoot")]
		public string TransactionsRoot { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uncles")]
		public string[] Uncles { get; set; }
	}
	
	public class Getgasprice2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getgasprice2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getgasprice2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public string GasPrice { get; set; }
	}
	
	public class Getnftowner2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getnftowner2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getnftowner2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
	}
	
	public class Getnfturi2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getnfturi2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getnfturi2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class Sendtransaction2PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Sendbep20PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Sendbep721PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public System.Nullable<System.Double> Tokenid { get; set; }
	}
	
	public class Broadcasttransaction2PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
	}
	
	public class Broadcasttransaction2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Broadcasttransaction2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Broadcasttransaction2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class Gettransaction2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransaction2ReturnData[] Gettransaction2ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransaction2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public string Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public string GasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nonce")]
		public string Nonce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="r")]
		public string R { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s")]
		public string S { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="v")]
		public string V { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class Gettransactionreceipt2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransactionreceipt2ReturnData[] Gettransactionreceipt2ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransactionreceipt2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cumulativeGasUsed")]
		public string CumulativeGasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public string EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public string GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public string[] Logs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logsBloom")]
		public string LogsBloom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class Listsubscribedaddresses2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listsubscribedaddresses2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listsubscribedaddresses2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipns")]
		public string[] Ipns { get; set; }
	}
	
	public class Subscribeaddress2PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Subscribeaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Subscribeaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public object To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public object Tokenid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public object Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Listfailedipns2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listfailedipns2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listfailedipns2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipns")]
		public string[] Ipns { get; set; }
	}
	
	public class Resendfailedipn2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Double> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Unsubscribeaddress2Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Unsubscribeaddress2ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Unsubscribeaddress2ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	public class BroadcasttransactionPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
	}
	
	public class BroadcasttransactionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BroadcasttransactionReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class BroadcasttransactionReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class ListaddressesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ListaddressesReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ListaddressesReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public string[] Addresses { get; set; }
	}
	
	public class NewaddressPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class NewaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public NewaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class NewaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
	}
	
	public class ExportaddressPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class ExportaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ExportaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ExportaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public ExportaddressReturnDataContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
	}
	
	public class ExportaddressReturnDataContent
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="crypto")]
		public ExportaddressReturnDataContentCrypto Crypto { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Double> Version { get; set; }
	}
	
	public class ExportaddressReturnDataContentCrypto
	{
		
		[System.Runtime.Serialization.DataMember(Name="cipher")]
		public string Cipher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cipherparams")]
		public ExportaddressReturnDataContentCryptoCipherparams Cipherparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ciphertext")]
		public string Ciphertext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdf")]
		public string Kdf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdfparams")]
		public ExportaddressReturnDataContentCryptoKdfparams Kdfparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mac")]
		public string Mac { get; set; }
	}
	
	public class ExportaddressReturnDataContentCryptoCipherparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="iv")]
		public string Iv { get; set; }
	}
	
	public class ExportaddressReturnDataContentCryptoKdfparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="dklen")]
		public System.Nullable<System.Double> Dklen { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="n")]
		public System.Nullable<System.Double> N { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="p")]
		public System.Nullable<System.Double> P { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="r")]
		public System.Nullable<System.Double> R { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="salt")]
		public string Salt { get; set; }
	}
	
	public class ImportaddressPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public ImportaddressPostBodyContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class ImportaddressPostBodyContent
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="crypto")]
		public ImportaddressPostBodyContentCrypto Crypto { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Double> Version { get; set; }
	}
	
	public class ImportaddressPostBodyContentCrypto
	{
		
		[System.Runtime.Serialization.DataMember(Name="cipher")]
		public string Cipher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cipherparams")]
		public ImportaddressPostBodyContentCryptoCipherparams Cipherparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ciphertext")]
		public string Ciphertext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdf")]
		public string Kdf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdfparams")]
		public ImportaddressPostBodyContentCryptoKdfparams Kdfparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mac")]
		public string Mac { get; set; }
	}
	
	public class ImportaddressPostBodyContentCryptoCipherparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="iv")]
		public string Iv { get; set; }
	}
	
	public class ImportaddressPostBodyContentCryptoKdfparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="dklen")]
		public System.Nullable<System.Double> Dklen { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="n")]
		public System.Nullable<System.Double> N { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="p")]
		public System.Nullable<System.Double> P { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="r")]
		public System.Nullable<System.Double> R { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="salt")]
		public string Salt { get; set; }
	}
	
	public class ImportaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ImportaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ImportaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
	}
	
	public class DeleteaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DeleteaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class DeleteaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
	}
	
	public class ListtransactionsbyaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ListtransactionsbyaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="current_page")]
		public System.Nullable<System.Double> Current_page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="max_pages")]
		public System.Nullable<System.Double> Max_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListtransactionsbyaddressReturnDataMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public ListtransactionsbyaddressReturnDataTransactions[] ListtransactionsbyaddressReturnDataTransactions { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountedFor")]
		public ListtransactionsbyaddressReturnDataMetaAccountedFor AccountedFor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chain")]
		public string Chain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="client")]
		public System.Nullable<System.Double> Client { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public System.Nullable<System.Double> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finalized")]
		public System.Nullable<System.Double> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_block")]
		public System.Nullable<System.Double> First_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_block")]
		public string Last_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedFrom")]
		public string[] NamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedTo")]
		public ListtransactionsbyaddressReturnDataMetaNamedTo NamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkId")]
		public System.Nullable<System.Double> NetworkId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ripe")]
		public System.Nullable<System.Double> Ripe { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="staging")]
		public System.Nullable<System.Double> Staging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedFrom")]
		public ListtransactionsbyaddressReturnDataMetaUnNamedFrom UnNamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedTo")]
		public ListtransactionsbyaddressReturnDataMetaUnNamedTo UnNamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unripe")]
		public System.Nullable<System.Double> Unripe { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataMetaAccountedFor
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="petname")]
		public string Petname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataMetaNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf")]
		public ListtransactionsbyaddressReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf _0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Double> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isContract")]
		public System.Nullable<System.Boolean> IsContract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataMetaUnNamedFrom
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0039b625b1d8632c7a0057c964ec58a9f39789d3")]
		public System.Nullable<System.Double> _0x0039b625b1d8632c7a0057c964ec58a9f39789d3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x005fde5294199d5c3eb5eb7a6e51954123b74b1c")]
		public System.Nullable<System.Double> _0x005fde5294199d5c3eb5eb7a6e51954123b74b1c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x006e920000ec97e58900b61e00800010005aa831")]
		public System.Nullable<System.Double> _0x006e920000ec97e58900b61e00800010005aa831 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd")]
		public System.Nullable<System.Double> _0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00dee1f836998bcc736022f314df906588d44808")]
		public System.Nullable<System.Double> _0x00dee1f836998bcc736022f314df906588d44808 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x042523db4f3effc33d2742022b2490258494f8b3")]
		public System.Nullable<System.Double> _0x042523db4f3effc33d2742022b2490258494f8b3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1")]
		public System.Nullable<System.Double> _0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x09e0781a47e9fd2b6258be09bd074f42022b9760")]
		public System.Nullable<System.Double> _0x09e0781a47e9fd2b6258be09bd074f42022b9760 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0d0b3f21d7c90d0b957aa6acbc993621311208e4")]
		public System.Nullable<System.Double> _0x0d0b3f21d7c90d0b957aa6acbc993621311208e4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x177b8ebe208cb71da818b6b8814c946c027240cd")]
		public System.Nullable<System.Double> _0x177b8ebe208cb71da818b6b8814c946c027240cd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a")]
		public System.Nullable<System.Double> _0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e")]
		public System.Nullable<System.Double> _0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26fd09c8b44af53df38a9bad41d5abc55a1786af")]
		public System.Nullable<System.Double> _0x26fd09c8b44af53df38a9bad41d5abc55a1786af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x30a1b724c9dfe2e12a19ed84878312d199d1519e")]
		public System.Nullable<System.Double> _0x30a1b724c9dfe2e12a19ed84878312d199d1519e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x33cef21eb6068ebfcf70c7404efb8aaa08cad388")]
		public System.Nullable<System.Double> _0x33cef21eb6068ebfcf70c7404efb8aaa08cad388 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3443006ed920730005d88267c49f77abcde749af")]
		public System.Nullable<System.Double> _0x3443006ed920730005d88267c49f77abcde749af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x346c802df3404bec2f265603db28b815321251ee")]
		public System.Nullable<System.Double> _0x346c802df3404bec2f265603db28b815321251ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x34ec9e3a1ac200ea58744ced891015152130e400")]
		public System.Nullable<System.Double> _0x34ec9e3a1ac200ea58744ced891015152130e400 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb")]
		public System.Nullable<System.Double> _0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fb530b53036b5d8de892ad1eda14a576a22e6d6")]
		public System.Nullable<System.Double> _0x3fb530b53036b5d8de892ad1eda14a576a22e6d6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fbaea01b228368e67ca40d8cb195018fd095318")]
		public System.Nullable<System.Double> _0x3fbaea01b228368e67ca40d8cb195018fd095318 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x431b5a84acc1297eda88259f300262f1bc3a74f3")]
		public System.Nullable<System.Double> _0x431b5a84acc1297eda88259f300262f1bc3a74f3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x479bc00624e58398f4cf59d78884d12fb515790a")]
		public System.Nullable<System.Double> _0x479bc00624e58398f4cf59d78884d12fb515790a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x50efbf12580138bc263c95757826df4e24eb81c9")]
		public System.Nullable<System.Double> _0x50efbf12580138bc263c95757826df4e24eb81c9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5a243879d1a43f48042c33bbc8051c69756f67d4")]
		public System.Nullable<System.Double> _0x5a243879d1a43f48042c33bbc8051c69756f67d4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7")]
		public System.Nullable<System.Double> _0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f")]
		public System.Nullable<System.Double> _0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x72bb8c608c4ea4a887266985e680a04c056f5b2a")]
		public System.Nullable<System.Double> _0x72bb8c608c4ea4a887266985e680a04c056f5b2a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76dd32063b2899a59f6e15dbc474a160cc922751")]
		public System.Nullable<System.Double> _0x76dd32063b2899a59f6e15dbc474a160cc922751 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76e40d0a69fd81826b5eb7d18145626d46eafdef")]
		public System.Nullable<System.Double> _0x76e40d0a69fd81826b5eb7d18145626d46eafdef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c")]
		public System.Nullable<System.Double> _0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8")]
		public System.Nullable<System.Double> _0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e8f818d3371f797a2db7edb32803607c8b3c6a9")]
		public System.Nullable<System.Double> _0x8e8f818d3371f797a2db7edb32803607c8b3c6a9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x91aae0aafd9d2d730111b395c6871f248d7bd728")]
		public System.Nullable<System.Double> _0x91aae0aafd9d2d730111b395c6871f248d7bd728 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x92824d144c6543f70a649b2c3e7596612375fd4d")]
		public System.Nullable<System.Double> _0x92824d144c6543f70a649b2c3e7596612375fd4d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x93f635372008b7c5d770aaa6ff313454c8dc498c")]
		public System.Nullable<System.Double> _0x93f635372008b7c5d770aaa6ff313454c8dc498c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee")]
		public System.Nullable<System.Double> _0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0")]
		public System.Nullable<System.Double> _0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa6807d794411d9a80bc435dfc4cda0ba0ddde979")]
		public System.Nullable<System.Double> _0xa6807d794411d9a80bc435dfc4cda0ba0ddde979 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa855d1198c67839e596b9a5d7c46f8ea31cfefde")]
		public System.Nullable<System.Double> _0xa855d1198c67839e596b9a5d7c46f8ea31cfefde { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb0804b228c1c1449cdc94dd16fc8910421f45df1")]
		public System.Nullable<System.Double> _0xb0804b228c1c1449cdc94dd16fc8910421f45df1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78")]
		public System.Nullable<System.Double> _0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb30b1dabe7451fe6646a15631d7537df64b193ce")]
		public System.Nullable<System.Double> _0xb30b1dabe7451fe6646a15631d7537df64b193ce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xba4ff5f9d6508000b7fd0035bd616aaec070384f")]
		public System.Nullable<System.Double> _0xba4ff5f9d6508000b7fd0035bd616aaec070384f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbbad96336943a36e3e292d973b3382dd0ba4d1ef")]
		public System.Nullable<System.Double> _0xbbad96336943a36e3e292d973b3382dd0ba4d1ef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xc11099d3cd9686158db0a40e88267e7b1740958c")]
		public System.Nullable<System.Double> _0xc11099d3cd9686158db0a40e88267e7b1740958c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64")]
		public System.Nullable<System.Double> _0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe58e5ed4544f58831a84c18178b911a5957ada08")]
		public System.Nullable<System.Double> _0xe58e5ed4544f58831a84c18178b911a5957ada08 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeca2e2d894d19778939bd4dfc34d2a3c45e96456")]
		public System.Nullable<System.Double> _0xeca2e2d894d19778939bd4dfc34d2a3c45e96456 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0")]
		public System.Nullable<System.Double> _0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7")]
		public System.Nullable<System.Double> _0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xfb9779477e5b4834bf2bc02dd29b97b344d0f700")]
		public System.Nullable<System.Double> _0xfb9779477e5b4834bf2bc02dd29b97b344d0f700 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xff82bf5238637b7e5e345888bab9cd99f5ebe331")]
		public System.Nullable<System.Double> _0xff82bf5238637b7e5e345888bab9cd99f5ebe331 { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataMetaUnNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000007f150bd6f54c40a34d7c3d5e9f56")]
		public System.Nullable<System.Double> _0x0000000000007f150bd6f54c40a34d7c3d5e9f56 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x000000000035b5e5ad9019092c665357240f594e")]
		public System.Nullable<System.Double> _0x000000000035b5e5ad9019092c665357240f594e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000a84d1a9b0063a910315c7ffa9cd248")]
		public System.Nullable<System.Double> _0x0000000000a84d1a9b0063a910315c7ffa9cd248 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0077732907bfc6208933cfd2a51afb8f33ca5958")]
		public System.Nullable<System.Double> _0x0077732907bfc6208933cfd2a51afb8f33ca5958 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074")]
		public System.Nullable<System.Double> _0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d")]
		public System.Nullable<System.Double> _0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x388c818ca8b9251b393131c08a736a67ccb19297")]
		public System.Nullable<System.Double> _0x388c818ca8b9251b393131c08a736a67ccb19297 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3e2766167aa2acb097c311d5a2e9eb17cad38b06")]
		public System.Nullable<System.Double> _0x3e2766167aa2acb097c311d5a2e9eb17cad38b06 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6")]
		public System.Nullable<System.Double> _0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5050e08626c499411b5d0e0b5af0e83d3fd82edf")]
		public System.Nullable<System.Double> _0x5050e08626c499411b5d0e0b5af0e83d3fd82edf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x535b918f3724001fd6fb52fcc6cbc220592990a3")]
		public System.Nullable<System.Double> _0x535b918f3724001fd6fb52fcc6cbc220592990a3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94")]
		public System.Nullable<System.Double> _0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x665179031a86561ac845f43d6b6341cffbcea040")]
		public System.Nullable<System.Double> _0x665179031a86561ac845f43d6b6341cffbcea040 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x7d9da47e83b82a52a2b45353cdad735afb43e6f0")]
		public System.Nullable<System.Double> _0x7d9da47e83b82a52a2b45353cdad735afb43e6f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x81153f0889ab398c4acb42cb58b565a5392bba95")]
		public System.Nullable<System.Double> _0x81153f0889ab398c4acb42cb58b565a5392bba95 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87b3f3c934a13c779e100a5d6e6d7ef577e86671")]
		public System.Nullable<System.Double> _0x87b3f3c934a13c779e100a5d6e6d7ef577e86671 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7")]
		public System.Nullable<System.Double> _0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e")]
		public System.Nullable<System.Double> _0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa69babef1ca67a37ffaf7a485dfff3382056e78c")]
		public System.Nullable<System.Double> _0xa69babef1ca67a37ffaf7a485dfff3382056e78c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbeefbabeea323f07c59926295205d3b7a17e8638")]
		public System.Nullable<System.Double> _0xbeefbabeea323f07c59926295205d3b7a17e8638 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xcfc7e96be27d836b034b37132052549611341108")]
		public System.Nullable<System.Double> _0xcfc7e96be27d836b034b37132052549611341108 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c")]
		public System.Nullable<System.Double> _0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeb00c80f00ca1585000000b84f00940000ed40e5")]
		public System.Nullable<System.Double> _0xeb00c80f00ca1585000000b84f00940000ed40e5 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xebec795c9c8bbd61ffc14a6662944748f299cacf")]
		public System.Nullable<System.Double> _0xebec795c9c8bbd61ffc14a6662944748f299cacf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeee27662c2b8eba3cd936a23f039f3189633e4c8")]
		public System.Nullable<System.Double> _0xeee27662c2b8eba3cd936a23f039f3189633e4c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf828add1619bfb64712654076490b2609ae6d774")]
		public System.Nullable<System.Double> _0xf828add1619bfb64712654076490b2609ae6d774 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xffd22b84fb1d46ef74ed6530b2635be61340f347")]
		public System.Nullable<System.Double> _0xffd22b84fb1d46ef74ed6530b2635be61340f347 { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataTransactions
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public System.Nullable<System.Double> BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compressedTx")]
		public string CompressedTx { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public string Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ether")]
		public System.Nullable<System.Double> Ether { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etherGasCost")]
		public System.Nullable<System.Double> EtherGasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="function")]
		public string Function { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasCost")]
		public System.Nullable<System.Double> GasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public System.Nullable<System.Double> GasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hasToken")]
		public System.Nullable<System.Double> HasToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Double> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxFeePerGas")]
		public System.Nullable<System.Double> MaxFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxPriorityFeePerGas")]
		public System.Nullable<System.Double> MaxPriorityFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public ListtransactionsbyaddressReturnDataTransactionsReceipt Receipt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="traces")]
		public string[] Traces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public System.Nullable<System.Double> TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class ListtransactionsbyaddressReturnDataTransactionsReceipt
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractAddress")]
		public string ContractAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public System.Nullable<System.Double> EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public string[] Logs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetethereumbalanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetethereumbalanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetethereumbalanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class Getallerc20balanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getallerc20balanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getallerc20balanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class GetlastblocknumberReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetlastblocknumberReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetlastblocknumberReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blocknumber")]
		public System.Nullable<System.Double> Blocknumber { get; set; }
	}
	
	public class GetblockReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Geterc20Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Geterc20ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Geterc20ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalSupply")]
		public string TotalSupply { get; set; }
	}
	
	public class GetgaspriceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetgaspriceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetgaspriceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public string GasPrice { get; set; }
	}
	
	public class GetnftownerReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetnftownerReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetnftownerReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
	}
	
	public class GetnfturiReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetnfturiReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetnfturiReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class SendtransactionPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Senderc20PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Senderc721PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public System.Nullable<System.Double> Tokenid { get; set; }
	}
	
	public class GettransactionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GettransactionReturnData[] GettransactionReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GettransactionReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cumulativeGasUsed")]
		public string CumulativeGasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public string EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public string GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public GettransactionReturnDataLogs[] GettransactionReturnDataLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logsBloom")]
		public string LogsBloom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GettransactionReturnDataLogs
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logIndex")]
		public string LogIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public System.Nullable<System.Boolean> Removed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="topics")]
		public string[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
	}
	
	public class GettransactionreceiptReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GettransactionreceiptReturnData[] GettransactionreceiptReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GettransactionreceiptReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cumulativeGasUsed")]
		public string CumulativeGasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public string EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public string GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public GettransactionreceiptReturnDataLogs[] GettransactionreceiptReturnDataLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logsBloom")]
		public string LogsBloom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GettransactionreceiptReturnDataLogs
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logIndex")]
		public string LogIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public System.Nullable<System.Boolean> Removed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="topics")]
		public string[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
	}
	
	public class ListsubscribedaddressesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ListsubscribedaddressesReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ListsubscribedaddressesReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipns")]
		public ListsubscribedaddressesReturnDataIpns[] ListsubscribedaddressesReturnDataIpns { get; set; }
	}
	
	public class ListsubscribedaddressesReturnDataIpns
	{
		
		[System.Runtime.Serialization.DataMember(Name="bbid")]
		public System.Nullable<System.Double> Bbid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenId")]
		public object TokenId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class SubscribeaddressPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class SubscribeaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public SubscribeaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class SubscribeaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipn")]
		public SubscribeaddressReturnDataIpn Ipn { get; set; }
	}
	
	public class SubscribeaddressReturnDataIpn
	{
		
		[System.Runtime.Serialization.DataMember(Name="bbid")]
		public System.Nullable<System.Double> Bbid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public object Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenId")]
		public object TokenId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ResendfailedipnReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ResendfailedipnReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class ResendfailedipnReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="notification_id")]
		public string Notification_id { get; set; }
	}
	
	public class UnsubscribeaddressReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnsubscribeaddressReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class UnsubscribeaddressReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="webhook_id")]
		public string Webhook_id { get; set; }
	}
	
	public class ListipnsbywebhookidReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="failed_ipns")]
		public ListipnsbywebhookidReturnFailed_ipns[] ListipnsbywebhookidReturnFailed_ipns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class ListipnsbywebhookidReturnFailed_ipns
	{
		
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListfailedipnsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="failed_ipns")]
		public ListfailedipnsReturnFailed_ipns[] ListfailedipnsReturnFailed_ipns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class ListfailedipnsReturnFailed_ipns
	{
		
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetcurrenciesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetcurrenciesReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetcurrenciesReturnData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Aave { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Algorand { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Amp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApeCoin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arweave { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Avalanche { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Axie Infinity")]
		public string Axie_Infinity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BNB { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Basic Attention Token")]
		public string Basic_Attention_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Binance USD")]
		public string Binance_USD { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BitDAO { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BitTorrent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Bitcoin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Bitcoin Cash")]
		public string Bitcoin_Cash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Bitcoin SV")]
		public string Bitcoin_SV { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Bonded Luna")]
		public string Bonded_Luna { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Cardano { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Celo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Chain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Chainlink { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Chiliz { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Convex Finance")]
		public string Convex_Finance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Cosmos Hub")]
		public string Cosmos_Hub { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Cronos { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Curve DAO Token")]
		public string Curve_DAO_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Dai { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Dash { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeFiChain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Decentraland { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Dogecoin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EOS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Elrond { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Enjin Coin")]
		public string Enjin_Coin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ethereum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Ethereum Classic")]
		public string Ethereum_Classic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="FTX Token")]
		public string FTX_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Fantom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Filecoin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Flow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Frax { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Frax Share")]
		public string Frax_Share { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Gala { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Harmony { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Hedera { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Helium { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Huobi BTC")]
		public string Huobi_BTC { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Huobi Token")]
		public string Huobi_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IOTA { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Internet Computer")]
		public string Internet_Computer { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Klaytn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="KuCoin Token")]
		public string KuCoin_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Kusama { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="LEO Token")]
		public string LEO_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Lido Staked Ether")]
		public string Lido_Staked_Ether { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Litecoin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Loopring { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Magic Internet Money")]
		public string Magic_Internet_Money { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Maker { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Mina Protocol")]
		public string Mina_Protocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Monero { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="NEAR Protocol")]
		public string NEAR_Protocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NEO { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NEXO { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OKB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Osmosis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PancakeSwap { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Pax Dollar")]
		public string Pax_Dollar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Polkadot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Polygon { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Quant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Radix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string STEPN { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Shiba Inu")]
		public string Shiba_Inu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Solana { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Stacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Stellar { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Synthetix Network Token")]
		public string Synthetix_Network_Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string THORChain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TRON { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Terra { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TerraUSD { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Tether { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Tezos { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="The Graph")]
		public string The_Graph { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="The Sandbox")]
		public string The_Sandbox { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Theta Fuel")]
		public string Theta_Fuel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Theta Network")]
		public string Theta_Network { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TrueUSD { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="USD Coin")]
		public string USD_Coin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Uniswap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VeChain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Waves { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="Wrapped Bitcoin")]
		public string Wrapped_Bitcoin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string XRP { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Zcash { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Zilliqa { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cDAI")]
		public string CDAI { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cETH")]
		public string CETH { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cUSDC")]
		public string CUSDC { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eCash")]
		public string ECash { get; set; }
	}
	
	public class GetpricedatabycurrencyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetpricedatabycurrencyReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetpricedatabycurrencyReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="bitcoin")]
		public GetpricedatabycurrencyReturnDataBitcoin Bitcoin { get; set; }
	}
	
	public class GetpricedatabycurrencyReturnDataBitcoin
	{
		
		[System.Runtime.Serialization.DataMember(Name="currentPrice")]
		public System.Nullable<System.Double> CurrentPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="high24h")]
		public System.Nullable<System.Double> High24h { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="low24h")]
		public System.Nullable<System.Double> Low24h { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="priceChange24h")]
		public System.Nullable<System.Double> PriceChange24h { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="priceChangePercentage24h")]
		public System.Nullable<System.Double> PriceChangePercentage24h { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
	}
	
	public class GetratebycurrencyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetratebycurrencyReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetratebycurrencyReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
	}
	
	public class GetalltimelowReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetalltimelowReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetalltimelowReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="bitcoin")]
		public GetalltimelowReturnDataBitcoin Bitcoin { get; set; }
	}
	
	public class GetalltimelowReturnDataBitcoin
	{
		
		[System.Runtime.Serialization.DataMember(Name="atl")]
		public System.Nullable<System.Double> Atl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="atlPercentage")]
		public System.Nullable<System.Double> AtlPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
	}
	
	public class GetalltimehighReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetalltimehighReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetalltimehighReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="bitcoin")]
		public GetalltimehighReturnDataBitcoin Bitcoin { get; set; }
	}
	
	public class GetalltimehighReturnDataBitcoin
	{
		
		[System.Runtime.Serialization.DataMember(Name="ath")]
		public System.Nullable<System.Double> Ath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="athDate")]
		public GetalltimehighReturnDataBitcoinAthDate AthDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="athPercentage")]
		public System.Nullable<System.Double> AthPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
	}
	
	public class GetalltimehighReturnDataBitcoinAthDate
	{
		
		[System.Runtime.Serialization.DataMember(Name="offset")]
		public System.Nullable<System.Double> Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public GetalltimehighReturnDataBitcoinAthDateTimezone Timezone { get; set; }
	}
	
	public class GetalltimehighReturnDataBitcoinAthDateTimezone
	{
		
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetalltimehighReturnDataBitcoinAthDateTimezoneLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transitions")]
		public GetalltimehighReturnDataBitcoinAthDateTimezoneTransitions[] GetalltimehighReturnDataBitcoinAthDateTimezoneTransitions { get; set; }
	}
	
	public class GetalltimehighReturnDataBitcoinAthDateTimezoneLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="comments")]
		public string Comments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
	}
	
	public class GetalltimehighReturnDataBitcoinAthDateTimezoneTransitions
	{
		
		[System.Runtime.Serialization.DataMember(Name="abbr")]
		public string Abbr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isdst")]
		public System.Nullable<System.Boolean> Isdst { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="offset")]
		public System.Nullable<System.Double> Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time")]
		public string Time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ts")]
		public System.Nullable<System.Double> Ts { get; set; }
	}
	
	public class Listaddresses1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listaddresses1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listaddresses1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public string[] Addresses { get; set; }
	}
	
	public class Newaddress1PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class Newaddress1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Newaddress1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Newaddress1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
	}
	
	public class Importaddress1PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public Importaddress1PostBodyContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class Importaddress1PostBodyContent
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="crypto")]
		public Importaddress1PostBodyContentCrypto Crypto { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Double> Version { get; set; }
	}
	
	public class Importaddress1PostBodyContentCrypto
	{
		
		[System.Runtime.Serialization.DataMember(Name="cipher")]
		public string Cipher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cipherparams")]
		public Importaddress1PostBodyContentCryptoCipherparams Cipherparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ciphertext")]
		public string Ciphertext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdf")]
		public string Kdf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kdfparams")]
		public Importaddress1PostBodyContentCryptoKdfparams Kdfparams { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mac")]
		public string Mac { get; set; }
	}
	
	public class Importaddress1PostBodyContentCryptoCipherparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="iv")]
		public string Iv { get; set; }
	}
	
	public class Importaddress1PostBodyContentCryptoKdfparams
	{
		
		[System.Runtime.Serialization.DataMember(Name="dklen")]
		public System.Nullable<System.Double> Dklen { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="n")]
		public System.Nullable<System.Double> N { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="p")]
		public System.Nullable<System.Double> P { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="r")]
		public System.Nullable<System.Double> R { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="salt")]
		public string Salt { get; set; }
	}
	
	public class Importaddress1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Importaddress1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Importaddress1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
	}
	
	public class Deleteaddress1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Deleteaddress1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Deleteaddress1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
	}
	
	public class Listtransactionsbyaddress1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listtransactionsbyaddress1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="current_page")]
		public System.Nullable<System.Double> Current_page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="max_pages")]
		public System.Nullable<System.Double> Max_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Listtransactionsbyaddress1ReturnDataMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public Listtransactionsbyaddress1ReturnDataTransactions[] Listtransactionsbyaddress1ReturnDataTransactions { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountedFor")]
		public Listtransactionsbyaddress1ReturnDataMetaAccountedFor AccountedFor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chain")]
		public string Chain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="client")]
		public System.Nullable<System.Double> Client { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public System.Nullable<System.Double> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finalized")]
		public System.Nullable<System.Double> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_block")]
		public System.Nullable<System.Double> First_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_block")]
		public string Last_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedFrom")]
		public string[] NamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedTo")]
		public Listtransactionsbyaddress1ReturnDataMetaNamedTo NamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkId")]
		public System.Nullable<System.Double> NetworkId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ripe")]
		public System.Nullable<System.Double> Ripe { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="staging")]
		public System.Nullable<System.Double> Staging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedFrom")]
		public Listtransactionsbyaddress1ReturnDataMetaUnNamedFrom UnNamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedTo")]
		public Listtransactionsbyaddress1ReturnDataMetaUnNamedTo UnNamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unripe")]
		public System.Nullable<System.Double> Unripe { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataMetaAccountedFor
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="petname")]
		public string Petname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataMetaNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf")]
		public Listtransactionsbyaddress1ReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf _0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Double> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isContract")]
		public System.Nullable<System.Boolean> IsContract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataMetaUnNamedFrom
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0039b625b1d8632c7a0057c964ec58a9f39789d3")]
		public System.Nullable<System.Double> _0x0039b625b1d8632c7a0057c964ec58a9f39789d3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x005fde5294199d5c3eb5eb7a6e51954123b74b1c")]
		public System.Nullable<System.Double> _0x005fde5294199d5c3eb5eb7a6e51954123b74b1c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x006e920000ec97e58900b61e00800010005aa831")]
		public System.Nullable<System.Double> _0x006e920000ec97e58900b61e00800010005aa831 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd")]
		public System.Nullable<System.Double> _0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00dee1f836998bcc736022f314df906588d44808")]
		public System.Nullable<System.Double> _0x00dee1f836998bcc736022f314df906588d44808 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x042523db4f3effc33d2742022b2490258494f8b3")]
		public System.Nullable<System.Double> _0x042523db4f3effc33d2742022b2490258494f8b3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1")]
		public System.Nullable<System.Double> _0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x09e0781a47e9fd2b6258be09bd074f42022b9760")]
		public System.Nullable<System.Double> _0x09e0781a47e9fd2b6258be09bd074f42022b9760 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0d0b3f21d7c90d0b957aa6acbc993621311208e4")]
		public System.Nullable<System.Double> _0x0d0b3f21d7c90d0b957aa6acbc993621311208e4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x177b8ebe208cb71da818b6b8814c946c027240cd")]
		public System.Nullable<System.Double> _0x177b8ebe208cb71da818b6b8814c946c027240cd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a")]
		public System.Nullable<System.Double> _0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e")]
		public System.Nullable<System.Double> _0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26fd09c8b44af53df38a9bad41d5abc55a1786af")]
		public System.Nullable<System.Double> _0x26fd09c8b44af53df38a9bad41d5abc55a1786af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x30a1b724c9dfe2e12a19ed84878312d199d1519e")]
		public System.Nullable<System.Double> _0x30a1b724c9dfe2e12a19ed84878312d199d1519e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x33cef21eb6068ebfcf70c7404efb8aaa08cad388")]
		public System.Nullable<System.Double> _0x33cef21eb6068ebfcf70c7404efb8aaa08cad388 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3443006ed920730005d88267c49f77abcde749af")]
		public System.Nullable<System.Double> _0x3443006ed920730005d88267c49f77abcde749af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x346c802df3404bec2f265603db28b815321251ee")]
		public System.Nullable<System.Double> _0x346c802df3404bec2f265603db28b815321251ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x34ec9e3a1ac200ea58744ced891015152130e400")]
		public System.Nullable<System.Double> _0x34ec9e3a1ac200ea58744ced891015152130e400 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb")]
		public System.Nullable<System.Double> _0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fb530b53036b5d8de892ad1eda14a576a22e6d6")]
		public System.Nullable<System.Double> _0x3fb530b53036b5d8de892ad1eda14a576a22e6d6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fbaea01b228368e67ca40d8cb195018fd095318")]
		public System.Nullable<System.Double> _0x3fbaea01b228368e67ca40d8cb195018fd095318 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x431b5a84acc1297eda88259f300262f1bc3a74f3")]
		public System.Nullable<System.Double> _0x431b5a84acc1297eda88259f300262f1bc3a74f3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x479bc00624e58398f4cf59d78884d12fb515790a")]
		public System.Nullable<System.Double> _0x479bc00624e58398f4cf59d78884d12fb515790a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x50efbf12580138bc263c95757826df4e24eb81c9")]
		public System.Nullable<System.Double> _0x50efbf12580138bc263c95757826df4e24eb81c9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5a243879d1a43f48042c33bbc8051c69756f67d4")]
		public System.Nullable<System.Double> _0x5a243879d1a43f48042c33bbc8051c69756f67d4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7")]
		public System.Nullable<System.Double> _0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f")]
		public System.Nullable<System.Double> _0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x72bb8c608c4ea4a887266985e680a04c056f5b2a")]
		public System.Nullable<System.Double> _0x72bb8c608c4ea4a887266985e680a04c056f5b2a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76dd32063b2899a59f6e15dbc474a160cc922751")]
		public System.Nullable<System.Double> _0x76dd32063b2899a59f6e15dbc474a160cc922751 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76e40d0a69fd81826b5eb7d18145626d46eafdef")]
		public System.Nullable<System.Double> _0x76e40d0a69fd81826b5eb7d18145626d46eafdef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c")]
		public System.Nullable<System.Double> _0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8")]
		public System.Nullable<System.Double> _0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e8f818d3371f797a2db7edb32803607c8b3c6a9")]
		public System.Nullable<System.Double> _0x8e8f818d3371f797a2db7edb32803607c8b3c6a9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x91aae0aafd9d2d730111b395c6871f248d7bd728")]
		public System.Nullable<System.Double> _0x91aae0aafd9d2d730111b395c6871f248d7bd728 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x92824d144c6543f70a649b2c3e7596612375fd4d")]
		public System.Nullable<System.Double> _0x92824d144c6543f70a649b2c3e7596612375fd4d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x93f635372008b7c5d770aaa6ff313454c8dc498c")]
		public System.Nullable<System.Double> _0x93f635372008b7c5d770aaa6ff313454c8dc498c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee")]
		public System.Nullable<System.Double> _0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0")]
		public System.Nullable<System.Double> _0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa6807d794411d9a80bc435dfc4cda0ba0ddde979")]
		public System.Nullable<System.Double> _0xa6807d794411d9a80bc435dfc4cda0ba0ddde979 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa855d1198c67839e596b9a5d7c46f8ea31cfefde")]
		public System.Nullable<System.Double> _0xa855d1198c67839e596b9a5d7c46f8ea31cfefde { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb0804b228c1c1449cdc94dd16fc8910421f45df1")]
		public System.Nullable<System.Double> _0xb0804b228c1c1449cdc94dd16fc8910421f45df1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78")]
		public System.Nullable<System.Double> _0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb30b1dabe7451fe6646a15631d7537df64b193ce")]
		public System.Nullable<System.Double> _0xb30b1dabe7451fe6646a15631d7537df64b193ce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xba4ff5f9d6508000b7fd0035bd616aaec070384f")]
		public System.Nullable<System.Double> _0xba4ff5f9d6508000b7fd0035bd616aaec070384f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbbad96336943a36e3e292d973b3382dd0ba4d1ef")]
		public System.Nullable<System.Double> _0xbbad96336943a36e3e292d973b3382dd0ba4d1ef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xc11099d3cd9686158db0a40e88267e7b1740958c")]
		public System.Nullable<System.Double> _0xc11099d3cd9686158db0a40e88267e7b1740958c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64")]
		public System.Nullable<System.Double> _0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe58e5ed4544f58831a84c18178b911a5957ada08")]
		public System.Nullable<System.Double> _0xe58e5ed4544f58831a84c18178b911a5957ada08 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeca2e2d894d19778939bd4dfc34d2a3c45e96456")]
		public System.Nullable<System.Double> _0xeca2e2d894d19778939bd4dfc34d2a3c45e96456 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0")]
		public System.Nullable<System.Double> _0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7")]
		public System.Nullable<System.Double> _0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xfb9779477e5b4834bf2bc02dd29b97b344d0f700")]
		public System.Nullable<System.Double> _0xfb9779477e5b4834bf2bc02dd29b97b344d0f700 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xff82bf5238637b7e5e345888bab9cd99f5ebe331")]
		public System.Nullable<System.Double> _0xff82bf5238637b7e5e345888bab9cd99f5ebe331 { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataMetaUnNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000007f150bd6f54c40a34d7c3d5e9f56")]
		public System.Nullable<System.Double> _0x0000000000007f150bd6f54c40a34d7c3d5e9f56 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x000000000035b5e5ad9019092c665357240f594e")]
		public System.Nullable<System.Double> _0x000000000035b5e5ad9019092c665357240f594e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000a84d1a9b0063a910315c7ffa9cd248")]
		public System.Nullable<System.Double> _0x0000000000a84d1a9b0063a910315c7ffa9cd248 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0077732907bfc6208933cfd2a51afb8f33ca5958")]
		public System.Nullable<System.Double> _0x0077732907bfc6208933cfd2a51afb8f33ca5958 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074")]
		public System.Nullable<System.Double> _0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d")]
		public System.Nullable<System.Double> _0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x388c818ca8b9251b393131c08a736a67ccb19297")]
		public System.Nullable<System.Double> _0x388c818ca8b9251b393131c08a736a67ccb19297 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3e2766167aa2acb097c311d5a2e9eb17cad38b06")]
		public System.Nullable<System.Double> _0x3e2766167aa2acb097c311d5a2e9eb17cad38b06 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6")]
		public System.Nullable<System.Double> _0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5050e08626c499411b5d0e0b5af0e83d3fd82edf")]
		public System.Nullable<System.Double> _0x5050e08626c499411b5d0e0b5af0e83d3fd82edf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x535b918f3724001fd6fb52fcc6cbc220592990a3")]
		public System.Nullable<System.Double> _0x535b918f3724001fd6fb52fcc6cbc220592990a3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94")]
		public System.Nullable<System.Double> _0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x665179031a86561ac845f43d6b6341cffbcea040")]
		public System.Nullable<System.Double> _0x665179031a86561ac845f43d6b6341cffbcea040 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x7d9da47e83b82a52a2b45353cdad735afb43e6f0")]
		public System.Nullable<System.Double> _0x7d9da47e83b82a52a2b45353cdad735afb43e6f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x81153f0889ab398c4acb42cb58b565a5392bba95")]
		public System.Nullable<System.Double> _0x81153f0889ab398c4acb42cb58b565a5392bba95 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87b3f3c934a13c779e100a5d6e6d7ef577e86671")]
		public System.Nullable<System.Double> _0x87b3f3c934a13c779e100a5d6e6d7ef577e86671 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7")]
		public System.Nullable<System.Double> _0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e")]
		public System.Nullable<System.Double> _0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa69babef1ca67a37ffaf7a485dfff3382056e78c")]
		public System.Nullable<System.Double> _0xa69babef1ca67a37ffaf7a485dfff3382056e78c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbeefbabeea323f07c59926295205d3b7a17e8638")]
		public System.Nullable<System.Double> _0xbeefbabeea323f07c59926295205d3b7a17e8638 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xcfc7e96be27d836b034b37132052549611341108")]
		public System.Nullable<System.Double> _0xcfc7e96be27d836b034b37132052549611341108 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c")]
		public System.Nullable<System.Double> _0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeb00c80f00ca1585000000b84f00940000ed40e5")]
		public System.Nullable<System.Double> _0xeb00c80f00ca1585000000b84f00940000ed40e5 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xebec795c9c8bbd61ffc14a6662944748f299cacf")]
		public System.Nullable<System.Double> _0xebec795c9c8bbd61ffc14a6662944748f299cacf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeee27662c2b8eba3cd936a23f039f3189633e4c8")]
		public System.Nullable<System.Double> _0xeee27662c2b8eba3cd936a23f039f3189633e4c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf828add1619bfb64712654076490b2609ae6d774")]
		public System.Nullable<System.Double> _0xf828add1619bfb64712654076490b2609ae6d774 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xffd22b84fb1d46ef74ed6530b2635be61340f347")]
		public System.Nullable<System.Double> _0xffd22b84fb1d46ef74ed6530b2635be61340f347 { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataTransactions
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public System.Nullable<System.Double> BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compressedTx")]
		public string CompressedTx { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public string Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ether")]
		public System.Nullable<System.Double> Ether { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etherGasCost")]
		public System.Nullable<System.Double> EtherGasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="function")]
		public string Function { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasCost")]
		public System.Nullable<System.Double> GasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public System.Nullable<System.Double> GasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hasToken")]
		public System.Nullable<System.Double> HasToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Double> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxFeePerGas")]
		public System.Nullable<System.Double> MaxFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxPriorityFeePerGas")]
		public System.Nullable<System.Double> MaxPriorityFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public Listtransactionsbyaddress1ReturnDataTransactionsReceipt Receipt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="traces")]
		public string[] Traces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public System.Nullable<System.Double> TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class Listtransactionsbyaddress1ReturnDataTransactionsReceipt
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractAddress")]
		public string ContractAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public System.Nullable<System.Double> EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public string[] Logs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetpolygonbalanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetpolygonbalanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetpolygonbalanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class Geterc20balance1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Geterc20balance1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Geterc20balance1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class Getlastblocknumber1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getlastblocknumber1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getlastblocknumber1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blocknumber")]
		public System.Nullable<System.Double> Blocknumber { get; set; }
	}
	
	public class Getblock1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Geterc201Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Geterc201ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Geterc201ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalSupply")]
		public string TotalSupply { get; set; }
	}
	
	public class Getgasprice1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getgasprice1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getgasprice1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public string GasPrice { get; set; }
	}
	
	public class Getnftowner1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getnftowner1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getnftowner1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
	}
	
	public class Getnfturi1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getnfturi1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getnfturi1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class Sendtransaction1PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Broadcasttransaction1PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
	}
	
	public class Broadcasttransaction1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Broadcasttransaction1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Broadcasttransaction1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class Senderc201PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Senderc7211PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public System.Nullable<System.Double> Tokenid { get; set; }
	}
	
	public class Gettransaction1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransaction1ReturnData[] Gettransaction1ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransaction1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cumulativeGasUsed")]
		public string CumulativeGasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public string EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public string GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public Gettransaction1ReturnDataLogs[] Gettransaction1ReturnDataLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logsBloom")]
		public string LogsBloom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class Gettransaction1ReturnDataLogs
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logIndex")]
		public string LogIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public System.Nullable<System.Boolean> Removed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="topics")]
		public string[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
	}
	
	public class Gettransactionreceipt1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransactionreceipt1ReturnData[] Gettransactionreceipt1ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransactionreceipt1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cumulativeGasUsed")]
		public string CumulativeGasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public string EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public string GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public Gettransactionreceipt1ReturnDataLogs[] Gettransactionreceipt1ReturnDataLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logsBloom")]
		public string LogsBloom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class Gettransactionreceipt1ReturnDataLogs
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public string BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logIndex")]
		public string LogIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public System.Nullable<System.Boolean> Removed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="topics")]
		public string[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionHash")]
		public string TransactionHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public string TransactionIndex { get; set; }
	}
	
	public class Listsubscribedaddresses1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listsubscribedaddresses1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listsubscribedaddresses1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipns")]
		public Listsubscribedaddresses1ReturnDataIpns[] Listsubscribedaddresses1ReturnDataIpns { get; set; }
	}
	
	public class Listsubscribedaddresses1ReturnDataIpns
	{
		
		[System.Runtime.Serialization.DataMember(Name="bbid")]
		public System.Nullable<System.Double> Bbid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenId")]
		public object TokenId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress1PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Subscribeaddress1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Subscribeaddress1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipn")]
		public Subscribeaddress1ReturnDataIpn Ipn { get; set; }
	}
	
	public class Subscribeaddress1ReturnDataIpn
	{
		
		[System.Runtime.Serialization.DataMember(Name="bbid")]
		public System.Nullable<System.Double> Bbid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public object Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenId")]
		public object TokenId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Resendfailedipn1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Resendfailedipn1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Resendfailedipn1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="notification_id")]
		public string Notification_id { get; set; }
	}
	
	public class Unsubscribeaddress1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Unsubscribeaddress1ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Unsubscribeaddress1ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="webhook_id")]
		public string Webhook_id { get; set; }
	}
	
	public class Listipnsbywebhookid1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="failed_ipns")]
		public Listipnsbywebhookid1ReturnFailed_ipns[] Listipnsbywebhookid1ReturnFailed_ipns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Listipnsbywebhookid1ReturnFailed_ipns
	{
		
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Listfailedipns1Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="failed_ipns")]
		public Listfailedipns1ReturnFailed_ipns[] Listfailedipns1ReturnFailed_ipns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Listfailedipns1ReturnFailed_ipns
	{
		
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetaccountresourcesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetaccountresourcesReturnData[] GetaccountresourcesReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetaccountresourcesReturnData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalEnergyLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalEnergyWeight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalNetLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalNetWeight { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assetNetLimit")]
		public GetaccountresourcesReturnDataAssetNetLimit[] GetaccountresourcesReturnDataAssetNetLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assetNetUsed")]
		public GetaccountresourcesReturnDataAssetNetUsed[] GetaccountresourcesReturnDataAssetNetUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="freeNetLimit")]
		public System.Nullable<System.Double> FreeNetLimit { get; set; }
	}
	
	public class GetaccountresourcesReturnDataAssetNetLimit
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class GetaccountresourcesReturnDataAssetNetUsed
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class Newaddress3PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	public class Newaddress3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Newaddress3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Newaddress3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
	}
	
	public class Listtransactionsbyaddress3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listtransactionsbyaddress3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="current_page")]
		public System.Nullable<System.Double> Current_page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="max_pages")]
		public System.Nullable<System.Double> Max_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Listtransactionsbyaddress3ReturnDataMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public Listtransactionsbyaddress3ReturnDataTransactions[] Listtransactionsbyaddress3ReturnDataTransactions { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountedFor")]
		public Listtransactionsbyaddress3ReturnDataMetaAccountedFor AccountedFor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="chain")]
		public string Chain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="client")]
		public System.Nullable<System.Double> Client { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public System.Nullable<System.Double> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finalized")]
		public System.Nullable<System.Double> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_block")]
		public System.Nullable<System.Double> First_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_block")]
		public string Last_block { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedFrom")]
		public string[] NamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="namedTo")]
		public Listtransactionsbyaddress3ReturnDataMetaNamedTo NamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkId")]
		public System.Nullable<System.Double> NetworkId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ripe")]
		public System.Nullable<System.Double> Ripe { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="staging")]
		public System.Nullable<System.Double> Staging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedFrom")]
		public Listtransactionsbyaddress3ReturnDataMetaUnNamedFrom UnNamedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unNamedTo")]
		public Listtransactionsbyaddress3ReturnDataMetaUnNamedTo UnNamedTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unripe")]
		public System.Nullable<System.Double> Unripe { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataMetaAccountedFor
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="petname")]
		public string Petname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="symbol")]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataMetaNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf")]
		public Listtransactionsbyaddress3ReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf _0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataMetaNamedTo_0xa57bd00134b2850b2a1c55860c9e9ea100fdd6cf
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Double> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isContract")]
		public System.Nullable<System.Boolean> IsContract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataMetaUnNamedFrom
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0039b625b1d8632c7a0057c964ec58a9f39789d3")]
		public System.Nullable<System.Double> _0x0039b625b1d8632c7a0057c964ec58a9f39789d3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x005fde5294199d5c3eb5eb7a6e51954123b74b1c")]
		public System.Nullable<System.Double> _0x005fde5294199d5c3eb5eb7a6e51954123b74b1c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x006e920000ec97e58900b61e00800010005aa831")]
		public System.Nullable<System.Double> _0x006e920000ec97e58900b61e00800010005aa831 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd")]
		public System.Nullable<System.Double> _0x00a2aebc7e233cd2ffe5ab5856f90f0ad2fa3ccd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x00dee1f836998bcc736022f314df906588d44808")]
		public System.Nullable<System.Double> _0x00dee1f836998bcc736022f314df906588d44808 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x042523db4f3effc33d2742022b2490258494f8b3")]
		public System.Nullable<System.Double> _0x042523db4f3effc33d2742022b2490258494f8b3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1")]
		public System.Nullable<System.Double> _0x065e3dbafcb2c26a978720f9eb4bce6ad9d644a1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x09e0781a47e9fd2b6258be09bd074f42022b9760")]
		public System.Nullable<System.Double> _0x09e0781a47e9fd2b6258be09bd074f42022b9760 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0d0b3f21d7c90d0b957aa6acbc993621311208e4")]
		public System.Nullable<System.Double> _0x0d0b3f21d7c90d0b957aa6acbc993621311208e4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x177b8ebe208cb71da818b6b8814c946c027240cd")]
		public System.Nullable<System.Double> _0x177b8ebe208cb71da818b6b8814c946c027240cd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a")]
		public System.Nullable<System.Double> _0x1c8f6a5f009e051cab9c3851ca2da2c936b2775a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e")]
		public System.Nullable<System.Double> _0x26bce6ecb5b10138e4bf14ac0ffcc8727fef3b2e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26fd09c8b44af53df38a9bad41d5abc55a1786af")]
		public System.Nullable<System.Double> _0x26fd09c8b44af53df38a9bad41d5abc55a1786af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x30a1b724c9dfe2e12a19ed84878312d199d1519e")]
		public System.Nullable<System.Double> _0x30a1b724c9dfe2e12a19ed84878312d199d1519e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x33cef21eb6068ebfcf70c7404efb8aaa08cad388")]
		public System.Nullable<System.Double> _0x33cef21eb6068ebfcf70c7404efb8aaa08cad388 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3443006ed920730005d88267c49f77abcde749af")]
		public System.Nullable<System.Double> _0x3443006ed920730005d88267c49f77abcde749af { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x346c802df3404bec2f265603db28b815321251ee")]
		public System.Nullable<System.Double> _0x346c802df3404bec2f265603db28b815321251ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x34ec9e3a1ac200ea58744ced891015152130e400")]
		public System.Nullable<System.Double> _0x34ec9e3a1ac200ea58744ced891015152130e400 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb")]
		public System.Nullable<System.Double> _0x3b25d8e0801df1264a3d3a5f0bb79bbc292a09fb { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fb530b53036b5d8de892ad1eda14a576a22e6d6")]
		public System.Nullable<System.Double> _0x3fb530b53036b5d8de892ad1eda14a576a22e6d6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3fbaea01b228368e67ca40d8cb195018fd095318")]
		public System.Nullable<System.Double> _0x3fbaea01b228368e67ca40d8cb195018fd095318 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x431b5a84acc1297eda88259f300262f1bc3a74f3")]
		public System.Nullable<System.Double> _0x431b5a84acc1297eda88259f300262f1bc3a74f3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x479bc00624e58398f4cf59d78884d12fb515790a")]
		public System.Nullable<System.Double> _0x479bc00624e58398f4cf59d78884d12fb515790a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x50efbf12580138bc263c95757826df4e24eb81c9")]
		public System.Nullable<System.Double> _0x50efbf12580138bc263c95757826df4e24eb81c9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5a243879d1a43f48042c33bbc8051c69756f67d4")]
		public System.Nullable<System.Double> _0x5a243879d1a43f48042c33bbc8051c69756f67d4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7")]
		public System.Nullable<System.Double> _0x6046945c5b5ef5933b8e73a98a6ad7bf3e031df7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f")]
		public System.Nullable<System.Double> _0x60b86af869f23aeb552fb7f3cabd11b829f6ab2f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x72bb8c608c4ea4a887266985e680a04c056f5b2a")]
		public System.Nullable<System.Double> _0x72bb8c608c4ea4a887266985e680a04c056f5b2a { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76dd32063b2899a59f6e15dbc474a160cc922751")]
		public System.Nullable<System.Double> _0x76dd32063b2899a59f6e15dbc474a160cc922751 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x76e40d0a69fd81826b5eb7d18145626d46eafdef")]
		public System.Nullable<System.Double> _0x76e40d0a69fd81826b5eb7d18145626d46eafdef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c")]
		public System.Nullable<System.Double> _0x77eb9084ce8168901bcb11f14f02a7aab36fcd0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8")]
		public System.Nullable<System.Double> _0x8e2400a8822fe2da5a8c52b7f7b412acb49813c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x8e8f818d3371f797a2db7edb32803607c8b3c6a9")]
		public System.Nullable<System.Double> _0x8e8f818d3371f797a2db7edb32803607c8b3c6a9 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x91aae0aafd9d2d730111b395c6871f248d7bd728")]
		public System.Nullable<System.Double> _0x91aae0aafd9d2d730111b395c6871f248d7bd728 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x92824d144c6543f70a649b2c3e7596612375fd4d")]
		public System.Nullable<System.Double> _0x92824d144c6543f70a649b2c3e7596612375fd4d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x93f635372008b7c5d770aaa6ff313454c8dc498c")]
		public System.Nullable<System.Double> _0x93f635372008b7c5d770aaa6ff313454c8dc498c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee")]
		public System.Nullable<System.Double> _0x9aab3f81604c683a1a0d14019fbfe15bef7aa1ee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0")]
		public System.Nullable<System.Double> _0xa5a13f62ce1113838e0d9b4559b8caf5f76463c0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa6807d794411d9a80bc435dfc4cda0ba0ddde979")]
		public System.Nullable<System.Double> _0xa6807d794411d9a80bc435dfc4cda0ba0ddde979 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa855d1198c67839e596b9a5d7c46f8ea31cfefde")]
		public System.Nullable<System.Double> _0xa855d1198c67839e596b9a5d7c46f8ea31cfefde { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb0804b228c1c1449cdc94dd16fc8910421f45df1")]
		public System.Nullable<System.Double> _0xb0804b228c1c1449cdc94dd16fc8910421f45df1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78")]
		public System.Nullable<System.Double> _0xb2088e2ec5e3599554a70cbb17c0ef1aac70dc78 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xb30b1dabe7451fe6646a15631d7537df64b193ce")]
		public System.Nullable<System.Double> _0xb30b1dabe7451fe6646a15631d7537df64b193ce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xba4ff5f9d6508000b7fd0035bd616aaec070384f")]
		public System.Nullable<System.Double> _0xba4ff5f9d6508000b7fd0035bd616aaec070384f { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbbad96336943a36e3e292d973b3382dd0ba4d1ef")]
		public System.Nullable<System.Double> _0xbbad96336943a36e3e292d973b3382dd0ba4d1ef { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xc11099d3cd9686158db0a40e88267e7b1740958c")]
		public System.Nullable<System.Double> _0xc11099d3cd9686158db0a40e88267e7b1740958c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64")]
		public System.Nullable<System.Double> _0xd03154dbc4ae6beafa79f7ae6d99c12ce58f5b64 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe58e5ed4544f58831a84c18178b911a5957ada08")]
		public System.Nullable<System.Double> _0xe58e5ed4544f58831a84c18178b911a5957ada08 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeca2e2d894d19778939bd4dfc34d2a3c45e96456")]
		public System.Nullable<System.Double> _0xeca2e2d894d19778939bd4dfc34d2a3c45e96456 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0")]
		public System.Nullable<System.Double> _0xf0475a1f184f062d1eee88f0d79ec4eb2795d4f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7")]
		public System.Nullable<System.Double> _0xf5e322fd6fadbef5d14eaf0f45a809c00739d1e7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xfb9779477e5b4834bf2bc02dd29b97b344d0f700")]
		public System.Nullable<System.Double> _0xfb9779477e5b4834bf2bc02dd29b97b344d0f700 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xff82bf5238637b7e5e345888bab9cd99f5ebe331")]
		public System.Nullable<System.Double> _0xff82bf5238637b7e5e345888bab9cd99f5ebe331 { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataMetaUnNamedTo
	{
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000007f150bd6f54c40a34d7c3d5e9f56")]
		public System.Nullable<System.Double> _0x0000000000007f150bd6f54c40a34d7c3d5e9f56 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x000000000035b5e5ad9019092c665357240f594e")]
		public System.Nullable<System.Double> _0x000000000035b5e5ad9019092c665357240f594e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0000000000a84d1a9b0063a910315c7ffa9cd248")]
		public System.Nullable<System.Double> _0x0000000000a84d1a9b0063a910315c7ffa9cd248 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x0077732907bfc6208933cfd2a51afb8f33ca5958")]
		public System.Nullable<System.Double> _0x0077732907bfc6208933cfd2a51afb8f33ca5958 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074")]
		public System.Nullable<System.Double> _0x1cedc0f3af8f9841b0a1f5c1a4ddc6e1a1629074 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d")]
		public System.Nullable<System.Double> _0x26c541f5e1c8eab0f6f0943bb1c8843ab18c4b0d { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x388c818ca8b9251b393131c08a736a67ccb19297")]
		public System.Nullable<System.Double> _0x388c818ca8b9251b393131c08a736a67ccb19297 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x3e2766167aa2acb097c311d5a2e9eb17cad38b06")]
		public System.Nullable<System.Double> _0x3e2766167aa2acb097c311d5a2e9eb17cad38b06 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6")]
		public System.Nullable<System.Double> _0x4a137fd5e7a256ef08a7de531a17d0be0cc7b6b6 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x5050e08626c499411b5d0e0b5af0e83d3fd82edf")]
		public System.Nullable<System.Double> _0x5050e08626c499411b5d0e0b5af0e83d3fd82edf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x535b918f3724001fd6fb52fcc6cbc220592990a3")]
		public System.Nullable<System.Double> _0x535b918f3724001fd6fb52fcc6cbc220592990a3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94")]
		public System.Nullable<System.Double> _0x57c1e0c2adf6eecdb135bcf9ec5f23b319be2c94 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x665179031a86561ac845f43d6b6341cffbcea040")]
		public System.Nullable<System.Double> _0x665179031a86561ac845f43d6b6341cffbcea040 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x7d9da47e83b82a52a2b45353cdad735afb43e6f0")]
		public System.Nullable<System.Double> _0x7d9da47e83b82a52a2b45353cdad735afb43e6f0 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x81153f0889ab398c4acb42cb58b565a5392bba95")]
		public System.Nullable<System.Double> _0x81153f0889ab398c4acb42cb58b565a5392bba95 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87b3f3c934a13c779e100a5d6e6d7ef577e86671")]
		public System.Nullable<System.Double> _0x87b3f3c934a13c779e100a5d6e6d7ef577e86671 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7")]
		public System.Nullable<System.Double> _0x87d9da48db6e1f925cb67d3b7d2a292846c24cf7 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e")]
		public System.Nullable<System.Double> _0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xa69babef1ca67a37ffaf7a485dfff3382056e78c")]
		public System.Nullable<System.Double> _0xa69babef1ca67a37ffaf7a485dfff3382056e78c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xbeefbabeea323f07c59926295205d3b7a17e8638")]
		public System.Nullable<System.Double> _0xbeefbabeea323f07c59926295205d3b7a17e8638 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xcfc7e96be27d836b034b37132052549611341108")]
		public System.Nullable<System.Double> _0xcfc7e96be27d836b034b37132052549611341108 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c")]
		public System.Nullable<System.Double> _0xe94f1fa4f27d9d288ffea234bb62e1fbc086ca0c { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeb00c80f00ca1585000000b84f00940000ed40e5")]
		public System.Nullable<System.Double> _0xeb00c80f00ca1585000000b84f00940000ed40e5 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xebec795c9c8bbd61ffc14a6662944748f299cacf")]
		public System.Nullable<System.Double> _0xebec795c9c8bbd61ffc14a6662944748f299cacf { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xeee27662c2b8eba3cd936a23f039f3189633e4c8")]
		public System.Nullable<System.Double> _0xeee27662c2b8eba3cd936a23f039f3189633e4c8 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xf828add1619bfb64712654076490b2609ae6d774")]
		public System.Nullable<System.Double> _0xf828add1619bfb64712654076490b2609ae6d774 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="0xffd22b84fb1d46ef74ed6530b2635be61340f347")]
		public System.Nullable<System.Double> _0xffd22b84fb1d46ef74ed6530b2635be61340f347 { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataTransactions
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockHash")]
		public string BlockHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="blockNumber")]
		public System.Nullable<System.Double> BlockNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compressedTx")]
		public string CompressedTx { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public string Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ether")]
		public System.Nullable<System.Double> Ether { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etherGasCost")]
		public System.Nullable<System.Double> EtherGasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="function")]
		public string Function { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gas")]
		public System.Nullable<System.Double> Gas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasCost")]
		public System.Nullable<System.Double> GasCost { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasPrice")]
		public System.Nullable<System.Double> GasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hasToken")]
		public System.Nullable<System.Double> HasToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Double> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxFeePerGas")]
		public System.Nullable<System.Double> MaxFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxPriorityFeePerGas")]
		public System.Nullable<System.Double> MaxPriorityFeePerGas { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public Listtransactionsbyaddress3ReturnDataTransactionsReceipt Receipt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="traces")]
		public string[] Traces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactionIndex")]
		public System.Nullable<System.Double> TransactionIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class Listtransactionsbyaddress3ReturnDataTransactionsReceipt
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractAddress")]
		public string ContractAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveGasPrice")]
		public System.Nullable<System.Double> EffectiveGasPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gasUsed")]
		public System.Nullable<System.Double> GasUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public string[] Logs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettrc10balanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettrc10balanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettrc10balanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public System.Nullable<System.Double> Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public string Tokenid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tronaddress")]
		public string Tronaddress { get; set; }
	}
	
	public class Gettrc20balanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettrc20balanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettrc20balanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimals")]
		public string Decimals { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tronaddress")]
		public string Tronaddress { get; set; }
	}
	
	public class GettronbalanceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GettronbalanceReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GettronbalanceReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public string Balance { get; set; }
	}
	
	public class Getlastblocknumber3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getlastblocknumber3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getlastblocknumber3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blocknumber")]
		public System.Nullable<System.Double> Blocknumber { get; set; }
	}
	
	public class Getblock3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Getblock3ReturnData[] Getblock3ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Getblock3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockID")]
		public string BlockID { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="block_header")]
		public Getblock3ReturnDataBlock_header Block_header { get; set; }
	}
	
	public class Getblock3ReturnDataBlock_header
	{
		
		[System.Runtime.Serialization.DataMember(Name="raw_data")]
		public Getblock3ReturnDataBlock_headerRaw_data Raw_data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="witness_signature")]
		public string Witness_signature { get; set; }
	}
	
	public class Getblock3ReturnDataBlock_headerRaw_data
	{
		
		[System.Runtime.Serialization.DataMember(Name="number")]
		public System.Nullable<System.Double> Number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parentHash")]
		public string ParentHash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="txTrieRoot")]
		public string TxTrieRoot { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="witness_address")]
		public string Witness_address { get; set; }
	}
	
	public class GetchainparametersReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetchainparametersReturnData[] GetchainparametersReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class GetchainparametersReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="chainParameter")]
		public GetchainparametersReturnDataChainParameter[] GetchainparametersReturnDataChainParameter { get; set; }
	}
	
	public class GetchainparametersReturnDataChainParameter
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class Sendtransaction3PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privatekey")]
		public string Privatekey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Sendtransaction3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Sendtransaction3ReturnData[] Sendtransaction3ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Sendtransaction3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class Sendtrc10PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privatekey")]
		public string Privatekey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenId")]
		public System.Nullable<System.Double> TokenId { get; set; }
	}
	
	public class Sendtrc10Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Sendtrc10ReturnData[] Sendtrc10ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Sendtrc10ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class Sendtrc20PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privatekey")]
		public string Privatekey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	public class Sendtrc20Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Sendtrc20ReturnData[] Sendtrc20ReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Sendtrc20ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="txid")]
		public string Txid { get; set; }
	}
	
	public class Gettransaction3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransaction3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransaction3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="raw_data")]
		public Gettransaction3ReturnDataRaw_data Raw_data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="raw_data_hex")]
		public string Raw_data_hex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ret")]
		public Gettransaction3ReturnDataRet[] Gettransaction3ReturnDataRet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="signature")]
		public string[] Signature { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="txID")]
		public string TxID { get; set; }
	}
	
	public class Gettransaction3ReturnDataRaw_data
	{
		
		[System.Runtime.Serialization.DataMember(Name="contract")]
		public Gettransaction3ReturnDataRaw_dataContract[] Gettransaction3ReturnDataRaw_dataContract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiration")]
		public System.Nullable<System.Double> Expiration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ref_block_bytes")]
		public string Ref_block_bytes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ref_block_hash")]
		public string Ref_block_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
	}
	
	public class Gettransaction3ReturnDataRaw_dataContract
	{
		
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Gettransaction3ReturnDataRaw_dataContractParameter Parameter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class Gettransaction3ReturnDataRaw_dataContractParameter
	{
		
		[System.Runtime.Serialization.DataMember(Name="type_url")]
		public string Type_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Gettransaction3ReturnDataRaw_dataContractParameterValue Value { get; set; }
	}
	
	public class Gettransaction3ReturnDataRaw_dataContractParameterValue
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="asset_name")]
		public string Asset_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner_address")]
		public string Owner_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to_address")]
		public string To_address { get; set; }
	}
	
	public class Gettransaction3ReturnDataRet
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractRet")]
		public string ContractRet { get; set; }
	}
	
	public class Gettransactionreceipt3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Gettransactionreceipt3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Gettransactionreceipt3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="raw_data")]
		public Gettransactionreceipt3ReturnDataRaw_data Raw_data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="raw_data_hex")]
		public string Raw_data_hex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ret")]
		public Gettransactionreceipt3ReturnDataRet[] Gettransactionreceipt3ReturnDataRet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="signature")]
		public string[] Signature { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="txID")]
		public string TxID { get; set; }
	}
	
	public class Gettransactionreceipt3ReturnDataRaw_data
	{
		
		[System.Runtime.Serialization.DataMember(Name="contract")]
		public Gettransactionreceipt3ReturnDataRaw_dataContract[] Gettransactionreceipt3ReturnDataRaw_dataContract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiration")]
		public System.Nullable<System.Double> Expiration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ref_block_bytes")]
		public string Ref_block_bytes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ref_block_hash")]
		public string Ref_block_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.Double> Timestamp { get; set; }
	}
	
	public class Gettransactionreceipt3ReturnDataRaw_dataContract
	{
		
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Gettransactionreceipt3ReturnDataRaw_dataContractParameter Parameter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class Gettransactionreceipt3ReturnDataRaw_dataContractParameter
	{
		
		[System.Runtime.Serialization.DataMember(Name="type_url")]
		public string Type_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Gettransactionreceipt3ReturnDataRaw_dataContractParameterValue Value { get; set; }
	}
	
	public class Gettransactionreceipt3ReturnDataRaw_dataContractParameterValue
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="asset_name")]
		public string Asset_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner_address")]
		public string Owner_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to_address")]
		public string To_address { get; set; }
	}
	
	public class Gettransactionreceipt3ReturnDataRet
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractRet")]
		public string ContractRet { get; set; }
	}
	
	public class Listsubscribedaddresses3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Listsubscribedaddresses3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Listsubscribedaddresses3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="ipns")]
		public Listsubscribedaddresses3ReturnDataIpns[] Listsubscribedaddresses3ReturnDataIpns { get; set; }
	}
	
	public class Listsubscribedaddresses3ReturnDataIpns
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public object Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public object To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public object Tokenid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public object Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress3PostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Subscribeaddress3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Subscribeaddress3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Subscribeaddress3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public object Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public object From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenid")]
		public object Tokenid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public object Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Listfailedipns3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="failed_ipns")]
		public Listfailedipns3ReturnFailed_ipns[] Listfailedipns3ReturnFailed_ipns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Listfailedipns3ReturnFailed_ipns
	{
		
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contractaddress")]
		public string Contractaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ethereumaddress")]
		public string Ethereumaddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Resendfailedipn3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Double> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
	}
	
	public class Unsubscribeaddress3Return
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Unsubscribeaddress3ReturnData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ok")]
		public System.Nullable<System.Boolean> Ok { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	public class Unsubscribeaddress3ReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

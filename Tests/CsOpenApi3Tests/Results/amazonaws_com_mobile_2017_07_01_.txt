//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	///  Result structure used in response to a request to create a project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateProjectResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ProjectDetails Details { get; set; }
	}
	
	/// <summary>
	///  Detailed information about an AWS Mobile Hub project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProjectDetails
	{
		
		/// <summary>
		///  Name of the project. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		///  Unique project identifier. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		///  Default region to use for AWS resource creation in the AWS Mobile Hub project. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		///  Synchronization state for a project. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<ProjectDetailsState> State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.DateTimeOffset CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedDate")]
		public System.DateTimeOffset LastUpdatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="consoleUrl")]
		public string ConsoleUrl { get; set; }
		
		/// <summary>
		///  List of AWS resources associated with a project. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public Resource[] Resources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProjectDetailsState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNCING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORTING = 2,
	}
	
	/// <summary>
	///  Information about an instance of an AWS resource associated with a project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Resource
	{
		
		/// <summary>
		///  Simplified name for type of AWS resource (e.g., bucket is an Amazon S3 bucket). 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		///  Name of the AWS resource (e.g., for an Amazon S3 bucket this is the name of the bucket). 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		///  AWS resource name which uniquely identifies the resource in AWS systems. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		///  Identifies which feature in AWS Mobile Hub is associated with this AWS resource. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feature")]
		public string Feature { get; set; }
		
		/// <summary>
		///  Key-value attribute pairs. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public Attributes Attributes { get; set; }
	}
	
	/// <summary>
	///  Key-value attribute pairs. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attributes
	{
	}
	
	/// <summary>
	///  The service has encountered an unexpected error condition which prevents it from servicing the request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalFailureException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  The service is temporarily unavailable. The request should be retried after some time delay. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  Credentials of the caller are insufficient to authorize the request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnauthorizedException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  Too many requests have been received for this AWS account in too short a time. The request should be retried after some time delay. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  The request cannot be processed because some parameter is not valid or the project state prevents the operation from being performed. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  No entity can be found with the specified identifier. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  There are too many AWS Mobile Hub projects in the account or the account has exceeded the maximum number of resources in some AWS service. You should create another sub-account using AWS Organizations or remove some resources and retry your request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  Result structure used in response to request to delete a project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteProjectResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="deletedResources")]
		public Resource[] DeletedResources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="orphanedResources")]
		public Resource[] OrphanedResources { get; set; }
	}
	
	/// <summary>
	///  Result structure contains the details of the bundle. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBundleResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="details")]
		public BundleDetails Details { get; set; }
	}
	
	/// <summary>
	///  The details of the bundle. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleDetails
	{
		
		/// <summary>
		///  Unique bundle identifier. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bundleId")]
		public string BundleId { get; set; }
		
		/// <summary>
		///  Title of the download bundle. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		///  Version of the download bundle. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		///  Description of the download bundle. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		///  Icon for the download bundle. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iconUrl")]
		public string IconUrl { get; set; }
		
		/// <summary>
		///  Developer desktop or mobile app or website platforms. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availablePlatforms")]
		public Platform[] AvailablePlatforms { get; set; }
	}
	
	/// <summary>
	///  Developer desktop or target mobile app or website platform. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Platform
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OSX = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINUX = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SWIFT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANDROID = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JAVASCRIPT = 6,
	}
	
	/// <summary>
	///  Result structure used for requests of project details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeProjectResult
	{
		
		/// <summary>
		///  Detailed information about an AWS Mobile Hub project. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ProjectDetails Details { get; set; }
	}
	
	/// <summary>
	///  Result structure which contains link to download custom-generated SDK and tool packages used to integrate mobile web or app clients with backed AWS resources. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportBundleResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="downloadUrl")]
		public string DownloadUrl { get; set; }
	}
	
	/// <summary>
	///  Result structure used for requests to export project configuration details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportProjectResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="downloadUrl")]
		public string DownloadUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shareUrl")]
		public string ShareUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="snapshotId")]
		public string SnapshotId { get; set; }
	}
	
	/// <summary>
	///  Result structure contains a list of all available bundles with details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListBundlesResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="bundleList")]
		public BundleDetails[] BundleList { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Result structure used for requests to list projects in AWS Mobile Hub. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProjectsResult
	{
		
		/// <summary>
		///  List of projects. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projects")]
		public ProjectSummary[] Projects { get; set; }
		
		/// <summary>
		///  Pagination token. Set to null to start listing records from start. If non-null pagination token is returned in a result, then pass its value in here in another request to list more entries. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Summary information about an AWS Mobile Hub project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProjectSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	/// <summary>
	///  Result structure used for requests to updated project configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateProjectResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ProjectDetails Details { get; set; }
	}
	
	/// <summary>
	///  Account Action is required in order to continue the request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountActionRequiredException
	{
		
		/// <summary>
		///  The Exception Error Message. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  Request structure used to request a project be created. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateProjectRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string Contents { get; set; }
	}
	
	/// <summary>
	///  Request structure used to request a project be deleted. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteProjectRequest
	{
	}
	
	/// <summary>
	///  Request structure to request the details of a specific bundle. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBundleRequest
	{
	}
	
	/// <summary>
	///  Request structure used to request details about a project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeProjectRequest
	{
	}
	
	/// <summary>
	///  Request structure used to request generation of custom SDK and tool packages required to integrate mobile web or app clients with backed AWS resources. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportBundleRequest
	{
	}
	
	/// <summary>
	///  Request structure used in requests to export project configuration details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportProjectRequest
	{
	}
	
	/// <summary>
	///  Request structure to request all available bundles. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListBundlesRequest
	{
	}
	
	/// <summary>
	///  Request structure used to request projects list in AWS Mobile Hub. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProjectsRequest
	{
	}
	
	/// <summary>
	///  Synchronization state for a project. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProjectState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNCING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORTING = 2,
	}
	
	/// <summary>
	///  Request structure used for requests to update project configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateProjectRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string Contents { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an AWS Mobile Hub project.
		/// CreateProject projects
		/// </summary>
		/// <param name="name"> Name of the project. </param>
		/// <param name="region"> Default region where project resources should be created. </param>
		/// <param name="snapshotId"> Unique identifier for an exported snapshot of project configuration. This snapshot identifier is included in the share URL when a project is exported. </param>
		/// <returns>Success</returns>
		public async Task<CreateProjectResult> CreateProjectAsync(string name, string region, string snapshotId, CreateProjectPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects?name=" + (name==null? "" : System.Uri.EscapeDataString(name))+"&region=" + (region==null? "" : System.Uri.EscapeDataString(region))+"&snapshotId=" + (snapshotId==null? "" : System.Uri.EscapeDataString(snapshotId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateProjectResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists projects in AWS Mobile Hub.
		/// ListProjects projects
		/// </summary>
		/// <param name="maxResults"> Maximum number of records to list in a single response. </param>
		/// <param name="nextToken"> Pagination token. Set to null to start listing projects from start. If non-null pagination token is returned in a result, then pass its value in here in another request to list more projects. </param>
		/// <returns>Success</returns>
		public async Task<ListProjectsResult> ListProjectsAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListProjectsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delets a project in AWS Mobile Hub.
		/// DeleteProject projects/{projectId}
		/// </summary>
		/// <param name="projectId"> Unique project identifier. </param>
		/// <returns>Success</returns>
		public async Task<DeleteProjectResult> DeleteProjectAsync(string projectId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects/"+ (projectId==null? "" : System.Uri.EscapeDataString(projectId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteProjectResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the bundle details for the requested bundle id.
		/// DescribeBundle bundles/{bundleId}
		/// </summary>
		/// <param name="bundleId"> Unique bundle identifier. </param>
		/// <returns>Success</returns>
		public async Task<DescribeBundleResult> DescribeBundleAsync(string bundleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bundles/"+ (bundleId==null? "" : System.Uri.EscapeDataString(bundleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeBundleResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates customized software development kit (SDK) and or tool packages used to integrate mobile web or mobile app clients with backend AWS resources.
		/// ExportBundle bundles/{bundleId}
		/// </summary>
		/// <param name="bundleId"> Unique bundle identifier. </param>
		/// <param name="projectId"> Unique project identifier. </param>
		/// <param name="platform"> Developer desktop or target application platform. </param>
		/// <returns>Success</returns>
		public async Task<ExportBundleResult> ExportBundleAsync(string bundleId, string projectId, Platform platform, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bundles/"+ (bundleId==null? "" : System.Uri.EscapeDataString(bundleId))+"&projectId=" + (projectId==null? "" : System.Uri.EscapeDataString(projectId))+"&platform=" + platform;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ExportBundleResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets details about a project in AWS Mobile Hub.
		/// DescribeProject project#projectId
		/// </summary>
		/// <param name="projectId"> Unique project identifier. </param>
		/// <param name="syncFromResources"> If set to true, causes AWS Mobile Hub to synchronize information from other services, e.g., update state of AWS CloudFormation stacks in the AWS Mobile Hub project. </param>
		/// <returns>Success</returns>
		public async Task<DescribeProjectResult> DescribeProjectAsync(string projectId, bool syncFromResources, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "project#projectId?projectId=" + (projectId==null? "" : System.Uri.EscapeDataString(projectId))+"&syncFromResources="+syncFromResources;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeProjectResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Exports project configuration to a snapshot which can be downloaded and shared. Note that mobile app push credentials are encrypted in exported projects, so they can only be shared successfully within the same AWS account.
		/// ExportProject exports/{projectId}
		/// </summary>
		/// <param name="projectId"> Unique project identifier. </param>
		/// <returns>Success</returns>
		public async Task<ExportProjectResult> ExportProjectAsync(string projectId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "exports/"+ (projectId==null? "" : System.Uri.EscapeDataString(projectId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ExportProjectResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all available bundles.
		/// ListBundles bundles
		/// </summary>
		/// <param name="maxResults"> Maximum number of records to list in a single response. </param>
		/// <param name="nextToken"> Pagination token. Set to null to start listing bundles from start. If non-null pagination token is returned in a result, then pass its value in here in another request to list more bundles. </param>
		/// <returns>Success</returns>
		public async Task<ListBundlesResult> ListBundlesAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bundles?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListBundlesResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update an existing project.
		/// UpdateProject update#projectId
		/// </summary>
		/// <param name="projectId"> Unique project identifier. </param>
		/// <returns>Success</returns>
		public async Task<UpdateProjectResult> UpdateProjectAsync(string projectId, UpdateProjectPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "update#projectId?projectId=" + (projectId==null? "" : System.Uri.EscapeDataString(projectId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateProjectResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class CreateProjectPostBody
	{
		
		/// <summary>
		///  Binary file data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string Contents { get; set; }
	}
	
	public class UpdateProjectPostBody
	{
		
		/// <summary>
		///  Binary file data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string Contents { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The result of a <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation. Contains details of accepted inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AcceptInboundCrossClusterSearchConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// Specifies details of an inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InboundCrossClusterSearchConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossClusterSearchConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnectionStatus ConnectionStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DomainInformation
	{
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
	}
	
	/// <summary>
	/// Specifies the coonection status of an inbound cross-cluster search connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InboundCrossClusterSearchConnectionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnectionStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum InboundCrossClusterSearchConnectionStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisabledOperationException
	{
	}
	
	/// <summary>
	/// Specifies a key value pair for a resource tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BaseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InternalException
	{
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>AssociatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails DomainPackageDetails { get; set; }
	}
	
	/// <summary>
	/// Information on a package that is associated with a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DomainPackageDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageStatus DomainPackageStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferencePath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TXT-DICTIONARY")]
		TXTMinusDICTIONARY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum DomainPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATION_FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConflictException
	{
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>AuthorizeVpcEndpointAccess</a></code> operation. Contains the account ID and the type of the account being authorized to access the VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AuthorizeVpcEndpointAccessResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthorizedPrincipal AuthorizedPrincipal { get; set; }
	}
	
	/// <summary>
	/// Information about an account or service that has access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AuthorizedPrincipal
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PrincipalType PrincipalType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Principal { get; set; }
	}
	
	/// <summary>
	/// Specifies the type of AWS account permitted to manage VPC endpoints.: <ul> <li>AWS_ACCOUNT: Indicates that the account is owned by an AWS user.</li> <li>AWS_SERVICE: Indicates the the account is owned by an AWS service.</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PrincipalType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_ACCOUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_SERVICE = 1,
	}
	
	/// <summary>
	/// The result of a <code>CancelElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CancelElasticsearchServiceSoftwareUpdateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
	}
	
	/// <summary>
	/// The current options of an Elasticsearch domain service software options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceSoftwareOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UpdateAvailable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Cancellable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentStatus UpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AutomatedUpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OptionalDeployment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_ELIGIBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELIGIBLE = 4,
	}
	
	/// <summary>
	/// The result of a <code>CreateElasticsearchDomain</code> operation. Contains the status of the newly created Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateElasticsearchDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The current status of an Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ElasticsearchDomainStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointsMap Endpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Processing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UpgradeProcessing { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$|^OS_[0-9]{1,2}\.[0-9]{1,2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$|^OS_[0-9]{1,2}\.[0-9]{1,2}$")]
		public string ElasticsearchVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptionsOutput AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressDetails ChangeProgressDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EndpointsMap
	{
	}
	
	/// <summary>
	/// Specifies the configuration for the domain cluster, such as the type and number of instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ElasticsearchClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESWarmPartitionInstanceType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColdStorageOptions ColdStorageOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ESPartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.medium.elasticsearch")]
		m3_medium_elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.large.elasticsearch")]
		m3_large_elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.xlarge.elasticsearch")]
		m3_xlarge_elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.2xlarge.elasticsearch")]
		m3_2xlarge_elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.large.elasticsearch")]
		m4_large_elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.xlarge.elasticsearch")]
		m4_xlarge_elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.2xlarge.elasticsearch")]
		m4_2xlarge_elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.4xlarge.elasticsearch")]
		m4_4xlarge_elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.10xlarge.elasticsearch")]
		m4_10xlarge_elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.large.elasticsearch")]
		m5_large_elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.xlarge.elasticsearch")]
		m5_xlarge_elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.2xlarge.elasticsearch")]
		m5_2xlarge_elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.4xlarge.elasticsearch")]
		m5_4xlarge_elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.12xlarge.elasticsearch")]
		m5_12xlarge_elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.large.elasticsearch")]
		r5_large_elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.xlarge.elasticsearch")]
		r5_xlarge_elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.2xlarge.elasticsearch")]
		r5_2xlarge_elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.4xlarge.elasticsearch")]
		r5_4xlarge_elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.12xlarge.elasticsearch")]
		r5_12xlarge_elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.large.elasticsearch")]
		c5_large_elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.xlarge.elasticsearch")]
		c5_xlarge_elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.2xlarge.elasticsearch")]
		c5_2xlarge_elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.4xlarge.elasticsearch")]
		c5_4xlarge_elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.9xlarge.elasticsearch")]
		c5_9xlarge_elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.18xlarge.elasticsearch")]
		c5_18xlarge_elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.medium.elasticsearch")]
		ultrawarm1_medium_elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.large.elasticsearch")]
		ultrawarm1_large_elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.micro.elasticsearch")]
		t2_micro_elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.small.elasticsearch")]
		t2_small_elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.medium.elasticsearch")]
		t2_medium_elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.large.elasticsearch")]
		r3_large_elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.xlarge.elasticsearch")]
		r3_xlarge_elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.2xlarge.elasticsearch")]
		r3_2xlarge_elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.4xlarge.elasticsearch")]
		r3_4xlarge_elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.8xlarge.elasticsearch")]
		r3_8xlarge_elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.xlarge.elasticsearch")]
		i2_xlarge_elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.2xlarge.elasticsearch")]
		i2_2xlarge_elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.xlarge.elasticsearch")]
		d2_xlarge_elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.2xlarge.elasticsearch")]
		d2_2xlarge_elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.4xlarge.elasticsearch")]
		d2_4xlarge_elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.8xlarge.elasticsearch")]
		d2_8xlarge_elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.large.elasticsearch")]
		c4_large_elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.xlarge.elasticsearch")]
		c4_xlarge_elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.2xlarge.elasticsearch")]
		c4_2xlarge_elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.4xlarge.elasticsearch")]
		c4_4xlarge_elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.8xlarge.elasticsearch")]
		c4_8xlarge_elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.large.elasticsearch")]
		r4_large_elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.xlarge.elasticsearch")]
		r4_xlarge_elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.2xlarge.elasticsearch")]
		r4_2xlarge_elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.4xlarge.elasticsearch")]
		r4_4xlarge_elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.8xlarge.elasticsearch")]
		r4_8xlarge_elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.16xlarge.elasticsearch")]
		r4_16xlarge_elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.large.elasticsearch")]
		i3_large_elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.xlarge.elasticsearch")]
		i3_xlarge_elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.2xlarge.elasticsearch")]
		i3_2xlarge_elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.4xlarge.elasticsearch")]
		i3_4xlarge_elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.8xlarge.elasticsearch")]
		i3_8xlarge_elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.16xlarge.elasticsearch")]
		i3_16xlarge_elasticsearch = 57,
	}
	
	/// <summary>
	/// Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ZoneAwarenessConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AvailabilityZoneCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ESWarmPartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.medium.elasticsearch")]
		ultrawarm1_medium_elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.large.elasticsearch")]
		ultrawarm1_large_elasticsearch = 1,
	}
	
	/// <summary>
	/// Specifies the configuration for cold storage options such as enabled
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ColdStorageOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
	}
	
	/// <summary>
	/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	/// <summary>
	///  The type of EBS volume, standard, gp2, gp3 or io1. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a>for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum VolumeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		io1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp3 = 3,
	}
	
	/// <summary>
	/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	/// <summary>
	/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VPCDerivedInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Specifies the Encryption At Rest Options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Specifies the node-to-node encryption options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdvancedOptions
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogPublishingOptions
	{
	}
	
	/// <summary>
	/// Options to configure endpoint for the Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointCertificateArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum TLSSecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Policy-Min-TLS-1-0-2019-07")]
		PolicyMinusMinMinusTLSMinus1Minus0Minus2019Minus07 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Policy-Min-TLS-1-2-2019-07")]
		PolicyMinusMinMinusTLSMinus1Minus2Minus2019Minus07 = 1,
	}
	
	/// <summary>
	/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsOutput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AnonymousAuthDisableDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	/// <summary>
	/// Describes the SAML application configured for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SAMLOptionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLIdp Idp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubjectKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RolesKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionTimeoutMinutes { get; set; }
	}
	
	/// <summary>
	/// Specifies the SAML Identity Provider's information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SAMLIdp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetadataContent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
	}
	
	/// <summary>
	/// Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneOptionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Specifies the Auto-Tune state for the Elasticsearch domain. For valid states see the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum AutoTuneState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLE_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_SCHEDULED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_IN_PROGRESS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_COMPLETE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_ERROR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 8,
	}
	
	/// <summary>
	/// Specifies change details of the domain configuration change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ChangeProgressDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Log Publishing option that is set for given domain. <br/>Attributes and their details: <ul> <li>CloudWatchLogsLogGroupArn: ARN of the Cloudwatch log group to which log needs to be published.</li> <li>Enabled: Whether the log publishing for given log type is enabled or not</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogPublishingOption
	{
		
		/// <summary>
		/// ARN of the Cloudwatch log group to which log needs to be published.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogsLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Credentials for the master user: username and password, ARN, or both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MasterUserOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
	}
	
	/// <summary>
	/// Specifies the SAML application configuration for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SAMLOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLIdp Idp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterBackendRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubjectKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RolesKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionTimeoutMinutes { get; set; }
	}
	
	/// <summary>
	/// Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum AutoTuneDesiredState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Specifies Auto-Tune maitenance schedule. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneMaintenanceSchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Duration Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CronExpressionForRecurrence { get; set; }
	}
	
	/// <summary>
	/// Specifies maintenance schedule duration: duration value and duration unit. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Duration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeUnit Unit { get; set; }
	}
	
	/// <summary>
	/// Specifies the unit of a maintenance schedule duration. Valid value is HOUR. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum TimeUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvalidTypeException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceAlreadyExistsException
	{
	}
	
	/// <summary>
	/// The result of a <code><a>CreateOutboundCrossClusterSearchConnection</a></code> request. Contains the details of the newly created cross-cluster search connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateOutboundCrossClusterSearchConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnectionStatus ConnectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossClusterSearchConnectionId { get; set; }
	}
	
	/// <summary>
	/// Specifies the connection status of an outbound cross-cluster search connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OutboundCrossClusterSearchConnectionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnectionStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum OutboundCrossClusterSearchConnectionStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 7,
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>CreatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	/// <summary>
	/// Basic information about a package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PackageDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageStatus PackageStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailablePackageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPYING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>CreateVpcEndpoint</a></code> operation. Contains the configuration and status of the VPC Endpoint being created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateVpcEndpointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpoint VpcEndpoint { get; set; }
	}
	
	/// <summary>
	/// The connection endpoint for connecting to an Amazon OpenSearch Service domain through a proxy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VpcEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointOwner { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo VpcOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
	}
	
	/// <summary>
	/// Specifies the current status of the VPC endpoint: <ul> <li>CREATING: Indicates that the VPC endpoint is currently being created.</li> <li>CREATE_FAILED: Indicates that the VPC endpoint creation failed.</li> <li>ACTIVE: Indicates that the VPC endpoint is currently active.</li> <li>UPDATING: Indicates that the VPC endpoint is currently being updated.</li> <li>UPDATE_FAILED: Indicates that the VPC endpoint update failed.</li> <li>DELETING: Indicates that the VPC endpoint is currently being deleted.</li> <li>DELETE_FAILED: Indicates that the VPC endpoint deletion failed.</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum VpcEndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 6,
	}
	
	/// <summary>
	/// The result of a <code>DeleteElasticsearchDomain</code> request. Contains the status of the pending deletion, or no status if the domain and all of its resources have been deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteElasticsearchDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteInboundCrossClusterSearchConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted outbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteOutboundCrossClusterSearchConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// Specifies details of an outbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OutboundCrossClusterSearchConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossClusterSearchConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnectionStatus ConnectionStatus { get; set; }
	}
	
	/// <summary>
	///  Container for response parameters to <code> <a>DeletePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeletePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>DeleteVpcEndpoint</a></code> operation. Contains the summarized detail of the VPC Endpoint being deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteVpcEndpointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointSummary VpcEndpointSummary { get; set; }
	}
	
	/// <summary>
	/// Summary information for an Amazon OpenSearch Service-managed VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VpcEndpointSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointOwner { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointStatus Status { get; set; }
	}
	
	/// <summary>
	/// The result of <code>DescribeDomainAutoTunes</code> request. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeDomainAutoTunesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTune[] AutoTunes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Specifies Auto-Tune type and Auto-Tune action details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTune
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneType AutoTuneType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDetails AutoTuneDetails { get; set; }
	}
	
	/// <summary>
	/// Specifies Auto-Tune type. Valid value is SCHEDULED_ACTION. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum AutoTuneType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED_ACTION = 0,
	}
	
	/// <summary>
	/// Specifies details of the Auto-Tune action. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneDetails
	{
		
		/// <summary>
		/// Specifies details of the scheduled Auto-Tune action. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAutoTuneDetails ScheduledAutoTuneDetails { get; set; }
	}
	
	/// <summary>
	/// Specifies details of the scheduled Auto-Tune action. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScheduledAutoTuneDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAutoTuneActionType ActionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAutoTuneSeverityType Severity { get; set; }
	}
	
	/// <summary>
	/// Specifies Auto-Tune action type. Valid values are JVM_HEAP_SIZE_TUNING and JVM_YOUNG_GEN_TUNING. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ScheduledAutoTuneActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JVM_HEAP_SIZE_TUNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JVM_YOUNG_GEN_TUNING = 1,
	}
	
	/// <summary>
	/// Specifies Auto-Tune action severity. Valid values are LOW, MEDIUM and HIGH. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ScheduledAutoTuneSeverityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 2,
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomainChangeProgress</code> request. Contains the progress information of the requested domain change. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeDomainChangeProgressResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressStatusDetails ChangeProgressStatus { get; set; }
	}
	
	/// <summary>
	/// The progress details of a specific domain configuration change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ChangeProgressStatusDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OverallChangeStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PendingProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CompletedProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalNumberOfStages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressStage[] ChangeProgressStages { get; set; }
	}
	
	/// <summary>
	/// The overall status value of the domain configuration change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum OverallChangeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// A progress stage details of a specific domain configuration change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ChangeProgressStage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeElasticsearchDomain</code> request. Contains the status of the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchDomainResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeElasticsearchDomainConfig</code> request. Contains the configuration information of the requested domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchDomainConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainConfig DomainConfig { get; set; }
	}
	
	/// <summary>
	/// The configuration of an Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ElasticsearchDomainConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchVersionStatus ElasticsearchVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfigStatus ElasticsearchClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptionsStatus EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccessPoliciesStatus AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptionsStatus SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfoStatus VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptionsStatus CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptionsStatus EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptionsStatus NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptionsStatus AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptionsStatus LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptionsStatus DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsStatus AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptionsStatus AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressDetails ChangeProgressDetails { get; set; }
	}
	
	/// <summary>
	///  Status of the Elasticsearch version options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ElasticsearchVersionStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Provides the current status of the entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OptionStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UpdateVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PendingDeletion { get; set; }
	}
	
	/// <summary>
	/// <p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in-process.</li> <li>Active: The request change is processed and deployed to the Elasticsearch domain.</li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum OptionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequiresIndexDocuments = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 2,
	}
	
	/// <summary>
	///  Specifies the configuration status for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ElasticsearchClusterConfigStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Status of the EBS options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EBSOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured access rules for the domain's document and search endpoints, and the current status of those rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccessPoliciesStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of a daily automated snapshot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SnapshotOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Status of the VPC options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VPCDerivedInfoStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of the Cognito options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CognitoOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Status of the Encryption At Rest options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EncryptionAtRestOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of the node-to-node encryption options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NodeToNodeEncryptionOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// <p> Status of the advanced options for the specified Elasticsearch domain. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdvancedOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured log publishing options for the domain and their current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogPublishingOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured endpoint options for the domain and their current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DomainEndpointOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Specifies the status of advanced security options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdvancedSecurityOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	///  Specifies the status of Auto-Tune options for the specified Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptions Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneStatus Status { get; set; }
	}
	
	/// <summary>
	/// Specifies the Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackOnDisable RollbackOnDisable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
	}
	
	/// <summary>
	/// Specifies the rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK, DEFAULT_ROLLBACK.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum RollbackOnDisable
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_ROLLBACK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT_ROLLBACK = 1,
	}
	
	/// <summary>
	/// Provides the current status of the Auto-Tune options. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UpdateVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PendingDeletion { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeElasticsearchDomains</code> request. Contains the status of the specified domains or all domains owned by the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchDomainsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainStatus[] DomainStatusList { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters received from <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchInstanceTypeLimitsResponse
	{
		
		/// <summary>
		///  Map of Role of the Instance and Limits that are applicable. Role performed by given Instance in Elasticsearch can be one of the following: <ul> <li>data: If the given InstanceType is used as data node</li> <li>master: If the given InstanceType is used as master node</li> <li>ultra_warm: If the given InstanceType is used as warm node</li> </ul> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LimitsByRole LimitsByRole { get; set; }
	}
	
	/// <summary>
	///  Map of Role of the Instance and Limits that are applicable. Role performed by given Instance in Elasticsearch can be one of the following: <ul> <li>data: If the given InstanceType is used as data node</li> <li>master: If the given InstanceType is used as master node</li> <li>ultra_warm: If the given InstanceType is used as warm node</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LimitsByRole
	{
	}
	
	/// <summary>
	/// The result of a <code><a>DescribeInboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeInboundCrossClusterSearchConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection[] CrossClusterSearchConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  A filter used to limit results when describing inbound or outbound cross-cluster search connections. Multiple values can be specified per filter. A cross-cluster search connection must match at least one of the specified values for it to be returned from an operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvalidPaginationTokenException
	{
	}
	
	/// <summary>
	/// The result of a <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOutboundCrossClusterSearchConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCrossClusterSearchConnection[] CrossClusterSearchConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>DescribePackages</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribePackagesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails[] PackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Filter to apply in <code>DescribePackage</code> response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribePackagesFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum DescribePackagesFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageName = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageStatus = 2,
	}
	
	/// <summary>
	/// Container for results from <code>DescribeReservedElasticsearchInstanceOfferings</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeReservedElasticsearchInstanceOfferingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstanceOffering[] ReservedElasticsearchInstanceOfferings { get; set; }
	}
	
	/// <summary>
	/// Details of a reserved Elasticsearch instance offering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReservedElasticsearchInstanceOffering
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType ElasticsearchInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstancePaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ReservedElasticsearchInstancePaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_UPFRONT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_UPFRONT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_UPFRONT = 2,
	}
	
	/// <summary>
	/// Contains the specific price and frequency of a recurring charges for a reserved Elasticsearch instance, or for a reserved Elasticsearch instance offering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecurringCharge
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RecurringChargeAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecurringChargeFrequency { get; set; }
	}
	
	/// <summary>
	/// Container for results from <code>DescribeReservedElasticsearchInstances</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeReservedElasticsearchInstancesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstance[] ReservedElasticsearchInstances { get; set; }
	}
	
	/// <summary>
	/// Details of a reserved Elasticsearch instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReservedElasticsearchInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType ElasticsearchInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ElasticsearchInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedElasticsearchInstancePaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>DescribeVpcEndpoints</a></code> operation. Returns a list containing configuration details and status of the VPC Endpoints as well as a list containing error responses of the endpoints that could not be described
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeVpcEndpointsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpoint[] VpcEndpoints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointError[] VpcEndpointErrors { get; set; }
	}
	
	/// <summary>
	/// Error information when attempting to describe an Amazon OpenSearch Service-managed VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VpcEndpointError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Specifies the error code of the failure encountered while describing the VPC endpoint: <ul> <li>ENDPOINT_NOT_FOUND: Indicates that the requested VPC endpoint does not exist.</li> <li>SERVER_ERROR: Indicates the describe endpoint operation failed due to an internal server error.</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum VpcEndpointErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDPOINT_NOT_FOUND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 1,
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>DissociatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DissociatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails DomainPackageDetails { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetCompatibleElasticsearchVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CompatibleVersionsMap[] CompatibleElasticsearchVersions { get; set; }
	}
	
	/// <summary>
	///  A map from an <code> <a>ElasticsearchVersion</a> </code> to a list of compatible <code> <a>ElasticsearchVersion</a> </code> s to which the domain can be upgraded. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CompatibleVersionsMap
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceVersion { get; set; }
		
		/// <summary>
		/// List of supported elastic search versions. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetVersions { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetPackageVersionHistory</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetPackageVersionHistoryResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageVersionHistory[] PackageVersionHistoryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details of a package version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PackageVersionHistory
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CommitMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetUpgradeHistory</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetUpgradeHistoryResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeHistory[] UpgradeHistories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// History of the last 10 Upgrades and Upgrade Eligibility Checks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpgradeHistory
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStatus UpgradeStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStepItem[] StepsList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum UpgradeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED_WITH_ISSUES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Represents a single step of the Upgrade or Upgrade Eligibility Check workflow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpgradeStepItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStep UpgradeStep { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStatus UpgradeStepStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Issues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ProgressPercent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum UpgradeStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRE_UPGRADE_CHECK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPGRADE = 2,
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>GetUpgradeStatus</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetUpgradeStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStep UpgradeStep { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStatus StepStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeName { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>ListDomainNames</code> operation. Contains the names of all domains owned by this account and their respective engine types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListDomainNamesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInfo[] DomainNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DomainInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EngineType EngineType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum EngineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OpenSearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Elasticsearch = 1,
	}
	
	/// <summary>
	///  Container for response parameters to <code> <a>ListDomainsForPackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListDomainsForPackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails[] DomainPackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters returned by <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListElasticsearchInstanceTypesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType[] ElasticsearchInstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters for response received from <code> <a>ListElasticsearchVersions</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListElasticsearchVersionsResponse
	{
		
		/// <summary>
		/// List of supported elastic search versions. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ElasticsearchVersions { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for response parameters to <code> <a>ListPackagesForDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPackagesForDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails[] DomainPackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>ListTags</code> operation. Contains tags for all requested Elasticsearch domains.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListTagsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>ListVpcEndpointAccess</a></code> operation. Returns a list of accounts id and account type authorized to manage VPC endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListVpcEndpointAccessResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthorizedPrincipal[] AuthorizedPrincipalList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>ListVpcEndpoints</a></code> operation. Returns a list containing summarized details of the VPC endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListVpcEndpointsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointSummary[] VpcEndpointSummaryList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>ListVpcEndpointsForDomain</a></code> operation. Returns a list containing summarized details of the VPC endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListVpcEndpointsForDomainResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointSummary[] VpcEndpointSummaryList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PurchaseReservedElasticsearchInstanceOffering</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PurchaseReservedElasticsearchInstanceOfferingResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservationName { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation. Contains details of rejected inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RejectInboundCrossClusterSearchConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundCrossClusterSearchConnection CrossClusterSearchConnection { get; set; }
	}
	
	/// <summary>
	/// Container for response parameters to the <code><a>RevokeVpcEndpointAccess</a></code> operation. The response body for this operation is empty.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RevokeVpcEndpointAccessResponse
	{
	}
	
	/// <summary>
	/// The result of a <code>StartElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StartElasticsearchServiceSoftwareUpdateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
	}
	
	/// <summary>
	/// The result of an <code>UpdateElasticsearchDomain</code> request. Contains the status of the Elasticsearch domain being updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateElasticsearchDomainConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchDomainConfig DomainConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DryRunResults DryRunResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DryRunResults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>UpdatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration and status of the VPC endpoint being updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateVpcEndpointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpoint VpcEndpoint { get; set; }
	}
	
	/// <summary>
	///  Container for response returned by <code> <a>UpgradeElasticsearchDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpgradeElasticsearchDomainResponse
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
		
		/// <summary>
		/// Specifies change details of the domain configuration change.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressDetails ChangeProgressDetails { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AcceptInboundCrossClusterSearchConnectionRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>AddTags</a></code> operation. Specify the tags that you want to attach to the Elasticsearch domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddTagsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	///  List of limits that are specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> . 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdditionalLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LimitValues { get; set; }
	}
	
	/// <summary>
	/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdvancedSecurityOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsInput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>AssociatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociatePackageRequest
	{
	}
	
	/// <summary>
	/// Container for request parameters to the <code><a>AuthorizeVpcEndpointAccess</a></code> operation. Specifies the account to be permitted to manage VPC endpoints against the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AuthorizeVpcEndpointAccessRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
	}
	
	/// <summary>
	/// Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoTuneOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>CancelElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to cancel a service software update on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CancelElasticsearchServiceSoftwareUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateElasticsearchDomainRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ElasticsearchVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsInput AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptionsInput AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>CreateOutboundCrossClusterSearchConnection</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateOutboundCrossClusterSearchConnectionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation SourceDomainInfo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainInformation DestinationDomainInfo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionAlias { get; set; }
	}
	
	/// <summary>
	/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PackageSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>CreatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreatePackageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageSource PackageSource { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>CreateVpcEndpointRequest</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateVpcEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VpcOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteElasticsearchDomain</a></code> operation. Specifies the name of the Elasticsearch domain that you want to delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteElasticsearchDomainRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteInboundCrossClusterSearchConnectionRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteOutboundCrossClusterSearchConnectionRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>DeletePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeletePackageRequest
	{
	}
	
	/// <summary>
	/// Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteVpcEndpointRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainAutoTunes</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeDomainAutoTunesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainChangeProgress</code> operation. Specifies the domain name and optional change specific identity for which you want progress information. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeDomainChangeProgressRequest
	{
	}
	
	/// <summary>
	///  Container for the parameters to the <code>DescribeElasticsearchDomainConfig</code> operation. Specifies the domain name for which you want configuration information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchDomainConfigRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeElasticsearchDomain</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchDomainRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeElasticsearchDomains</a></code> operation. By default, the API returns the status of all Elasticsearch domains.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchDomainsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainNames { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters to <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeElasticsearchInstanceTypeLimitsRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeInboundCrossClusterSearchConnections</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeInboundCrossClusterSearchConnectionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOutboundCrossClusterSearchConnectionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>DescribePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribePackagesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for parameters to <code>DescribeReservedElasticsearchInstanceOfferings</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeReservedElasticsearchInstanceOfferingsRequest
	{
	}
	
	/// <summary>
	/// Container for parameters to <code>DescribeReservedElasticsearchInstances</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeReservedElasticsearchInstancesRequest
	{
	}
	
	/// <summary>
	/// Container for request parameters to the <code><a>DescribeVpcEndpoints</a></code> operation. Specifies the list of VPC endpoints to be described.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeVpcEndpointsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcEndpointIds { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>DissociatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DissociatePackageRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetCompatibleElasticsearchVersionsRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>GetPackageVersionHistory</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetPackageVersionHistoryRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>GetUpgradeHistory</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetUpgradeHistoryRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>GetUpgradeStatus</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetUpgradeStatusRequest
	{
	}
	
	/// <summary>
	///  InstanceCountLimits represents the limits on number of instances that be created in Amazon Elasticsearch for given InstanceType. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InstanceCountLimits
	{
		
		/// <summary>
		///  Minimum number of Instances that can be instantiated for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumInstanceCount { get; set; }
		
		/// <summary>
		///  Maximum number of Instances that can be instantiated for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumInstanceCount { get; set; }
	}
	
	/// <summary>
	/// InstanceLimits represents the list of instance related attributes that are available for given InstanceType. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InstanceLimits
	{
		
		/// <summary>
		///  InstanceCountLimits represents the limits on number of instances that be created in Amazon Elasticsearch for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InstanceCountLimits InstanceCountLimits { get; set; }
	}
	
	/// <summary>
	/// StorageTypes represents the list of storage related types and their attributes that are available for given InstanceType. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StorageType
	{
		
		/// <summary>
		///  Type of the storage. List of available storage options: <ol> <li>instance</li> Inbuilt storage available for the given Instance <li>ebs</li> Elastic block storage that would be attached to the given Instance </ol> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StorageTypeName { get; set; }
		
		/// <summary>
		///  SubType of the given storage type. List of available sub-storage options: For "instance" storageType we wont have any storageSubType, in case of "ebs" storageType we will have following valid storageSubTypes <ol> <li>standard</li> <li>gp2</li> <li>gp3</li> <li>io1</li> </ol> Refer <code><a>VolumeType</a></code> for more information regarding above EBS storage options. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StorageSubTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StorageTypeLimit[] StorageTypeLimits { get; set; }
	}
	
	/// <summary>
	/// Limits that are applicable for given storage type. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StorageTypeLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LimitValues { get; set; }
	}
	
	/// <summary>
	///  Limits for given InstanceType and for each of it's role. <br/> Limits contains following <code> <a>StorageTypes,</a> </code> <code> <a>InstanceLimits</a> </code> and <code> <a>AdditionalLimits</a> </code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Limits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StorageType[] StorageTypes { get; set; }
		
		/// <summary>
		/// InstanceLimits represents the list of instance related attributes that are available for given InstanceType. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InstanceLimits InstanceLimits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalLimit[] AdditionalLimits { get; set; }
	}
	
	/// <summary>
	///  Container for the parameters to the <code><a>ListDomainNames</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListDomainNamesRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>ListDomainsForPackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListDomainsForPackageRequest
	{
	}
	
	/// <summary>
	///  Container for the parameters to the <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListElasticsearchInstanceTypesRequest
	{
	}
	
	/// <summary>
	/// <p> Container for the parameters to the <code> <a>ListElasticsearchVersions</a> </code> operation. <p> Use <code> <a>MaxResults</a> </code> to control the maximum number of results to retrieve in a single call. </p> <p> Use <code> <a>NextToken</a> </code> in response to retrieve more results. If the received response does not contain a NextToken, then there are no more results to retrieve. </p> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListElasticsearchVersionsRequest
	{
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>ListPackagesForDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPackagesForDomainRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>ListTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view are attached.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListTagsRequest
	{
	}
	
	/// <summary>
	/// Retrieves information about each principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListVpcEndpointAccessRequest
	{
	}
	
	/// <summary>
	/// Container for request parameters to the <code><a>ListVpcEndpointsForDomain</a></code> operation. Specifies the domain whose VPC endpoints will be listed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListVpcEndpointsForDomainRequest
	{
	}
	
	/// <summary>
	/// Container for request parameters to the <code><a>ListVpcEndpoints</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListVpcEndpointsRequest
	{
	}
	
	/// <summary>
	/// Type of Log File, it can be one of the following: <ul> <li>INDEX_SLOW_LOGS: Index slow logs contain insert requests that took more time than configured index query log threshold to execute.</li> <li>SEARCH_SLOW_LOGS: Search slow logs contain search queries that took more time than configured search query log threshold to execute.</li> <li>ES_APPLICATION_LOGS: Elasticsearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting.</li> <li>AUDIT_LOGS: Audit logs contain records of user requests for access from the domain.</li> </ul> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEX_SLOW_LOGS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_SLOW_LOGS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ES_APPLICATION_LOGS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUDIT_LOGS = 3,
	}
	
	/// <summary>
	/// Container for parameters to <code>PurchaseReservedElasticsearchInstanceOffering</code>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PurchaseReservedElasticsearchInstanceOfferingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RejectInboundCrossClusterSearchConnectionRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>RemoveTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain from which you want to remove the specified <code>TagKey</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RemoveTagsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	/// <summary>
	/// Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RevokeVpcEndpointAccessRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>StartElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to schedule a service software update on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StartElasticsearchServiceSoftwareUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>UpdateElasticsearchDomain</a></code> operation. Specifies the type and number of instances in the domain cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateElasticsearchDomainConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsInput AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptions AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DryRun { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>UpdatePackage</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdatePackageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		/// <summary>
		/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageSource PackageSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CommitMessage { get; set; }
	}
	
	/// <summary>
	/// Modifies an Amazon OpenSearch Service-managed interface VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateVpcEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VpcOptions { get; set; }
	}
	
	/// <summary>
	///  Container for request parameters to <code> <a>UpgradeElasticsearchDomain</a> </code> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpgradeElasticsearchDomainRequest
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Allows the destination domain owner to accept an inbound cross-cluster search connection request.
		/// AcceptInboundCrossClusterSearchConnection 2015-01-01/es/ccs/inboundConnection/{ConnectionId}/accept
		/// </summary>
		/// <param name="ConnectionId">The id of the inbound connection that you want to accept.</param>
		/// <returns>Success</returns>
		public async Task<AcceptInboundCrossClusterSearchConnectionResponse> AcceptInboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/inboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId))+"/accept";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AcceptInboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Attaches tags to an existing Elasticsearch domain. Tags are a set of case-sensitive key value pairs. An Elasticsearch domain may have up to 10 tags. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-awsresorcetagging" target="_blank"> Tagging Amazon Elasticsearch Service Domains for more information.</a>
		/// AddTags 2015-01-01/tags
		/// </summary>
		/// <returns>Success</returns>
		public async Task AddTagsAsync(AddTagsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/tags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Associates a package with an Amazon ES domain.
		/// AssociatePackage 2015-01-01/packages/associate/{PackageID}/{DomainName}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.</param>
		/// <param name="DomainName">Name of the domain that you want to associate the package with.</param>
		/// <returns>Success</returns>
		public async Task<AssociatePackageResponse> AssociatePackageAsync(string PackageID, string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/associate/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AssociatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
		/// AuthorizeVpcEndpointAccess 2015-01-01/es/domain/{DomainName}/authorizeVpcEndpointAccess
		/// </summary>
		/// <param name="DomainName">The name of the OpenSearch Service domain to provide access to.</param>
		/// <returns>Success</returns>
		public async Task<AuthorizeVpcEndpointAccessResponse> AuthorizeVpcEndpointAccessAsync(string DomainName, AuthorizeVpcEndpointAccessPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/authorizeVpcEndpointAccess";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AuthorizeVpcEndpointAccessResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancels a scheduled service software update for an Amazon ES domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the <code>UpdateStatus</code> is in the <code>PENDING_UPDATE</code> state.
		/// CancelElasticsearchServiceSoftwareUpdate 2015-01-01/es/serviceSoftwareUpdate/cancel
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelElasticsearchServiceSoftwareUpdateResponse> CancelElasticsearchServiceSoftwareUpdateAsync(CancelElasticsearchServiceSoftwareUpdatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/serviceSoftwareUpdate/cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CancelElasticsearchServiceSoftwareUpdateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new Elasticsearch domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.
		/// CreateElasticsearchDomain 2015-01-01/es/domain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateElasticsearchDomainResponse> CreateElasticsearchDomainAsync(CreateElasticsearchDomainPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new cross-cluster search connection from a source domain to a destination domain.
		/// CreateOutboundCrossClusterSearchConnection 2015-01-01/es/ccs/outboundConnection
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateOutboundCrossClusterSearchConnectionResponse> CreateOutboundCrossClusterSearchConnectionAsync(CreateOutboundCrossClusterSearchConnectionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/outboundConnection";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateOutboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Create a package for use with Amazon ES domains.
		/// CreatePackage 2015-01-01/packages
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePackageResponse> CreatePackageAsync(CreatePackagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon OpenSearch Service-managed VPC endpoint.
		/// CreateVpcEndpoint 2015-01-01/es/vpcEndpoints
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateVpcEndpointResponse> CreateVpcEndpointAsync(CreateVpcEndpointPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/vpcEndpoints";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateVpcEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current account and Region.
		/// ListVpcEndpoints 2015-01-01/es/vpcEndpoints
		/// </summary>
		/// <param name="nextToken">Identifier to allow retrieval of paginated results.</param>
		/// <returns>Success</returns>
		public async Task<ListVpcEndpointsResponse> ListVpcEndpointsAsync(string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/vpcEndpoints?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListVpcEndpointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Permanently deletes the specified Elasticsearch domain and all of its data. Once a domain is deleted, it cannot be recovered.
		/// DeleteElasticsearchDomain 2015-01-01/es/domain/{DomainName}
		/// </summary>
		/// <param name="DomainName">The name of the Elasticsearch domain that you want to permanently delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteElasticsearchDomainResponse> DeleteElasticsearchDomainAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns domain configuration information about the specified Elasticsearch domain, including the domain ID, domain endpoint, and domain ARN.
		/// DescribeElasticsearchDomain 2015-01-01/es/domain/{DomainName}
		/// </summary>
		/// <param name="DomainName">The name of the Elasticsearch domain for which you want information.</param>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchDomainResponse> DescribeElasticsearchDomainAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the service-linked role that Elasticsearch Service uses to manage and maintain VPC domains. Role deletion will fail if any existing VPC domains use the role. You must delete any such Elasticsearch domains before deleting the role. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-enabling-slr" target="_blank">Deleting Elasticsearch Service Role</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>.
		/// DeleteElasticsearchServiceRole 2015-01-01/es/role
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteElasticsearchServiceRoleAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/role";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows the destination domain owner to delete an existing inbound cross-cluster search connection.
		/// DeleteInboundCrossClusterSearchConnection 2015-01-01/es/ccs/inboundConnection/{ConnectionId}
		/// </summary>
		/// <param name="ConnectionId">The id of the inbound connection that you want to permanently delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteInboundCrossClusterSearchConnectionResponse> DeleteInboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/inboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteInboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows the source domain owner to delete an existing outbound cross-cluster search connection.
		/// DeleteOutboundCrossClusterSearchConnection 2015-01-01/es/ccs/outboundConnection/{ConnectionId}
		/// </summary>
		/// <param name="ConnectionId">The id of the outbound connection that you want to permanently delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteOutboundCrossClusterSearchConnectionResponse> DeleteOutboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/outboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteOutboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete the package.
		/// DeletePackage 2015-01-01/packages/{PackageID}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package that you want to delete. Use <code>DescribePackages</code> to find this value.</param>
		/// <returns>Success</returns>
		public async Task<DeletePackageResponse> DeletePackageAsync(string PackageID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeletePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.
		/// DeleteVpcEndpoint 2015-01-01/es/vpcEndpoints/{VpcEndpointId}
		/// </summary>
		/// <param name="VpcEndpointId">The unique identifier of the endpoint to be deleted.</param>
		/// <returns>Success</returns>
		public async Task<DeleteVpcEndpointResponse> DeleteVpcEndpointAsync(string VpcEndpointId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/vpcEndpoints/"+ (VpcEndpointId==null? "" : System.Uri.EscapeDataString(VpcEndpointId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteVpcEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides scheduled Auto-Tune action details for the Elasticsearch domain, such as Auto-Tune action type, description, severity, and scheduled date.
		/// DescribeDomainAutoTunes 2015-01-01/es/domain/{DomainName}/autoTunes
		/// </summary>
		/// <param name="DomainName">Specifies the domain name for which you want Auto-Tune action details.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainAutoTunesResponse> DescribeDomainAutoTunesAsync(string DomainName, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/autoTunes&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeDomainAutoTunesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about the current blue/green deployment happening on a domain, including a change ID, status, and progress stages.
		/// DescribeDomainChangeProgress 2015-01-01/es/domain/{DomainName}/progress
		/// </summary>
		/// <param name="DomainName">The domain you want to get the progress information about.</param>
		/// <param name="changeid">The specific change ID for which you want to get progress information. This is an optional parameter. If omitted, the service returns information about the most recent configuration change. </param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainChangeProgressResponse> DescribeDomainChangeProgressAsync(string DomainName, string changeid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/progress&changeid=" + (changeid==null? "" : System.Uri.EscapeDataString(changeid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeDomainChangeProgressResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides cluster configuration information about the specified Elasticsearch domain, such as the state, creation date, update version, and update date for cluster options.
		/// DescribeElasticsearchDomainConfig 2015-01-01/es/domain/{DomainName}/config
		/// </summary>
		/// <param name="DomainName">The Elasticsearch domain that you want to get information about.</param>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchDomainConfigResponse> DescribeElasticsearchDomainConfigAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeElasticsearchDomainConfigResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the cluster configuration of the specified Elasticsearch domain, setting as setting the instance type and the number of instances.
		/// UpdateElasticsearchDomainConfig 2015-01-01/es/domain/{DomainName}/config
		/// </summary>
		/// <param name="DomainName">The name of the Elasticsearch domain that you are updating. </param>
		/// <returns>Success</returns>
		public async Task<UpdateElasticsearchDomainConfigResponse> UpdateElasticsearchDomainConfigAsync(string DomainName, UpdateElasticsearchDomainConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateElasticsearchDomainConfigResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns domain configuration information about the specified Elasticsearch domains, including the domain ID, domain endpoint, and domain ARN.
		/// DescribeElasticsearchDomains 2015-01-01/es/domain-info
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchDomainsResponse> DescribeElasticsearchDomainsAsync(DescribeElasticsearchDomainsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain-info";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeElasticsearchDomainsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describe Elasticsearch Limits for a given InstanceType and ElasticsearchVersion. When modifying existing Domain, specify the <code> <a>DomainName</a> </code> to know what Limits are supported for modifying.
		/// DescribeElasticsearchInstanceTypeLimits 2015-01-01/es/instanceTypeLimits/{ElasticsearchVersion}/{InstanceType}
		/// </summary>
		/// <param name="domainName"> DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for Elasticsearch <code> <a>Limits</a> </code> for existing domain. </param>
		/// <param name="InstanceType"> The instance type for an Elasticsearch cluster for which Elasticsearch <code> <a>Limits</a> </code> are needed. </param>
		/// <param name="ElasticsearchVersion"> Version of Elasticsearch for which <code> <a>Limits</a> </code> are needed. </param>
		/// <returns>Success</returns>
		public async Task<DescribeElasticsearchInstanceTypeLimitsResponse> DescribeElasticsearchInstanceTypeLimitsAsync(string domainName, DescribeElasticsearchInstanceTypeLimitsInstanceType InstanceType, string ElasticsearchVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/instanceTypeLimits/"+ (ElasticsearchVersion==null? "" : System.Uri.EscapeDataString(ElasticsearchVersion))+"/"+InstanceType+"?domainName=" + (domainName==null? "" : System.Uri.EscapeDataString(domainName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeElasticsearchInstanceTypeLimitsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the inbound cross-cluster search connections for a destination domain.
		/// DescribeInboundCrossClusterSearchConnections 2015-01-01/es/ccs/inboundConnection/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeInboundCrossClusterSearchConnectionsResponse> DescribeInboundCrossClusterSearchConnectionsAsync(string MaxResults, string NextToken, DescribeInboundCrossClusterSearchConnectionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/inboundConnection/search?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeInboundCrossClusterSearchConnectionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all the outbound cross-cluster search connections for a source domain.
		/// DescribeOutboundCrossClusterSearchConnections 2015-01-01/es/ccs/outboundConnection/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeOutboundCrossClusterSearchConnectionsResponse> DescribeOutboundCrossClusterSearchConnectionsAsync(string MaxResults, string NextToken, DescribeOutboundCrossClusterSearchConnectionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/outboundConnection/search?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeOutboundCrossClusterSearchConnectionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes all packages available to Amazon ES. Includes options for filtering, limiting the number of results, and pagination.
		/// DescribePackages 2015-01-01/packages/describe
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribePackagesResponse> DescribePackagesAsync(string MaxResults, string NextToken, DescribePackagesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/describe?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribePackagesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists available reserved Elasticsearch instance offerings.
		/// DescribeReservedElasticsearchInstanceOfferings 2015-01-01/es/reservedInstanceOfferings
		/// </summary>
		/// <param name="offeringId">The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</param>
		/// <param name="maxResults">Set this value to limit the number of results returned. If not specified, defaults to 100.</param>
		/// <param name="nextToken">NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeReservedElasticsearchInstanceOfferingsResponse> DescribeReservedElasticsearchInstanceOfferingsAsync(string offeringId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/reservedInstanceOfferings?offeringId=" + (offeringId==null? "" : System.Uri.EscapeDataString(offeringId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeReservedElasticsearchInstanceOfferingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about reserved Elasticsearch instances for this account.
		/// DescribeReservedElasticsearchInstances 2015-01-01/es/reservedInstances
		/// </summary>
		/// <param name="reservationId">The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved Elasticsearch instance ID.</param>
		/// <param name="maxResults">Set this value to limit the number of results returned. If not specified, defaults to 100.</param>
		/// <param name="nextToken">NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeReservedElasticsearchInstancesResponse> DescribeReservedElasticsearchInstancesAsync(string reservationId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/reservedInstances?reservationId=" + (reservationId==null? "" : System.Uri.EscapeDataString(reservationId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeReservedElasticsearchInstancesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes one or more Amazon OpenSearch Service-managed VPC endpoints.
		/// DescribeVpcEndpoints 2015-01-01/es/vpcEndpoints/describe
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeVpcEndpointsResponse> DescribeVpcEndpointsAsync(DescribeVpcEndpointsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/vpcEndpoints/describe";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeVpcEndpointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Dissociates a package from the Amazon ES domain.
		/// DissociatePackage 2015-01-01/packages/dissociate/{PackageID}/{DomainName}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.</param>
		/// <param name="DomainName">Name of the domain that you want to associate the package with.</param>
		/// <returns>Success</returns>
		public async Task<DissociatePackageResponse> DissociatePackageAsync(string PackageID, string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/dissociate/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DissociatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of upgrade compatible Elastisearch versions. You can optionally pass a <code> <a>DomainName</a> </code> to get all upgrade compatible Elasticsearch versions for that specific domain.
		/// GetCompatibleElasticsearchVersions 2015-01-01/es/compatibleVersions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetCompatibleElasticsearchVersionsResponse> GetCompatibleElasticsearchVersionsAsync(string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/compatibleVersions?domainName=" + (domainName==null? "" : System.Uri.EscapeDataString(domainName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetCompatibleElasticsearchVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of versions of the package, along with their creation time and commit message.
		/// GetPackageVersionHistory 2015-01-01/packages/{PackageID}/history
		/// </summary>
		/// <param name="PackageID">Returns an audit history of versions of the package.</param>
		/// <param name="maxResults">Limits results to a maximum number of versions.</param>
		/// <param name="nextToken">Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetPackageVersionHistoryResponse> GetPackageVersionHistoryAsync(string PackageID, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/history&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetPackageVersionHistoryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the complete history of the last 10 upgrades that were performed on the domain.
		/// GetUpgradeHistory 2015-01-01/es/upgradeDomain/{DomainName}/history
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetUpgradeHistoryResponse> GetUpgradeHistoryAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/upgradeDomain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/history&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetUpgradeHistoryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the latest status of the last upgrade or upgrade eligibility check that was performed on the domain.
		/// GetUpgradeStatus 2015-01-01/es/upgradeDomain/{DomainName}/status
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetUpgradeStatusResponse> GetUpgradeStatusAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/upgradeDomain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/status";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetUpgradeStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the name of all Elasticsearch domains owned by the current user's account.
		/// ListDomainNames 2015-01-01/domain
		/// </summary>
		/// <param name="engineType"> Optional parameter to filter the output by domain engine type. Acceptable values are 'Elasticsearch' and 'OpenSearch'. </param>
		/// <returns>Success</returns>
		public async Task<ListDomainNamesResponse> ListDomainNamesAsync(EngineType engineType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/domain?engineType=" + engineType;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListDomainNamesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Amazon ES domains associated with the package.
		/// ListDomainsForPackage 2015-01-01/packages/{PackageID}/domains
		/// </summary>
		/// <param name="PackageID">The package for which to list domains.</param>
		/// <param name="maxResults">Limits results to a maximum number of domains.</param>
		/// <param name="nextToken">Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDomainsForPackageResponse> ListDomainsForPackageAsync(string PackageID, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/domains&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListDomainsForPackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all Elasticsearch instance types that are supported for given ElasticsearchVersion
		/// ListElasticsearchInstanceTypes 2015-01-01/es/instanceTypes/{ElasticsearchVersion}
		/// </summary>
		/// <param name="ElasticsearchVersion">Version of Elasticsearch for which list of supported elasticsearch instance types are needed. </param>
		/// <param name="domainName">DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for list of available Elasticsearch instance types when modifying existing domain. </param>
		/// <param name="maxResults"> Set this value to limit the number of results returned. Value provided must be greater than 30 else it wont be honored. </param>
		/// <param name="nextToken">NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination. </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListElasticsearchInstanceTypesResponse> ListElasticsearchInstanceTypesAsync(string ElasticsearchVersion, string domainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/instanceTypes/"+ (ElasticsearchVersion==null? "" : System.Uri.EscapeDataString(ElasticsearchVersion))+"&domainName=" + (domainName==null? "" : System.Uri.EscapeDataString(domainName))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListElasticsearchInstanceTypesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all supported Elasticsearch versions
		/// ListElasticsearchVersions 2015-01-01/es/versions
		/// </summary>
		/// <param name="maxResults"> Set this value to limit the number of results returned. Value provided must be greater than 10 else it wont be honored. </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListElasticsearchVersionsResponse> ListElasticsearchVersionsAsync(int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/versions?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListElasticsearchVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all packages associated with the Amazon ES domain.
		/// ListPackagesForDomain 2015-01-01/domain/{DomainName}/packages
		/// </summary>
		/// <param name="DomainName">The name of the domain for which you want to list associated packages.</param>
		/// <param name="maxResults">Limits results to a maximum number of packages.</param>
		/// <param name="nextToken">Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPackagesForDomainResponse> ListPackagesForDomainAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/packages&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListPackagesForDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns all tags for the given Elasticsearch domain.
		/// ListTags 2015-01-01/tags/#arn
		/// </summary>
		/// <param name="arn"> Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsResponse> ListTagsAsync(string arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/tags/#arn?arn=" + (arn==null? "" : System.Uri.EscapeDataString(arn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about each principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
		/// ListVpcEndpointAccess 2015-01-01/es/domain/{DomainName}/listVpcEndpointAccess
		/// </summary>
		/// <param name="DomainName">The name of the OpenSearch Service domain to retrieve access information for.</param>
		/// <param name="nextToken">Provides an identifier to allow retrieval of paginated results.</param>
		/// <returns>Success</returns>
		public async Task<ListVpcEndpointAccessResponse> ListVpcEndpointAccessAsync(string DomainName, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/listVpcEndpointAccess&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListVpcEndpointAccessResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain.
		/// ListVpcEndpointsForDomain 2015-01-01/es/domain/{DomainName}/vpcEndpoints
		/// </summary>
		/// <param name="DomainName">Name of the ElasticSearch domain whose VPC endpoints are to be listed.</param>
		/// <param name="nextToken">Provides an identifier to allow retrieval of paginated results.</param>
		/// <returns>Success</returns>
		public async Task<ListVpcEndpointsForDomainResponse> ListVpcEndpointsForDomainAsync(string DomainName, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/vpcEndpoints&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListVpcEndpointsForDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows you to purchase reserved Elasticsearch instances.
		/// PurchaseReservedElasticsearchInstanceOffering 2015-01-01/es/purchaseReservedInstanceOffering
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PurchaseReservedElasticsearchInstanceOfferingResponse> PurchaseReservedElasticsearchInstanceOfferingAsync(PurchaseReservedElasticsearchInstanceOfferingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/purchaseReservedInstanceOffering";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PurchaseReservedElasticsearchInstanceOfferingResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Allows the destination domain owner to reject an inbound cross-cluster search connection request.
		/// RejectInboundCrossClusterSearchConnection 2015-01-01/es/ccs/inboundConnection/{ConnectionId}/reject
		/// </summary>
		/// <param name="ConnectionId">The id of the inbound connection that you want to reject.</param>
		/// <returns>Success</returns>
		public async Task<RejectInboundCrossClusterSearchConnectionResponse> RejectInboundCrossClusterSearchConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/ccs/inboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId))+"/reject";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<RejectInboundCrossClusterSearchConnectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the specified set of tags from the specified Elasticsearch domain.
		/// RemoveTags 2015-01-01/tags-removal
		/// </summary>
		/// <returns>Success</returns>
		public async Task RemoveTagsAsync(RemoveTagsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/tags-removal";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint.
		/// RevokeVpcEndpointAccess 2015-01-01/es/domain/{DomainName}/revokeVpcEndpointAccess
		/// </summary>
		/// <param name="DomainName">The name of the OpenSearch Service domain.</param>
		/// <returns>Success</returns>
		public async Task<RevokeVpcEndpointAccessResponse> RevokeVpcEndpointAccessAsync(string DomainName, RevokeVpcEndpointAccessPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/revokeVpcEndpointAccess";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<RevokeVpcEndpointAccessResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Schedules a service software update for an Amazon ES domain.
		/// StartElasticsearchServiceSoftwareUpdate 2015-01-01/es/serviceSoftwareUpdate/start
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartElasticsearchServiceSoftwareUpdateResponse> StartElasticsearchServiceSoftwareUpdateAsync(StartElasticsearchServiceSoftwareUpdatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/serviceSoftwareUpdate/start";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<StartElasticsearchServiceSoftwareUpdateResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a package for use with Amazon ES domains.
		/// UpdatePackage 2015-01-01/packages/update
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdatePackageResponse> UpdatePackageAsync(UpdatePackagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/packages/update";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdatePackageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Modifies an Amazon OpenSearch Service-managed interface VPC endpoint.
		/// UpdateVpcEndpoint 2015-01-01/es/vpcEndpoints/update
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateVpcEndpointResponse> UpdateVpcEndpointAsync(UpdateVpcEndpointPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/vpcEndpoints/update";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateVpcEndpointResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Allows you to either upgrade your domain or perform an Upgrade eligibility check to a compatible Elasticsearch version.
		/// UpgradeElasticsearchDomain 2015-01-01/es/upgradeDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpgradeElasticsearchDomainResponse> UpgradeElasticsearchDomainAsync(UpgradeElasticsearchDomainPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-01-01/es/upgradeDomain";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpgradeElasticsearchDomainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class AddTagsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	public class AuthorizeVpcEndpointAccessPostBody
	{
		
		/// <summary>
		/// The account ID to grant access to.
		/// Required
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string Account { get; set; }
	}
	
	public class CancelElasticsearchServiceSoftwareUpdatePostBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// String of format X.Y to specify version for the Elasticsearch domain eg. "1.5" or "2.3". For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.
		/// Pattern: ^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$|^OS_[0-9]{1,2}\.[0-9]{1,2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$|^OS_[0-9]{1,2}\.[0-9]{1,2}$")]
		public string ElasticsearchVersion { get; set; }
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyEBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodySnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyVPCOptions VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyCognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// Specifies the Encryption At Rest Options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyEncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Specifies the node-to-node encryption options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyNodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AdvancedOptions { get; set; }
		
		/// <summary>
		/// Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, LogPublishingOption> LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyDomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyAdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
		
		/// <summary>
		/// Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateElasticsearchDomainPostBodyAutoTuneOptions AutoTuneOptions { get; set; }
		
		/// <summary>
		/// A list of <code>Tag</code> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyElasticsearchClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESWarmPartitionInstanceType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColdStorageOptions ColdStorageOptions { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyEBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodySnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyVPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyCognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyEncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyNodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyDomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointCertificateArn { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyAdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsInput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	public class CreateElasticsearchDomainPostBodyAutoTuneOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
	}
	
	public class CreateOutboundCrossClusterSearchConnectionPostBody
	{
		
		/// <summary>
		/// Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateOutboundCrossClusterSearchConnectionPostBodySourceDomainInfo SourceDomainInfo { get; set; }
		
		/// <summary>
		/// Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateOutboundCrossClusterSearchConnectionPostBodyDestinationDomainInfo DestinationDomainInfo { get; set; }
		
		/// <summary>
		/// Specifies the connection alias that will be used by the customer for this connection.
		/// Required
		/// Max length: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public string ConnectionAlias { get; set; }
	}
	
	public class CreateOutboundCrossClusterSearchConnectionPostBodySourceDomainInfo
	{
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
	}
	
	public class CreateOutboundCrossClusterSearchConnectionPostBodyDestinationDomainInfo
	{
		
		/// <summary>
		/// Max length: 12
		/// Min length: 12
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
	}
	
	public class CreatePackagePostBody
	{
		
		/// <summary>
		/// Unique identifier for the package.
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Type of package. Currently supports only TXT-DICTIONARY.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePackagePostBodyPackageType PackageType { get; set; }
		
		/// <summary>
		/// Description of the package.
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePackagePostBodyPackageSource PackageSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum CreatePackagePostBodyPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TXT-DICTIONARY")]
		TXTMinusDICTIONARY = 0,
	}
	
	public class CreatePackagePostBodyPackageSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	public class CreateVpcEndpointPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the domain to grant access to.
		/// Required
		/// Max length: 512
		/// Min length: 1
		/// Pattern: arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+")]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateVpcEndpointPostBodyVpcOptions VpcOptions { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier to ensure idempotency of the request.
		/// Max length: 64
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
	}
	
	public class CreateVpcEndpointPostBodyVpcOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBody
	{
		
		/// <summary>
		/// Specifies the configuration for the domain cluster, such as the type and number of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyElasticsearchClusterConfig ElasticsearchClusterConfig { get; set; }
		
		/// <summary>
		/// Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyEBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodySnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyVPCOptions VPCOptions { get; set; }
		
		/// <summary>
		/// Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyCognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// <p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AdvancedOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, LogPublishingOption> LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure endpoint for the Elasticsearch domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyDomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyAdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
		
		/// <summary>
		/// Specifies the node-to-node encryption options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyNodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// Specifies the Encryption At Rest Options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyEncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Specifies the Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateElasticsearchDomainConfigPostBodyAutoTuneOptions AutoTuneOptions { get; set; }
		
		/// <summary>
		///  This flag, when set to True, specifies whether the <code>UpdateElasticsearchDomain</code> request should return the results of validation checks without actually applying the change. This flag, when set to True, specifies the deployment mechanism through which the update shall be applied on the domain. This will not actually perform the Update. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DryRun { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyElasticsearchClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESPartitionInstanceType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESWarmPartitionInstanceType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColdStorageOptions ColdStorageOptions { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyEBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodySnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyVPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyCognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyDomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointCertificateArn { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyAdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsInput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyNodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyEncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	public class UpdateElasticsearchDomainConfigPostBodyAutoTuneOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackOnDisable RollbackOnDisable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
	}
	
	public class DescribeElasticsearchDomainsPostBody
	{
		
		/// <summary>
		/// A list of Elasticsearch domain names.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainNames { get; set; }
	}
	
	public enum DescribeElasticsearchInstanceTypeLimitsInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.medium.elasticsearch")]
		m3_medium_elasticsearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.large.elasticsearch")]
		m3_large_elasticsearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.xlarge.elasticsearch")]
		m3_xlarge_elasticsearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.2xlarge.elasticsearch")]
		m3_2xlarge_elasticsearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.large.elasticsearch")]
		m4_large_elasticsearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.xlarge.elasticsearch")]
		m4_xlarge_elasticsearch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.2xlarge.elasticsearch")]
		m4_2xlarge_elasticsearch = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.4xlarge.elasticsearch")]
		m4_4xlarge_elasticsearch = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.10xlarge.elasticsearch")]
		m4_10xlarge_elasticsearch = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.large.elasticsearch")]
		m5_large_elasticsearch = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.xlarge.elasticsearch")]
		m5_xlarge_elasticsearch = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.2xlarge.elasticsearch")]
		m5_2xlarge_elasticsearch = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.4xlarge.elasticsearch")]
		m5_4xlarge_elasticsearch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.12xlarge.elasticsearch")]
		m5_12xlarge_elasticsearch = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.large.elasticsearch")]
		r5_large_elasticsearch = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.xlarge.elasticsearch")]
		r5_xlarge_elasticsearch = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.2xlarge.elasticsearch")]
		r5_2xlarge_elasticsearch = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.4xlarge.elasticsearch")]
		r5_4xlarge_elasticsearch = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.12xlarge.elasticsearch")]
		r5_12xlarge_elasticsearch = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.large.elasticsearch")]
		c5_large_elasticsearch = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.xlarge.elasticsearch")]
		c5_xlarge_elasticsearch = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.2xlarge.elasticsearch")]
		c5_2xlarge_elasticsearch = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.4xlarge.elasticsearch")]
		c5_4xlarge_elasticsearch = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.9xlarge.elasticsearch")]
		c5_9xlarge_elasticsearch = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.18xlarge.elasticsearch")]
		c5_18xlarge_elasticsearch = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.medium.elasticsearch")]
		ultrawarm1_medium_elasticsearch = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.large.elasticsearch")]
		ultrawarm1_large_elasticsearch = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.micro.elasticsearch")]
		t2_micro_elasticsearch = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.small.elasticsearch")]
		t2_small_elasticsearch = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.medium.elasticsearch")]
		t2_medium_elasticsearch = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.large.elasticsearch")]
		r3_large_elasticsearch = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.xlarge.elasticsearch")]
		r3_xlarge_elasticsearch = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.2xlarge.elasticsearch")]
		r3_2xlarge_elasticsearch = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.4xlarge.elasticsearch")]
		r3_4xlarge_elasticsearch = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.8xlarge.elasticsearch")]
		r3_8xlarge_elasticsearch = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.xlarge.elasticsearch")]
		i2_xlarge_elasticsearch = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.2xlarge.elasticsearch")]
		i2_2xlarge_elasticsearch = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.xlarge.elasticsearch")]
		d2_xlarge_elasticsearch = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.2xlarge.elasticsearch")]
		d2_2xlarge_elasticsearch = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.4xlarge.elasticsearch")]
		d2_4xlarge_elasticsearch = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.8xlarge.elasticsearch")]
		d2_8xlarge_elasticsearch = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.large.elasticsearch")]
		c4_large_elasticsearch = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.xlarge.elasticsearch")]
		c4_xlarge_elasticsearch = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.2xlarge.elasticsearch")]
		c4_2xlarge_elasticsearch = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.4xlarge.elasticsearch")]
		c4_4xlarge_elasticsearch = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.8xlarge.elasticsearch")]
		c4_8xlarge_elasticsearch = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.large.elasticsearch")]
		r4_large_elasticsearch = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.xlarge.elasticsearch")]
		r4_xlarge_elasticsearch = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.2xlarge.elasticsearch")]
		r4_2xlarge_elasticsearch = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.4xlarge.elasticsearch")]
		r4_4xlarge_elasticsearch = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.8xlarge.elasticsearch")]
		r4_8xlarge_elasticsearch = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.16xlarge.elasticsearch")]
		r4_16xlarge_elasticsearch = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.large.elasticsearch")]
		i3_large_elasticsearch = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.xlarge.elasticsearch")]
		i3_xlarge_elasticsearch = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.2xlarge.elasticsearch")]
		i3_2xlarge_elasticsearch = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.4xlarge.elasticsearch")]
		i3_4xlarge_elasticsearch = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.8xlarge.elasticsearch")]
		i3_8xlarge_elasticsearch = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.16xlarge.elasticsearch")]
		i3_16xlarge_elasticsearch = 57,
	}
	
	public class DescribeInboundCrossClusterSearchConnectionsPostBody
	{
		
		/// <summary>
		///  A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class DescribeOutboundCrossClusterSearchConnectionsPostBody
	{
		
		/// <summary>
		///  A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class DescribePackagesPostBody
	{
		
		/// <summary>
		/// A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilter[] Filters { get; set; }
		
		/// <summary>
		///  Set this value to limit the number of results returned. 
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class DescribeVpcEndpointsPostBody
	{
		
		/// <summary>
		/// The unique identifiers of the endpoints to get information about.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcEndpointIds { get; set; }
	}
	
	public class PurchaseReservedElasticsearchInstanceOfferingPostBody
	{
		
		/// <summary>
		/// The ID of the reserved Elasticsearch instance offering to purchase.
		/// Required
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}")]
		public string ReservedElasticsearchInstanceOfferingId { get; set; }
		
		/// <summary>
		/// A customer-specified identifier to track this reservation.
		/// Required
		/// Max length: 64
		/// Min length: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(5)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ReservationName { get; set; }
		
		/// <summary>
		/// Specifies the number of EC2 instances in the Elasticsearch domain.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
	}
	
	public class RemoveTagsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	public class RevokeVpcEndpointAccessPostBody
	{
		
		/// <summary>
		/// The account ID to revoke access from.
		/// Required
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string Account { get; set; }
	}
	
	public class StartElasticsearchServiceSoftwareUpdatePostBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
	}
	
	public class UpdatePackagePostBody
	{
		
		/// <summary>
		/// Unique identifier for the package.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		/// <summary>
		/// The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdatePackagePostBodyPackageSource PackageSource { get; set; }
		
		/// <summary>
		/// New description of the package.
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// An info message for the new version which will be shown as part of <code>GetPackageVersionHistoryResponse</code>.
		/// Max length: 160
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(160)]
		public string CommitMessage { get; set; }
	}
	
	public class UpdatePackagePostBodyPackageSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	public class UpdateVpcEndpointPostBody
	{
		
		/// <summary>
		/// Unique identifier of the VPC endpoint to be updated.
		/// Required
		/// Max length: 256
		/// Min length: 5
		/// Pattern: ^aos-[a-zA-Z0-9]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(5)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^aos-[a-zA-Z0-9]*$")]
		public string VpcEndpointId { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateVpcEndpointPostBodyVpcOptions VpcOptions { get; set; }
	}
	
	public class UpdateVpcEndpointPostBodyVpcOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpgradeElasticsearchDomainPostBody
	{
		
		/// <summary>
		/// The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Max length: 28
		/// Min length: 3
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The version of Elasticsearch that you intend to upgrade the domain to.
		/// Required
		/// Pattern: ^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$|^OS_[0-9]{1,2}\.[0-9]{1,2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$|^OS_[0-9]{1,2}\.[0-9]{1,2}$")]
		public string TargetVersion { get; set; }
		
		/// <summary>
		///  This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

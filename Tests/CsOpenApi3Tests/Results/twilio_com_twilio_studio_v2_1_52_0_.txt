//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Execution_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ended = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Flow_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		published = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Flow_revision_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		published = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Flow_validate_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		published = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flow
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// Description of change made in the revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commit_message")]
		public string Commit_message { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// JSON representation of flow definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="definition")]
		public object Definition { get; set; }
		
		/// <summary>
		/// List of error in the flow definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// The string that you assigned to describe the Flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// The URLs of the Flow's nested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The latest revision number of the Flow's definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Flow resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Flow_enum_status Status { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Boolean if the flow definition is valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valid")]
		public System.Nullable<System.Boolean> Valid { get; set; }
		
		/// <summary>
		/// List of warnings in the flow definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public string[] Warnings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flowexecution
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_channel_address")]
		public string Contact_channel_address { get; set; }
		
		/// <summary>
		/// The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public object Context { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The SID of the Flow.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flow_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Flow_sid { get; set; }
		
		/// <summary>
		/// The URLs of nested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Execution resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FN[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Execution_enum_status Status { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flowexecutionexecution_context
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionContext resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public object Context { get; set; }
		
		/// <summary>
		/// The SID of the context's Execution resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FN[0-9a-fA-F]{32}$")]
		public string Execution_sid { get; set; }
		
		/// <summary>
		/// The SID of the Flow.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flow_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Flow_sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flowexecutionexecution_step
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStep resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public object Context { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The SID of the Step's Execution resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FN[0-9a-fA-F]{32}$")]
		public string Execution_sid { get; set; }
		
		/// <summary>
		/// The SID of the Flow.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flow_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Flow_sid { get; set; }
		
		/// <summary>
		/// The URLs of related resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The event that caused the Flow to transition to the Step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the ExecutionStep resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FT[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FT[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The Widget that preceded the Widget for the Step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transitioned_from")]
		public string Transitioned_from { get; set; }
		
		/// <summary>
		/// The Widget that will follow the Widget for the Step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transitioned_to")]
		public string Transitioned_to { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flowexecutionexecution_stepexecution_step_context
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStepContext resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public object Context { get; set; }
		
		/// <summary>
		/// The SID of the context's Execution resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FN[0-9a-fA-F]{32}$")]
		public string Execution_sid { get; set; }
		
		/// <summary>
		/// The SID of the Flow.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flow_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Flow_sid { get; set; }
		
		/// <summary>
		/// The SID of the Step that the context is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FT[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="step_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FT[0-9a-fA-F]{32}$")]
		public string Step_sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flowflow_revision
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// Description of change made in the revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commit_message")]
		public string Commit_message { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// JSON representation of flow definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="definition")]
		public object Definition { get; set; }
		
		/// <summary>
		/// List of error in the flow definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// The string that you assigned to describe the Flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// The latest revision number of the Flow's definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Flow resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Flow_enum_status Status { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Boolean if the flow definition is valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valid")]
		public System.Nullable<System.Boolean> Valid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flowtest_user
	{
		
		/// <summary>
		/// Unique identifier of the flow.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^FW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^FW[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// List of test user identities that can test draft versions of the flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_users")]
		public string[] Test_users { get; set; }
		
		/// <summary>
		/// The URL of this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studiov2flow_validate
	{
		
		/// <summary>
		/// Boolean if the flow definition is valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valid")]
		public System.Nullable<System.Boolean> Valid { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve a list of all Flows.
		/// ListFlow v2/Flows
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListFlowReturn> ListFlowAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFlowReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Executions for the Flow.
		/// ListExecution v2/Flows/{FlowSid}/Executions
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Execution resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="DateCreatedFrom">Only show Execution resources starting on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.</param>
		/// <param name="DateCreatedTo">Only show Execution resources starting before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time, given as `YYYY-MM-DDThh:mm:ss-hh:mm`.</param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListExecutionReturn> ListExecutionAsync(string FlowSid, System.DateTimeOffset DateCreatedFrom, System.DateTimeOffset DateCreatedTo, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions&DateCreatedFrom=" + DateCreatedFrom.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&DateCreatedTo=" + DateCreatedTo.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListExecutionReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve the most recent context for an Execution.
		/// FetchExecutionContext v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Context
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Execution context to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="ExecutionSid">The SID of the Execution context to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Studiov2flowexecutionexecution_context> FetchExecutionContextAsync(string FlowSid, string ExecutionSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions/"+ (ExecutionSid==null? "" : System.Uri.EscapeDataString(ExecutionSid))+"/Context";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flowexecutionexecution_context>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Steps for an Execution.
		/// ListExecutionStep v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Steps to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="ExecutionSid">The SID of the Execution with the Steps to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListExecutionStepReturn> ListExecutionStepAsync(string FlowSid, string ExecutionSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions/"+ (ExecutionSid==null? "" : System.Uri.EscapeDataString(ExecutionSid))+"/Steps&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListExecutionStepReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a Step.
		/// FetchExecutionStep v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{Sid}
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Step to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="ExecutionSid">The SID of the Execution resource with the Step to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the ExecutionStep resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Studiov2flowexecutionexecution_step> FetchExecutionStepAsync(string FlowSid, string ExecutionSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions/"+ (ExecutionSid==null? "" : System.Uri.EscapeDataString(ExecutionSid))+"/Steps/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flowexecutionexecution_step>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve the context for an Execution Step.
		/// FetchExecutionStepContext v2/Flows/{FlowSid}/Executions/{ExecutionSid}/Steps/{StepSid}/Context
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Step to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="ExecutionSid">The SID of the Execution resource with the Step to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="StepSid">The SID of the Step to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Studiov2flowexecutionexecution_stepexecution_step_context> FetchExecutionStepContextAsync(string FlowSid, string ExecutionSid, string StepSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions/"+ (ExecutionSid==null? "" : System.Uri.EscapeDataString(ExecutionSid))+"/Steps/"+ (StepSid==null? "" : System.Uri.EscapeDataString(StepSid))+"/Context";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flowexecutionexecution_stepexecution_step_context>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete the Execution and all Steps relating to it.
		/// DeleteExecution v2/Flows/{FlowSid}/Executions/{Sid}
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Execution resources to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Execution resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteExecutionAsync(string FlowSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve an Execution
		/// FetchExecution v2/Flows/{FlowSid}/Executions/{Sid}
		/// </summary>
		/// <param name="FlowSid">The SID of the Flow with the Execution resource to fetch
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Execution resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Studiov2flowexecution> FetchExecutionAsync(string FlowSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (FlowSid==null? "" : System.Uri.EscapeDataString(FlowSid))+"/Executions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flowexecution>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete a specific Flow.
		/// DeleteFlow v2/Flows/{Sid}
		/// </summary>
		/// <param name="Sid">The SID of the Flow resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteFlowAsync(string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a specific Flow.
		/// FetchFlow v2/Flows/{Sid}
		/// </summary>
		/// <param name="Sid">The SID of the Flow resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Studiov2flow> FetchFlowAsync(string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flow>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Flows revisions.
		/// ListFlowRevision v2/Flows/{Sid}/Revisions
		/// </summary>
		/// <param name="Sid">The SID of the Flow resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListFlowRevisionReturn> ListFlowRevisionAsync(string Sid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid))+"/Revisions&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFlowRevisionReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a specific Flow revision.
		/// FetchFlowRevision v2/Flows/{Sid}/Revisions/{Revision}
		/// </summary>
		/// <param name="Sid">The SID of the Flow resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Revision">Specific Revision number or can be `LatestPublished` and `LatestRevision`.</param>
		/// <returns>OK</returns>
		public async Task<Studiov2flowflow_revision> FetchFlowRevisionAsync(string Sid, string Revision, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid))+"/Revisions/"+ (Revision==null? "" : System.Uri.EscapeDataString(Revision));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flowflow_revision>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch flow test users
		/// FetchTestUser v2/Flows/{Sid}/TestUsers
		/// </summary>
		/// <param name="Sid">Unique identifier of the flow.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Studiov2flowtest_user> FetchTestUserAsync(string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Flows/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid))+"/TestUsers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Studiov2flowtest_user>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ListFlowReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="flows")]
		public Studiov2flow[] Flows { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListFlowReturnMeta Meta { get; set; }
	}
	
	public class ListFlowReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListExecutionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public Studiov2flowexecution[] Executions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListExecutionReturnMeta Meta { get; set; }
	}
	
	public class ListExecutionReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListExecutionStepReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListExecutionStepReturnMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public Studiov2flowexecutionexecution_step[] Steps { get; set; }
	}
	
	public class ListExecutionStepReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListFlowRevisionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListFlowRevisionReturnMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisions")]
		public Studiov2flowflow_revision[] Revisions { get; set; }
	}
	
	public class ListFlowRevisionReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

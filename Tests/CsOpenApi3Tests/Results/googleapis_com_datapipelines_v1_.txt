//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1DataflowJobDetails
	{
		
		/// <summary>
		/// Output only. The current number of workers used to run the jobs. Only set to a value if the job is still running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentWorkers")]
		public System.Nullable<System.Int32> CurrentWorkers { get; set; }
		
		/// <summary>
		/// Cached version of all the metrics of interest for the job. This value gets stored here when the job is terminated. As long as the job is running, this field is populated from the Dataflow API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceInfo")]
		public System.Collections.Generic.Dictionary<string, double> ResourceInfo { get; set; }
		
		/// <summary>
		/// The version of the SDK used to run the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sdkVersion")]
		public GoogleCloudDatapipelinesV1SdkVersion SdkVersion { get; set; }
	}
	
	/// <summary>
	/// The version of the SDK used to run the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1SdkVersion
	{
		
		/// <summary>
		/// The support status for this SDK version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sdkSupportStatus")]
		public System.Nullable<GoogleCloudDatapipelinesV1SdkVersionSdkSupportStatus> SdkSupportStatus { get; set; }
		
		/// <summary>
		/// The version of the SDK used to run the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// A readable string describing the version of the SDK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionDisplayName")]
		public string VersionDisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatapipelinesV1SdkVersionSdkSupportStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUPPORTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STALE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNSUPPORTED = 4,
	}
	
	/// <summary>
	/// The environment values to be set at runtime for a Flex Template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment
	{
		
		/// <summary>
		/// Additional experiment flags for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalExperiments")]
		public string[] AdditionalExperiments { get; set; }
		
		/// <summary>
		/// Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ "name": "wrench", "mass": "1kg", "count": "3" }`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalUserLabels")]
		public System.Collections.Generic.Dictionary<string, string> AdditionalUserLabels { get; set; }
		
		/// <summary>
		/// Whether to enable Streaming Engine for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableStreamingEngine")]
		public System.Nullable<System.Boolean> EnableStreamingEngine { get; set; }
		
		/// <summary>
		/// Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flexrsGoal")]
		public System.Nullable<GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentFlexrsGoal> FlexrsGoal { get; set; }
		
		/// <summary>
		/// Configuration for VM IPs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipConfiguration")]
		public System.Nullable<GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration> IpConfiguration { get; set; }
		
		/// <summary>
		/// Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsKeyName")]
		public string KmsKeyName { get; set; }
		
		/// <summary>
		/// The machine type to use for the job. Defaults to the value from the template if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineType")]
		public string MachineType { get; set; }
		
		/// <summary>
		/// The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxWorkers")]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		/// <summary>
		/// Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The initial number of Compute Engine instances for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numWorkers")]
		public System.Nullable<System.Int32> NumWorkers { get; set; }
		
		/// <summary>
		/// The email address of the service account to run the job as.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccountEmail")]
		public string ServiceAccountEmail { get; set; }
		
		/// <summary>
		/// Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnetwork")]
		public string Subnetwork { get; set; }
		
		/// <summary>
		/// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tempLocation")]
		public string TempLocation { get; set; }
		
		/// <summary>
		/// The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerRegion")]
		public string WorkerRegion { get; set; }
		
		/// <summary>
		/// The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerZone")]
		public string WorkerZone { get; set; }
		
		/// <summary>
		/// The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public string Zone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentFlexrsGoal
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLEXRS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLEXRS_SPEED_OPTIMIZED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLEXRS_COST_OPTIMIZED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORKER_IP_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORKER_IP_PUBLIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORKER_IP_PRIVATE = 2,
	}
	
	/// <summary>
	/// Definition of the job information maintained by the pipeline. Fields in this entity are retrieved from the executor API (e.g. Dataflow API).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1Job
	{
		
		/// <summary>
		/// Output only. The time of job creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataflowJobDetails")]
		public GoogleCloudDatapipelinesV1DataflowJobDetails DataflowJobDetails { get; set; }
		
		/// <summary>
		/// Output only. The time of job termination. This is absent if the job is still running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. The internal ID for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required. The fully qualified resource name for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The current state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDatapipelinesV1JobState> State { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatapipelinesV1JobState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_DONE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_CANCELLED = 5,
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Launch Flex Template parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter
	{
		
		/// <summary>
		/// Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerSpecGcsPath")]
		public string ContainerSpecGcsPath { get; set; }
		
		/// <summary>
		/// The environment values to be set at runtime for a Flex Template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment Environment { get; set; }
		
		/// <summary>
		/// Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchOptions")]
		public System.Collections.Generic.Dictionary<string, string> LaunchOptions { get; set; }
		
		/// <summary>
		/// The parameters for the Flex Template. Example: `{"num_workers":"5"}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, string> Parameters { get; set; }
		
		/// <summary>
		/// Use this to pass transform name mappings for streaming update jobs. Example: `{"oldTransformName":"newTransformName",...}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformNameMappings")]
		public System.Collections.Generic.Dictionary<string, string> TransformNameMappings { get; set; }
		
		/// <summary>
		/// Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public System.Nullable<System.Boolean> Update { get; set; }
	}
	
	/// <summary>
	/// A request to launch a Dataflow job from a Flex Template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest
	{
		
		/// <summary>
		/// Launch Flex Template parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchParameter")]
		public GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter LaunchParameter { get; set; }
		
		/// <summary>
		/// Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Required. The ID of the Cloud Platform project that the job belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// If true, the request is validated but not actually executed. Defaults to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// Parameters to provide to the template being launched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1LaunchTemplateParameters
	{
		
		/// <summary>
		/// The environment values to set at runtime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public GoogleCloudDatapipelinesV1RuntimeEnvironment Environment { get; set; }
		
		/// <summary>
		/// Required. The job name to use for the created job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// The runtime parameters to pass to the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, string> Parameters { get; set; }
		
		/// <summary>
		/// Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformNameMapping")]
		public System.Collections.Generic.Dictionary<string, string> TransformNameMapping { get; set; }
		
		/// <summary>
		/// If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public System.Nullable<System.Boolean> Update { get; set; }
	}
	
	/// <summary>
	/// The environment values to set at runtime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1RuntimeEnvironment
	{
		
		/// <summary>
		/// Additional experiment flags for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalExperiments")]
		public string[] AdditionalExperiments { get; set; }
		
		/// <summary>
		/// Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalUserLabels")]
		public System.Collections.Generic.Dictionary<string, string> AdditionalUserLabels { get; set; }
		
		/// <summary>
		/// Whether to bypass the safety checks for the job's temporary directory. Use with caution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bypassTempDirValidation")]
		public System.Nullable<System.Boolean> BypassTempDirValidation { get; set; }
		
		/// <summary>
		/// Whether to enable Streaming Engine for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableStreamingEngine")]
		public System.Nullable<System.Boolean> EnableStreamingEngine { get; set; }
		
		/// <summary>
		/// Configuration for VM IPs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipConfiguration")]
		public GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration IpConfiguration { get; set; }
		
		/// <summary>
		/// Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsKeyName")]
		public string KmsKeyName { get; set; }
		
		/// <summary>
		/// The machine type to use for the job. Defaults to the value from the template if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineType")]
		public string MachineType { get; set; }
		
		/// <summary>
		/// The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxWorkers")]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		/// <summary>
		/// Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The initial number of Compute Engine instances for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numWorkers")]
		public System.Nullable<System.Int32> NumWorkers { get; set; }
		
		/// <summary>
		/// The email address of the service account to run the job as.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccountEmail")]
		public string ServiceAccountEmail { get; set; }
		
		/// <summary>
		/// Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnetwork")]
		public string Subnetwork { get; set; }
		
		/// <summary>
		/// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tempLocation")]
		public string TempLocation { get; set; }
		
		/// <summary>
		/// The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerRegion")]
		public string WorkerRegion { get; set; }
		
		/// <summary>
		/// The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerZone")]
		public string WorkerZone { get; set; }
		
		/// <summary>
		/// The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public string Zone { get; set; }
	}
	
	/// <summary>
	/// A request to launch a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1LaunchTemplateRequest
	{
		
		/// <summary>
		/// A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPath")]
		public string GcsPath { get; set; }
		
		/// <summary>
		/// Parameters to provide to the template being launched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchParameters")]
		public GoogleCloudDatapipelinesV1LaunchTemplateParameters LaunchParameters { get; set; }
		
		/// <summary>
		/// The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Required. The ID of the Cloud Platform project that the job belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// If true, the request is validated but not actually executed. Defaults to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// Response message for ListJobs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1ListJobsResponse
	{
		
		/// <summary>
		/// Results that were accessible to the caller. Results are always in descending order of job creation date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public GoogleCloudDatapipelinesV1Job[] Jobs { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListPipelines.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1ListPipelinesResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Results that matched the filter criteria and were accessible to the caller. Results are always in descending order of pipeline creation date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelines")]
		public GoogleCloudDatapipelinesV1Pipeline[] Pipelines { get; set; }
	}
	
	/// <summary>
	/// The main pipeline entity and all the necessary metadata for launching and managing linked jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1Pipeline
	{
		
		/// <summary>
		/// Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Number of jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobCount")]
		public System.Nullable<System.Int32> JobCount { get; set; }
		
		/// <summary>
		/// Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineSources")]
		public System.Collections.Generic.Dictionary<string, string> PipelineSources { get; set; }
		
		/// <summary>
		/// Details of the schedule the pipeline runs on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleInfo")]
		public GoogleCloudDatapipelinesV1ScheduleSpec ScheduleInfo { get; set; }
		
		/// <summary>
		/// Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedulerServiceAccountEmail")]
		public string SchedulerServiceAccountEmail { get; set; }
		
		/// <summary>
		/// Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDatapipelinesV1PipelineState> State { get; set; }
		
		/// <summary>
		/// Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatapipelinesV1PipelineType> Type { get; set; }
		
		/// <summary>
		/// Workload details for creating the pipeline jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workload")]
		public GoogleCloudDatapipelinesV1Workload Workload { get; set; }
	}
	
	/// <summary>
	/// Details of the schedule the pipeline runs on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1ScheduleSpec
	{
		
		/// <summary>
		/// Output only. When the next Scheduler job is going to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextJobTime")]
		public string NextJobTime { get; set; }
		
		/// <summary>
		/// Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public string Schedule { get; set; }
		
		/// <summary>
		/// Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatapipelinesV1PipelineState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_RESUMING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_ARCHIVED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_PAUSED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatapipelinesV1PipelineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PIPELINE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PIPELINE_TYPE_BATCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PIPELINE_TYPE_STREAMING = 2,
	}
	
	/// <summary>
	/// Workload details for creating the pipeline jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1Workload
	{
		
		/// <summary>
		/// A request to launch a Dataflow job from a Flex Template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataflowFlexTemplateRequest")]
		public GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest DataflowFlexTemplateRequest { get; set; }
		
		/// <summary>
		/// A request to launch a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataflowLaunchTemplateRequest")]
		public GoogleCloudDatapipelinesV1LaunchTemplateRequest DataflowLaunchTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Request message for RunPipeline
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1RunPipelineRequest
	{
	}
	
	/// <summary>
	/// Response message for RunPipeline
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1RunPipelineResponse
	{
		
		/// <summary>
		/// Definition of the job information maintained by the pipeline. Fields in this entity are retrieved from the executor API (e.g. Dataflow API).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job")]
		public GoogleCloudDatapipelinesV1Job Job { get; set; }
	}
	
	/// <summary>
	/// Request message for StopPipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatapipelinesV1StopPipelineRequest
	{
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.
		/// Datapipelines_projects_locations_pipelines_delete v1/{name}
		/// </summary>
		/// <param name="name">Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Datapipelines_projects_locations_pipelines_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
		/// Datapipelines_projects_locations_pipelines_get v1/{name}
		/// </summary>
		/// <param name="name">Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1Pipeline> Datapipelines_projects_locations_pipelines_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1Pipeline>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the pipeline doesn't exist. If UpdatePipeline does not return successfully, you can retry the UpdatePipeline request until you receive a successful response.
		/// Datapipelines_projects_locations_pipelines_patch v1/{name}
		/// </summary>
		/// <param name="name">The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.</param>
		/// <param name="updateMask">The list of fields to be updated.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1Pipeline> Datapipelines_projects_locations_pipelines_patchAsync(string name, string updateMask, GoogleCloudDatapipelinesV1Pipeline requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1Pipeline>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a job for the specified pipeline directly. You can use this method when the internal scheduler is not configured and you want to trigger the job directly or through an external system. Returns a "NOT_FOUND" error if the pipeline doesn't exist. Returns a "FORBIDDEN" error if the user doesn't have permission to access the pipeline or run jobs for the pipeline.
		/// Datapipelines_projects_locations_pipelines_run v1/{name}:run
		/// </summary>
		/// <param name="name">Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1RunPipelineResponse> Datapipelines_projects_locations_pipelines_runAsync(string name, GoogleCloudDatapipelinesV1RunPipelineRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":run";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1RunPipelineResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Freezes pipeline execution permanently. If there's a corresponding scheduler entry, it's deleted, and the pipeline state is changed to "ARCHIVED". However, pipeline metadata is retained.
		/// Datapipelines_projects_locations_pipelines_stop v1/{name}:stop
		/// </summary>
		/// <param name="name">Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1Pipeline> Datapipelines_projects_locations_pipelines_stopAsync(string name, GoogleCloudDatapipelinesV1StopPipelineRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":stop";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1Pipeline>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists jobs for a given pipeline. Throws a "FORBIDDEN" error if the caller doesn't have permission to access it.
		/// Datapipelines_projects_locations_pipelines_jobs_list v1/{parent}/jobs
		/// </summary>
		/// <param name="parent">Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`.</param>
		/// <param name="pageSize">The maximum number of entities to return. The service may return fewer than this value, even if there are additional pages. If unspecified, the max limit will be determined by the backend implementation.</param>
		/// <param name="pageToken">A page token, received from a previous `ListJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListJobs` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1ListJobsResponse> Datapipelines_projects_locations_pipelines_jobs_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1ListJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists pipelines. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
		/// Datapipelines_projects_locations_pipelines_list v1/{parent}/pipelines
		/// </summary>
		/// <param name="parent">Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.</param>
		/// <param name="filter">An expression for filtering the results of the request. If unspecified, all pipelines will be returned. Multiple filters can be applied and must be comma separated. Fields eligible for filtering are: + `type`: The type of the pipeline (streaming or batch). Allowed values are `ALL`, `BATCH`, and `STREAMING`. + `status`: The activity status of the pipeline. Allowed values are `ALL`, `ACTIVE`, `ARCHIVED`, and `PAUSED`. For example, to limit results to active batch processing pipelines: type:BATCH,status:ACTIVE</param>
		/// <param name="pageSize">The maximum number of entities to return. The service may return fewer than this value, even if there are additional pages. If unspecified, the max limit is yet to be determined by the backend implementation.</param>
		/// <param name="pageToken">A page token, received from a previous `ListPipelines` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPipelines` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1ListPipelinesResponse> Datapipelines_projects_locations_pipelines_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/pipelines&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1ListPipelinesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses the scheduler information to create an internal scheduler that runs jobs periodically. If the internal scheduler is not configured, you can use RunPipeline to run jobs.
		/// Datapipelines_projects_locations_pipelines_create v1/{parent}/pipelines
		/// </summary>
		/// <param name="parent">Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatapipelinesV1Pipeline> Datapipelines_projects_locations_pipelines_createAsync(string parent, GoogleCloudDatapipelinesV1Pipeline requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/pipelines";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatapipelinesV1Pipeline>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateEntitiesToExperienceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FailedEntity[] FailedEntityList { get; set; }
	}
	
	/// <summary>
	/// Information on the users or groups in your IAM Identity Center identity source that failed to properly configure with your Amazon Kendra experience.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailedEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateEntitiesToExperienceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityConfiguration[] EntityList { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for users or groups in your IAM Identity Center identity source to grant access your Amazon Kendra experience.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityType EntityType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceAlreadyExistException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociatePersonasToEntitiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FailedEntity[] FailedEntityList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociatePersonasToEntitiesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityPersonaConfiguration[] Personas { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for users or groups in your IAM Identity Center identity source for access to your Amazon Kendra experience. Specific permissions are defined for each user or group once they are granted access to your Amazon Kendra experience.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityPersonaConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Persona Persona { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Persona
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEWER = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteDocumentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BatchDeleteDocumentResponseFailedDocument[] FailedDocuments { get; set; }
	}
	
	/// <summary>
	/// Provides information about documents that could not be removed from an index by the <code>BatchDeleteDocument</code> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteDocumentResponseFailedDocument
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteDocumentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] DocumentIdList { get; set; }
		
		/// <summary>
		/// Maps a particular data source sync job to a particular data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSyncJobMetricTarget DataSourceSyncJobMetricTarget { get; set; }
	}
	
	/// <summary>
	/// Maps a particular data source sync job to a particular data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceSyncJobMetricTarget
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceSyncJobId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteFeaturedResultsSetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchDeleteFeaturedResultsSetError[] Errors { get; set; }
	}
	
	/// <summary>
	/// Provides information about a set of featured results that couldn't be removed from an index by the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchDeleteFeaturedResultsSet.html">BatchDeleteFeaturedResultsSet</a> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteFeaturedResultsSetError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ErrorCode ErrorCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteFeaturedResultsSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] FeaturedResultsSetIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetDocumentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BatchGetDocumentStatusResponseError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Status[] DocumentStatusList { get; set; }
	}
	
	/// <summary>
	/// Provides a response when the status of a document could not be retrieved.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetDocumentStatusResponseError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status of documents submitted for indexing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentStatus DocumentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_FOUND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetDocumentStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DocumentInfo[] DocumentInfoList { get; set; }
	}
	
	/// <summary>
	/// Identifies a document for which to retrieve status information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentInfo
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute[] Attributes { get; set; }
	}
	
	/// <summary>
	/// A document attribute or metadata field. To create custom document attributes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-attributes.html">Custom attributes</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentAttribute
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValue Value { get; set; }
	}
	
	/// <summary>
	/// The value of a document attribute. You can only provide one value for a document attribute.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentAttributeValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StringValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StringListValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LongValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DateValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPutDocumentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BatchPutDocumentResponseFailedDocument[] FailedDocuments { get; set; }
	}
	
	/// <summary>
	/// Provides information about a document that could not be indexed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPutDocumentResponseFailedDocument
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPutDocumentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Document[] Documents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDocumentEnrichmentConfiguration CustomDocumentEnrichmentConfiguration { get; set; }
	}
	
	/// <summary>
	/// A document in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Document
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Blob { get; set; }
		
		/// <summary>
		/// Information required to find a specific file in an Amazon S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Path S3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute[] Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Principal[] AccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchicalPrincipal[] HierarchicalAccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContentType ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessControlConfigurationId { get; set; }
	}
	
	/// <summary>
	/// Information required to find a specific file in an Amazon S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Path
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Provides user and group information for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Principal
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReadAccessType Access { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReadAccessType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENY = 1,
	}
	
	/// <summary>
	///  Information to define the hierarchy for which documents users should have access to. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchicalPrincipal
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Principal[] PrincipalList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PDF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTML = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MS_WORD = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAIN_TEXT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PPT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RTF = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XML = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XSLT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MS_EXCEL = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MD = 11,
	}
	
	/// <summary>
	/// <p>Provides the configuration information for altering document metadata and content during the document ingestion process.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomDocumentEnrichmentConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InlineCustomDocumentEnrichmentConfiguration[] InlineConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookConfiguration PreExtractionHookConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookConfiguration PostExtractionHookConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// <p>Provides the configuration information for applying basic logic to alter document metadata and content when ingesting documents into Amazon Kendra. To apply advanced logic, to go beyond what you can do with basic logic, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_HookConfiguration.html">HookConfiguration</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InlineCustomDocumentEnrichmentConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeCondition Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeTarget Target { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DocumentContentDeletion { get; set; }
	}
	
	/// <summary>
	/// <p>The condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. You use this with <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_DocumentAttributeTarget.html">DocumentAttributeTarget to apply the condition</a>.</p> <p>For example, you can create the 'Department' target field and have it prefill department names associated with the documents based on information in the 'Source_URI' field. Set the condition that if the 'Source_URI' field contains 'financial' in its URI value, then prefill the target field 'Department' with the target value 'Finance' for the document.</p> <p>Amazon Kendra cannot create a target field if it has not already been created as an index field. After you create your index field, you can create a document metadata field using <code>DocumentAttributeTarget</code>. Amazon Kendra then will map your newly created metadata field to your index field.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentAttributeCondition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ConditionDocumentAttributeKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConditionOperator Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValue ConditionOnValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConditionOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThan = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThanOrEquals = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThan = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThanOrEquals = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Equals = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotEquals = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Contains = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotContains = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exists = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotExists = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BeginsWith = 10,
	}
	
	/// <summary>
	/// <p>The target document attribute or metadata field you want to alter when ingesting documents into Amazon Kendra.</p> <p>For example, you can delete customer identification numbers associated with the documents, stored in the document metadata field called 'Customer_ID'. You set the target key as 'Customer_ID' and the deletion flag to <code>TRUE</code>. This removes all customer ID values in the field 'Customer_ID'. This would scrub personally identifiable information from each document's metadata.</p> <p>Amazon Kendra cannot create a target field if it has not already been created as an index field. After you create your index field, you can create a document metadata field using <code>DocumentAttributeTarget</code>. Amazon Kendra then will map your newly created metadata field to your index field.</p> <p>You can also use this with <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_DocumentAttributeCondition.html">DocumentAttributeCondition</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentAttributeTarget
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetDocumentAttributeKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TargetDocumentAttributeValueDeletion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValue TargetDocumentAttributeValue { get; set; }
	}
	
	/// <summary>
	/// <p>Provides the configuration information for invoking a Lambda function in Lambda to alter document metadata and content when ingesting documents into Amazon Kendra. You can configure your Lambda function using <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_CustomDocumentEnrichmentConfiguration.html">PreExtractionHookConfiguration</a> if you want to apply advanced alterations on the original or raw documents. If you want to apply advanced alterations on the Amazon Kendra structured documents, you must configure your Lambda function using <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_CustomDocumentEnrichmentConfiguration.html">PostExtractionHookConfiguration</a>. You can only invoke one Lambda function. However, this function can invoke other functions it requires.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HookConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeCondition InvocationCondition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LambdaArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClearQuerySuggestionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAccessControlConfigurationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAccessControlConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Principal[] AccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchicalPrincipal[] HierarchicalAccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSourceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDocumentEnrichmentConfiguration CustomDocumentEnrichmentConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHAREPOINT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALESFORCE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONEDRIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICENOW = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFLUENCE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLEDRIVE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEBCRAWLER = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORKDOCS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FSX = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLACK = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOX = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUIP = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JIRA = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GITHUB = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALFRESCO = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEMPLATE = 18,
	}
	
	/// <summary>
	/// Provides the configuration information for an Amazon Kendra data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3DataSourceConfiguration S3Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SharePointConfiguration SharePointConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseConfiguration DatabaseConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceConfiguration SalesforceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OneDriveConfiguration OneDriveConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowConfiguration ServiceNowConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceConfiguration ConfluenceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GoogleDriveConfiguration GoogleDriveConfiguration { get; set; }
		
		/// <summary>
		/// Provides the configuration information required for Amazon Kendra Web Crawler.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WebCrawlerConfiguration WebCrawlerConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WorkDocsConfiguration WorkDocsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FsxConfiguration FsxConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SlackConfiguration SlackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BoxConfiguration BoxConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuipConfiguration QuipConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JiraConfiguration JiraConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GitHubConfiguration GitHubConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlfrescoConfiguration AlfrescoConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to an Amazon S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3DataSourceConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPrefixes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		/// <summary>
		/// Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DocumentsMetadataConfiguration DocumentsMetadataConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccessControlListConfiguration AccessControlListConfiguration { get; set; }
	}
	
	/// <summary>
	/// Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentsMetadataConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
	}
	
	/// <summary>
	/// Access Control List files for the documents in a data source. For the format of the file, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html">Access control for S3 data sources</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessControlListConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KeyPath { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Microsoft SharePoint as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SharePointConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SharePointVersion SharePointVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Urls { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseChangeLog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableLocalGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Path SslCertificateS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SharePointOnlineAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProxyConfiguration ProxyConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SharePointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHAREPOINT_2013 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHAREPOINT_2016 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHAREPOINT_ONLINE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHAREPOINT_2019 = 3,
	}
	
	/// <summary>
	/// Provides the configuration information to connect to an Amazon VPC.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceVpcConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the <code>UpdateIndex</code> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceToIndexFieldMapping
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateFieldFormat { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SharePointOnlineAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAUTH2 = 1,
	}
	
	/// <summary>
	/// Provides the configuration information for a web proxy to connect to website hosts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProxyConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Credentials { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to a index. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatabaseConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DatabaseEngineType DatabaseEngineType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConnectionConfiguration ConnectionConfiguration { get; set; }
		
		/// <summary>
		/// Provides the configuration information to connect to an Amazon VPC.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration ColumnConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AclConfiguration AclConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SqlConfiguration SqlConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DatabaseEngineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_AURORA_MYSQL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_AURORA_POSTGRESQL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_MYSQL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_POSTGRESQL = 3,
	}
	
	/// <summary>
	/// Provides the configuration information that's required to connect to a database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseHost { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DatabasePort { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TableName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
	}
	
	/// <summary>
	/// Provides information about how Amazon Kendra should use the columns of a database in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentIdColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ChangeDetectingColumns { get; set; }
	}
	
	/// <summary>
	/// Provides information about the column that should be used for filtering the query response by groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AclConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AllowedGroupsColumnName { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to use a SQL database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QueryIdentifiersEnclosingOption QueryIdentifiersEnclosingOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QueryIdentifiersEnclosingOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOUBLE_QUOTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Salesforce as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServerUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceStandardObjectConfiguration[] StandardObjectConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceKnowledgeArticleConfiguration KnowledgeArticleConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceChatterFeedConfiguration ChatterFeedConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceStandardObjectAttachmentConfiguration StandardObjectAttachmentConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IncludeAttachmentFilePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeAttachmentFilePatterns { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for indexing a single standard object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceStandardObjectConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SalesforceStandardObjectName Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SalesforceStandardObjectName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAMPAIGN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTRACT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDEA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEAD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPPORTUNITY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTNER = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRICEBOOK = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRODUCT = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROFILE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLUTION = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 16,
	}
	
	/// <summary>
	/// Provides the configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceKnowledgeArticleConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SalesforceKnowledgeArticleState[] IncludedStates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceStandardKnowledgeArticleTypeConfiguration StandardKnowledgeArticleTypeConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceCustomKnowledgeArticleTypeConfiguration[] CustomKnowledgeArticleTypeConfigurations { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SalesforceKnowledgeArticleState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISHED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 2,
	}
	
	/// <summary>
	/// Provides the configuration information for standard Salesforce knowledge articles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceStandardKnowledgeArticleTypeConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for indexing Salesforce custom articles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceCustomKnowledgeArticleTypeConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	/// <summary>
	/// The configuration information for syncing a Salesforce chatter feed. The contents of the object comes from the Salesforce FeedItem table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceChatterFeedConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SalesforceChatterFeedIncludeFilterType[] IncludeFilterTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SalesforceChatterFeedIncludeFilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE_USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_USER = 1,
	}
	
	/// <summary>
	/// Provides the configuration information for processing attachments to Salesforce standard objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SalesforceStandardObjectAttachmentConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to OneDrive as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OneDriveConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TenantDomain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OneDriveUsers OneDriveUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableLocalGroups { get; set; }
	}
	
	/// <summary>
	/// User accounts whose documents should be indexed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OneDriveUsers
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OneDriveUserList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Path OneDriveUserS3Path { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to ServiceNow as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceNowConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HostUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowBuildVersionType ServiceNowBuildVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowKnowledgeArticleConfiguration KnowledgeArticleConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowServiceCatalogConfiguration ServiceCatalogConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SharePointOnlineAuthenticationType AuthenticationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ServiceNowBuildVersionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONDON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHERS = 1,
	}
	
	/// <summary>
	/// Provides the configuration information for crawling knowledge articles in the ServiceNow site.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceNowKnowledgeArticleConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IncludeAttachmentFilePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeAttachmentFilePatterns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FilterQuery { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for crawling service catalog items in the ServiceNow site
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceNowServiceCatalogConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IncludeAttachmentFilePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeAttachmentFilePatterns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentDataFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitleFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Confluence as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServerUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceVersion Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceSpaceConfiguration SpaceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluencePageConfiguration PageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceBlogConfiguration BlogConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceAttachmentConfiguration AttachmentConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProxyConfiguration ProxyConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceAuthenticationType AuthenticationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfluenceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER = 1,
	}
	
	/// <summary>
	/// Configuration information for indexing Confluence spaces.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceSpaceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlPersonalSpaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlArchivedSpaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IncludeSpaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeSpaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceSpaceToIndexFieldMapping[] SpaceFieldMappings { get; set; }
	}
	
	/// <summary>
	/// Maps attributes or field names of Confluence spaces to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceSpaceToIndexFieldMapping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceSpaceFieldName DataSourceFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateFieldFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfluenceSpaceFieldName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISPLAY_URL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_TYPE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_KEY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 3,
	}
	
	/// <summary>
	/// Configuration of the page settings for the Confluence data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluencePageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluencePageToIndexFieldMapping[] PageFieldMappings { get; set; }
	}
	
	/// <summary>
	/// Maps attributes or field names of Confluence pages to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluencePageToIndexFieldMapping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluencePageFieldName DataSourceFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateFieldFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfluencePageFieldName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTENT_STATUS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED_DATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISPLAY_URL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_TYPE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LABELS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFIED_DATE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARENT_ID = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_KEY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_NAME = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERSION = 11,
	}
	
	/// <summary>
	/// Configuration of blog settings for the Confluence data source. Blogs are always indexed unless filtered from the index by the <code>ExclusionPatterns</code> or <code>InclusionPatterns</code> fields in the <code>ConfluenceConfiguration</code> object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceBlogConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceBlogToIndexFieldMapping[] BlogFieldMappings { get; set; }
	}
	
	/// <summary>
	/// Maps attributes or field names of Confluence blog to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceBlogToIndexFieldMapping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceBlogFieldName DataSourceFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateFieldFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfluenceBlogFieldName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISPLAY_URL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_TYPE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LABELS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISH_DATE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_KEY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_NAME = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERSION = 8,
	}
	
	/// <summary>
	/// Configuration of attachment settings for the Confluence data source. Attachment settings are optional, if you don't specify settings attachments, Amazon Kendra won't index them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceAttachmentConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceAttachmentToIndexFieldMapping[] AttachmentFieldMappings { get; set; }
	}
	
	/// <summary>
	/// Maps attributes or field names of Confluence attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confuence data source field names must exist in your Confluence custom metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfluenceAttachmentToIndexFieldMapping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfluenceAttachmentFieldName DataSourceFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateFieldFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfluenceAttachmentFieldName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTENT_TYPE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED_DATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISPLAY_URL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILE_SIZE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_TYPE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARENT_ID = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_KEY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE_NAME = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERSION = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfluenceAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAT = 1,
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Google Drive as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleDriveConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeMimeTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeUserAccounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludeSharedDrives { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information required for Amazon Kendra Web Crawler.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WebCrawlerConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Urls Urls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CrawlDepth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxLinksPerPage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float MaxContentSizePerPageInMegaBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxUrlsPerMinuteCrawlRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] UrlInclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] UrlExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProxyConfiguration ProxyConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthenticationConfiguration AuthenticationConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>Provides the configuration information of the URLs to crawl.</p> <p>You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Urls
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SeedUrlConfiguration SeedUrlConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SiteMapsConfiguration SiteMapsConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>Provides the configuration information for the seed or starting point URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SeedUrlConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SeedUrls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WebCrawlerMode WebCrawlerMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebCrawlerMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOST_ONLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBDOMAINS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVERYTHING = 2,
	}
	
	/// <summary>
	/// <p>Provides the configuration information for the sitemap URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SiteMapsConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SiteMaps { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to websites that require user authentication.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthenticationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BasicAuthenticationConfiguration[] BasicAuthentication { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to websites that require basic user authentication.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BasicAuthenticationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Credentials { get; set; }
	}
	
	/// <summary>
	/// <p>Provides the configuration information to connect to Amazon WorkDocs as your data source.</p> <p>Amazon WorkDocs connector is available in Oregon, North Virginia, Sydney, Singapore and Ireland regions.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorkDocsConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlComments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseChangeLog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Amazon FSx as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FsxConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FileSystemId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FsxFileSystemType FileSystemType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FsxFileSystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS = 0,
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Slack as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SlackConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SlackEntity[] SlackEntityList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseChangeLog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlBotMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ExcludeArchived { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SinceCrawlDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LookBackPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PrivateChannelFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PublicChannelFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FieldMappings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SlackEntity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC_CHANNEL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_CHANNEL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP_MESSAGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_MESSAGE = 3,
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Box as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EnterpriseId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseChangeLog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlComments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlTasks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlWebLinks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] FileFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] TaskFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] CommentFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] WebLinkFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Quip as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuipConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlFileComments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlChatRooms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FolderIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] ThreadFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] MessageFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] AttachmentFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to Jira as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JiraConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JiraAccountUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseChangeLog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Project { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IssueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IssueSubEntity[] IssueSubEntityFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] AttachmentFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] CommentFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] IssueFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] ProjectFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] WorkLogFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IssueSubEntity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMENTS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACHMENTS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORKLOGS = 2,
	}
	
	/// <summary>
	/// Provides the configuration information to connect to GitHub as your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GitHubConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SaaSConfiguration SaaSConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnPremiseConfiguration OnPremiseConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Type Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseChangeLog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GitHubDocumentCrawlProperties GitHubDocumentCrawlProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RepositoryFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionFolderNamePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionFileTypePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionFileNamePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionFolderNamePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionFileTypePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionFileNamePatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubRepositoryConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubCommitConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubIssueDocumentConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubIssueCommentConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubIssueAttachmentConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubPullRequestCommentConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubPullRequestDocumentConfigurationFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] GitHubPullRequestDocumentAttachmentConfigurationFieldMappings { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to GitHub Enterprise Cloud (SaaS).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SaaSConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HostUrl { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information to connect to GitHub Enterprise Server (on premises).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnPremiseConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HostUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Path SslCertificateS3Path { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAAS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_PREMISE = 1,
	}
	
	/// <summary>
	/// Provides the configuration information to include certain types of GitHub content. You can configure to index repository files only, or also include issues and pull requests, comments, and comment attachments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GitHubDocumentCrawlProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlRepositoryDocuments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlIssue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlIssueComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlIssueCommentAttachment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlPullRequest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlPullRequestComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlPullRequestCommentAttachment { get; set; }
	}
	
	/// <summary>
	/// <p>Provides the configuration information to connect to Alfresco as your data source.</p> <note> <p>Support for <code>AlfrescoConfiguration</code> ended May 2023. We recommend migrating to or using the Alfresco data source template schema / <a href="https://docs.aws.amazon.com/kendra/latest/APIReference/API_TemplateConfiguration.html">TemplateConfiguration</a> API.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlfrescoConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SiteUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SiteId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Path SslCertificateS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlSystemFolders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrawlComments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlfrescoEntity[] EntityFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] DocumentLibraryFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] BlogFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceToIndexFieldMapping[] WikiFieldMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExclusionPatterns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlfrescoEntity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wiki = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		blog = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		documentLibrary = 2,
	}
	
	/// <summary>
	/// Provides a template for the configuration information to connect to your data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
	}
	
	/// <summary>
	/// <p>The template schema used for the data source, where templates schemas are supported.</p> <p>See <a href="https://docs.aws.amazon.com/kendra/latest/dg/ds-schemas.html">Data source template schemas</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Template
	{
	}
	
	/// <summary>
	/// A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateExperienceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateExperienceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for your Amazon Kendra experience. This includes the data source IDs and/or FAQ IDs, and user or group information to grant access to your Amazon Kendra experience.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExperienceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContentSourceConfiguration ContentSourceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityConfiguration UserIdentityConfiguration { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for your content sources, such as data sources, FAQs, and content indexed directly via <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html">BatchPutDocument</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContentSourceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DataSourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FaqIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DirectPutContent { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for the identifiers of your users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserIdentityConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityAttributeName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFaqResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFaqRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Path S3Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FaqFileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FaqFileFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV_WITH_HEADER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFeaturedResultsSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSet FeaturedResultsSet { get; set; }
	}
	
	/// <summary>
	/// A set of featured results that are displayed at the top of your search results. Featured results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedResultsSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] QueryTexts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedDocument[] FeaturedDocuments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FeaturedResultsSetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
	}
	
	/// <summary>
	/// A featured document. This document is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then the document is featured in the search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedDocument
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFeaturedResultsSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] QueryTexts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedDocument[] FeaturedDocuments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedResultsConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIndexResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIndexRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IndexEdition Edition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryptionConfiguration ServerSideEncryptionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserTokenConfiguration[] UserTokenConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserContextPolicy UserContextPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserGroupResolutionConfiguration UserGroupResolutionConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IndexEdition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_EDITION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTERPRISE_EDITION = 1,
	}
	
	/// <summary>
	/// Provides the identifier of the KMS key used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric keys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServerSideEncryptionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for a token.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserTokenConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JwtTokenTypeConfiguration JwtTokenTypeConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JsonTokenTypeConfiguration JsonTokenTypeConfiguration { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for the JWT token type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JwtTokenTypeConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public KeyLocation KeyLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string URL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretManagerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserNameAttributeField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupAttributeField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Issuer { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClaimRegex { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum KeyLocation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECRET_MANAGER = 1,
	}
	
	/// <summary>
	/// Provides the configuration information for the JSON token type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JsonTokenTypeConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UserNameAttributeField { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupAttributeField { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserContextPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTRIBUTE_FILTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_TOKEN = 1,
	}
	
	/// <summary>
	/// <p>Provides the configuration information to get users and groups from an IAM Identity Center (successor to Single Sign-On) identity source. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents. You can also use the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_PutPrincipalMapping.html">PutPrincipalMapping</a> API to map users to their groups so that you only need to provide the user ID when you issue the query.</p> <p>To set up an IAM Identity Center identity source in the console to use with Amazon Kendra, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>. You must also grant the required permissions to use IAM Identity Center with Amazon Kendra. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html#iam-roles-aws-sso">IAM roles for IAM Identity Center</a>.</p> <p>Amazon Kendra currently does not support using <code>UserGroupResolutionConfiguration</code> with an Amazon Web Services organization member account for your IAM Identity Center identify source. You must create your index in the management account for the organization in order to use <code>UserGroupResolutionConfiguration</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserGroupResolutionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserGroupResolutionMode UserGroupResolutionMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserGroupResolutionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_SSO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQuerySuggestionsBlockListResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQuerySuggestionsBlockListRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Path SourceS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateThesaurusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateThesaurusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Path SourceS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAccessControlConfigurationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAccessControlConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteExperienceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteExperienceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFaqRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIndexRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePrincipalMappingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OrderingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteQuerySuggestionsBlockListRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteThesaurusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccessControlConfigurationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Principal[] AccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchicalPrincipal[] HierarchicalAccessControlList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccessControlConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDocumentEnrichmentConfiguration CustomDocumentEnrichmentConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeExperienceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceEndpoint[] Endpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for the endpoint for your Amazon Kendra experience.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExperienceEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointType EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndpointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOME = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExperienceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeExperienceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFaqResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		/// <summary>
		/// Information required to find a specific file in an Amazon S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Path S3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FaqStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FaqFileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FaqStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFaqRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFeaturedResultsSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] QueryTexts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedDocumentWithMetadata[] FeaturedDocumentsWithMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedDocumentMissing[] FeaturedDocumentsMissing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTimestamp { get; set; }
	}
	
	/// <summary>
	/// A featured document with its metadata information. This document is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then the document is featured in the search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedDocumentWithMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string URI { get; set; }
	}
	
	/// <summary>
	/// A document ID doesn't exist but you have specified as a featured document. Amazon Kendra cannot feature the document if it doesn't exist in the index. You can check the status of a document and its ID or check for documents with status errors using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchGetDocumentStatus.html">BatchGetDocumentStatus</a> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedDocumentMissing
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFeaturedResultsSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIndexResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IndexEdition Edition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryptionConfiguration ServerSideEncryptionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IndexStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentMetadataConfiguration[] DocumentMetadataConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IndexStatistics IndexStatistics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CapacityUnitsConfiguration CapacityUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserTokenConfiguration[] UserTokenConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserContextPolicy UserContextPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserGroupResolutionConfiguration UserGroupResolutionConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IndexStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM_UPDATING = 5,
	}
	
	/// <summary>
	/// Specifies the properties, such as relevance tuning and searchability, of an index field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentMetadataConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValueType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Relevance Relevance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Search Search { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentAttributeValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING_VALUE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING_LIST_VALUE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_VALUE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_VALUE = 3,
	}
	
	/// <summary>
	/// Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Relevance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Freshness { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Importance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Order RankOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ValueImportanceMap ValueImportanceMap { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Order
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASCENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCENDING = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValueImportanceMap
	{
	}
	
	/// <summary>
	/// Provides information about how a custom index field is used during a search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Search
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Facetable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Searchable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Displayable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Sortable { get; set; }
	}
	
	/// <summary>
	/// Provides information about the number of documents and the number of questions and answers in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndexStatistics
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FaqStatistics FaqStatistics { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TextDocumentStatistics TextDocumentStatistics { get; set; }
	}
	
	/// <summary>
	/// Provides statistical information about the FAQ questions and answers contained in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FaqStatistics
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int IndexedQuestionAnswersCount { get; set; }
	}
	
	/// <summary>
	/// Provides information about text documents indexed in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextDocumentStatistics
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int IndexedTextDocumentsCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int IndexedTextBytes { get; set; }
	}
	
	/// <summary>
	/// Specifies additional capacity units configured for your Enterprise Edition index. You can add and remove capacity units to fit your usage requirements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CapacityUnitsConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int StorageCapacityUnits { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int QueryCapacityUnits { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIndexRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePrincipalMappingResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupOrderingIdSummary[] GroupOrderingIdSummaries { get; set; }
	}
	
	/// <summary>
	/// Summary information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupOrderingIdSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PrincipalMappingStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReceivedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OrderingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PrincipalMappingStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePrincipalMappingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQuerySuggestionsBlockListResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuerySuggestionsBlockListStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Path SourceS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ItemCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FileSizeBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QuerySuggestionsBlockListStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE_BUT_UPDATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQuerySuggestionsBlockListRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQuerySuggestionsConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Mode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuerySuggestionsStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> QueryLogLookBackWindowInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeQueriesWithoutUserInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumNumberOfQueryingUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumQueryCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastSuggestionsBuildTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastClearTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalSuggestionsCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeSuggestionsDescribeConfig AttributeSuggestionsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Mode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEARN_ONLY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QuerySuggestionsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
	}
	
	/// <summary>
	/// Gets information on the configuration of document fields/attributes that you want to base query suggestions on. To change your configuration, use <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_AttributeSuggestionsUpdateConfig.html">AttributeSuggestionsUpdateConfig</a> and then call <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateQuerySuggestionsConfig.html">UpdateQuerySuggestionsConfig</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeSuggestionsDescribeConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuggestableConfig[] SuggestableConfigList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus AttributeSuggestionsMode { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration information for a document field/attribute that you want to base query suggestions on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuggestableConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Suggestable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQuerySuggestionsConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThesaurusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThesaurusStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Information required to find a specific file in an Amazon S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Path SourceS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FileSizeBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TermCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SynonymRuleCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ThesaurusStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE_BUT_UPDATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThesaurusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateEntitiesFromExperienceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FailedEntity[] FailedEntityList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateEntitiesFromExperienceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EntityConfiguration[] EntityList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociatePersonasFromEntitiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FailedEntity[] FailedEntityList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociatePersonasFromEntitiesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] EntityIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetQuerySuggestionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string QuerySuggestionsId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Suggestion[] Suggestions { get; set; }
	}
	
	/// <summary>
	/// A single query suggestion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Suggestion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuggestionValue Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceDocument[] SourceDocuments { get; set; }
	}
	
	/// <summary>
	/// The <code>SuggestionTextWithHighlights</code> structure information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuggestionValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuggestionTextWithHighlights Text { get; set; }
	}
	
	/// <summary>
	/// Provides text and information about where to highlight the query suggestion text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuggestionTextWithHighlights
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuggestionHighlight[] Highlights { get; set; }
	}
	
	/// <summary>
	/// The text highlights for a single query suggestion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuggestionHighlight
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BeginOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EndOffset { get; set; }
	}
	
	/// <summary>
	/// The document ID and its fields/attributes that are used for a query suggestion, if document fields set to use for query suggestions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceDocument
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SuggestionAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute[] AdditionalAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetQuerySuggestionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueryText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxSuggestionsCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuggestionType[] SuggestionTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeSuggestionsGetConfig AttributeSuggestionsConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SuggestionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_ATTRIBUTES = 1,
	}
	
	/// <summary>
	/// Provides the configuration information for the document fields/attributes that you want to base query suggestions on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeSuggestionsGetConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SuggestionAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalResponseAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeFilter AttributeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserContext UserContext { get; set; }
	}
	
	/// <summary>
	/// <p>Provides filtering the query results based on document attributes or metadata fields.</p> <p>When you use the <code>AndAllFilters</code> or <code>OrAllFilters</code>, filters you can use 2 layers under the first attribute filter. For example, you can use:</p> <p> <code>&lt;AndAllFilters&gt;</code> </p> <ol> <li> <p> <code> &lt;OrAllFilters&gt;</code> </p> </li> <li> <p> <code> &lt;EqualsTo&gt;</code> </p> </li> </ol> <p>If you use more than 2 layers, you receive a <code>ValidationException</code> exception with the message "<code>AttributeFilter</code> cannot have a depth of more than 2."</p> <p>If you use more than 10 attribute filters in a given list for <code>AndAllFilters</code> or <code>OrAllFilters</code>, you receive a <code>ValidationException</code> with the message "<code>AttributeFilter</code> cannot have a length of more than 10".</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeFilter[] AndAllFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeFilter[] OrAllFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeFilter NotFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute EqualsTo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute ContainsAll { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute ContainsAny { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute GreaterThan { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute GreaterThanOrEquals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute LessThan { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute LessThanOrEquals { get; set; }
	}
	
	/// <summary>
	/// <p>Provides information about the user context for an Amazon Kendra index.</p> <p>User context filtering is a kind of personalized search with the benefit of controlling access to documents. For example, not all teams that search the company portal for information should access top-secret company documents, nor are these documents relevant to all users. Only specific users or groups of teams given access to top-secret documents should see these documents in their search results.</p> <p>You provide one of the following:</p> <ul> <li> <p>User token</p> </li> <li> <p>User ID, the groups the user belongs to, and any data sources the groups can access.</p> </li> </ul> <p>If you provide both, an exception is thrown.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserContext
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Token { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceGroup[] DataSourceGroups { get; set; }
	}
	
	/// <summary>
	/// Data source information for user context filtering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSnapshotsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRange SnapShotTimeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SnapshotsDataHeader { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[][] SnapshotsData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides a range of time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSnapshotsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Interval Interval { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricType MetricType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Interval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIS_MONTH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIS_WEEK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_WEEK_AGO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWO_WEEKS_AGO = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_MONTH_AGO = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWO_MONTHS_AGO = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERIES_BY_COUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERIES_BY_ZERO_CLICK_RATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERIES_BY_ZERO_RESULT_RATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCS_BY_CLICK_COUNT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGG_QUERY_DOC_METRICS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TREND_QUERY_DOC_METRICS = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAccessControlConfigurationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccessControlConfigurationSummary[] AccessControlConfigurations { get; set; }
	}
	
	/// <summary>
	/// Summary information on an access control configuration that you created for your documents in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessControlConfigurationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAccessControlConfigurationsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSourceSyncJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSyncJob[] History { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides information about a data source synchronization job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceSyncJob
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSyncJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSyncJobMetrics Metrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceSyncJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNCING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCOMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABORTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNCING_INDEXING = 6,
	}
	
	/// <summary>
	/// Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceSyncJobMetrics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentsAdded { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentsModified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentsDeleted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentsFailed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentsScanned { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSourceSyncJobsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRange StartTimeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSyncJobStatus StatusFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSourcesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSummary[] SummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for a Amazon Kendra data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSourcesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEntityPersonasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PersonasSummary[] SummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for users or groups in your IAM Identity Center identity source. This applies to users and groups with specific permissions that define their level of access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PersonasSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Persona Persona { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEntityPersonasRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExperienceEntitiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceEntitiesSummary[] SummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for users or groups in your IAM Identity Center identity source with granted access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExperienceEntitiesSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntityType EntityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EntityDisplayData DisplayData { get; set; }
	}
	
	/// <summary>
	/// Information about the user entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityDisplayData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentifiedUserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExperienceEntitiesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExperiencesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExperiencesSummary[] SummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExperiencesSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceEndpoint[] Endpoints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExperiencesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFaqsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FaqSummary[] FaqSummaryItems { get; set; }
	}
	
	/// <summary>
	/// Summary information for frequently asked questions and answers included in an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FaqSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FaqStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FaqFileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFaqsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFeaturedResultsSetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetSummary[] FeaturedResultsSetSummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for a set of featured results. Featured results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedResultsSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFeaturedResultsSetsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupsOlderThanOrderingIdResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GroupSummary[] GroupsSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OrderingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupsOlderThanOrderingIdRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int OrderingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIndicesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IndexConfigurationSummary[] IndexConfigurationSummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information on the configuration of an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndexConfigurationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IndexEdition Edition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIndicesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQuerySuggestionsBlockListsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuerySuggestionsBlockListSummary[] BlockListSummaryItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>Summary information on a query suggestions block list.</p> <p>This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuerySuggestionsBlockListSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuerySuggestionsBlockListStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ItemCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQuerySuggestionsBlockListsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThesauriResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThesaurusSummary[] ThesaurusSummaryItems { get; set; }
	}
	
	/// <summary>
	/// An array of summary information for a thesaurus or multiple thesauri.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThesaurusSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThesaurusStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThesauriRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutPrincipalMappingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GroupMembers GroupMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OrderingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// A list of users or sub groups that belong to a group. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupMembers
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MemberGroup[] MemberGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MemberUser[] MemberUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Path S3PathforGroupMembers { get; set; }
	}
	
	/// <summary>
	/// The sub groups that belong to a group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
	}
	
	/// <summary>
	/// The users that belong to a group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberUser
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueryResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string QueryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryResultItem[] ResultItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FacetResult[] FacetResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalNumberOfResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Warning[] Warnings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SpellCorrectedQuery[] SpellCorrectedQueries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsItem[] FeaturedResultsItems { get; set; }
	}
	
	/// <summary>
	/// <p>A single query result.</p> <p>A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueryResultItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryResultType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryResultFormat Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalResultAttribute[] AdditionalAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextWithHighlights DocumentTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextWithHighlights DocumentExcerpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentURI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute[] DocumentAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScoreAttributes ScoreAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableExcerpt TableExcerpt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QueryResultType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUESTION_ANSWER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANSWER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QueryResultFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT = 1,
	}
	
	/// <summary>
	/// An attribute returned from an index query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdditionalResultAttribute
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdditionalResultAttributeValueType ValueType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdditionalResultAttributeValue Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AdditionalResultAttributeValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT_WITH_HIGHLIGHTS_VALUE = 0,
	}
	
	/// <summary>
	/// An attribute returned with a document from a search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdditionalResultAttributeValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TextWithHighlights TextWithHighlightsValue { get; set; }
	}
	
	/// <summary>
	/// Provides text and information about where to highlight the text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextWithHighlights
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Highlight[] Highlights { get; set; }
	}
	
	/// <summary>
	/// Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Highlight
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int BeginOffset { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EndOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TopAnswer { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HighlightType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HighlightType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THESAURUS_SYNONYM = 1,
	}
	
	/// <summary>
	/// Provides a relative ranking that indicates how confident Amazon Kendra is that the response is relevant to the query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScoreAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScoreConfidence ScoreConfidence { get; set; }
	}
	
	/// <summary>
	/// Enumeration for query score confidence.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScoreConfidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERY_HIGH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_AVAILABLE = 4,
	}
	
	/// <summary>
	/// An excerpt from a table within a document. The table excerpt displays up to five columns and three rows, depending on how many table cells are relevant to the query and how many columns are available in the original table. The top most relevant cell is displayed in the table excerpt, along with the next most relevant cells.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableExcerpt
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableRow[] Rows { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalNumberOfRows { get; set; }
	}
	
	/// <summary>
	/// Information about a row in a table excerpt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableRow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableCell[] Cells { get; set; }
	}
	
	/// <summary>
	/// Provides information about a table cell in a table excerpt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableCell
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TopAnswer { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Highlighted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Header { get; set; }
	}
	
	/// <summary>
	/// The facet values for the documents in the response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FacetResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentAttributeKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValueType DocumentAttributeValueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValueCountPair[] DocumentAttributeValueCountPairs { get; set; }
	}
	
	/// <summary>
	/// Provides the count of documents that match a particular attribute when doing a faceted search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentAttributeValueCountPair
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttributeValue DocumentAttributeValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FacetResult[] FacetResults { get; set; }
	}
	
	/// <summary>
	/// The warning code and message that explains a problem with a query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Warning
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WarningCode Code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WarningCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERY_LANGUAGE_INVALID_SYNTAX = 0,
	}
	
	/// <summary>
	/// A query with suggested spell corrections. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SpellCorrectedQuery
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SuggestedQueryText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Correction[] Corrections { get; set; }
	}
	
	/// <summary>
	/// A corrected misspelled word in a query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Correction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BeginOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EndOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Term { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CorrectedTerm { get; set; }
	}
	
	/// <summary>
	/// A single featured result item. A featured result is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then certain documents are featured in the search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeaturedResultsItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryResultType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalResultAttribute[] AdditionalAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		/// <summary>
		/// Provides text and information about where to highlight the text.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TextWithHighlights DocumentTitle { get; set; }
		
		/// <summary>
		/// Provides text and information about where to highlight the text.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TextWithHighlights DocumentExcerpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentURI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute[] DocumentAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueryRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QueryText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeFilter AttributeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Facet[] Facets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RequestedDocumentAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryResultType QueryResultTypeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentRelevanceConfiguration[] DocumentRelevanceOverrideConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortingConfiguration SortingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserContext UserContext { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VisitorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SpellCorrectionConfiguration SpellCorrectionConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>Information about a document attribute. You can use document attributes as facets.</p> <p>For example, the document attribute or facet "Department" includes the values "HR", "Engineering", and "Accounting". You can display these values in the search results so that documents can be searched by department.</p> <p>You can display up to 10 facet values per facet for a query. If you want to increase this limit, contact <a href="http://aws.amazon.com/contact-us/">Support</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Facet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentAttributeKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Facet[] Facets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// Overrides the document relevance properties of a custom index field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentRelevanceConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Relevance Relevance { get; set; }
	}
	
	/// <summary>
	/// <p>Specifies the document attribute to use to sort the response to a Amazon Kendra query. You can specify a single attribute for sorting. The attribute must have the <code>Sortable</code> flag set to <code>true</code>, otherwise Amazon Kendra returns an exception.</p> <p>You can sort attributes of the following types.</p> <ul> <li> <p>Date value</p> </li> <li> <p>Long value</p> </li> <li> <p>String value</p> </li> </ul> <p>You can't sort attributes of the following type.</p> <ul> <li> <p>String list value</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SortingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DocumentAttributeKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 1,
	}
	
	/// <summary>
	/// <p>Provides the configuration information for suggested query spell corrections.</p> <p>Suggested spell corrections are based on words that appear in your indexed documents and how closely a corrected word matches a misspelled word.</p> <p>This feature is designed with certain defaults or limits. For information on the current limits and how to request more support for some limits, see the <a href="https://docs.aws.amazon.com/kendra/latest/dg/query-spell-check.html">Spell Checker documentation</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SpellCorrectionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IncludeQuerySpellCheckSuggestions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetrieveResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string QueryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RetrieveResultItem[] ResultItems { get; set; }
	}
	
	/// <summary>
	/// A single retrieved relevant passage result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetrieveResultItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentURI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentAttribute[] DocumentAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetrieveRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueryText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeFilter AttributeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RequestedDocumentAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentRelevanceConfiguration[] DocumentRelevanceOverrideConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserContext UserContext { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDataSourceSyncJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDataSourceSyncJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInUseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDataSourceSyncJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubmitFeedbackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClickFeedback[] ClickFeedbackItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelevanceFeedback[] RelevanceFeedbackItems { get; set; }
	}
	
	/// <summary>
	/// Gathers information about when a particular result was clicked by a user. Your application uses the <code>SubmitFeedback</code> API to provide click information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClickFeedback
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResultId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ClickTime { get; set; }
	}
	
	/// <summary>
	/// Provides feedback on how relevant a document is to a search. Your application uses the <code>SubmitFeedback</code> API to provide relevance information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RelevanceFeedback
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResultId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RelevanceType RelevanceValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RelevanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELEVANT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_RELEVANT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAccessControlConfigurationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAccessControlConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Principal[] AccessControlList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchicalPrincipal[] HierarchicalAccessControlList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceVpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDocumentEnrichmentConfiguration CustomDocumentEnrichmentConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateExperienceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExperienceConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFeaturedResultsSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSet FeaturedResultsSet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFeaturedResultsSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeaturedResultsSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] QueryTexts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedDocument[] FeaturedDocuments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateIndexRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentMetadataConfiguration[] DocumentMetadataConfigurationUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CapacityUnitsConfiguration CapacityUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserTokenConfiguration[] UserTokenConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserContextPolicy UserContextPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserGroupResolutionConfiguration UserGroupResolutionConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQuerySuggestionsBlockListRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Path SourceS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQuerySuggestionsConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Mode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> QueryLogLookBackWindowInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeQueriesWithoutUserInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumNumberOfQueryingUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumQueryCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeSuggestionsUpdateConfig AttributeSuggestionsConfig { get; set; }
	}
	
	/// <summary>
	/// <p>Updates the configuration information for the document fields/attributes that you want to base query suggestions on.</p> <p>To deactivate using documents fields for query suggestions, set the mode to <code>INACTIVE</code>. You must also set <code>SuggestionTypes</code> as either <code>QUERY</code> or <code>DOCUMENT_ATTRIBUTES</code> and then call <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_GetQuerySuggestions.html">GetQuerySuggestions</a>. If you set to <code>QUERY</code>, then Amazon Kendra uses the query history to base suggestions on. If you set to <code>DOCUMENT_ATTRIBUTES</code>, then Amazon Kendra uses the contents of document fields to base suggestions on.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeSuggestionsUpdateConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuggestableConfig[] SuggestableConfigList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeaturedResultsSetStatus AttributeSuggestionsMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThesaurusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Information required to find a specific file in an Amazon S3 bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Path SourceS3Path { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AttributeSuggestionsMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PrincipalType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ServiceNowAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAUTH2 = 1,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Grants users or groups in your IAM Identity Center identity source access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// AssociateEntitiesToExperience #X-Amz-Target=AWSKendraFrontendService.AssociateEntitiesToExperience
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AssociateEntitiesToExperienceResponse> AssociateEntitiesToExperienceAsync(AssociateEntitiesToExperienceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.AssociateEntitiesToExperience";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociateEntitiesToExperienceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Defines the specific permissions of users or groups in your IAM Identity Center identity source with access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// AssociatePersonasToEntities #X-Amz-Target=AWSKendraFrontendService.AssociatePersonasToEntities
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AssociatePersonasToEntitiesResponse> AssociatePersonasToEntitiesAsync(AssociatePersonasToEntitiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.AssociatePersonasToEntities";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociatePersonasToEntitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes one or more documents from an index. The documents must have been added with the <code>BatchPutDocument</code> API.</p> <p>The documents are deleted asynchronously. You can see the progress of the deletion by using Amazon Web Services CloudWatch. Any error messages related to the processing of the batch are sent to you CloudWatch log.</p>
		/// BatchDeleteDocument #X-Amz-Target=AWSKendraFrontendService.BatchDeleteDocument
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDeleteDocumentResponse> BatchDeleteDocumentAsync(BatchDeleteDocumentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.BatchDeleteDocument";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchDeleteDocumentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes one or more sets of featured results. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
		/// BatchDeleteFeaturedResultsSet #X-Amz-Target=AWSKendraFrontendService.BatchDeleteFeaturedResultsSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDeleteFeaturedResultsSetResponse> BatchDeleteFeaturedResultsSetAsync(BatchDeleteFeaturedResultsSetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.BatchDeleteFeaturedResultsSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchDeleteFeaturedResultsSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the indexing status for one or more documents submitted with the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html"> BatchPutDocument</a> API.</p> <p>When you use the <code>BatchPutDocument</code> API, documents are indexed asynchronously. You can use the <code>BatchGetDocumentStatus</code> API to get the current status of a list of documents so that you can determine if they have been successfully indexed.</p> <p>You can also use the <code>BatchGetDocumentStatus</code> API to check the status of the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchDeleteDocument.html"> BatchDeleteDocument</a> API. When a document is deleted from the index, Amazon Kendra returns <code>NOT_FOUND</code> as the status.</p>
		/// BatchGetDocumentStatus #X-Amz-Target=AWSKendraFrontendService.BatchGetDocumentStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchGetDocumentStatusResponse> BatchGetDocumentStatusAsync(BatchGetDocumentStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.BatchGetDocumentStatus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchGetDocumentStatusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds one or more documents to an index.</p> <p>The <code>BatchPutDocument</code> API enables you to ingest inline documents or a set of documents stored in an Amazon S3 bucket. Use this API to ingest your text and unstructured text into an index, add custom attributes to the documents, and to attach an access control list to the documents added to the index.</p> <p>The documents are indexed asynchronously. You can see the progress of the batch using Amazon Web Services CloudWatch. Any error messages related to processing the batch are sent to your Amazon Web Services CloudWatch log.</p> <p>For an example of ingesting inline documents using Python and Java SDKs, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-binary-doc.html">Adding files directly to an index</a>.</p>
		/// BatchPutDocument #X-Amz-Target=AWSKendraFrontendService.BatchPutDocument
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchPutDocumentResponse> BatchPutDocumentAsync(BatchPutDocumentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.BatchPutDocument";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchPutDocumentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Clears existing query suggestions from an index.</p> <p>This deletes existing suggestions only, not the queries in the query log. After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. If you do not see any new suggestions, then please allow Amazon Kendra to collect enough queries to learn new suggestions.</p> <p> <code>ClearQuerySuggestions</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// ClearQuerySuggestions #X-Amz-Target=AWSKendraFrontendService.ClearQuerySuggestions
		/// </summary>
		/// <returns>Success</returns>
		public async Task ClearQuerySuggestionsAsync(ClearQuerySuggestionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ClearQuerySuggestions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an access configuration for your documents. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.</p> <p>You can use this to re-configure your existing document level access control without indexing all of your documents again. For example, your index contains top-secret company documents that only certain employees or users should access. One of these users leaves the company or switches to a team that should be blocked from accessing top-secret documents. The user still has access to top-secret documents because the user had access when your documents were previously indexed. You can create a specific access control configuration for the user with deny access. You can later update the access control configuration to allow access if the user returns to the company and re-joins the 'top-secret' team. You can re-configure access control for your documents as circumstances change.</p> <p>To apply your access control configuration to certain documents, you call the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html">BatchPutDocument</a> API with the <code>AccessControlConfigurationId</code> included in the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Document.html">Document</a> object. If you use an S3 bucket as a data source, you update the <code>.metadata.json</code> with the <code>AccessControlConfigurationId</code> and synchronize your data source. Amazon Kendra currently only supports access control configuration for S3 data sources and documents indexed using the <code>BatchPutDocument</code> API.</p>
		/// CreateAccessControlConfiguration #X-Amz-Target=AWSKendraFrontendService.CreateAccessControlConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAccessControlConfigurationResponse> CreateAccessControlConfigurationAsync(CreateAccessControlConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateAccessControlConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAccessControlConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a data source connector that you want to use with an Amazon Kendra index.</p> <p>You specify a name, data source connector type and description for your data source. You also specify configuration information for the data source connector.</p> <p> <code>CreateDataSource</code> is a synchronous operation. The operation returns 200 if the data source was successfully created. Otherwise, an exception is raised.</p> <p>For an example of creating an index and data source using the Python SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-python.html">Getting started with Python SDK</a>. For an example of creating an index and data source using the Java SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-java.html">Getting started with Java SDK</a>.</p>
		/// CreateDataSource #X-Amz-Target=AWSKendraFrontendService.CreateDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDataSourceResponse> CreateDataSourceAsync(CreateDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateDataSource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateDataSourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon Kendra experience such as a search application. For more information on creating a search application experience, including using the Python and Java SDKs, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// CreateExperience #X-Amz-Target=AWSKendraFrontendService.CreateExperience
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateExperienceResponse> CreateExperienceAsync(CreateExperienceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateExperience";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateExperienceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a set of frequently ask questions (FAQs) using a specified FAQ file stored in an Amazon S3 bucket.</p> <p>Adding FAQs to an index is an asynchronous operation.</p> <p>For an example of adding an FAQ to an index using Python and Java SDKs, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html#using-faq-file">Using your FAQ file</a>.</p>
		/// CreateFaq #X-Amz-Target=AWSKendraFrontendService.CreateFaq
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFaqResponse> CreateFaqAsync(CreateFaqRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateFaq";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateFaqResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a set of featured results to display at the top of the search results page. Featured results are placed above all other results for certain queries. You map specific queries to specific documents for featuring in the results. If a query contains an exact match, then one or more specific documents are featured in the search results.</p> <p>You can create up to 50 sets of featured results per index. You can request to increase this limit by contacting <a href="http://aws.amazon.com/contact-us/">Support</a>.</p>
		/// CreateFeaturedResultsSet #X-Amz-Target=AWSKendraFrontendService.CreateFeaturedResultsSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFeaturedResultsSetResponse> CreateFeaturedResultsSetAsync(CreateFeaturedResultsSetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateFeaturedResultsSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateFeaturedResultsSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon Kendra index. Index creation is an asynchronous API. To determine if index creation has completed, check the <code>Status</code> field returned from a call to <code>DescribeIndex</code>. The <code>Status</code> field is set to <code>ACTIVE</code> when the index is ready to use.</p> <p>Once the index is active you can index your documents using the <code>BatchPutDocument</code> API or using one of the supported data sources.</p> <p>For an example of creating an index and data source using the Python SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-python.html">Getting started with Python SDK</a>. For an example of creating an index and data source using the Java SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-java.html">Getting started with Java SDK</a>.</p>
		/// CreateIndex #X-Amz-Target=AWSKendraFrontendService.CreateIndex
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateIndexResponse> CreateIndexAsync(CreateIndexRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateIndexResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a block list to exlcude certain queries from suggestions.</p> <p>Any query that contains words or phrases specified in the block list is blocked or filtered out from being shown as a suggestion.</p> <p>You need to provide the file location of your block list text file in your S3 bucket. In your text file, enter each block word or phrase on a separate line.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p> <p> <code>CreateQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p> <p>For an example of creating a block list for query suggestions using the Python SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/query-suggestions.html#query-suggestions-blocklist">Query suggestions block list</a>.</p>
		/// CreateQuerySuggestionsBlockList #X-Amz-Target=AWSKendraFrontendService.CreateQuerySuggestionsBlockList
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateQuerySuggestionsBlockListResponse> CreateQuerySuggestionsBlockListAsync(CreateQuerySuggestionsBlockListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateQuerySuggestionsBlockList";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateQuerySuggestionsBlockListResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a thesaurus for an index. The thesaurus contains a list of synonyms in Solr format.</p> <p>For an example of adding a thesaurus file to an index, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/index-synonyms-adding-thesaurus-file.html">Adding custom synonyms to an index</a>.</p>
		/// CreateThesaurus #X-Amz-Target=AWSKendraFrontendService.CreateThesaurus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateThesaurusResponse> CreateThesaurusAsync(CreateThesaurusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.CreateThesaurus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateThesaurusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an access control configuration that you created for your documents in an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
		/// DeleteAccessControlConfiguration #X-Amz-Target=AWSKendraFrontendService.DeleteAccessControlConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteAccessControlConfigurationResponse> DeleteAccessControlConfigurationAsync(DeleteAccessControlConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteAccessControlConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteAccessControlConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon Kendra data source connector. An exception is not thrown if the data source is already being deleted. While the data source is being deleted, the <code>Status</code> field returned by a call to the <code>DescribeDataSource</code> API is set to <code>DELETING</code>. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/delete-data-source.html">Deleting Data Sources</a>.
		/// DeleteDataSource #X-Amz-Target=AWSKendraFrontendService.DeleteDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteDataSourceAsync(DeleteDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteDataSource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes your Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// DeleteExperience #X-Amz-Target=AWSKendraFrontendService.DeleteExperience
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteExperienceResponse> DeleteExperienceAsync(DeleteExperienceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteExperience";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteExperienceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an FAQ from an index.
		/// DeleteFaq #X-Amz-Target=AWSKendraFrontendService.DeleteFaq
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteFaqAsync(DeleteFaqRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteFaq";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing Amazon Kendra index. An exception is not thrown if the index is already being deleted. While the index is being deleted, the <code>Status</code> field returned by a call to the <code>DescribeIndex</code> API is set to <code>DELETING</code>.
		/// DeleteIndex #X-Amz-Target=AWSKendraFrontendService.DeleteIndex
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteIndexAsync(DeleteIndexRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a group so that all users and sub groups that belong to the group can no longer access documents only available to that group.</p> <p>For example, after deleting the group "Summer Interns", all interns who belonged to that group no longer see intern-only documents in their search results.</p> <p>If you want to delete or replace users or sub groups of a group, you need to use the <code>PutPrincipalMapping</code> operation. For example, if a user in the group "Engineering" leaves the engineering team and another user takes their place, you provide an updated list of users or sub groups that belong to the "Engineering" group when calling <code>PutPrincipalMapping</code>. You can update your internal list of users or sub groups and input this list when calling <code>PutPrincipalMapping</code>.</p> <p> <code>DeletePrincipalMapping</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// DeletePrincipalMapping #X-Amz-Target=AWSKendraFrontendService.DeletePrincipalMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeletePrincipalMappingAsync(DeletePrincipalMappingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeletePrincipalMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a block list used for query suggestions for an index.</p> <p>A deleted block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to add back the queries that were previously blocked.</p> <p> <code>DeleteQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// DeleteQuerySuggestionsBlockList #X-Amz-Target=AWSKendraFrontendService.DeleteQuerySuggestionsBlockList
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteQuerySuggestionsBlockListAsync(DeleteQuerySuggestionsBlockListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteQuerySuggestionsBlockList";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing Amazon Kendra thesaurus.
		/// DeleteThesaurus #X-Amz-Target=AWSKendraFrontendService.DeleteThesaurus
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteThesaurusAsync(DeleteThesaurusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DeleteThesaurus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about an access control configuration that you created for your documents in an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
		/// DescribeAccessControlConfiguration #X-Amz-Target=AWSKendraFrontendService.DescribeAccessControlConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAccessControlConfigurationResponse> DescribeAccessControlConfigurationAsync(DescribeAccessControlConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeAccessControlConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAccessControlConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about an Amazon Kendra data source connector.
		/// DescribeDataSource #X-Amz-Target=AWSKendraFrontendService.DescribeDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDataSourceResponse> DescribeDataSourceAsync(DescribeDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeDataSource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDataSourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about your Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// DescribeExperience #X-Amz-Target=AWSKendraFrontendService.DescribeExperience
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeExperienceResponse> DescribeExperienceAsync(DescribeExperienceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeExperience";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeExperienceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about an FAQ list.
		/// DescribeFaq #X-Amz-Target=AWSKendraFrontendService.DescribeFaq
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeFaqResponse> DescribeFaqAsync(DescribeFaqRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeFaq";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeFaqResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about a set of featured results. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
		/// DescribeFeaturedResultsSet #X-Amz-Target=AWSKendraFrontendService.DescribeFeaturedResultsSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeFeaturedResultsSetResponse> DescribeFeaturedResultsSetAsync(DescribeFeaturedResultsSetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeFeaturedResultsSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeFeaturedResultsSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about an existing Amazon Kendra index.
		/// DescribeIndex #X-Amz-Target=AWSKendraFrontendService.DescribeIndex
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeIndexResponse> DescribeIndexAsync(DescribeIndexRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeIndexResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups. This includes information on the status of actions currently processing or yet to be processed, when actions were last updated, when actions were received by Amazon Kendra, the latest action that should process and apply after other actions, and useful error messages if an action could not be processed.</p> <p> <code>DescribePrincipalMapping</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// DescribePrincipalMapping #X-Amz-Target=AWSKendraFrontendService.DescribePrincipalMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribePrincipalMappingResponse> DescribePrincipalMappingAsync(DescribePrincipalMappingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribePrincipalMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribePrincipalMappingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets information about a block list used for query suggestions for an index.</p> <p>This is used to check the current settings that are applied to a block list.</p> <p> <code>DescribeQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// DescribeQuerySuggestionsBlockList #X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsBlockList
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeQuerySuggestionsBlockListResponse> DescribeQuerySuggestionsBlockListAsync(DescribeQuerySuggestionsBlockListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsBlockList";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeQuerySuggestionsBlockListResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets information on the settings of query suggestions for an index.</p> <p>This is used to check the current settings applied to query suggestions.</p> <p> <code>DescribeQuerySuggestionsConfig</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// DescribeQuerySuggestionsConfig #X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeQuerySuggestionsConfigResponse> DescribeQuerySuggestionsConfigAsync(DescribeQuerySuggestionsConfigRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsConfig";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeQuerySuggestionsConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about an existing Amazon Kendra thesaurus.
		/// DescribeThesaurus #X-Amz-Target=AWSKendraFrontendService.DescribeThesaurus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeThesaurusResponse> DescribeThesaurusAsync(DescribeThesaurusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DescribeThesaurus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeThesaurusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Prevents users or groups in your IAM Identity Center identity source from accessing your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// DisassociateEntitiesFromExperience #X-Amz-Target=AWSKendraFrontendService.DisassociateEntitiesFromExperience
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociateEntitiesFromExperienceResponse> DisassociateEntitiesFromExperienceAsync(DisassociateEntitiesFromExperienceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DisassociateEntitiesFromExperience";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DisassociateEntitiesFromExperienceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the specific permissions of users or groups in your IAM Identity Center identity source with access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// DisassociatePersonasFromEntities #X-Amz-Target=AWSKendraFrontendService.DisassociatePersonasFromEntities
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociatePersonasFromEntitiesResponse> DisassociatePersonasFromEntitiesAsync(DisassociatePersonasFromEntitiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.DisassociatePersonasFromEntities";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DisassociatePersonasFromEntitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Fetches the queries that are suggested to your users.</p> <p> <code>GetQuerySuggestions</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// GetQuerySuggestions #X-Amz-Target=AWSKendraFrontendService.GetQuerySuggestions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetQuerySuggestionsResponse> GetQuerySuggestionsAsync(GetQuerySuggestionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.GetQuerySuggestions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetQuerySuggestionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves search metrics data. The data provides a snapshot of how your users interact with your search application and how effective the application is.
		/// GetSnapshots #X-Amz-Target=AWSKendraFrontendService.GetSnapshots
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetSnapshotsResponse> GetSnapshotsAsync(string MaxResults, string NextToken, GetSnapshotsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.GetSnapshots?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSnapshotsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists one or more access control configurations for an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
		/// ListAccessControlConfigurations #X-Amz-Target=AWSKendraFrontendService.ListAccessControlConfigurations
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAccessControlConfigurationsResponse> ListAccessControlConfigurationsAsync(string MaxResults, string NextToken, ListAccessControlConfigurationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListAccessControlConfigurations?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAccessControlConfigurationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets statistics about synchronizing a data source connector.
		/// ListDataSourceSyncJobs #X-Amz-Target=AWSKendraFrontendService.ListDataSourceSyncJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDataSourceSyncJobsResponse> ListDataSourceSyncJobsAsync(string MaxResults, string NextToken, ListDataSourceSyncJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListDataSourceSyncJobs?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDataSourceSyncJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the data source connectors that you have created.
		/// ListDataSources #X-Amz-Target=AWSKendraFrontendService.ListDataSources
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDataSourcesResponse> ListDataSourcesAsync(string MaxResults, string NextToken, ListDataSourcesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListDataSources?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDataSourcesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists specific permissions of users and groups with access to your Amazon Kendra experience.
		/// ListEntityPersonas #X-Amz-Target=AWSKendraFrontendService.ListEntityPersonas
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEntityPersonasResponse> ListEntityPersonasAsync(string MaxResults, string NextToken, ListEntityPersonasRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListEntityPersonas?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEntityPersonasResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists users or groups in your IAM Identity Center identity source that are granted access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// ListExperienceEntities #X-Amz-Target=AWSKendraFrontendService.ListExperienceEntities
		/// </summary>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListExperienceEntitiesResponse> ListExperienceEntitiesAsync(string NextToken, ListExperienceEntitiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListExperienceEntities?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListExperienceEntitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists one or more Amazon Kendra experiences. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// ListExperiences #X-Amz-Target=AWSKendraFrontendService.ListExperiences
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListExperiencesResponse> ListExperiencesAsync(string MaxResults, string NextToken, ListExperiencesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListExperiences?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListExperiencesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a list of FAQ lists associated with an index.
		/// ListFaqs #X-Amz-Target=AWSKendraFrontendService.ListFaqs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListFaqsResponse> ListFaqsAsync(string MaxResults, string NextToken, ListFaqsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListFaqs?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFaqsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all your sets of featured results for a given index. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
		/// ListFeaturedResultsSets #X-Amz-Target=AWSKendraFrontendService.ListFeaturedResultsSets
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListFeaturedResultsSetsResponse> ListFeaturedResultsSetsAsync(ListFeaturedResultsSetsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListFeaturedResultsSets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFeaturedResultsSetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides a list of groups that are mapped to users before a given ordering or timestamp identifier.</p> <p> <code>ListGroupsOlderThanOrderingId</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// ListGroupsOlderThanOrderingId #X-Amz-Target=AWSKendraFrontendService.ListGroupsOlderThanOrderingId
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListGroupsOlderThanOrderingIdResponse> ListGroupsOlderThanOrderingIdAsync(string MaxResults, string NextToken, ListGroupsOlderThanOrderingIdRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListGroupsOlderThanOrderingId?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListGroupsOlderThanOrderingIdResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Amazon Kendra indexes that you created.
		/// ListIndices #X-Amz-Target=AWSKendraFrontendService.ListIndices
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListIndicesResponse> ListIndicesAsync(string MaxResults, string NextToken, ListIndicesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListIndices?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListIndicesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the block lists used for query suggestions for an index.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p> <p> <code>ListQuerySuggestionsBlockLists</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// ListQuerySuggestionsBlockLists #X-Amz-Target=AWSKendraFrontendService.ListQuerySuggestionsBlockLists
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListQuerySuggestionsBlockListsResponse> ListQuerySuggestionsBlockListsAsync(string MaxResults, string NextToken, ListQuerySuggestionsBlockListsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListQuerySuggestionsBlockLists?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListQuerySuggestionsBlockListsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a list of tags associated with a specified resource. Indexes, FAQs, and data sources can have tags associated with them.
		/// ListTagsForResource #X-Amz-Target=AWSKendraFrontendService.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListTagsForResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the thesauri for an index.
		/// ListThesauri #X-Amz-Target=AWSKendraFrontendService.ListThesauri
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListThesauriResponse> ListThesauriAsync(string MaxResults, string NextToken, ListThesauriRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.ListThesauri?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListThesauriResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Maps users to their groups so that you only need to provide the user ID when you issue the query.</p> <p>You can also map sub groups to groups. For example, the group "Company Intellectual Property Teams" includes sub groups "Research" and "Engineering". These sub groups include their own list of users or people who work in these teams. Only users who work in research and engineering, and therefore belong in the intellectual property group, can see top-secret company documents in their search results.</p> <p>This is useful for user context filtering, where search results are filtered based on the user or their group access to documents. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering on user context</a>.</p> <p>If more than five <code>PUT</code> actions for a group are currently processing, a validation exception is thrown.</p>
		/// PutPrincipalMapping #X-Amz-Target=AWSKendraFrontendService.PutPrincipalMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task PutPrincipalMappingAsync(PutPrincipalMappingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.PutPrincipalMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Searches an index given an input query.</p> <p>You can configure boosting or relevance tuning at the query level to override boosting at the index level, filter based on document fields/attributes and faceted search, and filter based on the user or their group access to documents. You can also include certain fields in the response that might provide useful additional information.</p> <p>A query response contains three types of results.</p> <ul> <li> <p>Relevant suggested answers. The answers can be either a text excerpt or table excerpt. The answer can be highlighted in the excerpt.</p> </li> <li> <p>Matching FAQs or questions-answer from your FAQ file.</p> </li> <li> <p>Relevant documents. This result type includes an excerpt of the document with the document title. The searched terms can be highlighted in the excerpt.</p> </li> </ul> <p>You can specify that the query return only one type of result using the <code>QueryResultTypeFilter</code> parameter. Each query returns the 100 most relevant results. If you filter result type to only question-answers, a maximum of four results are returned. If you filter result type to only answers, a maximum of three results are returned.</p>
		/// Query #X-Amz-Target=AWSKendraFrontendService.Query
		/// </summary>
		/// <returns>Success</returns>
		public async Task<QueryResult> QueryAsync(QueryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.Query";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QueryResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves relevant passages or text excerpts given an input query.</p> <p>This API is similar to the <a href="https://docs.aws.amazon.com/kendra/latest/APIReference/API_Query.html">Query</a> API. However, by default, the <code>Query</code> API only returns excerpt passages of up to 100 token words. With the <code>Retrieve</code> API, you can retrieve longer passages of up to 200 token words and up to 100 semantically relevant passages. This doesn't include question-answer or FAQ type responses from your index. The passages are text excerpts that can be semantically extracted from multiple documents and multiple parts of the same document. If in extreme cases your documents produce no relevant passages using the <code>Retrieve</code> API, you can alternatively use the <code>Query</code> API.</p> <p>You can also do the following:</p> <ul> <li> <p>Override boosting at the index level</p> </li> <li> <p>Filter based on document fields or attributes</p> </li> <li> <p>Filter based on the user or their group access to documents</p> </li> </ul> <p>You can also include certain fields in the response that might provide useful additional information.</p>
		/// Retrieve #X-Amz-Target=AWSKendraFrontendService.Retrieve
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RetrieveResult> RetrieveAsync(RetrieveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.Retrieve";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RetrieveResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts a synchronization job for a data source connector. If a synchronization job is already in progress, Amazon Kendra returns a <code>ResourceInUseException</code> exception.
		/// StartDataSourceSyncJob #X-Amz-Target=AWSKendraFrontendService.StartDataSourceSyncJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartDataSourceSyncJobResponse> StartDataSourceSyncJobAsync(StartDataSourceSyncJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.StartDataSourceSyncJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartDataSourceSyncJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Stops a synchronization job that is currently running. You can't stop a scheduled synchronization job.
		/// StopDataSourceSyncJob #X-Amz-Target=AWSKendraFrontendService.StopDataSourceSyncJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopDataSourceSyncJobAsync(StopDataSourceSyncJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.StopDataSourceSyncJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Enables you to provide feedback to Amazon Kendra to improve the performance of your index.</p> <p> <code>SubmitFeedback</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// SubmitFeedback #X-Amz-Target=AWSKendraFrontendService.SubmitFeedback
		/// </summary>
		/// <returns>Success</returns>
		public async Task SubmitFeedbackAsync(SubmitFeedbackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.SubmitFeedback";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds the specified tag to the specified index, FAQ, or data source resource. If the tag already exists, the existing value is replaced with the new value.
		/// TagResource #X-Amz-Target=AWSKendraFrontendService.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.TagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a tag from an index, FAQ, or a data source.
		/// UntagResource #X-Amz-Target=AWSKendraFrontendService.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UntagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an access control configuration for your documents in an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.</p> <p>You can update an access control configuration you created without indexing all of your documents again. For example, your index contains top-secret company documents that only certain employees or users should access. You created an 'allow' access control configuration for one user who recently joined the 'top-secret' team, switching from a team with 'deny' access to top-secret documents. However, the user suddenly returns to their previous team and should no longer have access to top secret documents. You can update the access control configuration to re-configure access control for your documents as circumstances change.</p> <p>You call the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html">BatchPutDocument</a> API to apply the updated access control configuration, with the <code>AccessControlConfigurationId</code> included in the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Document.html">Document</a> object. If you use an S3 bucket as a data source, you synchronize your data source to apply the <code>AccessControlConfigurationId</code> in the <code>.metadata.json</code> file. Amazon Kendra currently only supports access control configuration for S3 data sources and documents indexed using the <code>BatchPutDocument</code> API.</p>
		/// UpdateAccessControlConfiguration #X-Amz-Target=AWSKendraFrontendService.UpdateAccessControlConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateAccessControlConfigurationResponse> UpdateAccessControlConfigurationAsync(UpdateAccessControlConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateAccessControlConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAccessControlConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an existing Amazon Kendra data source connector.
		/// UpdateDataSource #X-Amz-Target=AWSKendraFrontendService.UpdateDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateDataSourceAsync(UpdateDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateDataSource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates your Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
		/// UpdateExperience #X-Amz-Target=AWSKendraFrontendService.UpdateExperience
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateExperienceAsync(UpdateExperienceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateExperience";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a set of featured results. Features results are placed above all other results for certain queries. You map specific queries to specific documents for featuring in the results. If a query contains an exact match of a query, then one or more specific documents are featured in the search results.
		/// UpdateFeaturedResultsSet #X-Amz-Target=AWSKendraFrontendService.UpdateFeaturedResultsSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateFeaturedResultsSetResponse> UpdateFeaturedResultsSetAsync(UpdateFeaturedResultsSetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateFeaturedResultsSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateFeaturedResultsSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an existing Amazon Kendra index.
		/// UpdateIndex #X-Amz-Target=AWSKendraFrontendService.UpdateIndex
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateIndexAsync(UpdateIndexRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a block list used for query suggestions for an index.</p> <p>Updates to a block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to apply any updates to the block list. Other changes not related to the block list apply immediately.</p> <p>If a block list is updating, then you need to wait for the first update to finish before submitting another update.</p> <p>Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.</p> <p> <code>UpdateQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// UpdateQuerySuggestionsBlockList #X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsBlockList
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateQuerySuggestionsBlockListAsync(UpdateQuerySuggestionsBlockListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsBlockList";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the settings of query suggestions for an index.</p> <p>Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.</p> <p>If an update is currently processing, you need to wait for the update to finish before making another update.</p> <p>Updates to query suggestions settings might not take effect right away. The time for your updated settings to take effect depends on the updates made and the number of search queries in your index.</p> <p>You can still enable/disable query suggestions at any time.</p> <p> <code>UpdateQuerySuggestionsConfig</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
		/// UpdateQuerySuggestionsConfig #X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateQuerySuggestionsConfigAsync(UpdateQuerySuggestionsConfigRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsConfig";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a thesaurus for an index.
		/// UpdateThesaurus #X-Amz-Target=AWSKendraFrontendService.UpdateThesaurus
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateThesaurusAsync(UpdateThesaurusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSKendraFrontendService.UpdateThesaurus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum AssociateEntitiesToExperienceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.AssociateEntitiesToExperience")]
		AWSKendraFrontendService_AssociateEntitiesToExperience = 0,
	}
	
	public enum AssociatePersonasToEntitiesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.AssociatePersonasToEntities")]
		AWSKendraFrontendService_AssociatePersonasToEntities = 0,
	}
	
	public enum BatchDeleteDocumentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.BatchDeleteDocument")]
		AWSKendraFrontendService_BatchDeleteDocument = 0,
	}
	
	public enum BatchDeleteFeaturedResultsSetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.BatchDeleteFeaturedResultsSet")]
		AWSKendraFrontendService_BatchDeleteFeaturedResultsSet = 0,
	}
	
	public enum BatchGetDocumentStatusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.BatchGetDocumentStatus")]
		AWSKendraFrontendService_BatchGetDocumentStatus = 0,
	}
	
	public enum BatchPutDocumentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.BatchPutDocument")]
		AWSKendraFrontendService_BatchPutDocument = 0,
	}
	
	public enum ClearQuerySuggestionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ClearQuerySuggestions")]
		AWSKendraFrontendService_ClearQuerySuggestions = 0,
	}
	
	public enum CreateAccessControlConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateAccessControlConfiguration")]
		AWSKendraFrontendService_CreateAccessControlConfiguration = 0,
	}
	
	public enum CreateDataSourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateDataSource")]
		AWSKendraFrontendService_CreateDataSource = 0,
	}
	
	public enum CreateExperienceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateExperience")]
		AWSKendraFrontendService_CreateExperience = 0,
	}
	
	public enum CreateFaqX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateFaq")]
		AWSKendraFrontendService_CreateFaq = 0,
	}
	
	public enum CreateFeaturedResultsSetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateFeaturedResultsSet")]
		AWSKendraFrontendService_CreateFeaturedResultsSet = 0,
	}
	
	public enum CreateIndexX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateIndex")]
		AWSKendraFrontendService_CreateIndex = 0,
	}
	
	public enum CreateQuerySuggestionsBlockListX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateQuerySuggestionsBlockList")]
		AWSKendraFrontendService_CreateQuerySuggestionsBlockList = 0,
	}
	
	public enum CreateThesaurusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.CreateThesaurus")]
		AWSKendraFrontendService_CreateThesaurus = 0,
	}
	
	public enum DeleteAccessControlConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteAccessControlConfiguration")]
		AWSKendraFrontendService_DeleteAccessControlConfiguration = 0,
	}
	
	public enum DeleteDataSourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteDataSource")]
		AWSKendraFrontendService_DeleteDataSource = 0,
	}
	
	public enum DeleteExperienceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteExperience")]
		AWSKendraFrontendService_DeleteExperience = 0,
	}
	
	public enum DeleteFaqX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteFaq")]
		AWSKendraFrontendService_DeleteFaq = 0,
	}
	
	public enum DeleteIndexX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteIndex")]
		AWSKendraFrontendService_DeleteIndex = 0,
	}
	
	public enum DeletePrincipalMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeletePrincipalMapping")]
		AWSKendraFrontendService_DeletePrincipalMapping = 0,
	}
	
	public enum DeleteQuerySuggestionsBlockListX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteQuerySuggestionsBlockList")]
		AWSKendraFrontendService_DeleteQuerySuggestionsBlockList = 0,
	}
	
	public enum DeleteThesaurusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DeleteThesaurus")]
		AWSKendraFrontendService_DeleteThesaurus = 0,
	}
	
	public enum DescribeAccessControlConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeAccessControlConfiguration")]
		AWSKendraFrontendService_DescribeAccessControlConfiguration = 0,
	}
	
	public enum DescribeDataSourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeDataSource")]
		AWSKendraFrontendService_DescribeDataSource = 0,
	}
	
	public enum DescribeExperienceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeExperience")]
		AWSKendraFrontendService_DescribeExperience = 0,
	}
	
	public enum DescribeFaqX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeFaq")]
		AWSKendraFrontendService_DescribeFaq = 0,
	}
	
	public enum DescribeFeaturedResultsSetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeFeaturedResultsSet")]
		AWSKendraFrontendService_DescribeFeaturedResultsSet = 0,
	}
	
	public enum DescribeIndexX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeIndex")]
		AWSKendraFrontendService_DescribeIndex = 0,
	}
	
	public enum DescribePrincipalMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribePrincipalMapping")]
		AWSKendraFrontendService_DescribePrincipalMapping = 0,
	}
	
	public enum DescribeQuerySuggestionsBlockListX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeQuerySuggestionsBlockList")]
		AWSKendraFrontendService_DescribeQuerySuggestionsBlockList = 0,
	}
	
	public enum DescribeQuerySuggestionsConfigX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeQuerySuggestionsConfig")]
		AWSKendraFrontendService_DescribeQuerySuggestionsConfig = 0,
	}
	
	public enum DescribeThesaurusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DescribeThesaurus")]
		AWSKendraFrontendService_DescribeThesaurus = 0,
	}
	
	public enum DisassociateEntitiesFromExperienceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DisassociateEntitiesFromExperience")]
		AWSKendraFrontendService_DisassociateEntitiesFromExperience = 0,
	}
	
	public enum DisassociatePersonasFromEntitiesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.DisassociatePersonasFromEntities")]
		AWSKendraFrontendService_DisassociatePersonasFromEntities = 0,
	}
	
	public enum GetQuerySuggestionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.GetQuerySuggestions")]
		AWSKendraFrontendService_GetQuerySuggestions = 0,
	}
	
	public enum GetSnapshotsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.GetSnapshots")]
		AWSKendraFrontendService_GetSnapshots = 0,
	}
	
	public enum ListAccessControlConfigurationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListAccessControlConfigurations")]
		AWSKendraFrontendService_ListAccessControlConfigurations = 0,
	}
	
	public enum ListDataSourceSyncJobsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListDataSourceSyncJobs")]
		AWSKendraFrontendService_ListDataSourceSyncJobs = 0,
	}
	
	public enum ListDataSourcesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListDataSources")]
		AWSKendraFrontendService_ListDataSources = 0,
	}
	
	public enum ListEntityPersonasX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListEntityPersonas")]
		AWSKendraFrontendService_ListEntityPersonas = 0,
	}
	
	public enum ListExperienceEntitiesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListExperienceEntities")]
		AWSKendraFrontendService_ListExperienceEntities = 0,
	}
	
	public enum ListExperiencesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListExperiences")]
		AWSKendraFrontendService_ListExperiences = 0,
	}
	
	public enum ListFaqsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListFaqs")]
		AWSKendraFrontendService_ListFaqs = 0,
	}
	
	public enum ListFeaturedResultsSetsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListFeaturedResultsSets")]
		AWSKendraFrontendService_ListFeaturedResultsSets = 0,
	}
	
	public enum ListGroupsOlderThanOrderingIdX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListGroupsOlderThanOrderingId")]
		AWSKendraFrontendService_ListGroupsOlderThanOrderingId = 0,
	}
	
	public enum ListIndicesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListIndices")]
		AWSKendraFrontendService_ListIndices = 0,
	}
	
	public enum ListQuerySuggestionsBlockListsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListQuerySuggestionsBlockLists")]
		AWSKendraFrontendService_ListQuerySuggestionsBlockLists = 0,
	}
	
	public enum ListTagsForResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListTagsForResource")]
		AWSKendraFrontendService_ListTagsForResource = 0,
	}
	
	public enum ListThesauriX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.ListThesauri")]
		AWSKendraFrontendService_ListThesauri = 0,
	}
	
	public enum PutPrincipalMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.PutPrincipalMapping")]
		AWSKendraFrontendService_PutPrincipalMapping = 0,
	}
	
	public enum QueryX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.Query")]
		AWSKendraFrontendService_Query = 0,
	}
	
	public enum RetrieveX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.Retrieve")]
		AWSKendraFrontendService_Retrieve = 0,
	}
	
	public enum StartDataSourceSyncJobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.StartDataSourceSyncJob")]
		AWSKendraFrontendService_StartDataSourceSyncJob = 0,
	}
	
	public enum StopDataSourceSyncJobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.StopDataSourceSyncJob")]
		AWSKendraFrontendService_StopDataSourceSyncJob = 0,
	}
	
	public enum SubmitFeedbackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.SubmitFeedback")]
		AWSKendraFrontendService_SubmitFeedback = 0,
	}
	
	public enum TagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.TagResource")]
		AWSKendraFrontendService_TagResource = 0,
	}
	
	public enum UntagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UntagResource")]
		AWSKendraFrontendService_UntagResource = 0,
	}
	
	public enum UpdateAccessControlConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateAccessControlConfiguration")]
		AWSKendraFrontendService_UpdateAccessControlConfiguration = 0,
	}
	
	public enum UpdateDataSourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateDataSource")]
		AWSKendraFrontendService_UpdateDataSource = 0,
	}
	
	public enum UpdateExperienceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateExperience")]
		AWSKendraFrontendService_UpdateExperience = 0,
	}
	
	public enum UpdateFeaturedResultsSetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateFeaturedResultsSet")]
		AWSKendraFrontendService_UpdateFeaturedResultsSet = 0,
	}
	
	public enum UpdateIndexX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateIndex")]
		AWSKendraFrontendService_UpdateIndex = 0,
	}
	
	public enum UpdateQuerySuggestionsBlockListX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateQuerySuggestionsBlockList")]
		AWSKendraFrontendService_UpdateQuerySuggestionsBlockList = 0,
	}
	
	public enum UpdateQuerySuggestionsConfigX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateQuerySuggestionsConfig")]
		AWSKendraFrontendService_UpdateQuerySuggestionsConfig = 0,
	}
	
	public enum UpdateThesaurusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSKendraFrontendService.UpdateThesaurus")]
		AWSKendraFrontendService_UpdateThesaurus = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

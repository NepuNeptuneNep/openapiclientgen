//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Authentication_error
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<Authentication_errorStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Authentication_errorStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Combined_submission_action
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action_category")]
		public Combined_submission_actionAction_category Action_category { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action_type")]
		public Combined_submission_actionAction_type Action_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="integration_id")]
		public string Integration_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result_data")]
		public string Result_data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public Combined_submission_actionState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Combined_submission_actionAction_category
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		notification = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		file_upload = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Combined_submission_actionAction_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		webhook = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		slack_webhook = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		aws_s3_upload = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Combined_submission_actionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Error
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error1 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Authentication_errorStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Invalid_request
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Authentication_errorStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Submission
	{
		
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Submission_action[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="batch_id")]
		public string Batch_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data_requests")]
		public Submission_data_request[] Data_requests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="editable")]
		public System.Nullable<System.Boolean> Editable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public bool Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_at")]
		public string Expires_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pdf_hash")]
		public string Pdf_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permanent_download_url")]
		public string Permanent_download_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="processed_at")]
		public string Processed_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="referrer")]
		public string Referrer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public SubmissionState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test")]
		public bool Test { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="truncated_text")]
		public string Truncated_text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Submission_action
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action_category")]
		public Combined_submission_actionAction_category Action_category { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action_type")]
		public Combined_submission_actionAction_type Action_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="integration_id")]
		public string Integration_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result_data")]
		public string Result_data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public Combined_submission_actionState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Submission_data_request
	{
		
		[System.Runtime.Serialization.DataMember(Name="auth_phone_number_hash")]
		public string Auth_phone_number_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_provider")]
		public string Auth_provider { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_second_factor_type")]
		public System.Nullable<Submission_data_requestAuth_second_factor_type> Auth_second_factor_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_session_id_hash")]
		public string Auth_session_id_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_session_started_at")]
		public string Auth_session_started_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_type")]
		public System.Nullable<Submission_data_requestAuth_type> Auth_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_user_id_hash")]
		public string Auth_user_id_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_username_hash")]
		public string Auth_username_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public string Completed_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public string[] Fields { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="order")]
		public int Order { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sort_order")]
		public int Sort_order { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public Submission_data_requestState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="submission_id")]
		public string Submission_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user_agent")]
		public string User_agent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="viewed_at")]
		public string Viewed_at { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Submission_data_requestAuth_second_factor_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone_number = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		totp = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mobile_push = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		security_key = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fingerprint = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Submission_data_requestAuth_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		password = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oauth = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email_link = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone_number = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ldap = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		saml = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Submission_data_requestState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubmissionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_data = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		image_download_failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		image_processing_failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		waiting_for_data_requests = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		syntax_error = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		account_suspended = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		license_revoked = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accidental = 10,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Test Authentication
		/// TestAuthentication authentication
		/// </summary>
		/// <returns>authentication succeeded</returns>
		public async Task<TestAuthenticationReturn> TestAuthenticationAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "authentication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TestAuthenticationReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of all combined submissions
		/// ListCombinedSubmissions combined_submissions
		/// </summary>
		/// <param name="page">Default: 1
		/// Minimum: 1
		// </param>
		/// <param name="per_page">Default: 50
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>enumerate all combined submissions</returns>
		public async Task<ListCombinedSubmissionsReturn[]> ListCombinedSubmissionsAsync(int page, int per_page, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "combined_submissions?page="+page+"&per_page="+per_page;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListCombinedSubmissionsReturn[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Merge generated PDFs together
		/// CombineSubmissions combined_submissions
		/// </summary>
		public async Task CombineSubmissionsAsync(CombineSubmissionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "combined_submissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Expire a combined submission
		/// ExpireCombinedSubmission combined_submissions/{combined_submission_id}
		/// </summary>
		/// <returns>submission was expired</returns>
		public async Task<ExpireCombinedSubmissionReturn> ExpireCombinedSubmissionAsync(string combined_submission_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "combined_submissions/"+ (combined_submission_id==null? "" : System.Uri.EscapeDataString(combined_submission_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ExpireCombinedSubmissionReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Check the status of a combined submission (merged PDFs)
		/// GetCombinedSubmission combined_submissions/{combined_submission_id}
		/// </summary>
		/// <returns>processed combined submission found</returns>
		public async Task<GetCombinedSubmissionReturn> GetCombinedSubmissionAsync(string combined_submission_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "combined_submissions/"+ (combined_submission_id==null? "" : System.Uri.EscapeDataString(combined_submission_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCombinedSubmissionReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Merge submission PDFs, template PDFs, or custom files
		/// CombinePdfs combined_submissions?v=2
		/// </summary>
		public async Task CombinePdfsAsync(CombinePdfsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "combined_submissions?v=2";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a new custom file from a cached presign upload
		/// CreateCustomFileFromUpload custom_files
		/// </summary>
		public async Task CreateCustomFileFromUploadAsync(CreateCustomFileFromUploadPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "custom_files";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Look up a submission data request
		/// GetDataRequest data_requests/{data_request_id}
		/// </summary>
		/// <returns>completed submission data request found</returns>
		public async Task<Submission_data_request> GetDataRequestAsync(string data_request_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "data_requests/"+ (data_request_id==null? "" : System.Uri.EscapeDataString(data_request_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Submission_data_request>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update a submission data request
		/// UpdateDataRequest data_requests/{data_request_id}
		/// </summary>
		/// <returns>submission data request updated</returns>
		public async Task<UpdateDataRequestReturn> UpdateDataRequestAsync(string data_request_id, UpdateDataRequestPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "data_requests/"+ (data_request_id==null? "" : System.Uri.EscapeDataString(data_request_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateDataRequestReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new data request token for form authentication
		/// CreateDataRequestToken data_requests/{data_request_id}/tokens
		/// </summary>
		public async Task CreateDataRequestTokenAsync(string data_request_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "data_requests/"+ (data_request_id==null? "" : System.Uri.EscapeDataString(data_request_id))+"/tokens";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of all folders
		/// ListFolders folders/
		/// </summary>
		/// <param name="parent_folder_id">Filter By Folder Id</param>
		/// <returns>enumerate all folders</returns>
		public async Task<ListFoldersReturn[]> ListFoldersAsync(string parent_folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "folders/?parent_folder_id=" + (parent_folder_id==null? "" : System.Uri.EscapeDataString(parent_folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFoldersReturn[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a folder
		/// CreateFolder folders/
		/// </summary>
		/// <returns>folder created inside another folder</returns>
		public async Task<CreateFolderReturn> CreateFolderAsync(CreateFolderPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "folders/";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateFolderReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete a folder
		/// DeleteFolder folders/{folder_id}
		/// </summary>
		/// <returns>folder is empty</returns>
		public async Task<DeleteFolderReturn> DeleteFolderAsync(string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteFolderReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Move a folder
		/// MoveFolderToFolder folders/{folder_id}/move
		/// </summary>
		/// <returns>move to root folder</returns>
		public async Task<MoveFolderToFolderReturn> MoveFolderToFolderAsync(string folder_id, MoveFolderToFolderPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"/move";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<MoveFolderToFolderReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Rename a folder
		/// RenameFolder folders/{folder_id}/rename
		/// </summary>
		/// <returns>successful rename</returns>
		public async Task RenameFolderAsync(string folder_id, RenameFolderPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"/rename";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all submissions
		/// ListSubmissions submissions
		/// </summary>
		/// <returns>listing submissions</returns>
		public async Task<ListSubmissionsReturn> ListSubmissionsAsync(string cursor, double limit, string created_after, string created_before, string type, bool include_data, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "submissions?cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&created_after=" + (created_after==null? "" : System.Uri.EscapeDataString(created_after))+"&created_before=" + (created_before==null? "" : System.Uri.EscapeDataString(created_before))+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&include_data="+include_data;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSubmissionsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates multiple PDFs
		/// BatchGeneratePdfs submissions/batches
		/// </summary>
		/// <returns>some PDFs with invalid data</returns>
		public async Task<BatchGeneratePdfsReturn> BatchGeneratePdfsAsync(BatchGeneratePdfsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "submissions/batches";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchGeneratePdfsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Check the status of a submission batch job
		/// GetSubmissionBatch submissions/batches/{submission_batch_id}
		/// </summary>
		/// <returns>processed submission batch found</returns>
		public async Task<GetSubmissionBatchReturn> GetSubmissionBatchAsync(string submission_batch_id, bool include_submissions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "submissions/batches/"+ (submission_batch_id==null? "" : System.Uri.EscapeDataString(submission_batch_id))+"&include_submissions="+include_submissions;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSubmissionBatchReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Expire a PDF submission
		/// ExpireSubmission submissions/{submission_id}
		/// </summary>
		/// <returns>submission was expired</returns>
		public async Task<Submission> ExpireSubmissionAsync(string submission_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "submissions/"+ (submission_id==null? "" : System.Uri.EscapeDataString(submission_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Submission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Check the status of a PDF
		/// GetSubmission submissions/{submission_id}
		/// </summary>
		/// <returns>processed submission found</returns>
		public async Task<Submission> GetSubmissionAsync(string submission_id, bool include_data, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "submissions/"+ (submission_id==null? "" : System.Uri.EscapeDataString(submission_id))+"&include_data="+include_data;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Submission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of all templates
		/// ListTemplates templates
		/// </summary>
		/// <param name="query">Search By Name</param>
		/// <param name="parent_folder_id">Filter By Folder Id</param>
		/// <param name="page">Default: 1
		/// Minimum: 1
		// </param>
		/// <param name="per_page">Default: 50
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>enumerate all templates</returns>
		public async Task<ListTemplatesReturn[]> ListTemplatesAsync(string query, string parent_folder_id, int page, int per_page, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates?query=" + (query==null? "" : System.Uri.EscapeDataString(query))+"&parent_folder_id=" + (parent_folder_id==null? "" : System.Uri.EscapeDataString(parent_folder_id))+"&page="+page+"&per_page="+per_page;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTemplatesReturn[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Check the status of an uploaded template
		/// GetTemplate templates/{template_id}
		/// </summary>
		/// <returns>template found</returns>
		public async Task<GetTemplateReturn> GetTemplateAsync(string template_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplateReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update a Template
		/// UpdateTemplate templates/{template_id}
		/// </summary>
		/// <returns>update template success</returns>
		public async Task<UpdateTemplateReturn> UpdateTemplateAsync(string template_id, UpdateTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateTemplateReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add new fields to a Template
		/// AddFieldsToTemplate templates/{template_id}/add_fields
		/// </summary>
		/// <returns>add fields success</returns>
		public async Task<AddFieldsToTemplateReturn> AddFieldsToTemplateAsync(string template_id, AddFieldsToTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/add_fields";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddFieldsToTemplateReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copy a Template
		/// CopyTemplate templates/{template_id}/copy
		/// </summary>
		/// <returns>copy template success</returns>
		public async Task<CopyTemplateReturn> CopyTemplateAsync(string template_id, CopyTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/copy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CopyTemplateReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Move Template to folder
		/// MoveTemplateToFolder templates/{template_id}/move
		/// </summary>
		/// <returns>move template success</returns>
		public async Task<MoveTemplateToFolderReturn> MoveTemplateToFolderAsync(string template_id, MoveTemplateToFolderPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/move";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<MoveTemplateToFolderReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch the JSON schema for a template
		/// GetTemplateSchema templates/{template_id}/schema
		/// </summary>
		/// <returns>template found</returns>
		public async Task<GetTemplateSchemaReturn> GetTemplateSchemaAsync(string template_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/schema";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplateSchemaReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all submissions for a given template
		/// PDFGetByTemplate_idAndCursorAndLimitAndCreated_afterAndCreated_beforeAndTypeAndInclude_data templates/{template_id}/submissions
		/// </summary>
		/// <returns>listing submissions</returns>
		public async Task<PDFGetByTemplate_idAndCursorAndLimitAndCreated_afterAndCreated_beforeAndTypeAndInclude_dataReturn> PDFGetByTemplate_idAndCursorAndLimitAndCreated_afterAndCreated_beforeAndTypeAndInclude_dataAsync(string template_id, string cursor, double limit, string created_after, string created_before, string type, bool include_data, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/submissions&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&created_after=" + (created_after==null? "" : System.Uri.EscapeDataString(created_after))+"&created_before=" + (created_before==null? "" : System.Uri.EscapeDataString(created_before))+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&include_data="+include_data;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PDFGetByTemplate_idAndCursorAndLimitAndCreated_afterAndCreated_beforeAndTypeAndInclude_dataReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates a new PDF
		/// GeneratePDF templates/{template_id}/submissions
		/// </summary>
		public async Task GeneratePDFAsync(string template_id, GeneratePDFPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/submissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates multiple PDFs
		/// BatchGeneratePdfV1 templates/{template_id}/submissions/batch
		/// </summary>
		public async Task BatchGeneratePdfV1Async(string template_id, string[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/submissions/batch";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch the full template attributes
		/// GetFullTemplate templates/{template_id}?full=true
		/// </summary>
		/// <returns>template found</returns>
		public async Task<GetFullTemplateReturn> GetFullTemplateAsync(string template_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"?full=true";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFullTemplateReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a new PDF template from a cached presign upload
		/// CreatePDFTemplateFromUpload templates?desc=cached_upload
		/// </summary>
		public async Task CreatePDFTemplateFromUploadAsync(CreatePDFTemplateFromUploadPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates?desc=cached_upload";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a new HTML template
		/// CreateHTMLTemplate templates?desc=html
		/// </summary>
		public async Task CreateHTMLTemplateAsync(CreateHTMLTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates?desc=html";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a presigned URL so that you can upload a file to our AWS S3 bucket
		/// GetPresignUrl uploads/presign
		/// </summary>
		/// <returns>presign URL generated</returns>
		public async Task<GetPresignUrlReturn> GetPresignUrlAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "uploads/presign";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPresignUrlReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class TestAuthenticationReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TestAuthenticationReturnStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TestAuthenticationReturnStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
	}
	
	public class ListCombinedSubmissionsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Combined_submission_action[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public bool Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_at")]
		public string Expires_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_in")]
		public System.Nullable<System.Int32> Expires_in { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pdf_hash")]
		public string Pdf_hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source_pdfs")]
		public string[] Source_pdfs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public ListCombinedSubmissionsReturnState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submission_ids")]
		public string[] Submission_ids { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ListCombinedSubmissionsReturnState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 2,
	}
	
	public class CombineSubmissionsPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="expires_in")]
		public System.Nullable<System.Int32> Expires_in { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submission_ids")]
		public string[] Submission_ids { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
	}
	
	public class ExpireCombinedSubmissionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Combined_submission_action[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public bool Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_at")]
		public string Expires_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_in")]
		public System.Nullable<System.Int32> Expires_in { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pdf_hash")]
		public string Pdf_hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source_pdfs")]
		public string[] Source_pdfs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public ListCombinedSubmissionsReturnState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submission_ids")]
		public string[] Submission_ids { get; set; }
	}
	
	public class GetCombinedSubmissionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Combined_submission_action[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public bool Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_at")]
		public string Expires_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_in")]
		public System.Nullable<System.Int32> Expires_in { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pdf_hash")]
		public string Pdf_hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source_pdfs")]
		public string[] Source_pdfs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public ListCombinedSubmissionsReturnState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submission_ids")]
		public string[] Submission_ids { get; set; }
	}
	
	public class CombinePdfsPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="delete_custom_files")]
		public System.Nullable<System.Boolean> Delete_custom_files { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_in")]
		public System.Nullable<System.Int32> Expires_in { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source_pdfs")]
		public string[] Source_pdfs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
	}
	
	public class CreateCustomFileFromUploadPostBody
	{
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cache_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Cache_id { get; set; }
	}
	
	public class UpdateDataRequestPutBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="auth_phone_number_hash")]
		public string Auth_phone_number_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_provider")]
		public string Auth_provider { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_second_factor_type")]
		public Submission_data_requestAuth_second_factor_type Auth_second_factor_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_session_id_hash")]
		public string Auth_session_id_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_session_started_at")]
		public string Auth_session_started_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_type")]
		public Submission_data_requestAuth_type Auth_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_user_id_hash")]
		public string Auth_user_id_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_username_hash")]
		public string Auth_username_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public string[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
	}
	
	public class UpdateDataRequestReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data_request")]
		public Submission_data_request Data_request { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UpdateDataRequestReturnStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateDataRequestReturnStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 1,
	}
	
	public class ListFoldersReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	public class CreateFolderPostBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public CreateFolderPostBodyFolder Folder { get; set; }
	}
	
	public class CreateFolderPostBodyFolder
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
	}
	
	public class CreateFolderReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	public class DeleteFolderReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	public class MoveFolderToFolderPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
	}
	
	public class MoveFolderToFolderReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	public class RenameFolderPostBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class ListSubmissionsReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public double Limit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submissions")]
		public Submission[] Submissions { get; set; }
	}
	
	public class BatchGeneratePdfsPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submissions")]
		public BatchGeneratePdfsPostBodySubmissions[] BatchGeneratePdfsPostBodySubmissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
	}
	
	public class BatchGeneratePdfsPostBodySubmissions
	{
		
		[System.Runtime.Serialization.DataMember(Name="css")]
		public string Css { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
	}
	
	public class BatchGeneratePdfsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UpdateDataRequestReturnStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submission_batch")]
		public BatchGeneratePdfsReturnSubmission_batch Submission_batch { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submissions")]
		public BatchGeneratePdfsReturnSubmissions[] BatchGeneratePdfsReturnSubmissions { get; set; }
	}
	
	public class BatchGeneratePdfsReturnSubmission_batch
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completion_percentage")]
		public int Completion_percentage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_count")]
		public int Error_count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pending_count")]
		public int Pending_count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processed_at")]
		public string Processed_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public ListCombinedSubmissionsReturnState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="submissions")]
		public Submission[] Submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_count")]
		public int Total_count { get; set; }
	}
	
	public class BatchGeneratePdfsReturnSubmissions
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public BatchGeneratePdfsReturnSubmissionsStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="submission")]
		public Submission Submission { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BatchGeneratePdfsReturnSubmissionsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		valid_but_not_saved = 2,
	}
	
	public class GetSubmissionBatchReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completion_percentage")]
		public int Completion_percentage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_count")]
		public int Error_count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pending_count")]
		public int Pending_count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processed_at")]
		public string Processed_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public ListCombinedSubmissionsReturnState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="submissions")]
		public Submission[] Submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_count")]
		public int Total_count { get; set; }
	}
	
	public class ListTemplatesReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public bool Allow_additional_properties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_url")]
		public string Document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public bool Editable_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public double Expire_after { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public bool Expire_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_dimensions")]
		public string[] Page_dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permanent_document_url")]
		public string Permanent_document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public bool Public_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public bool Public_web_form { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public string Template_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ListTemplatesReturnExpiration_interval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		minutes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hours = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		days = 2,
	}
	
	public class GetTemplateReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public bool Allow_additional_properties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_url")]
		public string Document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public bool Editable_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public double Expire_after { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public bool Expire_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_dimensions")]
		public string[] Page_dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permanent_document_url")]
		public string Permanent_document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public bool Public_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public bool Public_web_form { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public string Template_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class UpdateTemplatePutBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public UpdateTemplatePutBodyTemplate Template { get; set; }
	}
	
	public class UpdateTemplatePutBodyTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public System.Nullable<System.Boolean> Allow_additional_properties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public System.Nullable<System.Boolean> Editable_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public System.Nullable<System.Double> Expire_after { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public System.Nullable<System.Boolean> Expire_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="footer_html")]
		public string Footer_html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="header_html")]
		public string Header_html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public System.Nullable<System.Boolean> Public_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public System.Nullable<System.Boolean> Public_web_form { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scss")]
		public string Scss { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class UpdateTemplateReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UpdateDataRequestReturnStatus Status { get; set; }
	}
	
	public class AddFieldsToTemplatePutBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public AddFieldsToTemplatePutBodyFields[] AddFieldsToTemplatePutBodyFields { get; set; }
	}
	
	public class AddFieldsToTemplatePutBodyFields
	{
		
		[System.Runtime.Serialization.DataMember(Name="alignment")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsAlignment> Alignment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="autoCalculateMaxLength")]
		public System.Nullable<System.Boolean> AutoCalculateMaxLength { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="backgroundColor")]
		public string BackgroundColor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="backgroundColorFieldName")]
		public string BackgroundColorFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="backgroundColorFieldRequired")]
		public System.Nullable<System.Boolean> BackgroundColorFieldRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="barcodeSymbology")]
		public string BarcodeSymbology { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bold")]
		public System.Nullable<System.Boolean> Bold { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="characterSpacing")]
		public System.Nullable<System.Double> CharacterSpacing { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkCharacter")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsCheckCharacter> CheckCharacter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkColor")]
		public string CheckColor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkColorFieldName")]
		public string CheckColorFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkColorFieldRequired")]
		public System.Nullable<System.Boolean> CheckColorFieldRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="color")]
		public string Color { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="colorFieldName")]
		public string ColorFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="colorFieldRequired")]
		public System.Nullable<System.Boolean> ColorFieldRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="comb")]
		public System.Nullable<System.Boolean> Comb { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combNumberOfCells")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> CombNumberOfCells { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="combValueOffset")]
		public System.Nullable<System.Double> CombValueOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="combinedFieldFormat")]
		public string CombinedFieldFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="combinedFieldNames")]
		public string CombinedFieldNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="combinedFieldSeparator")]
		public string CombinedFieldSeparator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="combinedFieldType")]
		public string CombinedFieldType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public string Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public System.Nullable<System.Boolean> Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dateTimeFormat")]
		public string DateTimeFormat { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decimalPlaces")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> DecimalPlaces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="default")]
		public string Default { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayType")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsDisplayType> DisplayType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exclusiveMaximum")]
		public System.Nullable<System.Boolean> ExclusiveMaximum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exclusiveMinimum")]
		public System.Nullable<System.Boolean> ExclusiveMinimum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="falseText")]
		public string FalseText { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontSize")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> FontSize { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Height { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hidden")]
		public System.Nullable<System.Boolean> Hidden { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageGravity")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsImageGravity> ImageGravity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageScaleType")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsImageScaleType> ImageScaleType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeTime")]
		public System.Nullable<System.Boolean> IncludeTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="integer")]
		public System.Nullable<System.Boolean> Integer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="invertBooleanCondition")]
		public System.Nullable<System.Boolean> InvertBooleanCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxLength")]
		public System.Nullable<System.Double> MaxLength { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Double> Maximum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minLength")]
		public System.Nullable<System.Double> MinLength { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Double> Minimum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="multiline")]
		public System.Nullable<System.Boolean> Multiline { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multilineLines")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> MultilineLines { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberConditionRangeExclusiveMax")]
		public System.Nullable<System.Boolean> NumberConditionRangeExclusiveMax { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberConditionRangeExclusiveMin")]
		public System.Nullable<System.Boolean> NumberConditionRangeExclusiveMin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberConditionRangeMax")]
		public System.Nullable<System.Double> NumberConditionRangeMax { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberConditionRangeMin")]
		public System.Nullable<System.Double> NumberConditionRangeMin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberConditionType")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsNumberConditionType> NumberConditionType { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opacity")]
		[System.ComponentModel.DataAnnotations.Range(0, 1)]
		public System.Nullable<System.Double> Opacity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="optionList")]
		public string OptionList { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="overflow")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsOverflow> Overflow { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Double.MaxValue)]
		public double Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="placeholder")]
		public string Placeholder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="qrcodeColor")]
		public string QrcodeColor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="qrcodeColorFieldName")]
		public string QrcodeColorFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="qrcodeColorFieldRequired")]
		public System.Nullable<System.Boolean> QrcodeColorFieldRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 360
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rotation")]
		[System.ComponentModel.DataAnnotations.Range(0, 360)]
		public System.Nullable<System.Double> Rotation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeBorderColor")]
		public string ShapeBorderColor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeBorderColorFieldName")]
		public string ShapeBorderColorFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeBorderColorFieldRequired")]
		public System.Nullable<System.Boolean> ShapeBorderColorFieldRequired { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shapeBorderWidth")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> ShapeBorderWidth { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeFillColor")]
		public string ShapeFillColor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeFillColorFieldName")]
		public string ShapeFillColorFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeFillColorFieldRequired")]
		public System.Nullable<System.Boolean> ShapeFillColorFieldRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shapeType")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsShapeType> ShapeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="signatureAllowDraw")]
		public System.Nullable<System.Boolean> SignatureAllowDraw { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="signatureAllowType")]
		public System.Nullable<System.Boolean> SignatureAllowType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="static")]
		public System.Nullable<System.Boolean> Static { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strikethrough")]
		public System.Nullable<System.Boolean> Strikethrough { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stringConditionType")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsStringConditionType> StringConditionType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trueText")]
		public string TrueText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsType> Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="typeface")]
		public string Typeface { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uppercase")]
		public System.Nullable<System.Boolean> Uppercase { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vAlignment")]
		public System.Nullable<AddFieldsToTemplatePutBodyFieldsVAlignment> VAlignment { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Width { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> X { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Y { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		left = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		center = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		right = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsCheckCharacter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="&#10003;")]
		And_10003_ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="&#10004;")]
		And_10004_ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="&#10006;")]
		And_10006_ = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="&#10007;")]
		And_10007_ = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="&#10008;")]
		And_10008_ = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsDisplayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		check = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qrcode = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		barcode = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		image = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shape = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsImageGravity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NorthWest = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		North = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NorthEast = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		West = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Center = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		East = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SouthWest = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		South = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SouthEast = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsImageScaleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fill = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stretch = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsNumberConditionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		equals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		range = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gte = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gt = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lte = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lt = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsOverflow
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shrink_to_fit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		truncate = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsShapeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		square = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rectangle = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		circle = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ellipse = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsStringConditionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		equals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		contains = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		starts_with = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ends_with = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		regex = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="string")]
		_string = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		number = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		boolean = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		address = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		country = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		url = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		image = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signature = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		barcode = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		combined = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddFieldsToTemplatePutBodyFieldsVAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bottom = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		center = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		top = 2,
	}
	
	public class AddFieldsToTemplateReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="new_field_ids")]
		public int[] New_field_ids { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UpdateDataRequestReturnStatus Status { get; set; }
	}
	
	public class CopyTemplatePostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
	}
	
	public class CopyTemplateReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public bool Allow_additional_properties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_url")]
		public string Document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public bool Editable_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public double Expire_after { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public bool Expire_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_dimensions")]
		public string[] Page_dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permanent_document_url")]
		public string Permanent_document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public bool Public_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public bool Public_web_form { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public string Template_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class MoveTemplateToFolderPostBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
	}
	
	public class MoveTemplateToFolderReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public bool Allow_additional_properties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_url")]
		public string Document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public bool Editable_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public double Expire_after { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public bool Expire_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_dimensions")]
		public string[] Page_dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permanent_document_url")]
		public string Permanent_document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public bool Public_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public bool Public_web_form { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public string Template_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class GetTemplateSchemaReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="$schema")]
		public string Schema { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="additionalProperties")]
		public System.Nullable<System.Boolean> AdditionalProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="definitions")]
		public string Definitions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public string Properties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="required")]
		public string[] Required { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class PDFGetByTemplate_idAndCursorAndLimitAndCreated_afterAndCreated_beforeAndTypeAndInclude_dataReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public double Limit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="submissions")]
		public Submission[] Submissions { get; set; }
	}
	
	public class GeneratePDFPostBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="css")]
		public string Css { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data_requests")]
		public GeneratePDFPostBodyData_requests[] GeneratePDFPostBodyData_requests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expires_in")]
		public System.Nullable<System.Int32> Expires_in { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field_overrides")]
		public string Field_overrides { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
	}
	
	public class GeneratePDFPostBodyData_requests
	{
		
		[System.Runtime.Serialization.DataMember(Name="auth_phone_number_hash")]
		public string Auth_phone_number_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_provider")]
		public string Auth_provider { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_second_factor_type")]
		public Submission_data_requestAuth_second_factor_type Auth_second_factor_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_session_id_hash")]
		public string Auth_session_id_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_session_started_at")]
		public string Auth_session_started_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="auth_type")]
		public Submission_data_requestAuth_type Auth_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_user_id_hash")]
		public string Auth_user_id_hash { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_username_hash")]
		public string Auth_username_hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public string[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
	}
	
	public class GetFullTemplateReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public bool Allow_additional_properties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="defaults")]
		public GetFullTemplateReturnDefaults Defaults { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="demo")]
		public bool Demo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_filename")]
		public string Document_filename { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_md5")]
		public string Document_md5 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_parse_error")]
		public bool Document_parse_error { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_processed")]
		public bool Document_processed { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_state")]
		public string Document_state { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_url")]
		public string Document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public bool Editable_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="embed_domains")]
		public string[] Embed_domains { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="encrypt_pdfs")]
		public bool Encrypt_pdfs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="encrypt_pdfs_password")]
		public string Encrypt_pdfs_password { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public double Expire_after { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public bool Expire_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="field_order")]
		public string[] Field_order { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public string Fields { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_template")]
		public bool First_template { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="footer_html")]
		public string Footer_html { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="header_html")]
		public string Header_html { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_count")]
		public double Page_count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_dimensions")]
		public string[] Page_dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parent_folder_id")]
		public string Parent_folder_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permanent_document_url")]
		public string Permanent_document_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public bool Public_submissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public bool Public_web_form { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scss")]
		public string Scss { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shared_field_data")]
		public string Shared_field_data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public string Template_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class GetFullTemplateReturnDefaults
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="color")]
		public string Color { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fontSize")]
		public double FontSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeface")]
		public string Typeface { get; set; }
	}
	
	public class CreatePDFTemplateFromUploadPostBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public CreatePDFTemplateFromUploadPostBodyTemplate Template { get; set; }
	}
	
	public class CreatePDFTemplateFromUploadPostBodyTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public System.Nullable<System.Boolean> Allow_additional_properties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="document")]
		public CreatePDFTemplateFromUploadPostBodyTemplateDocument Document { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public System.Nullable<System.Boolean> Editable_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public System.Nullable<System.Double> Expire_after { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public System.Nullable<System.Boolean> Expire_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="footer_html")]
		public string Footer_html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="header_html")]
		public string Header_html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public System.Nullable<System.Boolean> Public_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public System.Nullable<System.Boolean> Public_web_form { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scss")]
		public string Scss { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public System.Nullable<CreatePDFTemplateFromUploadPostBodyTemplateTemplate_type> Template_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class CreatePDFTemplateFromUploadPostBodyTemplateDocument
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public CreatePDFTemplateFromUploadPostBodyTemplateDocumentMetadata Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storage")]
		public CreatePDFTemplateFromUploadPostBodyTemplateDocumentStorage Storage { get; set; }
	}
	
	public class CreatePDFTemplateFromUploadPostBodyTemplateDocumentMetadata
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mime_type")]
		public CreatePDFTemplateFromUploadPostBodyTemplateDocumentMetadataMime_type Mime_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="size")]
		public int Size { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreatePDFTemplateFromUploadPostBodyTemplateDocumentMetadataMime_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="application/pdf")]
		application_pdf = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreatePDFTemplateFromUploadPostBodyTemplateDocumentStorage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cache = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreatePDFTemplateFromUploadPostBodyTemplateTemplate_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pdf = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		html = 1,
	}
	
	public class CreateHTMLTemplatePostBody
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public CreateHTMLTemplatePostBodyTemplate Template { get; set; }
	}
	
	public class CreateHTMLTemplatePostBodyTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="allow_additional_properties")]
		public System.Nullable<System.Boolean> Allow_additional_properties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="editable_submissions")]
		public System.Nullable<System.Boolean> Editable_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiration_interval")]
		public ListTemplatesReturnExpiration_interval Expiration_interval { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expire_after")]
		public System.Nullable<System.Double> Expire_after { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expire_submissions")]
		public System.Nullable<System.Boolean> Expire_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="footer_html")]
		public string Footer_html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="header_html")]
		public string Header_html { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="public_submissions")]
		public System.Nullable<System.Boolean> Public_submissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="public_web_form")]
		public System.Nullable<System.Boolean> Public_web_form { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scss")]
		public string Scss { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slack_webhook_url")]
		public string Slack_webhook_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template_type")]
		public CreatePDFTemplateFromUploadPostBodyTemplateTemplate_type Template_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="webhook_url")]
		public string Webhook_url { get; set; }
	}
	
	public class GetPresignUrlReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public GetPresignUrlReturnFields Fields { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public string Headers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="method")]
		public System.Nullable<GetPresignUrlReturnMethod> Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetPresignUrlReturnFields
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public string Policy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="x-amz-algorithm")]
		public string X_amz_algorithm { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="x-amz-credential")]
		public string X_amz_credential { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="x-amz-date")]
		public string X_amz_date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="x-amz-signature")]
		public string X_amz_signature { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetPresignUrlReturnMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		post = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobRunResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusterId")]
		public string VirtualClusterId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
	}
	
	/// <summary>
	///  A configuration specification to be used to override existing configurations. This data type allows job template parameters to be specified within.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParametricConfigurationOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="applicationConfiguration")]
		public Configuration[] ApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="monitoringConfiguration")]
		public ParametricMonitoringConfiguration MonitoringConfiguration { get; set; }
	}
	
	/// <summary>
	/// A configuration specification to be used when provisioning virtual clusters, which can include configurations for applications and software bundled with Amazon EMR on EKS. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Configuration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="classification")]
		public string Classification { get; set; }
		
		/// <summary>
		/// A set of properties specified within a configuration classification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurations")]
		public Configuration[] Configurations { get; set; }
	}
	
	/// <summary>
	///  Configuration setting for monitoring. This data type allows job template parameters to be specified within.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParametricMonitoringConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="persistentAppUI")]
		public string PersistentAppUI { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cloudWatchMonitoringConfiguration")]
		public ParametricCloudWatchMonitoringConfiguration CloudWatchMonitoringConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3MonitoringConfiguration")]
		public ParametricS3MonitoringConfiguration S3MonitoringConfiguration { get; set; }
	}
	
	/// <summary>
	///  A configuration for CloudWatch monitoring. You can configure your jobs to send log information to CloudWatch Logs. This data type allows job template parameters to be specified within.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParametricCloudWatchMonitoringConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="logGroupName")]
		public string LogGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logStreamNamePrefix")]
		public string LogStreamNamePrefix { get; set; }
	}
	
	/// <summary>
	///  Amazon S3 configuration for monitoring log publishing. You can configure your jobs to send log information to Amazon S3. This data type allows job template parameters to be specified within.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParametricS3MonitoringConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="logUri")]
		public string LogUri { get; set; }
	}
	
	/// <summary>
	/// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobDriver
	{
		
		[System.Runtime.Serialization.DataMember(Name="sparkSubmitJobDriver")]
		public SparkSubmitJobDriver SparkSubmitJobDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sparkSqlJobDriver")]
		public SparkSqlJobDriver SparkSqlJobDriver { get; set; }
	}
	
	/// <summary>
	/// The information about job driver for Spark submit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SparkSubmitJobDriver
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entryPoint")]
		public string EntryPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="entryPointArguments")]
		public string[] EntryPointArguments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sparkSubmitParameters")]
		public string SparkSubmitParameters { get; set; }
	}
	
	/// <summary>
	/// The job driver for job type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SparkSqlJobDriver
	{
		
		[System.Runtime.Serialization.DataMember(Name="entryPoint")]
		public string EntryPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sparkSqlParameters")]
		public string SparkSqlParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateParameterConfigurationMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateManagedEndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusterId")]
		public string VirtualClusterId { get; set; }
	}
	
	/// <summary>
	/// Configuration setting for monitoring.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MonitoringConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="persistentAppUI")]
		public PersistentAppUI PersistentAppUI { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cloudWatchMonitoringConfiguration")]
		public CloudWatchMonitoringConfiguration CloudWatchMonitoringConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3MonitoringConfiguration")]
		public S3MonitoringConfiguration S3MonitoringConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerLogRotationConfiguration")]
		public ContainerLogRotationConfiguration ContainerLogRotationConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PersistentAppUI
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// A configuration for CloudWatch monitoring. You can configure your jobs to send log information to CloudWatch Logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchMonitoringConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logGroupName")]
		public string LogGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logStreamNamePrefix")]
		public string LogStreamNamePrefix { get; set; }
	}
	
	/// <summary>
	///  Amazon S3 configuration for monitoring log publishing. You can configure your jobs to send log information to Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3MonitoringConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logUri")]
		public string LogUri { get; set; }
	}
	
	/// <summary>
	/// The settings for container log rotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerLogRotationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rotationSize")]
		public string RotationSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxFilesToKeep")]
		public int MaxFilesToKeep { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVirtualClusterResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContainerProviderType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EKS = 0,
	}
	
	/// <summary>
	/// The information about the container used for a job run or a managed endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="eksInfo")]
		public EksInfo EksInfo { get; set; }
	}
	
	/// <summary>
	/// The information about the Amazon EKS cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJobTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteManagedEndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusterId")]
		public string VirtualClusterId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVirtualClusterResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobRunResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobRun")]
		public JobRun JobRun { get; set; }
	}
	
	/// <summary>
	/// This entity describes a job run. A job run is a unit of work, such as a Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobRun
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusterId")]
		public string VirtualClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public JobRunState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public ConfigurationOverrides ConfigurationOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobDriver")]
		public JobDriver JobDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		public string CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finishedAt")]
		public System.DateTimeOffset FinishedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateDetails")]
		public string StateDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public FailureReason FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryPolicyConfiguration")]
		public RetryPolicyConfiguration RetryPolicyConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryPolicyExecution")]
		public RetryPolicyExecution RetryPolicyExecution { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobRunState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCEL_PENDING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 6,
	}
	
	/// <summary>
	/// A configuration specification to be used to override existing configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfigurationOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="applicationConfiguration")]
		public Configuration[] ApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="monitoringConfiguration")]
		public MonitoringConfiguration MonitoringConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FailureReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER_UNAVAILABLE = 3,
	}
	
	/// <summary>
	/// The configuration of the retry policy that the job runs on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryPolicyConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxAttempts")]
		public int MaxAttempts { get; set; }
	}
	
	/// <summary>
	/// The current status of the retry policy executed on the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryPolicyExecution
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentAttemptCount")]
		public int CurrentAttemptCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobTemplate")]
		public JobTemplate JobTemplate { get; set; }
	}
	
	/// <summary>
	/// This entity describes a job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		public string CreatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobTemplateData")]
		public JobTemplateData JobTemplateData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kmsKeyArn")]
		public string KmsKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decryptionError")]
		public string DecryptionError { get; set; }
	}
	
	/// <summary>
	/// The values of StartJobRun API requests used in job runs started using the job template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobTemplateData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public ParametricConfigurationOverrides ConfigurationOverrides { get; set; }
		
		/// <summary>
		/// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDriver")]
		public JobDriver JobDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameterConfiguration")]
		public TemplateParameterConfigurationMap ParameterConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobTags")]
		public TagMap JobTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeManagedEndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public Endpoint Endpoint { get; set; }
	}
	
	/// <summary>
	/// This entity represents the endpoint that is managed by Amazon EMR on EKS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Endpoint
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusterId")]
		public string VirtualClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public EndpointState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificateArn")]
		public string CertificateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificateAuthority")]
		public Certificate CertificateAuthority { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public ConfigurationOverrides ConfigurationOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serverUrl")]
		public string ServerUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroup")]
		public string SecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnetIds")]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateDetails")]
		public string StateDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public FailureReason FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndpointState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED_WITH_ERRORS = 4,
	}
	
	/// <summary>
	/// The entity representing certificate data generated for managed endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Certificate
	{
		
		[System.Runtime.Serialization.DataMember(Name="certificateArn")]
		public string CertificateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificateData")]
		public string CertificateData { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVirtualClusterResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="virtualCluster")]
		public VirtualCluster VirtualCluster { get; set; }
	}
	
	/// <summary>
	/// This entity describes a virtual cluster. A virtual cluster is a Kubernetes namespace that Amazon EMR is registered with. Amazon EMR uses virtual clusters to run jobs and host endpoints. Multiple virtual clusters can be backed by the same physical cluster. However, each virtual cluster maps to one namespace on an Amazon EKS cluster. Virtual clusters do not create any active resources that contribute to your bill or that require lifecycle management outside the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VirtualCluster
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public VirtualClusterState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerProvider")]
		public ContainerProvider ContainerProvider { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VirtualClusterState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRESTED = 3,
	}
	
	/// <summary>
	/// The information about the container provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerProvider
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public ContainerProviderType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="info")]
		public ContainerInfo Info { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetManagedEndpointSessionCredentialsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public Credentials Credentials { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public System.DateTimeOffset ExpiresAt { get; set; }
	}
	
	/// <summary>
	/// The structure containing the session token being returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credentials
	{
		
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequestThrottledException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobRunsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobRuns")]
		public JobRun[] JobRuns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobTemplatesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="templates")]
		public JobTemplate[] Templates { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListManagedEndpointsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="endpoints")]
		public Endpoint[] Endpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVirtualClustersResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusters")]
		public VirtualCluster[] VirtualClusters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartJobRunResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="virtualClusterId")]
		public string VirtualClusterId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobRunRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobTemplateData")]
		public JobTemplateData JobTemplateData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kmsKeyArn")]
		public string KmsKeyArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateManagedEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		public string ReleaseLabel { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificateArn")]
		public string CertificateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public ConfigurationOverrides ConfigurationOverrides { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVirtualClusterRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containerProvider")]
		public ContainerProvider ContainerProvider { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJobTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteManagedEndpointRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVirtualClusterRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobRunRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeManagedEndpointRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVirtualClusterRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetManagedEndpointSessionCredentialsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="credentialType")]
		public string CredentialType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="durationInSeconds")]
		public System.Nullable<System.Int32> DurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logContext")]
		public string LogContext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobRunsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobTemplatesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListManagedEndpointsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVirtualClustersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SensitivePropertiesMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateParameterInputMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartJobRunRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobDriver")]
		public JobDriver JobDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public ConfigurationOverrides ConfigurationOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobTemplateId")]
		public string JobTemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobTemplateParameters")]
		public TemplateParameterInputMap JobTemplateParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryPolicyConfiguration")]
		public RetryPolicyConfiguration RetryPolicyConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TemplateParameterDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 1,
	}
	
	/// <summary>
	/// The configuration of a job template parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateParameterConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public TemplateParameterDataType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Cancels a job run. A job run is a unit of work, such as a Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.
		/// CancelJobRun virtualclusters/{virtualClusterId}/jobruns/{jobRunId}
		/// </summary>
		/// <param name="jobRunId">The ID of the job run to cancel.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="virtualClusterId">The ID of the virtual cluster for which the job run will be canceled.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CancelJobRunResponse> CancelJobRunAsync(string jobRunId, string virtualClusterId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/jobruns/"+ (jobRunId==null? "" : System.Uri.EscapeDataString(jobRunId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CancelJobRunResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Displays detailed information about a job run. A job run is a unit of work, such as a Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.
		/// DescribeJobRun virtualclusters/{virtualClusterId}/jobruns/{jobRunId}
		/// </summary>
		/// <param name="jobRunId">The ID of the job run request. 
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="virtualClusterId">The ID of the virtual cluster for which the job run is submitted.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeJobRunResponse> DescribeJobRunAsync(string jobRunId, string virtualClusterId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/jobruns/"+ (jobRunId==null? "" : System.Uri.EscapeDataString(jobRunId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeJobRunResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.
		/// CreateJobTemplate jobtemplates
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateJobTemplateResponse> CreateJobTemplateAsync(CreateJobTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "jobtemplates";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateJobTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists job templates based on a set of parameters. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.
		/// ListJobTemplates jobtemplates
		/// </summary>
		/// <param name="createdAfter">The date and time after which the job templates were created.</param>
		/// <param name="createdBefore"> The date and time before which the job templates were created.</param>
		/// <param name="maxResults"> The maximum number of job templates that can be listed.</param>
		/// <param name="nextToken"> The token for the next set of job templates to return.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task<ListJobTemplatesResponse> ListJobTemplatesAsync(System.DateTimeOffset createdAfter, System.DateTimeOffset createdBefore, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "jobtemplates?createdAfter=" + createdAfter.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&createdBefore=" + createdBefore.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListJobTemplatesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a managed endpoint. A managed endpoint is a gateway that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can communicate with your virtual cluster.
		/// CreateManagedEndpoint virtualclusters/{virtualClusterId}/endpoints
		/// </summary>
		/// <param name="virtualClusterId">The ID of the virtual cluster for which a managed endpoint is created.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateManagedEndpointResponse> CreateManagedEndpointAsync(string virtualClusterId, CreateManagedEndpointPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/endpoints";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateManagedEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists managed endpoints based on a set of parameters. A managed endpoint is a gateway that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can communicate with your virtual cluster.
		/// ListManagedEndpoints virtualclusters/{virtualClusterId}/endpoints
		/// </summary>
		/// <param name="virtualClusterId">The ID of the virtual cluster.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="createdBefore">The date and time before which the endpoints are created.</param>
		/// <param name="createdAfter"> The date and time after which the endpoints are created.</param>
		/// <param name="types">The types of the managed endpoints.
		/// Maximum items: 10
		// </param>
		/// <param name="states">The states of the managed endpoints.
		/// Maximum items: 10
		// </param>
		/// <param name="maxResults">The maximum number of managed endpoints that can be listed.</param>
		/// <param name="nextToken"> The token for the next set of managed endpoints to return. 
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task<ListManagedEndpointsResponse> ListManagedEndpointsAsync(string virtualClusterId, System.DateTimeOffset createdBefore, System.DateTimeOffset createdAfter, string[] types, EndpointState[] states, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/endpoints&createdBefore=" + createdBefore.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&createdAfter=" + createdAfter.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&"+string.Join("&", types.Select(z => $"types={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", states.Select(z => $"states={z}"))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListManagedEndpointsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any additional resource in your system. A single virtual cluster maps to a single Kubernetes namespace. Given this relationship, you can model virtual clusters the same way you model Kubernetes namespaces to meet your requirements.
		/// CreateVirtualCluster virtualclusters
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateVirtualClusterResponse> CreateVirtualClusterAsync(CreateVirtualClusterPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateVirtualClusterResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists information about the specified virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any additional resource in your system. A single virtual cluster maps to a single Kubernetes namespace. Given this relationship, you can model virtual clusters the same way you model Kubernetes namespaces to meet your requirements.
		/// ListVirtualClusters virtualclusters
		/// </summary>
		/// <param name="containerProviderId">The container provider ID of the virtual cluster.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="containerProviderType">The container provider type of the virtual cluster. Amazon EKS is the only supported type as of now.</param>
		/// <param name="createdAfter">The date and time after which the virtual clusters are created.</param>
		/// <param name="createdBefore">The date and time before which the virtual clusters are created.</param>
		/// <param name="states">The states of the requested virtual clusters.
		/// Maximum items: 10
		// </param>
		/// <param name="maxResults">The maximum number of virtual clusters that can be listed.</param>
		/// <param name="nextToken">The token for the next set of virtual clusters to return. 
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task<ListVirtualClustersResponse> ListVirtualClustersAsync(string containerProviderId, ContainerProviderType containerProviderType, System.DateTimeOffset createdAfter, System.DateTimeOffset createdBefore, VirtualClusterState[] states, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters?containerProviderId=" + (containerProviderId==null? "" : System.Uri.EscapeDataString(containerProviderId))+"&containerProviderType=" + containerProviderType+"&createdAfter=" + createdAfter.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&createdBefore=" + createdBefore.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&"+string.Join("&", states.Select(z => $"states={z}"))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVirtualClustersResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.
		/// DeleteJobTemplate jobtemplates/{templateId}
		/// </summary>
		/// <param name="templateId">The ID of the job template that will be deleted.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteJobTemplateResponse> DeleteJobTemplateAsync(string templateId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "jobtemplates/"+ (templateId==null? "" : System.Uri.EscapeDataString(templateId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteJobTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Displays detailed information about a specified job template. Job template stores values of StartJobRun API request in a template and can be used to start a job run. Job template allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun API request.
		/// DescribeJobTemplate jobtemplates/{templateId}
		/// </summary>
		/// <param name="templateId">The ID of the job template that will be described.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeJobTemplateResponse> DescribeJobTemplateAsync(string templateId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "jobtemplates/"+ (templateId==null? "" : System.Uri.EscapeDataString(templateId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeJobTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a managed endpoint. A managed endpoint is a gateway that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can communicate with your virtual cluster.
		/// DeleteManagedEndpoint virtualclusters/{virtualClusterId}/endpoints/{endpointId}
		/// </summary>
		/// <param name="endpointId">The ID of the managed endpoint.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="virtualClusterId">The ID of the endpoint's virtual cluster.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteManagedEndpointResponse> DeleteManagedEndpointAsync(string endpointId, string virtualClusterId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/endpoints/"+ (endpointId==null? "" : System.Uri.EscapeDataString(endpointId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteManagedEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Displays detailed information about a managed endpoint. A managed endpoint is a gateway that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can communicate with your virtual cluster.
		/// DescribeManagedEndpoint virtualclusters/{virtualClusterId}/endpoints/{endpointId}
		/// </summary>
		/// <param name="endpointId">This output displays ID of the managed endpoint.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="virtualClusterId">The ID of the endpoint's virtual cluster.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeManagedEndpointResponse> DescribeManagedEndpointAsync(string endpointId, string virtualClusterId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/endpoints/"+ (endpointId==null? "" : System.Uri.EscapeDataString(endpointId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeManagedEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any additional resource in your system. A single virtual cluster maps to a single Kubernetes namespace. Given this relationship, you can model virtual clusters the same way you model Kubernetes namespaces to meet your requirements.
		/// DeleteVirtualCluster virtualclusters/{virtualClusterId}
		/// </summary>
		/// <param name="virtualClusterId">The ID of the virtual cluster that will be deleted.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteVirtualClusterResponse> DeleteVirtualClusterAsync(string virtualClusterId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteVirtualClusterResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Displays detailed information about a specified virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any additional resource in your system. A single virtual cluster maps to a single Kubernetes namespace. Given this relationship, you can model virtual clusters the same way you model Kubernetes namespaces to meet your requirements.
		/// DescribeVirtualCluster virtualclusters/{virtualClusterId}
		/// </summary>
		/// <param name="virtualClusterId">The ID of the virtual cluster that will be described.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeVirtualClusterResponse> DescribeVirtualClusterAsync(string virtualClusterId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeVirtualClusterResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Generate a session token to connect to a managed endpoint.
		/// GetManagedEndpointSessionCredentials virtualclusters/{virtualClusterId}/endpoints/{endpointId}/credentials
		/// </summary>
		/// <param name="endpointId">The ARN of the managed endpoint for which the request is submitted. 
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="virtualClusterId">The ARN of the Virtual Cluster which the Managed Endpoint belongs to. 
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<GetManagedEndpointSessionCredentialsResponse> GetManagedEndpointSessionCredentialsAsync(string endpointId, string virtualClusterId, GetManagedEndpointSessionCredentialsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/endpoints/"+ (endpointId==null? "" : System.Uri.EscapeDataString(endpointId))+"/credentials";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetManagedEndpointSessionCredentialsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists job runs based on a set of parameters. A job run is a unit of work, such as a Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.
		/// ListJobRuns virtualclusters/{virtualClusterId}/jobruns
		/// </summary>
		/// <param name="virtualClusterId">The ID of the virtual cluster for which to list the job run. 
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="createdBefore">The date and time before which the job runs were submitted.</param>
		/// <param name="createdAfter">The date and time after which the job runs were submitted.</param>
		/// <param name="name">The name of the job run.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="states">The states of the job run.
		/// Maximum items: 10
		// </param>
		/// <param name="maxResults">The maximum number of job runs that can be listed.</param>
		/// <param name="nextToken">The token for the next set of job runs to return.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task<ListJobRunsResponse> ListJobRunsAsync(string virtualClusterId, System.DateTimeOffset createdBefore, System.DateTimeOffset createdAfter, string name, JobRunState[] states, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/jobruns&createdBefore=" + createdBefore.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&createdAfter=" + createdAfter.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&name=" + (name==null? "" : System.Uri.EscapeDataString(name))+"&"+string.Join("&", states.Select(z => $"states={z}"))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListJobRunsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Starts a job run. A job run is a unit of work, such as a Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.
		/// StartJobRun virtualclusters/{virtualClusterId}/jobruns
		/// </summary>
		/// <param name="virtualClusterId">The virtual cluster ID for which the job run request is submitted.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<StartJobRunResponse> StartJobRunAsync(string virtualClusterId, StartJobRunPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "virtualclusters/"+ (virtualClusterId==null? "" : System.Uri.EscapeDataString(virtualClusterId))+"/jobruns";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartJobRunResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the tags assigned to the resources.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The ARN of tagged resources.
		/// Min length: 60
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Assigns tags to resources. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize your Amazon Web Services resources by attributes such as purpose, owner, or environment. When you have many resources of the same type, you can quickly identify a specific resource based on the tags you've assigned to it. For example, you can define a set of tags for your Amazon EMR on EKS clusters to help you track each cluster's owner and stack level. We recommend that you devise a consistent set of tag keys for each resource type. You can then search and filter the resources based on the tags that you add.
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The ARN of resources.
		/// Min length: 60
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes tags from resources.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The ARN of resources.
		/// Min length: 60
		/// Max length: 500
		// </param>
		/// <param name="tagKeys">The tag keys of the resources.
		/// Minimum items: 0
		/// Maximum items: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class CreateJobTemplatePostBody
	{
		
		/// <summary>
		/// The specified name of the job template.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [\.\-_/#A-Za-z0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\.\-_/#A-Za-z0-9]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The client token of the job template.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The values of StartJobRun API requests used in job runs started using the job template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobTemplateData")]
		public CreateJobTemplatePostBodyJobTemplateData JobTemplateData { get; set; }
		
		/// <summary>
		/// The tags that are associated with the job template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The KMS key ARN used to encrypt the job template.
		/// Min length: 3
		/// Max length: 2048
		/// Pattern: ^(arn:(aws[a-zA-Z0-9-]*):kms:.+:(\d{12})?:key\/[(0-9a-zA-Z)-?]+|\$\{[a-zA-Z]\w*\})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsKeyArn")]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(arn:(aws[a-zA-Z0-9-]*):kms:.+:(\d{12})?:key\/[(0-9a-zA-Z)-?]+|\$\{[a-zA-Z]\w*\})$")]
		public string KmsKeyArn { get; set; }
	}
	
	public class CreateJobTemplatePostBodyJobTemplateData
	{
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public ParametricConfigurationOverrides ConfigurationOverrides { get; set; }
		
		/// <summary>
		/// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobDriver")]
		public JobDriver JobDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameterConfiguration")]
		public TemplateParameterConfigurationMap ParameterConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobTags")]
		public TagMap JobTags { get; set; }
	}
	
	public class CreateManagedEndpointPostBody
	{
		
		/// <summary>
		/// The name of the managed endpoint.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [\.\-_/#A-Za-z0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\.\-_/#A-Za-z0-9]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The type of the managed endpoint.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string Type { get; set; }
		
		/// <summary>
		/// The Amazon EMR release version.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [\.\-_/A-Za-z0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\.\-_/A-Za-z0-9]+")]
		public string ReleaseLabel { get; set; }
		
		/// <summary>
		/// The ARN of the execution role.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The certificate ARN provided by users for the managed endpoint. This field is under deprecation and will be removed in future releases.
		/// Min length: 44
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-zA-Z0-9-]*):acm:.+:(\d{12}):certificate/.+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certificateArn")]
		[System.ComponentModel.DataAnnotations.MinLength(44)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-zA-Z0-9-]*):acm:.+:(\d{12}):certificate/.+$")]
		public string CertificateArn { get; set; }
		
		/// <summary>
		/// A configuration specification to be used to override existing configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public CreateManagedEndpointPostBodyConfigurationOverrides ConfigurationOverrides { get; set; }
		
		/// <summary>
		/// The client idempotency token for this create call.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The tags of the managed endpoint. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateManagedEndpointPostBodyConfigurationOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="applicationConfiguration")]
		public Configuration[] ApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="monitoringConfiguration")]
		public MonitoringConfiguration MonitoringConfiguration { get; set; }
	}
	
	public class CreateVirtualClusterPostBody
	{
		
		/// <summary>
		/// The specified name of the virtual cluster.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [\.\-_/#A-Za-z0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\.\-_/#A-Za-z0-9]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The information about the container provider.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containerProvider")]
		public CreateVirtualClusterPostBodyContainerProvider ContainerProvider { get; set; }
		
		/// <summary>
		/// The client token of the virtual cluster.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The tags assigned to the virtual cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateVirtualClusterPostBodyContainerProvider
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public ContainerProviderType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="info")]
		public ContainerInfo Info { get; set; }
	}
	
	public class GetManagedEndpointSessionCredentialsPostBody
	{
		
		/// <summary>
		/// The IAM Execution Role ARN that will be used by the job run. 
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Type of the token requested. Currently supported and default value of this field is “TOKEN.”
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: ^.*\S.*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="credentialType")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^.*\S.*$")]
		public string CredentialType { get; set; }
		
		/// <summary>
		/// Duration in seconds for which the session token is valid. The default duration is 15 minutes and the maximum is 12 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="durationInSeconds")]
		public System.Nullable<System.Int32> DurationInSeconds { get; set; }
		
		/// <summary>
		/// String identifier used to separate sections of the execution logs uploaded to S3.
		/// Min length: 3
		/// Max length: 63
		/// Pattern: ^((?!.*-s3alias)(?!xn--.*)[a-z0-9][-a-z0-9.]*)?[a-z0-9]$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logContext")]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^((?!.*-s3alias)(?!xn--.*)[a-z0-9][-a-z0-9.]*)?[a-z0-9]$")]
		public string LogContext { get; set; }
		
		/// <summary>
		/// The client idempotency token of the job run request.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string ClientToken { get; set; }
	}
	
	public class StartJobRunPostBody
	{
		
		/// <summary>
		/// The name of the job run.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [\.\-_/#A-Za-z0-9]+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\.\-_/#A-Za-z0-9]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The client idempotency token of the job run request. 
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The execution role ARN for the job run.
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The Amazon EMR release version to use for the job run.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [\.\-_/A-Za-z0-9]+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseLabel")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\.\-_/A-Za-z0-9]+")]
		public string ReleaseLabel { get; set; }
		
		/// <summary>
		/// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobDriver")]
		public StartJobRunPostBodyJobDriver JobDriver { get; set; }
		
		/// <summary>
		/// A configuration specification to be used to override existing configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurationOverrides")]
		public StartJobRunPostBodyConfigurationOverrides ConfigurationOverrides { get; set; }
		
		/// <summary>
		/// The tags assigned to job runs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The job template ID to be used to start the job run.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [0-9a-z]+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTemplateId")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9a-z]+")]
		public string JobTemplateId { get; set; }
		
		/// <summary>
		/// The values of job template parameters to start a job run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTemplateParameters")]
		public System.Collections.Generic.Dictionary<string, string> JobTemplateParameters { get; set; }
		
		/// <summary>
		/// The configuration of the retry policy that the job runs on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retryPolicyConfiguration")]
		public StartJobRunPostBodyRetryPolicyConfiguration RetryPolicyConfiguration { get; set; }
	}
	
	public class StartJobRunPostBodyJobDriver
	{
		
		[System.Runtime.Serialization.DataMember(Name="sparkSubmitJobDriver")]
		public SparkSubmitJobDriver SparkSubmitJobDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sparkSqlJobDriver")]
		public SparkSqlJobDriver SparkSqlJobDriver { get; set; }
	}
	
	public class StartJobRunPostBodyConfigurationOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="applicationConfiguration")]
		public Configuration[] ApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="monitoringConfiguration")]
		public MonitoringConfiguration MonitoringConfiguration { get; set; }
	}
	
	public class StartJobRunPostBodyRetryPolicyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxAttempts")]
		public System.Nullable<System.Int32> MaxAttempts { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The tags assigned to resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

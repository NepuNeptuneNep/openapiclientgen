//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A light reference to an audit by id, used to group and weight audits in a given category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditRefs
	{
		
		/// <summary>
		/// The conventional acronym for the audit/metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="acronym")]
		public string Acronym { get; set; }
		
		/// <summary>
		/// The category group that the audit belongs to (optional).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// The audit ref id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Any audit IDs closely relevant to this one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relevantAudits")]
		public string[] RelevantAudits { get; set; }
		
		/// <summary>
		/// The weight this audit's score has on the overall category score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public System.Nullable<System.Double> Weight { get; set; }
	}
	
	/// <summary>
	/// A proportion of data in the total distribution, bucketed by a min/max percentage. Each bucket's range is bounded by min <= x < max, In millisecond.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Bucket
	{
		
		/// <summary>
		/// Upper bound for a bucket's range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max")]
		public System.Nullable<System.Int32> Max { get; set; }
		
		/// <summary>
		/// Lower bound for a bucket's range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="min")]
		public System.Nullable<System.Int32> Min { get; set; }
		
		/// <summary>
		/// The proportion of data in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proportion")]
		public System.Nullable<System.Double> Proportion { get; set; }
	}
	
	/// <summary>
	/// The categories in a Lighthouse run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Categories
	{
		
		/// <summary>
		/// A Lighthouse category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessibility")]
		public LighthouseCategoryV5 Accessibility { get; set; }
		
		/// <summary>
		/// A Lighthouse category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="best-practices")]
		public LighthouseCategoryV5 Best_practices { get; set; }
		
		/// <summary>
		/// A Lighthouse category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="performance")]
		public LighthouseCategoryV5 Performance { get; set; }
		
		/// <summary>
		/// A Lighthouse category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwa")]
		public LighthouseCategoryV5 Pwa { get; set; }
		
		/// <summary>
		/// A Lighthouse category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="seo")]
		public LighthouseCategoryV5 Seo { get; set; }
	}
	
	/// <summary>
	/// A Lighthouse category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LighthouseCategoryV5
	{
		
		/// <summary>
		/// An array of references to all the audit members of this category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditRefs")]
		public AuditRefs[] AuditRefs { get; set; }
		
		/// <summary>
		/// A more detailed description of the category and its importance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The string identifier of the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A description for the manual audits in the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manualDescription")]
		public string ManualDescription { get; set; }
		
		/// <summary>
		/// The overall score of the category, the weighted average of all its audits. (The category's score, can be null.)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public object Score { get; set; }
		
		/// <summary>
		/// The human-friendly name of the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Message containing a category
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoryGroupV5
	{
		
		/// <summary>
		/// The description of what the category is grouping
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The human readable title of the group
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Message containing the configuration settings for the Lighthouse run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfigSettings
	{
		
		/// <summary>
		/// How Lighthouse was run, e.g. from the Chrome extension or from the npm module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The form factor the emulation should use. This field is deprecated, form_factor should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emulatedFormFactor")]
		public string EmulatedFormFactor { get; set; }
		
		/// <summary>
		/// How Lighthouse should interpret this run in regards to scoring performance metrics and skipping mobile-only tests in desktop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formFactor")]
		public string FormFactor { get; set; }
		
		/// <summary>
		/// The locale setting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		/// <summary>
		/// List of categories of audits the run should conduct.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onlyCategories")]
		public object OnlyCategories { get; set; }
	}
	
	/// <summary>
	/// Message containing environment configuration for a Lighthouse run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Environment
	{
		
		/// <summary>
		/// The benchmark index number that indicates rough device class.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="benchmarkIndex")]
		public System.Nullable<System.Double> BenchmarkIndex { get; set; }
		
		/// <summary>
		/// The version of libraries with which these results were generated. Ex: axe-core.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credits")]
		public System.Collections.Generic.Dictionary<string, string> Credits { get; set; }
		
		/// <summary>
		/// The user agent string of the version of Chrome used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostUserAgent")]
		public string HostUserAgent { get; set; }
		
		/// <summary>
		/// The user agent string that was sent over the network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUserAgent")]
		public string NetworkUserAgent { get; set; }
	}
	
	/// <summary>
	/// Message containing the i18n data for the LHR - Version 1.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class I18n
	{
		
		/// <summary>
		/// Message holding the formatted strings used in the renderer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rendererFormattedStrings")]
		public RendererFormattedStrings RendererFormattedStrings { get; set; }
	}
	
	/// <summary>
	/// Message holding the formatted strings used in the renderer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RendererFormattedStrings
	{
		
		/// <summary>
		/// The tooltip text on an expandable chevron icon.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditGroupExpandTooltip")]
		public string AuditGroupExpandTooltip { get; set; }
		
		/// <summary>
		/// Text link pointing to the Lighthouse scoring calculator. This link immediately follows a sentence stating the performance score is calculated from the perf metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calculatorLink")]
		public string CalculatorLink { get; set; }
		
		/// <summary>
		/// The label for the initial request in a critical request chain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crcInitialNavigation")]
		public string CrcInitialNavigation { get; set; }
		
		/// <summary>
		/// The label for values shown in the summary of critical request chains.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crcLongestDurationLabel")]
		public string CrcLongestDurationLabel { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that copies the Lighthouse JSON object to the system clipboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownCopyJSON")]
		public string DropdownCopyJSON { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that toggles the themeing of the report between Light(default) and Dark themes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownDarkTheme")]
		public string DropdownDarkTheme { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that opens a full Lighthouse report in a print dialog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownPrintExpanded")]
		public string DropdownPrintExpanded { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that opens a small, summary report in a print dialog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownPrintSummary")]
		public string DropdownPrintSummary { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that saves the current report as a new GitHub Gist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownSaveGist")]
		public string DropdownSaveGist { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that saves the Lighthouse report HTML locally to the system as a '.html' file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownSaveHTML")]
		public string DropdownSaveHTML { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that saves the Lighthouse JSON object to the local system as a '.json' file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownSaveJSON")]
		public string DropdownSaveJSON { get; set; }
		
		/// <summary>
		/// Option in a dropdown menu that opens the current report in the Lighthouse Viewer Application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dropdownViewer")]
		public string DropdownViewer { get; set; }
		
		/// <summary>
		/// The label shown next to an audit or metric that has had an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorLabel")]
		public string ErrorLabel { get; set; }
		
		/// <summary>
		/// The error string shown next to an erroring audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMissingAuditInfo")]
		public string ErrorMissingAuditInfo { get; set; }
		
		/// <summary>
		/// Label for button to create an issue against the Lighthouse GitHub project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="footerIssue")]
		public string FooterIssue { get; set; }
		
		/// <summary>
		/// The title of the lab data performance category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labDataTitle")]
		public string LabDataTitle { get; set; }
		
		/// <summary>
		/// The disclaimer shown under performance explaining that the network can vary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lsPerformanceCategoryDescription")]
		public string LsPerformanceCategoryDescription { get; set; }
		
		/// <summary>
		/// The heading shown above a list of audits that were not computerd in the run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manualAuditsGroupTitle")]
		public string ManualAuditsGroupTitle { get; set; }
		
		/// <summary>
		/// The heading shown above a list of audits that do not apply to a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notApplicableAuditsGroupTitle")]
		public string NotApplicableAuditsGroupTitle { get; set; }
		
		/// <summary>
		/// The heading for the estimated page load savings opportunity of an audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opportunityResourceColumnLabel")]
		public string OpportunityResourceColumnLabel { get; set; }
		
		/// <summary>
		/// The heading for the estimated page load savings of opportunity audits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opportunitySavingsColumnLabel")]
		public string OpportunitySavingsColumnLabel { get; set; }
		
		/// <summary>
		/// The heading that is shown above a list of audits that are passing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passedAuditsGroupTitle")]
		public string PassedAuditsGroupTitle { get; set; }
		
		/// <summary>
		/// Descriptive explanation for emulation setting when emulating a generic desktop form factor, as opposed to a mobile-device like form factor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeDesktopEmulation")]
		public string RuntimeDesktopEmulation { get; set; }
		
		/// <summary>
		/// Descriptive explanation for emulation setting when emulating a Nexus 5X mobile device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeMobileEmulation")]
		public string RuntimeMobileEmulation { get; set; }
		
		/// <summary>
		/// Descriptive explanation for emulation setting when no device emulation is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeNoEmulation")]
		public string RuntimeNoEmulation { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows the version of the Axe library used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsAxeVersion")]
		public string RuntimeSettingsAxeVersion { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows the estimated CPU power of the machine running Lighthouse. Example row values: 532, 1492, 783.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsBenchmark")]
		public string RuntimeSettingsBenchmark { get; set; }
		
		/// <summary>
		/// Label for a row in a table that describes the CPU throttling conditions that were used during a Lighthouse run, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsCPUThrottling")]
		public string RuntimeSettingsCPUThrottling { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows in what tool Lighthouse is being run (e.g. The lighthouse CLI, Chrome DevTools, Lightrider, WebPageTest, etc).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsChannel")]
		public string RuntimeSettingsChannel { get; set; }
		
		/// <summary>
		/// Label for a row in a table that describes the kind of device that was emulated for the Lighthouse run. Example values for row elements: 'No Emulation', 'Emulated Desktop', etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsDevice")]
		public string RuntimeSettingsDevice { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows the time at which a Lighthouse run was conducted; formatted as a timestamp, e.g. Jan 1, 1970 12:00 AM UTC.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsFetchTime")]
		public string RuntimeSettingsFetchTime { get; set; }
		
		/// <summary>
		/// Label for a row in a table that describes the network throttling conditions that were used during a Lighthouse run, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsNetworkThrottling")]
		public string RuntimeSettingsNetworkThrottling { get; set; }
		
		/// <summary>
		/// Title of the Runtime settings table in a Lighthouse report. Runtime settings are the environment configurations that a specific report used at auditing time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsTitle")]
		public string RuntimeSettingsTitle { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows the User Agent that was detected on the Host machine that ran Lighthouse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsUA")]
		public string RuntimeSettingsUA { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows the User Agent that was used to send out all network requests during the Lighthouse run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsUANetwork")]
		public string RuntimeSettingsUANetwork { get; set; }
		
		/// <summary>
		/// Label for a row in a table that shows the URL that was audited during a Lighthouse run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeSettingsUrl")]
		public string RuntimeSettingsUrl { get; set; }
		
		/// <summary>
		/// Descriptive explanation for a runtime setting that is set to an unknown value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeUnknown")]
		public string RuntimeUnknown { get; set; }
		
		/// <summary>
		/// The label that explains the score gauges scale (0-49, 50-89, 90-100).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scorescaleLabel")]
		public string ScorescaleLabel { get; set; }
		
		/// <summary>
		/// Label preceding a radio control for filtering the list of audits. The radio choices are various performance metrics (FCP, LCP, TBT), and if chosen, the audits in the report are hidden if they are not relevant to the selected metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="showRelevantAudits")]
		public string ShowRelevantAudits { get; set; }
		
		/// <summary>
		/// The label for the button to show only a few lines of a snippet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snippetCollapseButtonLabel")]
		public string SnippetCollapseButtonLabel { get; set; }
		
		/// <summary>
		/// The label for the button to show all lines of a snippet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snippetExpandButtonLabel")]
		public string SnippetExpandButtonLabel { get; set; }
		
		/// <summary>
		/// This label is for a filter checkbox above a table of items
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thirdPartyResourcesLabel")]
		public string ThirdPartyResourcesLabel { get; set; }
		
		/// <summary>
		/// Descriptive explanation for environment throttling that was provided by the runtime environment instead of provided by Lighthouse throttling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="throttlingProvided")]
		public string ThrottlingProvided { get; set; }
		
		/// <summary>
		/// The label shown preceding important warnings that may have invalidated an entire report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="toplevelWarningsMessage")]
		public string ToplevelWarningsMessage { get; set; }
		
		/// <summary>
		/// The disclaimer shown below a performance metric value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="varianceDisclaimer")]
		public string VarianceDisclaimer { get; set; }
		
		/// <summary>
		/// Label for a button that opens the Treemap App
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewTreemapLabel")]
		public string ViewTreemapLabel { get; set; }
		
		/// <summary>
		/// The heading that is shown above a list of audits that have warnings
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warningAuditsGroupTitle")]
		public string WarningAuditsGroupTitle { get; set; }
		
		/// <summary>
		/// The label shown above a bulleted list of warnings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warningHeader")]
		public string WarningHeader { get; set; }
	}
	
	/// <summary>
	/// Message containing an Entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LhrEntity
	{
		
		/// <summary>
		/// Optional. An optional category name for the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// Optional. An optional homepage URL of the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="homepage")]
		public string Homepage { get; set; }
		
		/// <summary>
		/// Optional. An optional flag indicating if the entity is the first party.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isFirstParty")]
		public System.Nullable<System.Boolean> IsFirstParty { get; set; }
		
		/// <summary>
		/// Optional. An optional flag indicating if the entity is not recognized.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isUnrecognized")]
		public System.Nullable<System.Boolean> IsUnrecognized { get; set; }
		
		/// <summary>
		/// Required. Name of the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. A list of URL origin strings that belong to this entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origins")]
		public string[] Origins { get; set; }
	}
	
	/// <summary>
	/// An audit's result object in a Lighthouse result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LighthouseAuditResultV5
	{
		
		/// <summary>
		/// The description of the audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Freeform details section of the audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public System.Collections.Generic.Dictionary<string, object> Details { get; set; }
		
		/// <summary>
		/// The value that should be displayed on the UI for this audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayValue")]
		public string DisplayValue { get; set; }
		
		/// <summary>
		/// An error message from a thrown error inside the audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
		
		/// <summary>
		/// An explanation of the errors in the audit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanation")]
		public string Explanation { get; set; }
		
		/// <summary>
		/// The audit's id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unit of the numeric_value field. Used to format the numeric value for display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericUnit")]
		public string NumericUnit { get; set; }
		
		/// <summary>
		/// A numeric value that has a meaning specific to the audit, e.g. the number of nodes in the DOM or the timestamp of a specific load event. More information can be found in the audit details, if present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericValue")]
		public System.Nullable<System.Double> NumericValue { get; set; }
		
		/// <summary>
		/// The score of the audit, can be null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public object Score { get; set; }
		
		/// <summary>
		/// The enumerated score display mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scoreDisplayMode")]
		public string ScoreDisplayMode { get; set; }
		
		/// <summary>
		/// The human readable title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Possible warnings that occurred in the audit, can be null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public object Warnings { get; set; }
	}
	
	/// <summary>
	/// The Lighthouse result object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LighthouseResultV5
	{
		
		/// <summary>
		/// Map of audits in the LHR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audits")]
		public System.Collections.Generic.Dictionary<string, LighthouseAuditResultV5> Audits { get; set; }
		
		/// <summary>
		/// The categories in a Lighthouse run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public Categories Categories { get; set; }
		
		/// <summary>
		/// Map of category groups in the LHR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoryGroups")]
		public System.Collections.Generic.Dictionary<string, CategoryGroupV5> CategoryGroups { get; set; }
		
		/// <summary>
		/// Message containing the configuration settings for the Lighthouse run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configSettings")]
		public ConfigSettings ConfigSettings { get; set; }
		
		/// <summary>
		/// Entity classification data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public LhrEntity[] Entities { get; set; }
		
		/// <summary>
		/// Message containing environment configuration for a Lighthouse run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
		
		/// <summary>
		/// The time that this run was fetched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fetchTime")]
		public string FetchTime { get; set; }
		
		/// <summary>
		/// URL displayed on the page after Lighthouse finishes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalDisplayedUrl")]
		public string FinalDisplayedUrl { get; set; }
		
		/// <summary>
		/// The final resolved url that was audited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalUrl")]
		public string FinalUrl { get; set; }
		
		/// <summary>
		/// Screenshot data of the full page, along with node rects relevant to the audit results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullPageScreenshot")]
		public object FullPageScreenshot { get; set; }
		
		/// <summary>
		/// Message containing the i18n data for the LHR - Version 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="i18n")]
		public I18n I18n { get; set; }
		
		/// <summary>
		/// The lighthouse version that was used to generate this LHR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lighthouseVersion")]
		public string LighthouseVersion { get; set; }
		
		/// <summary>
		/// URL of the main document request of the final navigation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mainDocumentUrl")]
		public string MainDocumentUrl { get; set; }
		
		/// <summary>
		/// The original requested url.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedUrl")]
		public string RequestedUrl { get; set; }
		
		/// <summary>
		/// List of all run warnings in the LHR. Will always output to at least `[]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runWarnings")]
		public string[] RunWarnings { get; set; }
		
		/// <summary>
		/// Message containing a runtime error config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeError")]
		public RuntimeError RuntimeError { get; set; }
		
		/// <summary>
		/// The Stack Pack advice strings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stackPacks")]
		public StackPack[] StackPacks { get; set; }
		
		/// <summary>
		/// Message containing the performance timing data for the Lighthouse run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timing")]
		public Timing Timing { get; set; }
		
		/// <summary>
		/// The user agent that was used to run this LHR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
	}
	
	/// <summary>
	/// Message containing a runtime error config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuntimeError
	{
		
		/// <summary>
		/// The enumerated Lighthouse Error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// A human readable message explaining the error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Message containing Stack Pack information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackPack
	{
		
		/// <summary>
		/// The stack pack advice strings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="descriptions")]
		public System.Collections.Generic.Dictionary<string, string> Descriptions { get; set; }
		
		/// <summary>
		/// The stack pack icon data uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iconDataURL")]
		public string IconDataURL { get; set; }
		
		/// <summary>
		/// The stack pack id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The stack pack title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Message containing the performance timing data for the Lighthouse run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Timing
	{
		
		/// <summary>
		/// The total duration of Lighthouse's run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	/// <summary>
	/// The CrUX loading experience object that contains CrUX data breakdowns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PagespeedApiLoadingExperienceV5
	{
		
		/// <summary>
		/// The url, pattern or origin which the metrics are on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The requested URL, which may differ from the resolved "id".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="initial_url")]
		public string Initial_url { get; set; }
		
		/// <summary>
		/// The map of .
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public System.Collections.Generic.Dictionary<string, UserPageLoadMetricV5> Metrics { get; set; }
		
		/// <summary>
		/// True if the result is an origin fallback from a page, false otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origin_fallback")]
		public System.Nullable<System.Boolean> Origin_fallback { get; set; }
		
		/// <summary>
		/// The human readable speed "category" of the id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overall_category")]
		public string Overall_category { get; set; }
	}
	
	/// <summary>
	/// A CrUX metric object for a single metric and form factor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserPageLoadMetricV5
	{
		
		/// <summary>
		/// The category of the specific time metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// Metric distributions. Proportions should sum up to 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distributions")]
		public Bucket[] Distributions { get; set; }
		
		/// <summary>
		/// Identifies the form factor of the metric being collected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formFactor")]
		public string FormFactor { get; set; }
		
		/// <summary>
		/// The median number of the metric, in millisecond.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="median")]
		public System.Nullable<System.Int32> Median { get; set; }
		
		/// <summary>
		/// Identifies the type of the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricId")]
		public string MetricId { get; set; }
		
		/// <summary>
		/// We use this field to store certain percentile value for this metric. For v4, this field contains pc50. For v5, this field contains pc90.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentile")]
		public System.Nullable<System.Int32> Percentile { get; set; }
	}
	
	/// <summary>
	/// The Pagespeed API response object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PagespeedApiPagespeedResponseV5
	{
		
		/// <summary>
		/// The UTC timestamp of this analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisUTCTimestamp")]
		public string AnalysisUTCTimestamp { get; set; }
		
		/// <summary>
		/// The captcha verify result
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="captchaResult")]
		public string CaptchaResult { get; set; }
		
		/// <summary>
		/// Canonicalized and final URL for the document, after following page redirects (if any).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Kind of result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// The Lighthouse result object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lighthouseResult")]
		public LighthouseResultV5 LighthouseResult { get; set; }
		
		/// <summary>
		/// The CrUX loading experience object that contains CrUX data breakdowns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadingExperience")]
		public PagespeedApiLoadingExperienceV5 LoadingExperience { get; set; }
		
		/// <summary>
		/// The CrUX loading experience object that contains CrUX data breakdowns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originLoadingExperience")]
		public PagespeedApiLoadingExperienceV5 OriginLoadingExperience { get; set; }
		
		/// <summary>
		/// The Pagespeed Version object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public PagespeedVersion Version { get; set; }
	}
	
	/// <summary>
	/// The Pagespeed Version object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PagespeedVersion
	{
		
		/// <summary>
		/// The major version number of PageSpeed used to generate these results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="major")]
		public string Major { get; set; }
		
		/// <summary>
		/// The minor version number of PageSpeed used to generate these results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minor")]
		public string Minor { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Runs PageSpeed analysis on the page at the specified URL, and returns PageSpeed scores, a list of suggestions to make that page faster, and other information.
		/// Pagespeedonline_pagespeedapi_runpagespeed pagespeedonline/v5/runPagespeed
		/// </summary>
		/// <param name="url">Required. The URL to fetch and analyze</param>
		/// <param name="captchaToken">The captcha token passed when filling out a captcha.</param>
		/// <param name="category">A Lighthouse category to run; if none are given, only Performance category will be run</param>
		/// <param name="locale">The locale used to localize formatted results</param>
		/// <param name="strategy">The analysis strategy (desktop or mobile) to use, and desktop is the default</param>
		/// <param name="utm_campaign">Campaign name for analytics.</param>
		/// <param name="utm_source">Campaign source for analytics.</param>
		/// <returns>Successful response</returns>
		public async Task<PagespeedApiPagespeedResponseV5> Pagespeedonline_pagespeedapi_runpagespeedAsync(string url, string captchaToken, string[] category, string locale, Pagespeedonline_pagespeedapi_runpagespeedStrategy strategy, string utm_campaign, string utm_source, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "pagespeedonline/v5/runPagespeed?url=" + (url==null? "" : System.Uri.EscapeDataString(url))+"&captchaToken=" + (captchaToken==null? "" : System.Uri.EscapeDataString(captchaToken))+"&"+string.Join("&", category.Select(z => $"category={System.Uri.EscapeDataString(z.ToString())}"))+"&locale=" + (locale==null? "" : System.Uri.EscapeDataString(locale))+"&strategy=" + strategy+"&utm_campaign=" + (utm_campaign==null? "" : System.Uri.EscapeDataString(utm_campaign))+"&utm_source=" + (utm_source==null? "" : System.Uri.EscapeDataString(utm_source));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PagespeedApiPagespeedResponseV5>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Pagespeedonline_pagespeedapi_runpagespeedStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRATEGY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESKTOP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

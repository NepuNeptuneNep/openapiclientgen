//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Origin Origin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OriginDetails OriginDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_SNAPSHOT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDSHIFT_DATA_SHARE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		API_GATEWAY_API = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_DATA_ACCESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAKE_FORMATION_DATA_PERMISSION = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Origin
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTITLED = 1,
	}
	
	/// <summary>
	/// Details about the origin of the data set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OriginDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ProductId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOf__string
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceLimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEventActionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Event Event { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	/// <summary>
	/// What occurs after a certain event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Action
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoExportRevisionToS3RequestDetails ExportRevisionToS3 { get; set; }
	}
	
	/// <summary>
	/// Details of the operation to be performed by the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoExportRevisionToS3RequestDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportServerSideEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoExportRevisionDestinationEntry RevisionDestination { get; set; }
	}
	
	/// <summary>
	/// Encryption configuration of the export job. Includes the encryption type in addition to the AWS KMS key. The KMS key is only necessary if you chose the KMS encryption type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportServerSideEncryption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryptionTypes Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ServerSideEncryptionTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="aws:kms")]
		awskms = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES256 = 1,
	}
	
	/// <summary>
	/// A revision destination is the Amazon S3 bucket folder destination to where the export will be sent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoExportRevisionDestinationEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KeyPattern { get; set; }
	}
	
	/// <summary>
	/// What occurs to start an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Event
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RevisionPublished RevisionPublished { get; set; }
	}
	
	/// <summary>
	/// Information about the published revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevisionPublished
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResponseDetails Details { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Type Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	/// <summary>
	/// Details for the response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResponseDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportAssetToSignedUrlResponseDetails ExportAssetToSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportAssetsToS3ResponseDetails ExportAssetsToS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportRevisionsToS3ResponseDetails ExportRevisionsToS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromSignedUrlResponseDetails ImportAssetFromSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromS3ResponseDetails ImportAssetsFromS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromRedshiftDataSharesResponseDetails ImportAssetsFromRedshiftDataShares { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromApiGatewayApiResponseDetails ImportAssetFromApiGatewayApi { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateS3DataAccessFromS3BucketResponseDetails CreateS3DataAccessFromS3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromLakeFormationTagPolicyResponseDetails ImportAssetsFromLakeFormationTagPolicy { get; set; }
	}
	
	/// <summary>
	/// The details of the export to signed URL response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportAssetToSignedUrlResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SignedUrlExpiresAt { get; set; }
	}
	
	/// <summary>
	/// Details about the export to Amazon S3 response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportAssetsToS3ResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDestinationEntry[] AssetDestinations { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportServerSideEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The destination for the asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetDestinationEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Details about the export revisions to Amazon S3 response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportRevisionsToS3ResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportServerSideEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RevisionDestinationEntry[] RevisionDestinations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventActionArn { get; set; }
	}
	
	/// <summary>
	/// The destination where the assets in the revision will be exported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevisionDestinationEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KeyPattern { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The details in the response for an import request, including the signed URL and other information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetFromSignedUrlResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Md5Hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SignedUrlExpiresAt { get; set; }
	}
	
	/// <summary>
	/// Details from an import from Amazon S3 response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetsFromS3ResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetSourceEntry[] AssetSources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The source of the assets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetSourceEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Details from an import from Amazon Redshift datashare response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetsFromRedshiftDataSharesResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RedshiftDataShareAssetSourceEntry[] AssetSources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The source of the Amazon Redshift datashare asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RedshiftDataShareAssetSourceEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataShareArn { get; set; }
	}
	
	/// <summary>
	/// The response details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetFromApiGatewayApiResponseDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiSpecificationMd5Hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiSpecificationUploadUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ApiSpecificationUploadUrlExpiresAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REST = 0,
	}
	
	/// <summary>
	/// Details about the response of the operation to create an S3 data access from an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateS3DataAccessFromS3BucketResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3DataAccessAssetSourceEntry AssetSource { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Source details for an Amazon S3 data access asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3DataAccessAssetSourceEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] KeyPrefixes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Keys { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KmsKeyToGrant[] KmsKeysToGrant { get; set; }
	}
	
	/// <summary>
	/// The Amazon Resource Name (ARN) of the AWS KMS key used to encrypt the shared S3 objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KmsKeyToGrant
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
	}
	
	/// <summary>
	/// Details from an import AWS Lake Formation tag policy job response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetsFromLakeFormationTagPolicyResponseDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CatalogId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseLFTagPolicyAndPermissions Database { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableLFTagPolicyAndPermissions Table { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The LF-tag policy and permissions for database resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatabaseLFTagPolicyAndPermissions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFTag[] Expression { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DatabaseLFTagPolicyPermission[] Permissions { get; set; }
	}
	
	/// <summary>
	/// A structure that allows an LF-admin to grant permissions on certain conditions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LFTag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DatabaseLFTagPolicyPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCRIBE = 0,
	}
	
	/// <summary>
	/// The LF-tag policy and permissions that apply to table resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableLFTagPolicyAndPermissions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFTag[] Expression { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TableTagPolicyLFPermission[] Permissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableTagPolicyLFPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCRIBE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT = 1,
	}
	
	/// <summary>
	/// An error that occurred with the job request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Code Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Details Details { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobErrorLimitName LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LimitValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobErrorResourceTypes ResourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_DENIED_EXCEPTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_SERVER_EXCEPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MALWARE_DETECTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_NOT_FOUND_EXCEPTION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_QUOTA_EXCEEDED_EXCEPTION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_EXCEPTION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MALWARE_SCAN_ENCRYPTED_FILE = 6,
	}
	
	/// <summary>
	/// Information about the job error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Details
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromSignedUrlJobErrorDetails ImportAssetFromSignedUrlJobErrorDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetSourceEntry[] ImportAssetsFromS3JobErrorDetails { get; set; }
	}
	
	/// <summary>
	/// Details about the job error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetFromSignedUrlJobErrorDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobErrorLimitName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Assets per revision")]
		Assets_per_revision = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Asset size in GB")]
		Asset_size_in_GB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Amazon Redshift datashare assets per revision")]
		Amazon_Redshift_datashare_assets_per_revision = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS Lake Formation data permission assets per revision")]
		AWS_Lake_Formation_data_permission_assets_per_revision = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Amazon S3 data access assets per revision")]
		Amazon_S3_data_access_assets_per_revision = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobErrorResourceTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVISION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSET = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum State
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMED_OUT = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ASSETS_FROM_S3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ASSET_FROM_SIGNED_URL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORT_ASSETS_TO_S3 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORT_ASSET_TO_SIGNED_URL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORT_REVISIONS_TO_S3 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ASSET_FROM_API_GATEWAY_API = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_S3_DATA_ACCESS_FROM_S3_BUCKET = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY = 8,
	}
	
	/// <summary>
	/// Details of the operation to be performed by the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportAssetToSignedUrlRequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Details of the operation to be performed by the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportAssetsToS3RequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDestinationEntry[] AssetDestinations { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportServerSideEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Details of the operation to be performed by the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportRevisionsToS3RequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportServerSideEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RevisionDestinationEntry[] RevisionDestinations { get; set; }
	}
	
	/// <summary>
	/// Details of the operation to be performed by the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetFromSignedUrlRequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Md5Hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Details of the operation to be performed by the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetsFromS3RequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetSourceEntry[] AssetSources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Details from an import from Amazon Redshift datashare request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetsFromRedshiftDataSharesRequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RedshiftDataShareAssetSourceEntry[] AssetSources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The request details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetFromApiGatewayApiRequestDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiSpecificationMd5Hash { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ProtocolType ProtocolType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	/// <summary>
	/// Details of the operation to create an Amazon S3 data access from an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateS3DataAccessFromS3BucketRequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3DataAccessAssetSourceEntry AssetSource { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Details about the assets imported from an AWS Lake Formation tag policy request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportAssetsFromLakeFormationTagPolicyRequestDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CatalogId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseLFTagPolicyAndPermissions Database { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableLFTagPolicyAndPermissions Table { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRevisionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevocationComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Revoked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RevokedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAssetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetDetails AssetDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	/// <summary>
	/// Details about the asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3SnapshotAsset S3SnapshotAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftDataShareAsset RedshiftDataShareAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApiGatewayApiAsset ApiGatewayApiAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3DataAccessAsset S3DataAccessAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LakeFormationDataPermissionAsset LakeFormationDataPermissionAsset { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 object that is the asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3SnapshotAsset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Size { get; set; }
	}
	
	/// <summary>
	/// The Amazon Redshift datashare asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RedshiftDataShareAsset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// The API Gateway API that is the asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApiGatewayApiAsset
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiSpecificationDownloadUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ApiSpecificationDownloadUrlExpiresAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProtocolType ProtocolType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Stage { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 data access that is the asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3DataAccessAsset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] KeyPrefixes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Keys { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3AccessPointAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3AccessPointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KmsKeyToGrant[] KmsKeysToGrant { get; set; }
	}
	
	/// <summary>
	/// The AWS Lake Formation data permission asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LakeFormationDataPermissionAsset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LakeFormationDataPermissionDetails LakeFormationDataPermissionDetails { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LakeFormationDataPermissionType LakeFormationDataPermissionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFPermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Details about the AWS Lake Formation data permission.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LakeFormationDataPermissionDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LFTagPolicyDetails LFTagPolicy { get; set; }
	}
	
	/// <summary>
	/// Details about the LF-tag policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LFTagPolicyDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CatalogId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFResourceType ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFResourceDetails ResourceDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LFResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE = 1,
	}
	
	/// <summary>
	/// Details about the AWS Lake Formation resource (Table or Database) included in the AWS Lake Formation data permission.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LFResourceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseLFTagPolicy Database { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableLFTagPolicy Table { get; set; }
	}
	
	/// <summary>
	/// The LF-tag policy for database resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatabaseLFTagPolicy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFTag[] Expression { get; set; }
	}
	
	/// <summary>
	/// The LF-tag policy for a table resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableLFTagPolicy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LFTag[] Expression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LakeFormationDataPermissionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LFTagPolicy = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LFPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCRIBE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Origin Origin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OriginDetails OriginDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEventActionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Event Event { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResponseDetails Details { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Type Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRevisionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevocationComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Revoked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RevokedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSetRevisionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RevisionEntry[] Revisions { get; set; }
	}
	
	/// <summary>
	/// A revision is a container for one or more assets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevisionEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevocationComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Revoked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RevokedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetEntry[] DataSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A data set is an AWS resource with one or more revisions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Origin Origin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OriginDetails OriginDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEventActionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventActionEntry[] EventActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An event action is an object that defines the relationship between a specific event and an automated action that will be taken on behalf of the customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventActionEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Event Event { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JobEntry[] Jobs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// AWS Data Exchange Jobs are asynchronous import or export operations used to create or copy assets. A data set owner can both import and export as they see fit. Someone with an entitlement to a data set can only export. Jobs are deleted 90 days after they are created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResponseDetails Details { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobError[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Type Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRevisionAssetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetEntry[] Assets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An asset in AWS Data Exchange is a piece of data (Amazon S3 object) or a means of fulfilling data (Amazon Redshift datashare or Amazon API Gateway API, AWS Lake Formation data permission, or Amazon S3 data access). The asset can be a structured data file, an image file, or some other data file that can be stored as an Amazon S3 object, an Amazon API Gateway API, or an Amazon Redshift datashare, an AWS Lake Formation data permission, or an Amazon S3 data access. When you create an import job for your files, API Gateway APIs, Amazon Redshift datashares, AWS Lake Formation data permission, or Amazon S3 data access, you create an asset in AWS Data Exchange.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDetails AssetDetails { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevokeRevisionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevocationComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Revoked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RevokedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendApiAssetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string ResponseHeaders { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAssetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetDetails AssetDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Origin Origin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OriginDetails OriginDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEventActionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Event Event { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRevisionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevocationComment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Revoked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RevokedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEventActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Event Event { get; set; }
	}
	
	/// <summary>
	/// The details for the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequestDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportAssetToSignedUrlRequestDetails ExportAssetToSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportAssetsToS3RequestDetails ExportAssetsToS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportRevisionsToS3RequestDetails ExportRevisionsToS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromSignedUrlRequestDetails ImportAssetFromSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromS3RequestDetails ImportAssetsFromS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromRedshiftDataSharesRequestDetails ImportAssetsFromRedshiftDataShares { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromApiGatewayApiRequestDetails ImportAssetFromApiGatewayApi { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateS3DataAccessFromS3BucketRequestDetails CreateS3DataAccessFromS3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromLakeFormationTagPolicyRequestDetails ImportAssetsFromLakeFormationTagPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RequestDetails Details { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Type Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRevisionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAssetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventActionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRevisionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAssetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDataSetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEventActionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRevisionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSetRevisionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSetsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEventActionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRevisionAssetsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevokeRevisionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RevocationComment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendApiAssetRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string RequestHeaders { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAssetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSetRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEventActionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRevisionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// This operation cancels a job. Jobs can be cancelled only when they are in the WAITING state.
		/// CancelJob v1/jobs/{JobId}
		/// </summary>
		/// <param name="JobId">The unique identifier for a job.</param>
		public async Task CancelJobAsync(string JobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jobs/"+ (JobId==null? "" : System.Uri.EscapeDataString(JobId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation returns information about a job.
		/// GetJob v1/jobs/{JobId}
		/// </summary>
		/// <param name="JobId">The unique identifier for a job.</param>
		/// <returns>Success</returns>
		public async Task<GetJobResponse> GetJobAsync(string JobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jobs/"+ (JobId==null? "" : System.Uri.EscapeDataString(JobId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation starts a job.
		/// StartJob v1/jobs/{JobId}
		/// </summary>
		/// <param name="JobId">The unique identifier for a job.</param>
		public async Task StartJobAsync(string JobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jobs/"+ (JobId==null? "" : System.Uri.EscapeDataString(JobId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation creates a data set.
		/// CreateDataSet v1/data-sets
		/// </summary>
		public async Task CreateDataSetAsync(CreateDataSetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation lists your data sets. When listing by origin OWNED, results are sorted by CreatedAt in descending order. When listing by origin ENTITLED, there is no order and the maxResults parameter is ignored.
		/// ListDataSets v1/data-sets
		/// </summary>
		/// <param name="maxResults">The maximum number of results returned by a single call.
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.</param>
		/// <param name="origin">A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDataSetsResponse> ListDataSetsAsync(int maxResults, string nextToken, string origin, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&origin=" + (origin==null? "" : System.Uri.EscapeDataString(origin))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDataSetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation creates an event action.
		/// CreateEventAction v1/event-actions
		/// </summary>
		public async Task CreateEventActionAsync(CreateEventActionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/event-actions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation lists your event actions.
		/// ListEventActions v1/event-actions
		/// </summary>
		/// <param name="eventSourceId">The unique identifier for the event source.</param>
		/// <param name="maxResults">The maximum number of results returned by a single call.
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEventActionsResponse> ListEventActionsAsync(string eventSourceId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/event-actions?eventSourceId=" + (eventSourceId==null? "" : System.Uri.EscapeDataString(eventSourceId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEventActionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation creates a job.
		/// CreateJob v1/jobs
		/// </summary>
		public async Task CreateJobAsync(CreateJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation lists your jobs sorted by CreatedAt in descending order.
		/// ListJobs v1/jobs
		/// </summary>
		/// <param name="dataSetId">The unique identifier for a data set.</param>
		/// <param name="maxResults">The maximum number of results returned by a single call.
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.</param>
		/// <param name="revisionId">The unique identifier for a revision.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListJobsResponse> ListJobsAsync(string dataSetId, int maxResults, string nextToken, string revisionId, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jobs?dataSetId=" + (dataSetId==null? "" : System.Uri.EscapeDataString(dataSetId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&revisionId=" + (revisionId==null? "" : System.Uri.EscapeDataString(revisionId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation creates a revision for a data set.
		/// CreateRevision v1/data-sets/{DataSetId}/revisions
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		public async Task CreateRevisionAsync(string DataSetId, CreateRevisionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation lists a data set's revisions sorted by CreatedAt in descending order.
		/// ListDataSetRevisions v1/data-sets/{DataSetId}/revisions
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="maxResults">The maximum number of results returned by a single call.
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDataSetRevisionsResponse> ListDataSetRevisionsAsync(string DataSetId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDataSetRevisionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation deletes an asset.
		/// DeleteAsset v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets/{AssetId}
		/// </summary>
		/// <param name="AssetId">The unique identifier for an asset.</param>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		public async Task DeleteAssetAsync(string AssetId, string DataSetId, string RevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId))+"/assets/"+ (AssetId==null? "" : System.Uri.EscapeDataString(AssetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation returns information about an asset.
		/// GetAsset v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets/{AssetId}
		/// </summary>
		/// <param name="AssetId">The unique identifier for an asset.</param>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		/// <returns>Success</returns>
		public async Task<GetAssetResponse> GetAssetAsync(string AssetId, string DataSetId, string RevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId))+"/assets/"+ (AssetId==null? "" : System.Uri.EscapeDataString(AssetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAssetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation updates an asset.
		/// UpdateAsset v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets/{AssetId}
		/// </summary>
		/// <param name="AssetId">The unique identifier for an asset.</param>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		/// <returns>Success</returns>
		public async Task<UpdateAssetResponse> UpdateAssetAsync(string AssetId, string DataSetId, string RevisionId, UpdateAssetPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId))+"/assets/"+ (AssetId==null? "" : System.Uri.EscapeDataString(AssetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAssetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation deletes a data set.
		/// DeleteDataSet v1/data-sets/{DataSetId}
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		public async Task DeleteDataSetAsync(string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation returns information about a data set.
		/// GetDataSet v1/data-sets/{DataSetId}
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <returns>Success</returns>
		public async Task<GetDataSetResponse> GetDataSetAsync(string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDataSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation updates a data set.
		/// UpdateDataSet v1/data-sets/{DataSetId}
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <returns>Success</returns>
		public async Task<UpdateDataSetResponse> UpdateDataSetAsync(string DataSetId, UpdateDataSetPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateDataSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation deletes the event action.
		/// DeleteEventAction v1/event-actions/{EventActionId}
		/// </summary>
		/// <param name="EventActionId">The unique identifier for the event action.</param>
		public async Task DeleteEventActionAsync(string EventActionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/event-actions/"+ (EventActionId==null? "" : System.Uri.EscapeDataString(EventActionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation retrieves information about an event action.
		/// GetEventAction v1/event-actions/{EventActionId}
		/// </summary>
		/// <param name="EventActionId">The unique identifier for the event action.</param>
		/// <returns>Success</returns>
		public async Task<GetEventActionResponse> GetEventActionAsync(string EventActionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/event-actions/"+ (EventActionId==null? "" : System.Uri.EscapeDataString(EventActionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEventActionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation updates the event action.
		/// UpdateEventAction v1/event-actions/{EventActionId}
		/// </summary>
		/// <param name="EventActionId">The unique identifier for the event action.</param>
		/// <returns>Success</returns>
		public async Task<UpdateEventActionResponse> UpdateEventActionAsync(string EventActionId, UpdateEventActionPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/event-actions/"+ (EventActionId==null? "" : System.Uri.EscapeDataString(EventActionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateEventActionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation deletes a revision.
		/// DeleteRevision v1/data-sets/{DataSetId}/revisions/{RevisionId}
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		public async Task DeleteRevisionAsync(string DataSetId, string RevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation returns information about a revision.
		/// GetRevision v1/data-sets/{DataSetId}/revisions/{RevisionId}
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		/// <returns>Success</returns>
		public async Task<GetRevisionResponse> GetRevisionAsync(string DataSetId, string RevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetRevisionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation updates a revision.
		/// UpdateRevision v1/data-sets/{DataSetId}/revisions/{RevisionId}
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		/// <returns>Success</returns>
		public async Task<UpdateRevisionResponse> UpdateRevisionAsync(string DataSetId, string RevisionId, UpdateRevisionPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateRevisionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation lists a revision's assets sorted alphabetically in descending order.
		/// ListRevisionAssets v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="maxResults">The maximum number of results returned by a single call.
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRevisionAssetsResponse> ListRevisionAssetsAsync(string DataSetId, int maxResults, string nextToken, string RevisionId, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId))+"/assets&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRevisionAssetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation lists the tags on the resource.
		/// ListTagsForResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation tags a resource.
		/// TagResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.</param>
		public async Task TagResourceAsync(string ResourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation revokes subscribers' access to a revision.
		/// RevokeRevision v1/data-sets/{DataSetId}/revisions/{RevisionId}/revoke
		/// </summary>
		/// <param name="DataSetId">The unique identifier for a data set.</param>
		/// <param name="RevisionId">The unique identifier for a revision.</param>
		/// <returns>Success</returns>
		public async Task<RevokeRevisionResponse> RevokeRevisionAsync(string DataSetId, string RevisionId, RevokeRevisionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/revisions/"+ (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId))+"/revoke";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RevokeRevisionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation invokes an API Gateway API asset. The request is proxied to the provider’s API Gateway API.
		/// SendApiAsset v1#x-amzn-dataexchange-asset-id&x-amzn-dataexchange-data-set-id&x-amzn-dataexchange-revision-id
		/// </summary>
		/// <param name="QueryStringParameters">Attach query string parameters to the end of the URI (for example, /v1/examplePath?exampleParam=exampleValue).</param>
		/// <returns>Success</returns>
		public async Task<SendApiAssetResponse> SendApiAssetAsync(System.Collections.Generic.Dictionary<string, string> QueryStringParameters, SendApiAssetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1#x-amzn-dataexchange-asset-id&x-amzn-dataexchange-data-set-id&x-amzn-dataexchange-revision-id?QueryStringParameters=" + QueryStringParameters;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SendApiAssetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This operation removes one or more tags from a resource.
		/// UntagResource tags/{ResourceArn}#tagKeys
		/// </summary>
		/// <param name="ResourceArn">An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.</param>
		/// <param name="tagKeys">The key tags.</param>
		public async Task UntagResourceAsync(string ResourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class CreateDataSetPostBody
	{
		
		/// <summary>
		/// The type of asset that is added to a data set.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetType AssetType { get; set; }
		
		/// <summary>
		/// A description for the data set. This value can be up to 16,348 characters long.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The name of the data set.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// A data set tag is an optional label that you can assign to a data set when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateEventActionPostBody
	{
		
		/// <summary>
		/// What occurs after a certain event.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateEventActionPostBodyAction Action { get; set; }
		
		/// <summary>
		/// What occurs to start an action.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateEventActionPostBodyEvent Event { get; set; }
	}
	
	public class CreateEventActionPostBodyAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoExportRevisionToS3RequestDetails ExportRevisionToS3 { get; set; }
	}
	
	public class CreateEventActionPostBodyEvent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RevisionPublished RevisionPublished { get; set; }
	}
	
	public class CreateJobPostBody
	{
		
		/// <summary>
		/// The details for the request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateJobPostBodyDetails Details { get; set; }
		
		/// <summary>
		/// The type of job to be created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Type Type { get; set; }
	}
	
	public class CreateJobPostBodyDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportAssetToSignedUrlRequestDetails ExportAssetToSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportAssetsToS3RequestDetails ExportAssetsToS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportRevisionsToS3RequestDetails ExportRevisionsToS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromSignedUrlRequestDetails ImportAssetFromSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromS3RequestDetails ImportAssetsFromS3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromRedshiftDataSharesRequestDetails ImportAssetsFromRedshiftDataShares { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetFromApiGatewayApiRequestDetails ImportAssetFromApiGatewayApi { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateS3DataAccessFromS3BucketRequestDetails CreateS3DataAccessFromS3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportAssetsFromLakeFormationTagPolicyRequestDetails ImportAssetsFromLakeFormationTagPolicy { get; set; }
	}
	
	public class CreateRevisionPostBody
	{
		
		/// <summary>
		/// An optional comment about the revision.
		/// Min length: 0
		/// Max length: 16384
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(16384)]
		public string Comment { get; set; }
		
		/// <summary>
		/// A revision tag is an optional label that you can assign to a revision when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class UpdateAssetPatchBody
	{
		
		/// <summary>
		/// The name of the asset. When importing from Amazon S3, the Amazon S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target Amazon S3 object key. When importing from Amazon API Gateway API, the API name is used as the asset name. When importing from Amazon Redshift, the datashare name is used as the asset name. When importing from AWS Lake Formation, the static values of "Database(s) included in the LF-tag policy" or "Table(s) included in LF-tag policy" are used as the name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	public class UpdateDataSetPatchBody
	{
		
		/// <summary>
		/// The description for the data set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The name of the data set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	public class UpdateEventActionPatchBody
	{
		
		/// <summary>
		/// What occurs after a certain event.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEventActionPatchBodyAction Action { get; set; }
	}
	
	public class UpdateEventActionPatchBodyAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoExportRevisionToS3RequestDetails ExportRevisionToS3 { get; set; }
	}
	
	public class UpdateRevisionPatchBody
	{
		
		/// <summary>
		/// An optional comment about the revision.
		/// Min length: 0
		/// Max length: 16384
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(16384)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Finalized { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// A label that consists of a customer-defined key and an optional value.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class RevokeRevisionPostBody
	{
		
		/// <summary>
		/// A required comment to inform subscribers of the reason their access to the revision was revoked.
		/// Required
		/// Min length: 10
		/// Max length: 512
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(10)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		public string RevocationComment { get; set; }
	}
	
	public class SendApiAssetPostBody
	{
		
		/// <summary>
		/// The request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		/// <summary>
		/// Any header value prefixed with x-amzn-dataexchange-header- will have that stripped before sending the Asset API request. Use this when you want to override a header that AWS Data Exchange uses. Alternatively, you can use the header without a prefix to the HTTP request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x-amzn-dataexchange-header-")]
		public System.Collections.Generic.Dictionary<string, string> X_amzn_dataexchange_header_ { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

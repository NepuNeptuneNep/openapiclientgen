//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddStorageSystemResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddStorageSystemRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryServerConfiguration ServerConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DiscoverySystemType SystemType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Credentials Credentials { get; set; }
	}
	
	/// <summary>
	/// The network settings that DataSync Discovery uses to connect with your on-premises storage system's management interface.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiscoveryServerConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServerHostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ServerPort { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiscoverySystemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetAppONTAP = 0,
	}
	
	/// <summary>
	/// A key-value pair representing a single tag that's been applied to an Amazon Web Services resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagListEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// <p>The credentials that provide DataSync Discovery read access to your on-premises storage system's management interface.</p> <p>DataSync Discovery stores these credentials in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">Secrets Manager</a>. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/discovery-configure-storage.html">Accessing your on-premises storage system</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credentials
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelTaskExecutionResponse
	{
	}
	
	/// <summary>
	/// CancelTaskExecutionRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelTaskExecutionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskExecutionArn { get; set; }
	}
	
	/// <summary>
	/// CreateAgentResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAgentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentArn { get; set; }
	}
	
	/// <summary>
	/// CreateAgentRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAgentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActivationKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationAzureBlobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationAzureBlobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContainerUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobSasConfiguration SasConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobType BlobType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureAccessTier AccessTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AzureBlobAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAS = 0,
	}
	
	/// <summary>
	/// <p>The shared access signature (SAS) configuration that allows DataSync to access your Microsoft Azure Blob Storage.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-sas-tokens">SAS tokens</a> for accessing your Azure Blob Storage.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AzureBlobSasConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Token { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AzureBlobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCK = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AzureAccessTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COOL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 2,
	}
	
	/// <summary>
	/// CreateLocationEfs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationEfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// CreateLocationEfsRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationEfsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EfsFilesystemArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Ec2Config Ec2Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FileSystemAccessRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EfsInTransitEncryption InTransitEncryption { get; set; }
	}
	
	/// <summary>
	/// The subnet and security groups that DataSync uses to access your Amazon EFS file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ec2Config
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubnetArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EfsInTransitEncryption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TLS1_2 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxLustreResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxLustreRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FsxFilesystemArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxOntapResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxOntapRequest
	{
		
		/// <summary>
		/// Specifies the data transfer protocol that DataSync uses to access your Amazon FSx file system.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FsxProtocol Protocol { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StorageVirtualMachineArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	/// <summary>
	/// Specifies the data transfer protocol that DataSync uses to access your Amazon FSx file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FsxProtocol
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FsxProtocolNfs NFS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FsxProtocolSmb SMB { get; set; }
	}
	
	/// <summary>
	/// Specifies the Network File System (NFS) protocol configuration that DataSync uses to access your Amazon FSx for OpenZFS or Amazon FSx for NetApp ONTAP file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FsxProtocolNfs
	{
		
		/// <summary>
		/// Specifies how DataSync can access a location using the NFS protocol.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NfsMountOptions MountOptions { get; set; }
	}
	
	/// <summary>
	/// Specifies how DataSync can access a location using the NFS protocol.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NfsMountOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NfsVersion Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NfsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NFS3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NFS4_0 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NFS4_1 = 3,
	}
	
	/// <summary>
	/// Specifies the Server Message Block (SMB) protocol configuration that DataSync uses to access your Amazon FSx for NetApp ONTAP file system. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-ontap-location.html#create-ontap-location-access">Accessing FSx for ONTAP file systems</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FsxProtocolSmb
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		/// <summary>
		/// Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SmbMountOptions MountOptions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string User { get; set; }
	}
	
	/// <summary>
	/// Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SmbMountOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SmbVersion Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SmbVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMB2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMB3 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMB1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMB2_0 = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxOpenZfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxOpenZfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FsxFilesystemArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FsxProtocol Protocol { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxWindowsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationFsxWindowsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FsxFilesystemArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationHdfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationHdfsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HdfsNameNode[] NameNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BlockSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReplicationFactor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QopConfiguration QopConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HdfsAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SimpleUser { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosPrincipal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosKeytab { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosKrb5Conf { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	/// <summary>
	/// The NameNode of the Hadoop Distributed File System (HDFS). The NameNode manages the file system's namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HdfsNameNode
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
	}
	
	/// <summary>
	/// The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer privacy settings configured on the Hadoop Distributed File System (HDFS) cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QopConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HdfsRpcProtection RpcProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HdfsRpcProtection DataTransferProtection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HdfsRpcProtection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHENTICATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGRITY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVACY = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HdfsAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIMPLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KERBEROS = 1,
	}
	
	/// <summary>
	/// CreateLocationNfsResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationNfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// CreateLocationNfsRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationNfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServerHostname { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OnPremConfig OnPremConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NfsMountOptions MountOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	/// <summary>
	/// The DataSync agents that are connecting to a Network File System (NFS) location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnPremConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
	}
	
	/// <summary>
	/// CreateLocationObjectStorageResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationObjectStorageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// CreateLocationObjectStorageRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationObjectStorageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServerHostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ServerPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ObjectStorageServerProtocol ServerProtocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServerCertificate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ObjectStorageServerProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTPS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
	}
	
	/// <summary>
	/// CreateLocationS3Response
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationS3Response
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// CreateLocationS3Request
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationS3Request
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3StorageClass S3StorageClass { get; set; }
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to access an Amazon S3 bucket.</p> <p>For detailed information about using such a role, see Creating a Location for Amazon S3 in the <i>DataSync User Guide</i>.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3Config S3Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum S3StorageClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_IA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONEZONE_IA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTELLIGENT_TIERING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLACIER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_ARCHIVE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTPOSTS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLACIER_INSTANT_RETRIEVAL = 7,
	}
	
	/// <summary>
	/// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to access an Amazon S3 bucket.</p> <p>For detailed information about using such a role, see Creating a Location for Amazon S3 in the <i>DataSync User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Config
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketAccessRoleArn { get; set; }
	}
	
	/// <summary>
	/// CreateLocationSmbResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationSmbResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// CreateLocationSmbRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLocationSmbRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServerHostname { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmbMountOptions MountOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	/// <summary>
	/// CreateTaskResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTaskResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
	}
	
	/// <summary>
	/// CreateTaskRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTaskRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceLocationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationLocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Options Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Excludes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskSchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Includes { get; set; }
	}
	
	/// <summary>
	/// <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p> <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Options
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VerifyMode VerifyMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OverwriteMode OverwriteMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Atime Atime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Mtime Mtime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Uid Uid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Uid Gid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PreserveDeletedFiles PreserveDeletedFiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Mtime PreserveDevices { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Mtime PosixPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BytesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskQueueing TaskQueueing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransferMode TransferMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmbSecurityDescriptorCopyFlags SecurityDescriptorCopyFlags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ObjectTags ObjectTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerifyMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POINT_IN_TIME_CONSISTENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONLY_FILES_TRANSFERRED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OverwriteMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALWAYS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Atime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEST_EFFORT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Mtime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESERVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Uid
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INT_VALUE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTH = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PreserveDeletedFiles
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESERVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaskQueueing
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SmbSecurityDescriptorCopyFlags
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER_DACL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER_DACL_SACL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ObjectTags
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESERVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
	}
	
	/// <summary>
	/// Specifies which files, folders, and objects to include or exclude when transferring files from source to destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterRule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilterType FilterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIMPLE_PATTERN = 0,
	}
	
	/// <summary>
	/// Specifies the schedule you want your task to use for repeated executions. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html">Schedule Expressions for Rules</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskSchedule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAgentResponse
	{
	}
	
	/// <summary>
	/// DeleteAgentRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAgentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AgentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteLocationResponse
	{
	}
	
	/// <summary>
	/// DeleteLocation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteLocationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTaskResponse
	{
	}
	
	/// <summary>
	/// DeleteTask
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTaskRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
	}
	
	/// <summary>
	/// DescribeAgentResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAgentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastConnectionTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointType EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PrivateLinkConfig PrivateLinkConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONLINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFFLINE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndpointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_LINK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIPS = 2,
	}
	
	/// <summary>
	/// Specifies how your DataSync agent connects to Amazon Web Services using a virtual private cloud (VPC) service endpoint. An agent that uses a VPC endpoint isn't accessible over the public internet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrivateLinkConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateLinkEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
	}
	
	/// <summary>
	/// DescribeAgent
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAgentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AgentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDiscoveryJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CollectionDurationMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset JobStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset JobEndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiscoveryJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED_WITH_ISSUES = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDiscoveryJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationAzureBlobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobType BlobType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureAccessTier AccessTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationAzureBlobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationEfsResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationEfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		/// <summary>
		/// The subnet and security groups that DataSync uses to access your Amazon EFS file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Ec2Config Ec2Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FileSystemAccessRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EfsInTransitEncryption InTransitEncryption { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationEfsRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationEfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxLustreResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxLustreRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxOntapResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		/// <summary>
		/// Specifies the data transfer protocol that DataSync uses to access your Amazon FSx file system.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FsxProtocol Protocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageVirtualMachineArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FsxFilesystemArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxOntapRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxOpenZfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FsxProtocol Protocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxOpenZfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxWindowsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationFsxWindowsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationHdfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HdfsNameNode[] NameNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BlockSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReplicationFactor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QopConfiguration QopConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HdfsAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SimpleUser { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosPrincipal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationHdfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationNfsResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationNfsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		/// <summary>
		/// The DataSync agents that are connecting to a Network File System (NFS) location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OnPremConfig OnPremConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NfsMountOptions MountOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationNfsRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationNfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationObjectStorageResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationObjectStorageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ServerPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ObjectStorageServerProtocol ServerProtocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServerCertificate { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationObjectStorageRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationObjectStorageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationS3Response
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationS3Response
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3StorageClass S3StorageClass { get; set; }
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to access an Amazon S3 bucket.</p> <p>For detailed information about using such a role, see Creating a Location for Amazon S3 in the <i>DataSync User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3Config S3Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationS3Request
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationS3Request
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationSmbResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationSmbResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmbMountOptions MountOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	/// <summary>
	/// DescribeLocationSmbRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLocationSmbRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStorageSystemResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryServerConfiguration ServerConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoverySystemType SystemType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StorageSystemConnectivityStatus ConnectivityStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretsManagerArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StorageSystemConnectivityStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAIL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStorageSystemRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStorageSystemResourceMetricsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceMetrics[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information, including performance data and capacity usage, provided by DataSync Discovery about a resource in your on-premises storage system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceMetrics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public P95Metrics P95Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capacity Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryResourceType ResourceType { get; set; }
	}
	
	/// <summary>
	/// The types of performance data that DataSync Discovery collects about an on-premises storage system resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class P95Metrics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IOPS IOPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Throughput Throughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Latency Latency { get; set; }
	}
	
	/// <summary>
	/// The IOPS peaks for an on-premises storage system resource. Each data point represents the 95th percentile peak value during a 1-hour interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IOPS
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Read { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Write { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Other { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	/// <summary>
	/// The throughput peaks for an on-premises storage system volume. Each data point represents the 95th percentile peak value during a 1-hour interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Throughput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Read { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Write { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Other { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	/// <summary>
	/// The latency peaks for an on-premises storage system resource. Each data point represents the 95th percentile peak value during a 1-hour interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Latency
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Read { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Write { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Other { get; set; }
	}
	
	/// <summary>
	/// The storage capacity of an on-premises storage system resource (for example, a volume).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Capacity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Used { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Provisioned { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LogicalUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClusterCloudStorageUsed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiscoveryResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOLUME = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStorageSystemResourceMetricsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryResourceType ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStorageSystemResourcesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceDetails ResourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information provided by DataSync Discovery about the resources in your on-premises storage system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NetAppONTAPSVM[] NetAppONTAPSVMs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetAppONTAPVolume[] NetAppONTAPVolumes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetAppONTAPCluster[] NetAppONTAPClusters { get; set; }
	}
	
	/// <summary>
	/// The information that DataSync Discovery collects about a storage virtual machine (SVM) in your on-premises storage system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetAppONTAPSVM
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterUuid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SvmName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CifsShareCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnabledProtocols { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCapacityUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCapacityProvisioned { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalLogicalCapacityUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MaxP95Performance MaxP95Performance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recommendation[] Recommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NfsExportedVolumes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationStatus RecommendationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalSnapshotCapacityUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LunCount { get; set; }
	}
	
	/// <summary>
	/// The performance data that DataSync Discovery collects about an on-premises storage system resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MaxP95Performance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> IopsRead { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> IopsWrite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> IopsOther { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> IopsTotal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThroughputRead { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThroughputWrite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThroughputOther { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThroughputTotal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LatencyRead { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LatencyWrite { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LatencyOther { get; set; }
	}
	
	/// <summary>
	/// <p>The details about an Amazon Web Services storage service that DataSync Discovery recommends for a resource in your on-premises storage system.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/discovery-understand-recommendations.html">Recommendations provided by DataSync Discovery</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Recommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationsConfigMap StorageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlyStorageCost { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecommendationsConfigMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecommendationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// The information that DataSync Discovery collects about a volume in your on-premises storage system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetAppONTAPVolume
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CifsShareCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SvmUuid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SvmName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CapacityUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CapacityProvisioned { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LogicalCapacityUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NfsExported { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SnapshotCapacityUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MaxP95Performance MaxP95Performance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recommendation[] Recommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationStatus RecommendationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LunCount { get; set; }
	}
	
	/// <summary>
	/// The information that DataSync Discovery collects about an on-premises storage system cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetAppONTAPCluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CifsShareCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NfsExportedVolumes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MaxP95Performance MaxP95Performance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClusterBlockStorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClusterBlockStorageUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClusterBlockStorageLogicalUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recommendation[] Recommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationStatus RecommendationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LunCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClusterCloudStorageUsed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStorageSystemResourcesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryResourceType ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceFilters Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceFilters
	{
	}
	
	/// <summary>
	/// DescribeTaskResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTaskResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentTaskExecutionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceLocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DestinationLocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SourceNetworkInterfaceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DestinationNetworkInterfaceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Options Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Excludes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskSchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Includes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaskStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 4,
	}
	
	/// <summary>
	/// DescribeTaskRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTaskRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
	}
	
	/// <summary>
	/// DescribeTaskExecutionResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTaskExecutionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskExecutionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskExecutionStatus Status { get; set; }
		
		/// <summary>
		/// <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p> <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Options Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Excludes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Includes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EstimatedFilesToTransfer { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EstimatedBytesToTransfer { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FilesTransferred { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BytesWritten { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BytesTransferred { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskExecutionResultDetail Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BytesCompressed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaskExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAUNCHING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFERRING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFYING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 6,
	}
	
	/// <summary>
	/// Describes the detailed result of a <code>TaskExecution</code> operation. This result includes the time in milliseconds spent in each phase, the status of the task execution, and the errors encountered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskExecutionResultDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PrepareDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhaseStatus PrepareStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TransferDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhaseStatus TransferStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VerifyDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhaseStatus VerifyStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhaseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
	}
	
	/// <summary>
	/// DescribeTaskExecutionRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTaskExecutionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskExecutionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateRecommendationsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateRecommendationsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryResourceType ResourceType { get; set; }
	}
	
	/// <summary>
	/// ListAgentsResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAgentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AgentListEntry[] Agents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents a single entry in a list (or array) of DataSync agents when you call the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListAgents.html">ListAgents</a> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentListEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatus Status { get; set; }
	}
	
	/// <summary>
	/// ListAgentsRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAgentsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDiscoveryJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryJobListEntry[] DiscoveryJobs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The details about a specific DataSync discovery job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiscoveryJobListEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryJobStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDiscoveryJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// ListLocationsResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLocationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LocationListEntry[] Locations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents a single entry in a list of locations. <code>LocationListEntry</code> returns an array that contains a list of locations when the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListLocations.html">ListLocations</a> operation is called.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LocationListEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LocationUri { get; set; }
	}
	
	/// <summary>
	/// ListLocationsRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLocationsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LocationFilter[] Filters { get; set; }
	}
	
	/// <summary>
	/// <p>Narrow down the list of resources returned by <code>ListLocations</code>. For example, to see all your Amazon S3 locations, create a filter using <code>"Name": "LocationType"</code>, <code>"Operator": "Equals"</code>, and <code>"Values": "S3"</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/query-resources.html">filtering resources</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LocationFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LocationFilterName Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Operator Operator { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LocationFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LocationUri = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LocationType = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Operator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Equals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotEquals = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		In = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThanOrEqual = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThan = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThanOrEqual = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThan = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Contains = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotContains = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BeginsWith = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStorageSystemsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StorageSystemListEntry[] StorageSystems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information that identifies an on-premises storage system that you're using with DataSync Discovery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorageSystemListEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStorageSystemsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// ListTagsForResourceResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// ListTagsForResourceRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// ListTaskExecutionsResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTaskExecutionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskExecutionListEntry[] TaskExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents a single entry in a list of task executions. <code>TaskExecutionListEntry</code> returns an array that contains a list of specific invocations of a task when the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListTaskExecutions.html">ListTaskExecutions</a> operation is called.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskExecutionListEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskExecutionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskExecutionStatus Status { get; set; }
	}
	
	/// <summary>
	/// ListTaskExecutions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTaskExecutionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// ListTasksResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTasksResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskListEntry[] Tasks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents a single entry in a list of tasks. <code>TaskListEntry</code> returns an array that contains a list of tasks when the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListTasks.html">ListTasks</a> operation is called. A task includes the source and destination file systems to sync and the options to use for the tasks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskListEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// ListTasksRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTasksRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskFilter[] Filters { get; set; }
	}
	
	/// <summary>
	/// <p>You can use API filters to narrow down the list of resources returned by <code>ListTasks</code>. For example, to retrieve all tasks on a source location, you can use <code>ListTasks</code> with filter name <code>LocationId</code> and <code>Operator Equals</code> with the ARN for the location.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/query-resources.html">filtering DataSync resources</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaskFilterName Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Operator Operator { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaskFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LocationId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveStorageSystemResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveStorageSystemRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDiscoveryJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDiscoveryJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CollectionDurationMinutes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	/// <summary>
	/// StartTaskExecutionResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartTaskExecutionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskExecutionArn { get; set; }
	}
	
	/// <summary>
	/// StartTaskExecutionRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartTaskExecutionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
		
		/// <summary>
		/// <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p> <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Options OverrideOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Includes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Excludes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDiscoveryJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDiscoveryJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	/// <summary>
	/// TagResourceRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagListEntry[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	/// <summary>
	/// UntagResourceRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Keys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAgentResponse
	{
	}
	
	/// <summary>
	/// UpdateAgentRequest
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAgentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AgentArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDiscoveryJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDiscoveryJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DiscoveryJobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CollectionDurationMinutes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationAzureBlobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationAzureBlobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobSasConfiguration SasConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureBlobType BlobType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AzureAccessTier AccessTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationHdfsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationHdfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HdfsNameNode[] NameNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BlockSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReplicationFactor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QopConfiguration QopConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HdfsAuthenticationType AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SimpleUser { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosPrincipal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosKeytab { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KerberosKrb5Conf { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationNfsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationNfsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		/// <summary>
		/// The DataSync agents that are connecting to a Network File System (NFS) location.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OnPremConfig OnPremConfig { get; set; }
		
		/// <summary>
		/// Specifies how DataSync can access a location using the NFS protocol.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NfsMountOptions MountOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationObjectStorageResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationObjectStorageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ServerPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ObjectStorageServerProtocol ServerProtocol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServerCertificate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationSmbResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLocationSmbRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subdirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		/// <summary>
		/// Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SmbMountOptions MountOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStorageSystemResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStorageSystemRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StorageSystemArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoveryServerConfiguration ServerConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AgentArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Credentials Credentials { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaskResponse
	{
	}
	
	/// <summary>
	/// UpdateTaskResponse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaskRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskArn { get; set; }
		
		/// <summary>
		/// <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p> <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Options Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Excludes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskSchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRule[] Includes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaskExecutionResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaskExecutionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaskExecutionArn { get; set; }
		
		/// <summary>
		/// <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p> <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Options Options { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiscoveryResourceFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVM = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Gid
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INT_VALUE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTH = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HdfsDataTransferProtection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHENTICATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGRITY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVACY = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PreserveDevices
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESERVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PosixPermissions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESERVE = 1,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an Amazon Web Services resource for an on-premises storage system that you want DataSync Discovery to collect information about.
		/// AddStorageSystem #X-Amz-Target=FmrsService.AddStorageSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddStorageSystemResponse> AddStorageSystemAsync(AddStorageSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.AddStorageSystem";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddStorageSystemResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops an DataSync task execution that's in progress. The transfer of some files are abruptly interrupted. File contents that're transferred to the destination might be incomplete or inconsistent with the source files.</p> <p>However, if you start a new task execution using the same task and allow it to finish, file content on the destination will be complete and consistent. This applies to other unexpected failures that interrupt a task execution. In all of these cases, DataSync successfully completes the transfer when you start the next task execution.</p>
		/// CancelTaskExecution #X-Amz-Target=FmrsService.CancelTaskExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelTaskExecutionResponse> CancelTaskExecutionAsync(CancelTaskExecutionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CancelTaskExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelTaskExecutionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Activates an DataSync agent that you've deployed in your storage environment. The activation process associates the agent with your Amazon Web Services account.</p> <p>If you haven't deployed an agent yet, see the following topics to learn more:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/datasync/latest/userguide/agent-requirements.html">Agent requirements</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/datasync/latest/userguide/configure-agent.html">Create an agent</a> </p> </li> </ul> <note> <p>If you're transferring between Amazon Web Services storage services, you don't need a DataSync agent. </p> </note>
		/// CreateAgent #X-Amz-Target=FmrsService.CreateAgent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAgentResponse> CreateAgentAsync(CreateAgentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateAgent";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAgentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an endpoint for a Microsoft Azure Blob Storage container that DataSync can use as a transfer source or destination.</p> <p>Before you begin, make sure you know <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-access">how DataSync accesses Azure Blob Storage</a> and works with <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-access-tiers">access tiers</a> and <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#blob-types">blob types</a>. You also need a <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-creating-agent">DataSync agent</a> that can connect to your container.</p>
		/// CreateLocationAzureBlob #X-Amz-Target=FmrsService.CreateLocationAzureBlob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationAzureBlobResponse> CreateLocationAzureBlobAsync(CreateLocationAzureBlobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationAzureBlob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationAzureBlobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint for an Amazon EFS file system that DataSync can access for a transfer. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-efs-location.html">Creating a location for Amazon EFS</a>.
		/// CreateLocationEfs #X-Amz-Target=FmrsService.CreateLocationEfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationEfsResponse> CreateLocationEfsAsync(CreateLocationEfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationEfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationEfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint for an Amazon FSx for Lustre file system.
		/// CreateLocationFsxLustre #X-Amz-Target=FmrsService.CreateLocationFsxLustre
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationFsxLustreResponse> CreateLocationFsxLustreAsync(CreateLocationFsxLustreRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationFsxLustre";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationFsxLustreResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint for an Amazon FSx for NetApp ONTAP file system that DataSync can access for a transfer. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-ontap-location.html">Creating a location for FSx for ONTAP</a>.
		/// CreateLocationFsxOntap #X-Amz-Target=FmrsService.CreateLocationFsxOntap
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationFsxOntapResponse> CreateLocationFsxOntapAsync(CreateLocationFsxOntapRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationFsxOntap";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationFsxOntapResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an endpoint for an Amazon FSx for OpenZFS file system that DataSync can access for a transfer. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-openzfs-location.html">Creating a location for FSx for OpenZFS</a>.</p> <note> <p>Request parameters related to <code>SMB</code> aren't supported with the <code>CreateLocationFsxOpenZfs</code> operation.</p> </note>
		/// CreateLocationFsxOpenZfs #X-Amz-Target=FmrsService.CreateLocationFsxOpenZfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationFsxOpenZfsResponse> CreateLocationFsxOpenZfsAsync(CreateLocationFsxOpenZfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationFsxOpenZfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationFsxOpenZfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint for an Amazon FSx for Windows File Server file system.
		/// CreateLocationFsxWindows #X-Amz-Target=FmrsService.CreateLocationFsxWindows
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationFsxWindowsResponse> CreateLocationFsxWindowsAsync(CreateLocationFsxWindowsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationFsxWindows";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationFsxWindowsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint for a Hadoop Distributed File System (HDFS).
		/// CreateLocationHdfs #X-Amz-Target=FmrsService.CreateLocationHdfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationHdfsResponse> CreateLocationHdfsAsync(CreateLocationHdfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationHdfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationHdfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an endpoint for a Network File System (NFS) file server that DataSync can use for a data transfer.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html">Configuring transfers to or from an NFS file server</a>.</p> <note> <p>If you're copying data to or from an Snowcone device, you can also use <code>CreateLocationNfs</code> to create your transfer location. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/nfs-on-snowcone.html">Configuring transfers with Snowcone</a>.</p> </note>
		/// CreateLocationNfs #X-Amz-Target=FmrsService.CreateLocationNfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationNfsResponse> CreateLocationNfsAsync(CreateLocationNfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationNfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationNfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint for an object storage system that DataSync can access for a transfer. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-object-location.html">Creating a location for object storage</a>.
		/// CreateLocationObjectStorage #X-Amz-Target=FmrsService.CreateLocationObjectStorage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationObjectStorageResponse> CreateLocationObjectStorageAsync(CreateLocationObjectStorageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationObjectStorage";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationObjectStorageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>A <i>location</i> is an endpoint for an Amazon S3 bucket. DataSync can use the location as a source or destination for copying data.</p> <important> <p>Before you create your location, make sure that you read the following sections:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Storage class considerations with Amazon S3 locations</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#create-s3-location-s3-requests">Evaluating S3 request costs when using DataSync</a> </p> </li> </ul> </important> <p> For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-locations-cli.html#create-location-s3-cli">Creating an Amazon S3 location</a>.</p>
		/// CreateLocationS3 #X-Amz-Target=FmrsService.CreateLocationS3
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationS3Response> CreateLocationS3Async(CreateLocationS3Request requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationS3";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationS3Response>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an endpoint for a Server Message Block (SMB) file server that DataSync can use for a data transfer.</p> <p>Before you begin, make sure that you understand how DataSync <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-smb-location.html">accesses an SMB file server</a>.</p>
		/// CreateLocationSmb #X-Amz-Target=FmrsService.CreateLocationSmb
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLocationSmbResponse> CreateLocationSmbAsync(CreateLocationSmbRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateLocationSmb";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLocationSmbResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Configures a task, which defines where and how DataSync transfers your data.</p> <p>A task includes a source location, a destination location, and the preferences for how and when you want to transfer your data (such as bandwidth limits, scheduling, among other options).</p> <important> <p>If you're planning to transfer data to or from an Amazon S3 location, review <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#create-s3-location-s3-requests">how DataSync can affect your S3 request charges</a> and the <a href="http://aws.amazon.com/datasync/pricing/">DataSync pricing page</a> before you begin.</p> </important>
		/// CreateTask #X-Amz-Target=FmrsService.CreateTask
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateTaskResponse> CreateTaskAsync(CreateTaskRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.CreateTask";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateTaskResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an agent. To specify which agent to delete, use the Amazon Resource Name (ARN) of the agent in your request. The operation disassociates the agent from your Amazon Web Services account. However, it doesn't delete the agent virtual machine (VM) from your on-premises environment.
		/// DeleteAgent #X-Amz-Target=FmrsService.DeleteAgent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteAgentResponse> DeleteAgentAsync(DeleteAgentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DeleteAgent";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteAgentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the configuration of a location used by DataSync.
		/// DeleteLocation #X-Amz-Target=FmrsService.DeleteLocation
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteLocationResponse> DeleteLocationAsync(DeleteLocationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DeleteLocation";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteLocationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an DataSync task.
		/// DeleteTask #X-Amz-Target=FmrsService.DeleteTask
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteTaskResponse> DeleteTaskAsync(DeleteTaskRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DeleteTask";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteTaskResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata about an DataSync agent, such as its name, endpoint type, and status.
		/// DescribeAgent #X-Amz-Target=FmrsService.DescribeAgent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAgentResponse> DescribeAgentAsync(DescribeAgentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeAgent";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAgentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a DataSync discovery job.
		/// DescribeDiscoveryJob #X-Amz-Target=FmrsService.DescribeDiscoveryJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDiscoveryJobResponse> DescribeDiscoveryJobAsync(DescribeDiscoveryJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeDiscoveryJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDiscoveryJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides details about how an DataSync transfer location for Microsoft Azure Blob Storage is configured.
		/// DescribeLocationAzureBlob #X-Amz-Target=FmrsService.DescribeLocationAzureBlob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationAzureBlobResponse> DescribeLocationAzureBlobAsync(DescribeLocationAzureBlobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationAzureBlob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationAzureBlobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata about your DataSync location for an Amazon EFS file system.
		/// DescribeLocationEfs #X-Amz-Target=FmrsService.DescribeLocationEfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationEfsResponse> DescribeLocationEfsAsync(DescribeLocationEfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationEfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationEfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides details about how an DataSync location for an Amazon FSx for Lustre file system is configured.
		/// DescribeLocationFsxLustre #X-Amz-Target=FmrsService.DescribeLocationFsxLustre
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationFsxLustreResponse> DescribeLocationFsxLustreAsync(DescribeLocationFsxLustreRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationFsxLustre";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationFsxLustreResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides details about how an DataSync location for an Amazon FSx for NetApp ONTAP file system is configured.</p> <note> <p>If your location uses SMB, the <code>DescribeLocationFsxOntap</code> operation doesn't actually return a <code>Password</code>.</p> </note>
		/// DescribeLocationFsxOntap #X-Amz-Target=FmrsService.DescribeLocationFsxOntap
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationFsxOntapResponse> DescribeLocationFsxOntapAsync(DescribeLocationFsxOntapRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationFsxOntap";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationFsxOntapResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides details about how an DataSync location for an Amazon FSx for OpenZFS file system is configured.</p> <note> <p>Response elements related to <code>SMB</code> aren't supported with the <code>DescribeLocationFsxOpenZfs</code> operation.</p> </note>
		/// DescribeLocationFsxOpenZfs #X-Amz-Target=FmrsService.DescribeLocationFsxOpenZfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationFsxOpenZfsResponse> DescribeLocationFsxOpenZfsAsync(DescribeLocationFsxOpenZfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationFsxOpenZfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationFsxOpenZfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata about an Amazon FSx for Windows File Server location, such as information about its path.
		/// DescribeLocationFsxWindows #X-Amz-Target=FmrsService.DescribeLocationFsxWindows
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationFsxWindowsResponse> DescribeLocationFsxWindowsAsync(DescribeLocationFsxWindowsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationFsxWindows";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationFsxWindowsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata, such as the authentication information about the Hadoop Distributed File System (HDFS) location.
		/// DescribeLocationHdfs #X-Amz-Target=FmrsService.DescribeLocationHdfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationHdfsResponse> DescribeLocationHdfsAsync(DescribeLocationHdfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationHdfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationHdfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides details about how an DataSync transfer location for a Network File System (NFS) file server is configured.
		/// DescribeLocationNfs #X-Amz-Target=FmrsService.DescribeLocationNfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationNfsResponse> DescribeLocationNfsAsync(DescribeLocationNfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationNfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationNfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata about your DataSync location for an object storage system.
		/// DescribeLocationObjectStorage #X-Amz-Target=FmrsService.DescribeLocationObjectStorage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationObjectStorageResponse> DescribeLocationObjectStorageAsync(DescribeLocationObjectStorageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationObjectStorage";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationObjectStorageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata, such as bucket name, about an Amazon S3 bucket location.
		/// DescribeLocationS3 #X-Amz-Target=FmrsService.DescribeLocationS3
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationS3Response> DescribeLocationS3Async(DescribeLocationS3Request requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationS3";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationS3Response>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata, such as the path and user information about an SMB location.
		/// DescribeLocationSmb #X-Amz-Target=FmrsService.DescribeLocationSmb
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLocationSmbResponse> DescribeLocationSmbAsync(DescribeLocationSmbRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeLocationSmb";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLocationSmbResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about an on-premises storage system that you're using with DataSync Discovery.
		/// DescribeStorageSystem #X-Amz-Target=FmrsService.DescribeStorageSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeStorageSystemResponse> DescribeStorageSystemAsync(DescribeStorageSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeStorageSystem";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStorageSystemResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information, including performance data and capacity usage, which DataSync Discovery collects about a specific resource in your-premises storage system.
		/// DescribeStorageSystemResourceMetrics #X-Amz-Target=FmrsService.DescribeStorageSystemResourceMetrics
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeStorageSystemResourceMetricsResponse> DescribeStorageSystemResourceMetricsAsync(string MaxResults, string NextToken, DescribeStorageSystemResourceMetricsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeStorageSystemResourceMetrics?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStorageSystemResourceMetricsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information that DataSync Discovery collects about resources in your on-premises storage system.
		/// DescribeStorageSystemResources #X-Amz-Target=FmrsService.DescribeStorageSystemResources
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeStorageSystemResourcesResponse> DescribeStorageSystemResourcesAsync(string MaxResults, string NextToken, DescribeStorageSystemResourcesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeStorageSystemResources?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStorageSystemResourcesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about an DataSync transfer task.
		/// DescribeTask #X-Amz-Target=FmrsService.DescribeTask
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTaskResponse> DescribeTaskAsync(DescribeTaskRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeTask";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeTaskResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about an DataSync transfer task that's running.
		/// DescribeTaskExecution #X-Amz-Target=FmrsService.DescribeTaskExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTaskExecutionResponse> DescribeTaskExecutionAsync(DescribeTaskExecutionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.DescribeTaskExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeTaskExecutionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates recommendations about where to migrate your data to in Amazon Web Services. Recommendations are generated based on information that DataSync Discovery collects about your on-premises storage system's resources. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/discovery-understand-recommendations.html">Recommendations provided by DataSync Discovery</a>.</p> <p>Once generated, you can view your recommendations by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_DescribeStorageSystemResources.html">DescribeStorageSystemResources</a> operation.</p> <note> <p>If your <a href="https://docs.aws.amazon.com/datasync/latest/userguide/discovery-job-statuses.html#discovery-job-statuses-table">discovery job completes successfully</a>, you don't need to use this operation. DataSync Discovery generates the recommendations for you automatically.</p> </note>
		/// GenerateRecommendations #X-Amz-Target=FmrsService.GenerateRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GenerateRecommendationsResponse> GenerateRecommendationsAsync(GenerateRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.GenerateRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GenerateRecommendationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DataSync agents that belong to an Amazon Web Services account in the Amazon Web Services Region specified in the request.</p> <p>With pagination, you can reduce the number of agents returned in a response. If you get a truncated list of agents in a response, the response contains a marker that you can specify in your next request to fetch the next page of agents.</p> <p> <code>ListAgents</code> is eventually consistent. This means the result of running the operation might not reflect that you just created or deleted an agent. For example, if you create an agent with <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_CreateAgent.html">CreateAgent</a> and then immediately run <code>ListAgents</code>, that agent might not show up in the list right away. In situations like this, you can always confirm whether an agent has been created (or deleted) by using <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_DescribeAgent.html">DescribeAgent</a>.</p>
		/// ListAgents #X-Amz-Target=FmrsService.ListAgents
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAgentsResponse> ListAgentsAsync(string MaxResults, string NextToken, ListAgentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListAgents?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAgentsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides a list of the existing discovery jobs in the Amazon Web Services Region and Amazon Web Services account where you're using DataSync Discovery.
		/// ListDiscoveryJobs #X-Amz-Target=FmrsService.ListDiscoveryJobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDiscoveryJobsResponse> ListDiscoveryJobsAsync(string MaxResults, string NextToken, ListDiscoveryJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListDiscoveryJobs?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDiscoveryJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of source and destination locations.</p> <p>If you have more locations than are returned in a response (that is, the response returns only a truncated list of your agents), the response contains a token that you can specify in your next request to fetch the next page of locations.</p>
		/// ListLocations #X-Amz-Target=FmrsService.ListLocations
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListLocationsResponse> ListLocationsAsync(string MaxResults, string NextToken, ListLocationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListLocations?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListLocationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the on-premises storage systems that you're using with DataSync Discovery.
		/// ListStorageSystems #X-Amz-Target=FmrsService.ListStorageSystems
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListStorageSystemsResponse> ListStorageSystemsAsync(string MaxResults, string NextToken, ListStorageSystemsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListStorageSystems?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListStorageSystemsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns all the tags associated with an Amazon Web Services resource.
		/// ListTagsForResource #X-Amz-Target=FmrsService.ListTagsForResource
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string MaxResults, string NextToken, ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListTagsForResource?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of executed tasks.
		/// ListTaskExecutions #X-Amz-Target=FmrsService.ListTaskExecutions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTaskExecutionsResponse> ListTaskExecutionsAsync(string MaxResults, string NextToken, ListTaskExecutionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListTaskExecutions?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTaskExecutionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the DataSync tasks you created.
		/// ListTasks #X-Amz-Target=FmrsService.ListTasks
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTasksResponse> ListTasksAsync(string MaxResults, string NextToken, ListTasksRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.ListTasks?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTasksResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Permanently removes a storage system resource from DataSync Discovery, including the associated discovery jobs, collected data, and recommendations.
		/// RemoveStorageSystem #X-Amz-Target=FmrsService.RemoveStorageSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RemoveStorageSystemResponse> RemoveStorageSystemAsync(RemoveStorageSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.RemoveStorageSystem";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RemoveStorageSystemResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Runs a DataSync discovery job on your on-premises storage system. If you haven't added the storage system to DataSync Discovery yet, do this first by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_AddStorageSystem.html">AddStorageSystem</a> operation.
		/// StartDiscoveryJob #X-Amz-Target=FmrsService.StartDiscoveryJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartDiscoveryJobResponse> StartDiscoveryJobAsync(StartDiscoveryJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.StartDiscoveryJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartDiscoveryJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an DataSync task. For each task, you can only run one task execution at a time.</p> <p>There are several phases to a task execution. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/working-with-task-executions.html#understand-task-execution-statuses">Task execution statuses</a>.</p> <important> <p>If you're planning to transfer data to or from an Amazon S3 location, review <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#create-s3-location-s3-requests">how DataSync can affect your S3 request charges</a> and the <a href="http://aws.amazon.com/datasync/pricing/">DataSync pricing page</a> before you begin.</p> </important>
		/// StartTaskExecution #X-Amz-Target=FmrsService.StartTaskExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartTaskExecutionResponse> StartTaskExecutionAsync(StartTaskExecutionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.StartTaskExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartTaskExecutionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a running DataSync discovery job.</p> <p>You can stop a discovery job anytime. A job that's stopped before it's scheduled to end likely will provide you some information about your on-premises storage system resources. To get recommendations for a stopped job, you must use the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_GenerateRecommendations.html">GenerateRecommendations</a> operation.</p>
		/// StopDiscoveryJob #X-Amz-Target=FmrsService.StopDiscoveryJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopDiscoveryJobResponse> StopDiscoveryJobAsync(StopDiscoveryJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.StopDiscoveryJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StopDiscoveryJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Applies a <i>tag</i> to an Amazon Web Services resource. Tags are key-value pairs that can help you manage, filter, and search for your resources.</p> <p>These include DataSync resources, such as locations, tasks, and task executions.</p>
		/// TagResource #X-Amz-Target=FmrsService.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.TagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes tags from an Amazon Web Services resource.
		/// UntagResource #X-Amz-Target=FmrsService.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UntagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the name of an agent.
		/// UpdateAgent #X-Amz-Target=FmrsService.UpdateAgent
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateAgentResponse> UpdateAgentAsync(UpdateAgentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateAgent";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAgentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Edits a DataSync discovery job configuration.
		/// UpdateDiscoveryJob #X-Amz-Target=FmrsService.UpdateDiscoveryJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateDiscoveryJobResponse> UpdateDiscoveryJobAsync(UpdateDiscoveryJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateDiscoveryJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateDiscoveryJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies some configurations of the Microsoft Azure Blob Storage transfer location that you're using with DataSync.
		/// UpdateLocationAzureBlob #X-Amz-Target=FmrsService.UpdateLocationAzureBlob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateLocationAzureBlobResponse> UpdateLocationAzureBlobAsync(UpdateLocationAzureBlobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateLocationAzureBlob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLocationAzureBlobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates some parameters of a previously created location for a Hadoop Distributed File System cluster.
		/// UpdateLocationHdfs #X-Amz-Target=FmrsService.UpdateLocationHdfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateLocationHdfsResponse> UpdateLocationHdfsAsync(UpdateLocationHdfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateLocationHdfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLocationHdfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies some configurations of the Network File System (NFS) transfer location that you're using with DataSync.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-nfs-location.html">Configuring transfers to or from an NFS file server</a>.</p>
		/// UpdateLocationNfs #X-Amz-Target=FmrsService.UpdateLocationNfs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateLocationNfsResponse> UpdateLocationNfsAsync(UpdateLocationNfsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateLocationNfs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLocationNfsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates some parameters of an existing object storage location that DataSync accesses for a transfer. For information about creating a self-managed object storage location, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-object-location.html">Creating a location for object storage</a>.
		/// UpdateLocationObjectStorage #X-Amz-Target=FmrsService.UpdateLocationObjectStorage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateLocationObjectStorageResponse> UpdateLocationObjectStorageAsync(UpdateLocationObjectStorageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateLocationObjectStorage";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLocationObjectStorageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates some of the parameters of a previously created location for Server Message Block (SMB) file system access. For information about creating an SMB location, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-smb-location.html">Creating a location for SMB</a>.
		/// UpdateLocationSmb #X-Amz-Target=FmrsService.UpdateLocationSmb
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateLocationSmbResponse> UpdateLocationSmbAsync(UpdateLocationSmbRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateLocationSmb";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLocationSmbResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies some configurations of an on-premises storage system resource that you're using with DataSync Discovery.
		/// UpdateStorageSystem #X-Amz-Target=FmrsService.UpdateStorageSystem
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateStorageSystemResponse> UpdateStorageSystemAsync(UpdateStorageSystemRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateStorageSystem";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateStorageSystemResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the metadata associated with a task.
		/// UpdateTask #X-Amz-Target=FmrsService.UpdateTask
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateTaskResponse> UpdateTaskAsync(UpdateTaskRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateTask";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateTaskResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies a running DataSync task.</p> <note> <p>Currently, the only <code>Option</code> that you can modify with <code>UpdateTaskExecution</code> is <code> <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_Options.html#DataSync-Type-Options-BytesPerSecond">BytesPerSecond</a> </code>, which throttles bandwidth for a running or queued task.</p> </note>
		/// UpdateTaskExecution #X-Amz-Target=FmrsService.UpdateTaskExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateTaskExecutionResponse> UpdateTaskExecutionAsync(UpdateTaskExecutionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=FmrsService.UpdateTaskExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateTaskExecutionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum AddStorageSystemX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.AddStorageSystem")]
		FmrsService_AddStorageSystem = 0,
	}
	
	public enum CancelTaskExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CancelTaskExecution")]
		FmrsService_CancelTaskExecution = 0,
	}
	
	public enum CreateAgentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateAgent")]
		FmrsService_CreateAgent = 0,
	}
	
	public enum CreateLocationAzureBlobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationAzureBlob")]
		FmrsService_CreateLocationAzureBlob = 0,
	}
	
	public enum CreateLocationEfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationEfs")]
		FmrsService_CreateLocationEfs = 0,
	}
	
	public enum CreateLocationFsxLustreX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationFsxLustre")]
		FmrsService_CreateLocationFsxLustre = 0,
	}
	
	public enum CreateLocationFsxOntapX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationFsxOntap")]
		FmrsService_CreateLocationFsxOntap = 0,
	}
	
	public enum CreateLocationFsxOpenZfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationFsxOpenZfs")]
		FmrsService_CreateLocationFsxOpenZfs = 0,
	}
	
	public enum CreateLocationFsxWindowsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationFsxWindows")]
		FmrsService_CreateLocationFsxWindows = 0,
	}
	
	public enum CreateLocationHdfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationHdfs")]
		FmrsService_CreateLocationHdfs = 0,
	}
	
	public enum CreateLocationNfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationNfs")]
		FmrsService_CreateLocationNfs = 0,
	}
	
	public enum CreateLocationObjectStorageX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationObjectStorage")]
		FmrsService_CreateLocationObjectStorage = 0,
	}
	
	public enum CreateLocationS3X_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationS3")]
		FmrsService_CreateLocationS3 = 0,
	}
	
	public enum CreateLocationSmbX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateLocationSmb")]
		FmrsService_CreateLocationSmb = 0,
	}
	
	public enum CreateTaskX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.CreateTask")]
		FmrsService_CreateTask = 0,
	}
	
	public enum DeleteAgentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DeleteAgent")]
		FmrsService_DeleteAgent = 0,
	}
	
	public enum DeleteLocationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DeleteLocation")]
		FmrsService_DeleteLocation = 0,
	}
	
	public enum DeleteTaskX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DeleteTask")]
		FmrsService_DeleteTask = 0,
	}
	
	public enum DescribeAgentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeAgent")]
		FmrsService_DescribeAgent = 0,
	}
	
	public enum DescribeDiscoveryJobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeDiscoveryJob")]
		FmrsService_DescribeDiscoveryJob = 0,
	}
	
	public enum DescribeLocationAzureBlobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationAzureBlob")]
		FmrsService_DescribeLocationAzureBlob = 0,
	}
	
	public enum DescribeLocationEfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationEfs")]
		FmrsService_DescribeLocationEfs = 0,
	}
	
	public enum DescribeLocationFsxLustreX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationFsxLustre")]
		FmrsService_DescribeLocationFsxLustre = 0,
	}
	
	public enum DescribeLocationFsxOntapX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationFsxOntap")]
		FmrsService_DescribeLocationFsxOntap = 0,
	}
	
	public enum DescribeLocationFsxOpenZfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationFsxOpenZfs")]
		FmrsService_DescribeLocationFsxOpenZfs = 0,
	}
	
	public enum DescribeLocationFsxWindowsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationFsxWindows")]
		FmrsService_DescribeLocationFsxWindows = 0,
	}
	
	public enum DescribeLocationHdfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationHdfs")]
		FmrsService_DescribeLocationHdfs = 0,
	}
	
	public enum DescribeLocationNfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationNfs")]
		FmrsService_DescribeLocationNfs = 0,
	}
	
	public enum DescribeLocationObjectStorageX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationObjectStorage")]
		FmrsService_DescribeLocationObjectStorage = 0,
	}
	
	public enum DescribeLocationS3X_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationS3")]
		FmrsService_DescribeLocationS3 = 0,
	}
	
	public enum DescribeLocationSmbX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeLocationSmb")]
		FmrsService_DescribeLocationSmb = 0,
	}
	
	public enum DescribeStorageSystemX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeStorageSystem")]
		FmrsService_DescribeStorageSystem = 0,
	}
	
	public enum DescribeStorageSystemResourceMetricsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeStorageSystemResourceMetrics")]
		FmrsService_DescribeStorageSystemResourceMetrics = 0,
	}
	
	public enum DescribeStorageSystemResourcesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeStorageSystemResources")]
		FmrsService_DescribeStorageSystemResources = 0,
	}
	
	public enum DescribeTaskX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeTask")]
		FmrsService_DescribeTask = 0,
	}
	
	public enum DescribeTaskExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.DescribeTaskExecution")]
		FmrsService_DescribeTaskExecution = 0,
	}
	
	public enum GenerateRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.GenerateRecommendations")]
		FmrsService_GenerateRecommendations = 0,
	}
	
	public enum ListAgentsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListAgents")]
		FmrsService_ListAgents = 0,
	}
	
	public enum ListDiscoveryJobsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListDiscoveryJobs")]
		FmrsService_ListDiscoveryJobs = 0,
	}
	
	public enum ListLocationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListLocations")]
		FmrsService_ListLocations = 0,
	}
	
	public enum ListStorageSystemsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListStorageSystems")]
		FmrsService_ListStorageSystems = 0,
	}
	
	public enum ListTagsForResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListTagsForResource")]
		FmrsService_ListTagsForResource = 0,
	}
	
	public enum ListTaskExecutionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListTaskExecutions")]
		FmrsService_ListTaskExecutions = 0,
	}
	
	public enum ListTasksX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.ListTasks")]
		FmrsService_ListTasks = 0,
	}
	
	public enum RemoveStorageSystemX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.RemoveStorageSystem")]
		FmrsService_RemoveStorageSystem = 0,
	}
	
	public enum StartDiscoveryJobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.StartDiscoveryJob")]
		FmrsService_StartDiscoveryJob = 0,
	}
	
	public enum StartTaskExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.StartTaskExecution")]
		FmrsService_StartTaskExecution = 0,
	}
	
	public enum StopDiscoveryJobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.StopDiscoveryJob")]
		FmrsService_StopDiscoveryJob = 0,
	}
	
	public enum TagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.TagResource")]
		FmrsService_TagResource = 0,
	}
	
	public enum UntagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UntagResource")]
		FmrsService_UntagResource = 0,
	}
	
	public enum UpdateAgentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateAgent")]
		FmrsService_UpdateAgent = 0,
	}
	
	public enum UpdateDiscoveryJobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateDiscoveryJob")]
		FmrsService_UpdateDiscoveryJob = 0,
	}
	
	public enum UpdateLocationAzureBlobX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateLocationAzureBlob")]
		FmrsService_UpdateLocationAzureBlob = 0,
	}
	
	public enum UpdateLocationHdfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateLocationHdfs")]
		FmrsService_UpdateLocationHdfs = 0,
	}
	
	public enum UpdateLocationNfsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateLocationNfs")]
		FmrsService_UpdateLocationNfs = 0,
	}
	
	public enum UpdateLocationObjectStorageX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateLocationObjectStorage")]
		FmrsService_UpdateLocationObjectStorage = 0,
	}
	
	public enum UpdateLocationSmbX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateLocationSmb")]
		FmrsService_UpdateLocationSmb = 0,
	}
	
	public enum UpdateStorageSystemX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateStorageSystem")]
		FmrsService_UpdateStorageSystem = 0,
	}
	
	public enum UpdateTaskX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateTask")]
		FmrsService_UpdateTask = 0,
	}
	
	public enum UpdateTaskExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FmrsService.UpdateTaskExecution")]
		FmrsService_UpdateTaskExecution = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
		
		/// <summary>
		/// Address ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addressId")]
		public string AddressId { get; set; }
		
		/// <summary>
		/// Address type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addressType")]
		public string AddressType { get; set; }
		
		/// <summary>
		/// Address city.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Address complement.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="complement")]
		public string Complement { get; set; }
		
		/// <summary>
		/// Address country.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Geolocation coordinates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="geoCoordinates")]
		public string[] GeoCoordinates { get; set; }
		
		/// <summary>
		/// Address neighborhood.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="neighborhood")]
		public string Neighborhood { get; set; }
		
		/// <summary>
		/// Address number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Address postal code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// Address receiver name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="receiverName")]
		public string ReceiverName { get; set; }
		
		/// <summary>
		/// Address reference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// Address state.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Address street.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BRL
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BRL1
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangesAttachment
	{
		
		/// <summary>
		/// Array with data on order changes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="changesData")]
		public ChangesDatum[] ChangesData { get; set; }
		
		/// <summary>
		/// Change ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangesDatum
	{
		
		/// <summary>
		/// Discount value in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="discountValue")]
		public int DiscountValue { get; set; }
		
		/// <summary>
		/// Order value increment in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="incrementValue")]
		public int IncrementValue { get; set; }
		
		/// <summary>
		/// Array with information on items added to the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="itemsAdded")]
		public string[] ItemsAdded { get; set; }
		
		/// <summary>
		/// Array with information on items removed from the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="itemsRemoved")]
		public ItemsRemoved[] ItemsRemoved { get; set; }
		
		/// <summary>
		/// Change reason.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public Receipt Receipt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemsRemoved
	{
		
		/// <summary>
		/// Id of removed item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of removed item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Removed items price in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public int Price { get; set; }
		
		/// <summary>
		/// Quantity of items removed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
		
		/// <summary>
		/// Removed item unit multiplier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unitMultiplier")]
		public string UnitMultiplier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Receipt
	{
		
		/// <summary>
		/// Date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Order ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="orderId")]
		public string OrderId { get; set; }
		
		/// <summary>
		/// Receipt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public string Receipt1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientProfileData
	{
		
		/// <summary>
		/// Company document, in case client is corporate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="corporateDocument")]
		public string CorporateDocument { get; set; }
		
		/// <summary>
		/// Company name, in case client is corporate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="corporateName")]
		public string CorporateName { get; set; }
		
		/// <summary>
		/// Company telephone number, in case client is corporate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="corporatePhone")]
		public string CorporatePhone { get; set; }
		
		/// <summary>
		/// Customer class.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="customerClass")]
		public string CustomerClass { get; set; }
		
		/// <summary>
		/// Client document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document")]
		public string Document { get; set; }
		
		/// <summary>
		/// Client document type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentType")]
		public string DocumentType { get; set; }
		
		/// <summary>
		/// Client email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Client first name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		/// <summary>
		/// Client ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Indicates whether client is corporate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="isCorporate")]
		public bool IsCorporate { get; set; }
		
		/// <summary>
		/// Client last name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		/// <summary>
		/// Client telephone number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// Company state inscription, in case client is corporate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stateInscription")]
		public string StateInscription { get; set; }
		
		/// <summary>
		/// Company trade name, in case client is corporate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tradeName")]
		public string TradeName { get; set; }
		
		/// <summary>
		/// User profile ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userProfileId")]
		public string UserProfileId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrencyCode
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BRL BRL { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrencyCode1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BRL1 BRL { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrencyFormatInfo
	{
		
		/// <summary>
		/// Currency decimal digits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrencyDecimalDigits { get; set; }
		
		/// <summary>
		/// Currency decimal separator.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyDecimalSeparator { get; set; }
		
		/// <summary>
		/// Currency group separator.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyGroupSeparator { get; set; }
		
		/// <summary>
		/// Currency group size.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrencyGroupSize { get; set; }
		
		/// <summary>
		/// Indicates whether value representations start with currency symbol.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool StartsWithCurrencySymbol { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeliveryId
	{
		
		/// <summary>
		/// Courier ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="courierId")]
		public string CourierId { get; set; }
		
		/// <summary>
		/// Courier name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="courierName")]
		public string CourierName { get; set; }
		
		/// <summary>
		/// Dock ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dockId")]
		public string DockId { get; set; }
		
		/// <summary>
		/// Quantity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
		
		/// <summary>
		/// Warehouse ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warehouseId")]
		public string WarehouseId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Facets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public CurrencyCode CurrencyCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origin")]
		public Origin Origin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Origin
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Fulfillment Fulfillment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Marketplace1 Marketplace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Fulfillment
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Marketplace1
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Facets1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public CurrencyCode1 CurrencyCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origin")]
		public Origin1 Origin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Origin1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Fulfillment1 Fulfillment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Marketplace2 Marketplace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Fulfillment1
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Marketplace2
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceNotificationRequest
	{
		
		/// <summary>
		/// Fiscal code used in Brazil.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cfop")]
		public string Cfop { get; set; }
		
		/// <summary>
		/// The name of the carrier responsible for delivering the order.
		///		///> This field should only be used when sending **tracking** information. When the request is used for sending the invoice, this field should be left empty (`""`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="courier")]
		public string Courier { get; set; }
		
		/// <summary>
		/// Extra value in the invoice in cents. Do not use any decimal separator. For instance, `$24.99` should be represented as `2499`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extraValue")]
		public System.Nullable<System.Int32> ExtraValue { get; set; }
		
		/// <summary>
		/// Invoice key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceKey")]
		public string InvoiceKey { get; set; }
		
		/// <summary>
		/// Number that identifies the invoice.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="invoiceNumber")]
		public string InvoiceNumber { get; set; }
		
		/// <summary>
		/// URL of the invoice. Can be used to send the URL of an XML file, for example, which is useful for some integrations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceUrl")]
		public string InvoiceUrl { get; set; }
		
		/// <summary>
		/// Total amount being invoiced in cents. Do not use any decimal separator. For instance, `$24.99` should be represented as `2499`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="invoiceValue")]
		public string InvoiceValue { get; set; }
		
		/// <summary>
		/// Issuance date of the invoice in ISO format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="issuedDate")]
		public string IssuedDate { get; set; }
		
		/// <summary>
		/// Array containing the SKUs that are being invoiced.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public Item1[] Items { get; set; }
		
		/// <summary>
		/// Code that identifies the order tracking.
		///		///> This field should only be used when sending the **tracking** information. When the request is used for sending the invoice, this field should be left empty (`""`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingNumber")]
		public string TrackingNumber { get; set; }
		
		/// <summary>
		/// URL used to track the order.
		///		///> This field should only be used when sending the **tracking** information. When the request is used for sending the invoice, this field should be left empty (`""`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingUrl")]
		public string TrackingUrl { get; set; }
		
		/// <summary>
		/// The type of invoice. There are two possible values: `"Output"` and `"Input"`. The `"Output"` type should be used when the invoice you are sending is a selling invoice. The `"Input"` type should be used when you send a return invoice.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Number of volumes in the invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public System.Nullable<System.Int32> Volumes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Item1
	{
		
		/// <summary>
		/// Index of the SKU being invoiced.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="itemIndex")]
		public string ItemIndex { get; set; }
		
		/// <summary>
		/// Total price of the SKU being invoiced in cents. Do not use any decimal separator. For instance, `$24.99` should be represented as `2499`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public int Price { get; set; }
		
		/// <summary>
		/// Quantity cof the SKU being invoiced.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List
	{
		
		/// <summary>
		/// Shipping estimate date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ShippingEstimatedDate { get; set; }
		
		/// <summary>
		/// Maximum shipping estimate date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ShippingEstimatedDateMax { get; set; }
		
		/// <summary>
		/// Minimum shipping estimate date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ShippingEstimatedDateMin { get; set; }
		
		/// <summary>
		/// Three letter code indicating the marketplace in which the order was placed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="affiliateId")]
		public string AffiliateId { get; set; }
		
		/// <summary>
		/// Authorized date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorizedDate")]
		public string AuthorizedDate { get; set; }
		
		/// <summary>
		/// Call center operator name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="callCenterOperatorName")]
		public string CallCenterOperatorName { get; set; }
		
		/// <summary>
		/// Client name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientName")]
		public string ClientName { get; set; }
		
		/// <summary>
		/// Creation date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creationDate")]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Currency code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Order items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public string Items { get; set; }
		
		/// <summary>
		/// Last unread message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lastMessageUnread")]
		public string LastMessageUnread { get; set; }
		
		/// <summary>
		/// List ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="listId")]
		public string ListId { get; set; }
		
		/// <summary>
		/// List type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="listType")]
		public string ListType { get; set; }
		
		/// <summary>
		/// ID of the order in the marketplace.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="marketPlaceOrderId")]
		public string MarketPlaceOrderId { get; set; }
		
		/// <summary>
		/// Order ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="orderId")]
		public string OrderId { get; set; }
		
		/// <summary>
		/// Indicates whether order is complete.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="orderIsComplete")]
		public bool OrderIsComplete { get; set; }
		
		/// <summary>
		/// Indicates whether order is marketplace, fulfillment or chain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origin")]
		public string Origin { get; set; }
		
		/// <summary>
		/// Order payment names.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentNames")]
		public string PaymentNames { get; set; }
		
		/// <summary>
		/// Sales channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="salesChannel")]
		public string SalesChannel { get; set; }
		
		/// <summary>
		/// Order sequence number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sequence")]
		public string Sequence { get; set; }
		
		/// <summary>
		/// Order status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Order status description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="statusDescription")]
		public string StatusDescription { get; set; }
		
		/// <summary>
		/// Total items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="totalItems")]
		public int TotalItems { get; set; }
		
		/// <summary>
		/// Order total value in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="totalValue")]
		public int TotalValue { get; set; }
		
		/// <summary>
		/// Indicates whether order workflow is in error state.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowInErrorState")]
		public bool WorkflowInErrorState { get; set; }
		
		/// <summary>
		/// Indicates whether workflow is in retry.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowInRetry")]
		public bool WorkflowInRetry { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOrders
	{
		
		/// <summary>
		/// Array of facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="facets")]
		public string[] Facets { get; set; }
		
		/// <summary>
		/// Array containing information on orders listed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list")]
		public List[] List { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paging")]
		public Paging Paging { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public Stats Stats { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Paging
	{
		
		/// <summary>
		/// Current returned page.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPage")]
		public int CurrentPage { get; set; }
		
		/// <summary>
		/// Number of pages.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages")]
		public int Pages { get; set; }
		
		/// <summary>
		/// Number of items returned per page.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="perPage")]
		public int PerPage { get; set; }
		
		/// <summary>
		/// Paging total.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public int Total { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Stats
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public Stats1 Stats1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Stats1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="totalItems")]
		public TotalItems TotalItems { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="totalValue")]
		public TotalValue TotalValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TotalItems
	{
		
		/// <summary>
		/// Count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Facets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Facets { get; set; }
		
		/// <summary>
		/// Maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Sum of squares.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TotalValue
	{
		
		/// <summary>
		/// Value count.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Facets Facets { get; set; }
		
		/// <summary>
		/// Value maximum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Max { get; set; }
		
		/// <summary>
		/// Value mean.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Mean { get; set; }
		
		/// <summary>
		/// Value minimum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Min { get; set; }
		
		/// <summary>
		/// Missing values.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Missing { get; set; }
		
		/// <summary>
		/// Values standard deviation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StdDev { get; set; }
		
		/// <summary>
		/// Values sum.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Sum { get; set; }
		
		/// <summary>
		/// Values sum of squares
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public long SumOfSquares { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogisticsInfo
	{
		
		/// <summary>
		/// Address ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addressId")]
		public string AddressId { get; set; }
		
		/// <summary>
		/// Delivery channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryChannel")]
		public string DeliveryChannel { get; set; }
		
		/// <summary>
		/// Delivery company.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryCompany")]
		public string DeliveryCompany { get; set; }
		
		/// <summary>
		/// Array of delivery IDs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryIds")]
		public DeliveryId[] DeliveryIds { get; set; }
		
		/// <summary>
		/// Delivery window information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryWindow")]
		public string DeliveryWindow { get; set; }
		
		/// <summary>
		/// Item index, matching the index in the `items` array.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="itemIndex")]
		public int ItemIndex { get; set; }
		
		/// <summary>
		/// List price in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="listPrice")]
		public int ListPrice { get; set; }
		
		/// <summary>
		/// Reservation lasting period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lockTTL")]
		public string LockTTL { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pickupStoreInfo")]
		public PickupStoreInfo PickupStoreInfo { get; set; }
		
		/// <summary>
		/// Polygon name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="polygonName")]
		public string PolygonName { get; set; }
		
		/// <summary>
		/// Prince in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public int Price { get; set; }
		
		/// <summary>
		/// Selected SLA.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="selectedSla")]
		public string SelectedSla { get; set; }
		
		/// <summary>
		/// Selling price in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sellingPrice")]
		public int SellingPrice { get; set; }
		
		/// <summary>
		/// Shipping estimate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shippingEstimate")]
		public string ShippingEstimate { get; set; }
		
		/// <summary>
		/// Shipping estimate date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shippingEstimateDate")]
		public string ShippingEstimateDate { get; set; }
		
		/// <summary>
		/// List of countries (three letter ISO code) to which shipping is available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipsTo")]
		public string[] ShipsTo { get; set; }
		
		/// <summary>
		/// Array with information on the SLAs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slas")]
		public Sla[] Slas { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PickupStoreInfo
	{
		
		/// <summary>
		/// Pickup additional information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="additionalInfo")]
		public string AdditionalInfo { get; set; }
		
		/// <summary>
		/// Pickup address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		/// <summary>
		/// Pickup dock ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dockId")]
		public string DockId { get; set; }
		
		/// <summary>
		/// Pickup friendly name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="friendlyName")]
		public string FriendlyName { get; set; }
		
		/// <summary>
		/// Indicates whether it is pickup store.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="isPickupStore")]
		public bool IsPickupStore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Sla
	{
		
		/// <summary>
		/// SLA delivery channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryChannel")]
		public string DeliveryChannel { get; set; }
		
		/// <summary>
		/// SLA delivery window.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryWindow")]
		public string DeliveryWindow { get; set; }
		
		/// <summary>
		/// SLA ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// SLA name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pickupStoreInfo")]
		public PickupStoreInfo PickupStoreInfo { get; set; }
		
		/// <summary>
		/// SLA polygon name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="polygonName")]
		public string PolygonName { get; set; }
		
		/// <summary>
		/// SLA price in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public int Price { get; set; }
		
		/// <summary>
		/// SLA shipping estimate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shippingEstimate")]
		public string ShippingEstimate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Marketplace
	{
		
		/// <summary>
		/// Marketplace base URL.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="baseURL")]
		public string BaseURL { get; set; }
		
		/// <summary>
		/// Indicates whether marketplace is certified.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="isCertified")]
		public string IsCertified { get; set; }
		
		/// <summary>
		/// Marketplace name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Payment
	{
		
		/// <summary>
		/// Card holder
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cardHolder")]
		public string CardHolder { get; set; }
		
		/// <summary>
		/// Card number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cardNumber")]
		public string CardNumber { get; set; }
		
		/// <summary>
		/// Connector responses.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorResponses")]
		public string ConnectorResponses { get; set; }
		
		/// <summary>
		/// Card verification code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cvv2")]
		public string Cvv2 { get; set; }
		
		/// <summary>
		/// Due date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dueDate")]
		public string DueDate { get; set; }
		
		/// <summary>
		/// Card expiration month.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expireMonth")]
		public string ExpireMonth { get; set; }
		
		/// <summary>
		/// Card expiration year.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expireYear")]
		public string ExpireYear { get; set; }
		
		/// <summary>
		/// Card first digits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="firstDigits")]
		public string FirstDigits { get; set; }
		
		/// <summary>
		/// Gift card caption.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="giftCardCaption")]
		public string GiftCardCaption { get; set; }
		
		/// <summary>
		/// Gift card ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="giftCardId")]
		public string GiftCardId { get; set; }
		
		/// <summary>
		/// Gift card name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="giftCardName")]
		public string GiftCardName { get; set; }
		
		/// <summary>
		/// Payment group.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// Payment ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Payment installments.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="installments")]
		public int Installments { get; set; }
		
		/// <summary>
		/// Card last digits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lastDigits")]
		public string LastDigits { get; set; }
		
		/// <summary>
		/// Payment system.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentSystem")]
		public string PaymentSystem { get; set; }
		
		/// <summary>
		/// Payment system name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentSystemName")]
		public string PaymentSystemName { get; set; }
		
		/// <summary>
		/// Redemption code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redemptionCode")]
		public string RedemptionCode { get; set; }
		
		/// <summary>
		/// Reference value for interest calculation in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="referenceValue")]
		public int ReferenceValue { get; set; }
		
		/// <summary>
		/// Payment TID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tid")]
		public string Tid { get; set; }
		
		/// <summary>
		/// Payment URL.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Payment value in cents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public int Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentData
	{
		
		/// <summary>
		/// Array with information on each transaction of the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public Transaction[] Transactions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Transaction
	{
		
		/// <summary>
		/// Indicates whether transaction is active.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="isActive")]
		public bool IsActive { get; set; }
		
		/// <summary>
		/// Merchant name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="merchantName")]
		public string MerchantName { get; set; }
		
		/// <summary>
		/// Array with information on each payment for the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payments")]
		public Payment[] Payments { get; set; }
		
		/// <summary>
		/// Transaction ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactionId")]
		public string TransactionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RatesAndBenefitsData
	{
		
		/// <summary>
		/// Field ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue("ratesAndBenefitsData")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; } = "ratesAndBenefitsData";
		
		/// <summary>
		/// Array with rates and benefits IDs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rateAndBenefitsIdentifiers")]
		public string[] RateAndBenefitsIdentifiers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelectedAddress
	{
		
		/// <summary>
		/// Address ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addressId")]
		public string AddressId { get; set; }
		
		/// <summary>
		/// Address type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addressType")]
		public string AddressType { get; set; }
		
		/// <summary>
		/// Address city.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Address complement.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="complement")]
		public string Complement { get; set; }
		
		/// <summary>
		/// Address country.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Geolocation coordinates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="geoCoordinates")]
		public string[] GeoCoordinates { get; set; }
		
		/// <summary>
		/// Address neighborhood.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="neighborhood")]
		public string Neighborhood { get; set; }
		
		/// <summary>
		/// Address number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Address postal code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// Address receiver name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="receiverName")]
		public string ReceiverName { get; set; }
		
		/// <summary>
		/// Address reference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// Address state.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Address street.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Seller
	{
		
		/// <summary>
		/// Seller ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Seller logo.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logo")]
		public string Logo { get; set; }
		
		/// <summary>
		/// Seller name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShippingData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Address Address { get; set; }
		
		/// <summary>
		/// Field ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue("shippingData")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; } = "shippingData";
		
		/// <summary>
		/// Array with logistics information of each item in the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logisticsInfo")]
		public LogisticsInfo[] LogisticsInfo { get; set; }
		
		/// <summary>
		/// Array of the selected addresses' information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="selectedAddresses")]
		public Address[] SelectedAddresses { get; set; }
		
		/// <summary>
		/// Tracking hints.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trackingHints")]
		public string TrackingHints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorePreferencesData
	{
		
		/// <summary>
		/// Three letter ISO country code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="countryCode")]
		public string CountryCode { get; set; }
		
		/// <summary>
		/// Currency code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyFormatInfo")]
		public CurrencyFormatInfo CurrencyFormatInfo { get; set; }
		
		/// <summary>
		/// Currency locale.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyLocale")]
		public int CurrencyLocale { get; set; }
		
		/// <summary>
		/// Currency symbol.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencySymbol")]
		public string CurrencySymbol { get; set; }
		
		/// <summary>
		/// Time zone.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List orders
		/// Retrieves a list of orders according to the filters described below.
		/// 
		/// > This endpoint returns masked order data.
		/// 
		/// > This should **not** be used for integrations. Use the [orders Feed or hook](https://developers.vtex.com/vtex-rest-api/docs/feed-v3-1) for this purpose.
		/// 
		/// This endpoint returns only orders that already have been indexed, which takes aproximately four minutes. Because of this, the data retrieved may present inconsistencies. To get live up to date information and [build order integrations](https://developers.vtex.com/vtex-rest-api/docs/erp-integration-set-up-order-integration) use the [orders Feed or hook](https://developers.vtex.com/vtex-rest-api/docs/feed-v3-1).
		/// 
		/// > Check the new [Orders onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.
		/// 
		/// ## Do not use request for integrations
		/// > This endpoint returns only orders that already have been indexed, which takes aproximately four minutes. Because of this, the data retrieved may present inconsistencies or become unavailable in periods of peak order volume. In other words, **order integrations built with the List orders endpoint are not reliable** and **will not be supported**. To get live up to date information and [build order integrations](https://developers.vtex.com/vtex-rest-api/docs/erp-integration-set-up-order-integration) use the [orders Feed or hook](https://developers.vtex.com/vtex-rest-api/docs/feed-v3-1).
		/// 
		/// ## Throtling
		/// Each account can make up to 5000 requests per minute.
		/// 
		/// ## Request parameters allowed
		/// 
		/// | Attribute    | Type        | Description |
		/// | --------------- |:---------:| -------------------------------------------------------------------------------------------:|
		/// | `orderBy` | string | Order Field and Order Type concatenated `orderBy={{OrderField}},{{OrderType}}`  |
		/// | `OrderField` | string | Order Field expected values: `creationDate`,`orderId`,`items`,`totalValue` and `origin` |
		/// | `OrderType` | string | Order Type expected values: `asc` and `desc`  |
		/// 
		/// 
		/// ## Sorting Examples
		/// 
		/// 
		/// CreationDate:
		/// 
		/// `/api/oms/pvt/orders?orderBy=creationDate,desc`
		/// 
		/// 
		/// OrderID:
		/// 
		/// `/api/oms/pvt/orders?orderBy=orderId,desc`
		/// 
		/// 
		/// Items:
		/// 
		/// `/api/oms/pvt/orders?orderBy=items,asc`
		/// 
		/// 
		/// TotalValue:
		/// 
		/// `/api/oms/pvt/orders?orderBy=totalValue,desc`
		/// 
		/// 
		/// Origin:
		/// 
		/// `/api/oms/pvt/orders?orderBy=origin,asc`
		/// 
		/// 
		/// 
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `page` | integer | Page Number  |
		/// 
		/// ## Pagination Examples:
		/// 
		/// `/api/oms/pvt/orders?page=3`
		/// 
		/// 
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `per_page` | integer | Quantity orders per page  |
		/// 
		/// Quantity per Page Examples:
		/// 
		/// `/api/oms/pvt/orders?per_page=15`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// <div class="alert alert-info">Pagination Limit: The limit of pages that can be requested is 30.
		/// </div>
		/// 
		/// 
		/// 
		/// ## Time zone query
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `utc` | integer | Time Zone. By including this parameter alone in your query, the call will not convert the UTC nor show the number of orders set for that UTC. To filter orders with the desired UTC, you must also modify date and time in the `f_creationDate=creationDate:` parameter.  |
		/// 
		/// Time Zone Example:
		/// 
		/// `/api/oms/pvt/orders?utc=-0200`
		/// 
		/// 
		/// 
		/// 
		/// ## Request filters
		/// 
		/// 
		/// ## Fulltext
		/// 
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `q` | string | Fulltext accepts Order Ids, Client E-mail, Client Document and Client Name  |
		/// 
		/// > The `+` caracter isn't allowed in Fulltext Search
		/// 
		/// 
		/// Fulltext filter Examples:
		/// 
		/// OrderID:
		/// 
		/// `/api/oms/pvt/orders?q=v212333lux-02`
		/// 
		/// 
		/// Email:
		/// 
		/// `/api/oms/pvt/orders?q=rodrigo.cunha@vtex.com`
		/// 
		/// 
		/// Document:
		/// 
		/// `/api/oms/pvt/orders?q=21133355524`
		/// 
		/// 
		/// ClientName:
		/// 
		/// `/api/oms/pvt/orders?q=Cunha`
		/// 
		/// 
		/// 
		/// 
		/// ## Shipping Estimate
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_shippingEstimate` | string | Concatened value of quantity days and sufix `.days`  |
		/// 
		/// 
		/// 
		/// 
		/// Shipping Estimate filter Examples:
		/// 
		/// 
		/// Next 7 days:
		/// 
		/// `/api/oms/pvt/orders?f_shippingEstimate=7.days`
		/// 
		/// 
		/// Tomorrow:
		/// 
		/// `/api/oms/pvt/orders?f_shippingEstimate=1.days`
		/// 
		/// 
		/// Today:
		/// 
		/// `/api/oms/pvt/orders?f_shippingEstimate=0.days`
		/// 
		/// 
		/// Late:
		/// 
		/// `/api/oms/pvt/orders?f_shippingEstimate=-1.days`
		/// 
		/// 
		/// 
		/// 
		/// ## Invoiced Date
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_invoicedDate` | string | Concatened value sufix `invoicedDate` and range date in Timestamp format  |
		/// 
		/// 
		/// 
		/// Invoiced Date filter Examples:
		/// 
		/// 1 Day:
		/// 
		/// `/api/oms/pvt/orders?f_invoicedDate=invoicedDate:[2017-01-01T02:00:00.000Z TO 2017-01-02T01:59:59.999Z]`
		/// 
		/// 
		/// 1 Month:
		/// 
		/// `/api/oms/pvt/orders?f_invoicedDate=invoicedDate:[2017-01-01T02:00:00.000Z TO 2017-02-01T01:59:59.999Z]`
		/// 
		/// 
		/// 1 Year:
		/// 
		/// `/api/oms/pvt/orders?f_invoicedDate=invoicedDate:[2016-01-01T02:00:00.000Z TO 2017-01-01T01:59:59.999Z]`
		/// 
		/// 
		/// 
		/// ## Order Date
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_creationDate` | string | Concatened value suffix `creationDate` and range date in Timestamp format  |
		/// 
		/// 
		/// 
		/// Order Date filter Examples:
		/// 
		/// 1 Day:
		/// 
		/// `/api/oms/pvt/orders?f_creationDate=creationDate:[2017-01-01T02:00:00.000Z TO 2017-01-02T01:59:59.999Z]`
		/// 
		/// 
		/// 1 Month:
		/// 
		/// `/api/oms/pvt/orders?f_creationDate=creationDate:[2017-01-01T02:00:00.000Z TO 2017-02-01T01:59:59.999Z]`
		/// 
		/// 
		/// 1 Year:
		/// 
		/// `/api/oms/pvt/orders?f_creationDate=creationDate:[2016-01-01T02:00:00.000Z TO 2017-01-01T01:59:59.999Z]`
		/// 
		/// 
		/// 
		/// 
		/// ## Authorized Date
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_authorizedDate` | string | Concatened value suffix `authorizedDate` and range date in Timestamp format  |
		/// 
		/// 
		/// 
		/// Authorized Date filter Examples:
		/// 
		/// 1 Day:
		/// 
		/// `/api/oms/pvt/orders?f_authorizedDate=authorizedDate:[2017-01-01T02:00:00.000Z TO 2017-01-02T01:59:59.999Z]`
		/// 
		/// 
		/// 1 Month:
		/// 
		/// `/api/oms/pvt/orders?f_authorizedDate=authorizedDate:[2017-01-01T02:00:00.000Z TO 2017-02-01T01:59:59.999Z]`
		/// 
		/// 
		/// 1 Year:
		/// 
		/// `/api/oms/pvt/orders?f_authorizedDate=authorizedDate:[2016-01-01T02:00:00.000Z TO 2017-01-01T01:59:59.999Z]`
		/// 
		/// 
		/// 
		/// 
		/// ## UTMs
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_UtmSource` | string | UTM Source value  |
		/// 
		/// 
		/// 
		/// Channels filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_UtmSource=buscape_campaign`
		/// 
		/// 
		/// 
		/// 
		/// ## Seller
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_sellerNames` | string | Seller Name value  |
		/// 
		/// 
		/// 
		/// Seller filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_sellerNames=Fast+Shop`
		/// 
		/// 
		/// 
		/// 
		/// ## Call Center Operator
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_callCenterOperatorName` | string | Call Center Operator Value  |
		/// 
		/// 
		/// 
		/// Call Center Operator filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_callCenterOperatorName=Operator%20Name`
		/// 
		/// 
		/// 
		/// 
		/// ## Sales Channel Name
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_salesChannel` | string | Sales Channel Name Value  |
		/// 
		/// 
		/// 
		/// Sales Channel Name filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_salesChannel=Main`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// ## Sales Channel ID
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `salesChannelId` | string | Sales Channel ID Value  |
		/// 
		/// 
		/// 
		/// Sales Channel ID filter Examples:
		/// 
		/// `/api/oms/pvt/orders?salesChannelId=1`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// ## Affiliate ID
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_affiliateId` | string | Affiliate ID Value  |
		/// 
		/// 
		/// 
		/// Affiliate ID filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_affiliateId=WLM`
		/// 
		/// 
		/// 
		/// 
		/// ## Order Status
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_status` | string | Order Status Value  |
		/// 
		/// 
		/// 
		/// | Order Status avaible to filter    |
		/// | --------------------- |
		/// | `waiting-for-sellers-confirmation` |
		/// | `payment-pending` |
		/// | `payment-approved` |
		/// | `ready-for-handling` |
		/// | `handling` |
		/// | `invoiced` |
		/// | `canceled` |
		/// 
		/// 
		/// Order Status filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_status=ready-for-handling`
		/// 
		/// 
		/// 
		/// 
		/// ## Order Status Description
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_statusDescription` | string | Order Status Description Value  |
		/// 
		/// 
		/// 
		/// 
		/// 
		/// | Order Status Description avaible to filter |
		/// | --------------------- |
		/// | `Aguardando+autorização+para+despachar` |
		/// | `Pagamento+Pendente` |
		/// | `Pagamento+Aprovado` |
		/// | `Pronto+para+o+manuseio` |
		/// | `Preparando+Entrega` |
		/// | `Faturado` |
		/// | `Cancelado` |
		/// 
		/// Order Status Description filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_statusDescription=Pronto+para+o+manuseio`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// ## Order Situation
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `incompleteOrders` | boolean | If is a Incomplete Order  |
		/// 
		/// 
		/// > know more about [Incomplete Orders in VTEX Help](https://help.vtex.com/en/tutorial/understanding-incomplete-orders)
		/// 
		/// Order Situation filter Examples:
		/// 
		/// `/api/oms/pvt/orders?incompleteOrders=true`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// ## Error Situation
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `incompleteOrders` | boolean | Error Situation Type  |
		/// 
		/// 
		/// 
		/// | Error Situation Values avaible to filter |
		/// | ------- |
		/// | `all` |
		/// | `perm` |
		/// | `temp` |
		/// 
		/// 
		/// Error Situation filter Examples:
		/// 
		/// `/api/oms/pvt/orders?filterError=all`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// 
		/// ## Payment Type Name
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_paymentNames` | string | Payment Type Value  |
		/// 
		/// 
		/// 
		/// Payment Type Name filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_paymentNames=Visa`
		/// 
		/// 
		/// 
		/// 
		/// 
		/// ## Rates and Benefits Name
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `f_RnB` | string | Rates and Benefits Name  |
		/// 
		/// 
		/// 
		/// Rates and Benefits filter Examples:
		/// 
		/// `/api/oms/pvt/orders?f_RnB="Free+Shipping"`
		/// 
		/// 
		/// 
		/// 
		/// ## Search Field
		/// 
		/// | Attribute    | Type      | Description |
		/// | ------------ |:---------:| -----------:|
		/// | `searchField` | string | Affiliate ID Value  |
		/// | `sku_Ids&sku_Ids` | integer | SKU ID  |
		/// | `listId&listId` | integer | Gift List ID  |
		/// | `tid&tid` | integer | Transaction ID (TID)  |
		/// | `pci_tid&pci_tid` | integer | PCI Connector's Transaction ID (TID)  |
		/// | `paymentId&paymentId` | integer | Payment ID (PID)  |
		/// | `nsu&nsu` | integer | Connector's NSU  |
		/// 
		/// 
		/// 
		/// Search Field filter Examples:
		/// 
		/// SKU ID:
		/// 
		/// `/api/oms/pvt/orders?searchField=sku_Ids&sku_Ids=11223`
		/// 
		/// 
		/// 
		/// Gift List ID:
		/// 
		/// `/api/oms/pvt/orders?searchField=listId&listId=11223`
		/// 
		/// 
		/// 
		/// Transaction ID (TID):
		/// 
		/// `/api/oms/pvt/orders?searchField=tid&tid=54546300238810034995829230012`
		/// 
		/// 
		/// 
		/// PCI Connector's Transaction ID (TID):
		/// 
		/// `/api/oms/pvt/orders?searchField=pci_tid&pci_tid=7032909234899834298423209`
		/// 
		/// 
		/// 
		/// Payment ID (PID):
		/// 
		/// `/api/oms/pvt/orders?searchField=paymentId&paymentId=2`
		/// 
		/// 
		/// 
		/// Connector's NSU:
		/// 
		/// `/api/oms/pvt/orders?searchField=nsu&nsu=2437281`
		/// \n\r\n\r## Response objects\n\r\n\r,
		/// **Response object has the following properties:**
		/// 
		/// 
		/// | Attribute    | Type        | Description |
		/// | --------------- |:---------:| --------------------------------------:|
		/// | `list` | object | Order List Object |
		/// | `shippingEstimateDate` | string | Estimate Shipping Date |
		/// | `affiliateId` | string | Seller Name who was responsible for the order |
		/// | `authorizedDate` | string | Authorized Order Date |
		/// | `callCenterOperatorData` | string | Call Center Operator responsible for the order |
		/// | `name` | string | Client Name|
		/// | `creationDate` | string | Order Creation Date |
		/// | `currencyCode` | string | Currency Code in ISO 4217  |
		/// | `items` | object | Obsolete Field  |
		/// | `lastMessageUnread` | string | Last sent transactional message  |
		/// | `listId` | string | Releated Gift List Id |
		/// | `listType` | string | Releated Gift List Type |
		/// | `marketplaceOrderId` | string | Marketplace Order Id |
		/// | `orderId` | string | Change receipt order Id |
		/// | `orderIsComplete` | boolean | If is a Order Completed |
		/// | `origin` | string | Order Origin: "Marketplace" or "Fulfillment" |
		/// | `paymentNames` | string | Payment System Name |
		/// | `salesChannel` | string | Order Sales Channel Id |
		/// | `sequence` | string | Order Sequence ID |
		/// | `status` | string | Order Status |
		/// | `statusDescription` | string | Status Description |
		/// | `totalItems` | integer | Total Order Items |
		/// | `totalValue` | integer | Total Value Amount |
		/// | `workflowInErrorState` | boolean | If is a Work Flow Error |
		/// | `workflowInRetry` | boolean | If is in a Work Flow Retry |
		/// | `paging` | object | Paging Details Object |
		/// | `pages` | integer | Paging Total Pages |
		/// | `perPage` | integer | Paging total per Page |
		/// | `total` | integer | Total Result |
		/// | `stats` | object | Results segmented by `totalItems` and `totalValue` |
		/// | `totalItems` | integer | Total Order Items segmeted by `currencyCode` and `origin`|
		/// | `totalValue` | integer | Total Value Amount segmeted by `currencyCode` and `origin`|
		/// | `currencyCode` | string | Currency Code in ISO 4217  |
		/// | `origin` | string | Order Origin: "Marketplace" or "Fulfillment" |
		/// | `Count` | integer | Orders Count |
		/// | `Facets` | object | Grouping Object |
		/// | `Max` | object | Paging Details Object |
		/// | `Mean` | object | Paging Details Object |
		/// | `Min` | object | Paging Details Object |
		/// | `Missing` | object | Paging Details Object |
		/// | `StdDev` | object | Paging Details Object |
		/// | `Sum` | object | Paging Details Object |
		/// | `SumOfSquares` | object | Paging Details Object |
		/// ListOrders2 api/orders/extendsearch/orders
		/// </summary>
		/// <param name="f_hasInputInvoice">Filters list to return only orders with non `null` values for the `invoiceInput` field.</param>
		/// <returns>OK</returns>
		public async Task ListOrders2Async(bool f_hasInputInvoice, ListOrders2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/orders/extendsearch/orders?f_hasInputInvoice="+f_hasInputInvoice;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get order
		/// Retrieves order details by searching a specific order ID.
		/// 
		/// >If you wish to retrieve unmasked data, use the `reason` parameter.
		/// 
		/// > The `View order` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#).
		/// 
		/// > Check the new [Orders onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.
		/// 
		/// > Throttling: Each account can make up to 5000 requests per minute.
		/// 
		/// ## Request object has the following properties:
		/// 
		/// | Attribute    | Type        | Description |
		/// | --------------- |:---------:| --------------------------------------:|
		/// | `orderId` | string | Order Id |
		/// 
		/// 
		/// ## Response object has the following properties:
		/// 
		/// 
		/// | Attribute    | Type        | Description |
		/// | --------------- |:---------:| --------------------------------------:|
		/// | `affiliateId` | string | Seller Name who was responsible for the order |
		/// | `allowCancellation` | boolean | If Cancellation is allowed |
		/// | `allowEdition` | boolean | If Order Edition is allowed |
		/// | `approvedBy` | string | User who approved the order |
		/// | `authorizedDate` | string | Authorized Order Date |
		/// | `callCenterOperatorData` | string | Call Center Operator responsible for the order |
		/// | `cancelReason` | string | Cancel Reason |
		/// | `cancelledBy` | string | User who Cancelled the order |
		/// | `changesAttachment` | object | Change details object |
		/// | `changesData` | object | Array with each change |
		/// | `discountValue` | integer | Change Discount Value |
		/// | `incrementValue` | integer | Change Increment Value |
		/// | `itemsAdded` | object | Added items details |
		/// | `itemsRemoved` | object | Removed items details |
		/// | `id` | integer | Changed SKU ID |
		/// | `name` | string | Changed SKU Name |
		/// | `price` | integer | Changed SKU Price |
		/// | `quantity` | integer | Changed SKU Quantity |
		/// | `unitMultiplier` | integer | Changed SKU Unit Multiplier |
		/// | `reason` | string | Change Reason |
		/// | `receipt` | object | Change receipt details object |
		/// | `date` | string | Change receipt date |
		/// | `orderId` | string | Change receipt order Id |
		/// | `receipt` | object | Change receipt ID |
		/// | `id` | string | Object Id, expect value "changeAttachment" |
		/// | `clientProfileData` | object | Object with all Cliente Profile Data |
		/// | `corporateDocument` | string | Client Corporate Document |
		/// | `corporateName` | string | Client Corporate Name |
		/// | `corporatePhone` | string | Cliente Corporate Telephone |
		/// | `customerClass` | string | Customer class |
		/// | `document` | string | Client Document |
		/// | `documentType` | string | Client Document Type |
		/// | `email` | string | Client e-mail |
		/// | `firstName` | string | Client First Name |
		/// | `id` | string | Object ID, expected value "clientProfileData" |
		/// | `isCorporate` | string | If the Client is a Corporate Client |
		/// | `lastName` | string | Client Last Name|
		/// | `phone` | string | Client Telephone |
		/// | `stateInscription` | string | Client Corporate Inscription |
		/// | `tradeName` | string | Client Corporate Trade Name |
		/// | `userProfileId` | string | Client User Profile ID |
		/// | `commercialConditionData` | object | Commercial condition information, including `"Id"`, `"parentOrderId"`, and `"reason"` |
		/// | `creationDate` | string | Order Creation Date |
		/// | `customData` | object | Custom Data Object |
		/// | `customApps` | object | Custom apps details object |
		/// | `fields` | object | Custom app fields |
		/// | `id` | string | Custom App ID |
		/// | `major` | integer | Major |
		/// | `emailTracked` | string | Client Conversation Tracker email  |
		/// | `followUpEmail` | string | Responsible store e-mail |
		/// | `giftRegistryData` | object | Gift registry list information, including `"addressId"` (object), `"description"` (string), and `"giftRegistryId"` (string) |
		/// | `hostname` | string | Account hostname registered in License Manager |
		/// | `invoiceData` | object | Information pertinent to the order's invoice |
		/// | `invoicedDate` | string | Invoice Date |
		/// | `isCheckedIn` | boolean | True if order is from inStore |
		/// | `isCompleted` | boolean | True if the order is completed |
		/// | `items` | object | Order items object |
		/// | `additionalInfo` | string | Order item additional info |
		/// | `brandId` | string | Brand ID |
		/// | `brandName` | string | Brand name |
		/// | `categoriesIds` | string | Item category ID |
		/// | `commercialConditionId` | string | Invoice date |
		/// | `dimension` | object | Item dimension object |
		/// | `cubicweight` | number | Item cubic weight |
		/// | `height` | number | Item height |
		/// | `length` | number | Item length |
		/// | `weight` | number | Item weight |
		/// | `width` | number | Item width |
		/// | `offeringInfo` | string | Extra information on offering |
		/// | `offeringType` | string | Offering type |
		/// | `offeringTypeId` | string | ID of offering type |
		/// | `productClusterId` | string | All releated product clusters |
		/// | `attachments` | object | Attachents Array |
		/// | `content` | object | Attachment Content Custom Field |
		/// | `name` | string | Attachment Name |
		/// | `bundleItems` | object | Invoice date |
		/// | `commission` | string | Comission value registered to Seller |
		/// | `components` | object | If item is a kit, contains components information |
		/// | `detailUrl` | string | Product Slug URL |
		/// | `ean` | string | SKU EAN |
		/// | `freightCommission` | integer | Comission value registered to seller |
		/// | `id` | string | SKU Id |
		/// | `imageUrl` | string | SKU Image URL |
		/// | `isGift` | string | If this item is a gift in order context |
		/// | `itemAttachment` | object | Attachment Object |
		/// | `content` | object | Attachment Content Array |
		/// | `name` | string | Attachment Name |
		/// | `listPrice` | integer | Item List Price |
		/// | `lockId` | string | Reservation ID |
		/// | `manualPrice` | string | Manually inserted price, if there is one. |
		/// | `measurementUnit` | string | Item measurement unit |
		/// | `name` | string | Item name |
		/// | `offerings` | object | Offerings information |
		/// | `params` | object | "ContextParameter" hashset with `"name"` and `"value"` |
		/// | `preSaleDate` | string | Item pre sale date |
		/// | `price` | integer | Item Price |
		/// | `items[].priceDefinition`                        | Object   | Price information for all units of a specific item.                                                                                                                  |
		/// | `items[].priceDefinition.total`                  | Integer  | Total value for all units of the item in cents.                                                                                                                      |
		/// | `items[].priceDefinition.calculatedSellingPrice` | Integer  | Item's calculated unitary selling price in cents.                                                                                                                    |
		/// | `items[].priceDefinition.sellingPrices`          | Array    | Array of objects, each containing `value` (in cents) and `quantity` for the different rounding instances that can be combined to form the correctly rounded `total`. |
		/// | `priceTags` | object | Object with all price modifiers |
		/// | `identifier` | string | Price Tag ID |
		/// | `isPercentual` | boolean | Indicates whether the price tag is a percentual modifier |
		/// | `name` | string | Price tag name |
		/// | `rawValue` | string | Price tag raw value |
		/// | `value` | string | Price tag value |
		/// | `priceValidUntil` | string | Price expiration date |
		/// | `productId` | string | Item product ID |
		/// | `quantity` | integer | Item quantity |
		/// | `refId` | string | Item reference ID |
		/// | `rewardValue` | integer | Item reward value |
		/// | `seller` | string | Item seller |
		/// | `sellerSku` | string | Invoice Date |
		/// | `sellingPrice` | integer | Item selling price. For more accurate information, see the `priceDefinition` field |
		/// | `shippingPrice` | string | Item Shipping Price |
		/// | `tax` | integer | Item Tax |
		/// | `taxCode` | string | Item Tax Code |
		/// | `uniqueId` | string | Item Order Unique ID |
		/// | `unitMultiplier` | integer | Item Unit Multipler |
		/// | `lastChange` | string | Order Last Change Date |
		/// | `lastMessage` | string | initial excerpt from last message sent to the customer |
		/// | `marketingData` | string | Marketing Data Object |
		/// | `coupon` | string | Order Disccount Coupon |
		/// | `id` | string |  Object ID, expected value "marketingData" |
		/// | `marketingTags` | object | Marketing Tags Array |
		/// | `utmCampaign` | string | UTM Campaign Parameters |
		/// | `utmMedium` | string | UTM Medium Parameters |
		/// | `utmPartner` | string | UTM Source Parameters |
		/// | `utmSource` | string | UTM Source Parameters|
		/// | `utmiCampaign` | string | UTMI Campaign Internal Parameters |
		/// | `utmiPart` | string | UTMI Part Internal Parameters |
		/// | `utmipage` | string | UTMI Page Internal Parameters |
		/// | `marketplace` | object | Marketplace Details Object |
		/// | `baseURL` | string | Marketplace Base URL |
		/// | `isCertified` | string | If is a Certified Marketplace |
		/// | `name` | string | Marketplace Name |
		/// | `marketplaceItems` | object | Marketplace Details Object |
		/// | `marketplaceOrderId` | string | Marketplace Order Id |
		/// | `marketplaceServicesEndpoint` | string | Marketplace Services Endpoint |
		/// | `merchantName` | string | Merchant Name |
		/// | `openTextField` | object | Open Text Field Object |
		/// | `value` | string | Open Text Field Value |
		/// | `orderFormId` | string | Order Form Id |
		/// | `orderGroup` | string | Order Group Id |
		/// | `orderId` | string | Order Id |
		/// | `origin` | string | Order Origin: "Marketplace", "Fulfillment", or "Chain" (for the third level in a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4?&utm_source=autocomplete#) purchase). |
		/// | `packageAttachment` | object | Package Object |
		/// | `packages` | object | Packages Details Object, populated after order invoiced |
		/// | `cfop` | string | Fiscal code for operations and installments |
		/// | `courier` | string | Package selected Courier |
		/// | `courierStatus` | string | Package Tracking Status |
		/// | `data` | object | Package Tracking Timeline |
		/// | `finished` | string | If the delivery are finished |
		/// | `status` | string | Courier Status |
		/// | `embeddedInvoice` | string | XML of the invoice |
		/// | `invoiceKey` | string | Invoice Credencial Key |
		/// | `invoiceNumber` | string | Package Invoice Number |
		/// | `invoiceUrl` | string | Package Invoice URL |
		/// | `invoiceValue` | string | Package Invoice Value |
		/// | `issuanceDate` | string | Package Issuance Date |
		/// | `items` | string | Items Package Array |
		/// | `description` | string | Item Desciprtion |
		/// | `itemIndex` | string | Item Index |
		/// | `price` | string | Item Price |
		/// | `quantity` | string | Item Quantity |
		/// | `unitMultiplier` | string | Unit Multiplier |
		/// | `trackingNumber` | string | Package Tracking Number |
		/// | `trackingUrl` | string | Tracking Order URL |
		/// | `type` | string | Invoice Type, expected values "Output" and "Input" |
		/// | `paymentData` | object | Payment Object |
		/// | `transactions` | object | Transactions Object |
		/// | `isActive` | boolean | If the payment is Active |
		/// | `merchantName` | string | Merchant Name|
		/// | `payments` | object | Payment Object |
		/// | `cardHolder` | string | Payment Card Holder |
		/// | `connectorResponses` | object | Connector Responses Object |
		/// | `billingAddress` | object | Billing Address information |
		/// | `Message` | string | Connector Responses Message |
		/// | `ReturnCode` | string | Connector Return Code |
		/// | `Tid` | string | Connector Transaction ID |
		/// | `acquirer` | string | Connector acquirer |
		/// | `authId` | string | Connector authorization ID |
		/// | `dueDate` | string | Payment due date |
		/// | `firstDigits` | string | Payment card first digits |
		/// | `giftCardCaption` | string | Gift card caption |
		/// | `giftCardId` | string | Gift card ID |
		/// | `giftCardName` | string | Gift card name |
		/// | `group` | string | Payment group |
		/// | `id` | string | Payment ID |
		/// | `installments` | string | Payment installments quantity |
		/// | `lastDigits` | string | Payment card last digits |
		/// | `paymentSystem` | string | Payment system type ID |
		/// | `paymentSystemName` | string | Payment system name |
		/// | `redemptionCode` | string | Gift card redemption code |
		/// | `referenceValue` | string | Payment reference value |
		/// | `tid` | string | Payment transaction ID |
		/// | `url` | string | Payment URL |
		/// | `value` | string | Payment value with interest if it applies |
		/// | `transactionId` | string | Transaction Id |
		/// | `ratesAndBenefitsData` | string | Rates and Benefits Data Object |
		/// | `id` | string |  Object ID, expected value "ratesAndBenefitsData" |
		/// | `rateAndBenefitsIdentifiers` | object | Rates and Benefits Details Object |
		/// | `additionalInfo` | string |  Rates and Benefits Additional Info |
		/// | `description` | string | Rates and Benefits Description |
		/// | `featured` | string |  If is allowed to acumulate the Rates and Benefits |
		/// | `matchedParameters` | object | March Parameters Array |
		/// | `name` | string |  Rates and Benefits Name |
		/// | `roundingError` | integer | Rounding Error Total Amount  |
		/// | `salesChannel` | string | Order Sales Channel Id |
		/// | `sellerOrderId` | string | Order Seller Id |
		/// | `sellers` | object | Sellers Array |
		/// | `id` | string | Seller Id |
		/// | `logo` | string | URL Seller Logo |
		/// | `name` | string | Seller Name |
		/// | `sequence` | string | Order Sequence ID |
		/// | `shippingData` | object | Shipping Data Object |
		/// | `address` | object | Shipping Address |
		/// | `addressId` | string | Shipping Address Id |
		/// | `addressType` | string | Shipping Address Type |
		/// | `city` | string | Shipping City |
		/// | `complement` | string | Shipping Complement |
		/// | `country` | string | Shipping Country in ISO 3166 ALPHA-3 abbreviation  |
		/// | `geoCoordinates` | object | Shipping Geo Coordinates Array |
		/// | `neighborhood` | string | Shipping Neighborhood |
		/// | `number` | string | Shipping Number |
		/// | `postalCode` | string | Shipping Postal Code |
		/// | `receiverName` | string | Shipping Receiver Name |
		/// | `reference` | string | Shipping Reference |
		/// | `state` | string | Shipping State |
		/// | `street` | string | Shipping Street |
		/// | `id` | string | Object ID, expected value "shippingData"|
		/// | `logisticsInfo` | object | Logistics Info Object |
		/// | `addressId` | string | Adress Id |
		/// | `deliveryChannel` | string | Delivery Channel, allowed values "delivery" or "pickup-in-point" |
		/// | `deliveryCompany` | string | Courier Company Name |
		/// | `deliveryIds` | object | Delivery Ids Object |
		/// | `courierId` | string | Courier Id |
		/// | `courierName` | string | Courier Name |
		/// | `dockId` | string | Releated Dock Id |
		/// | `quantity` | integer | Items Quantity |
		/// | `warehouseId` | string | Releated Warehouse Id |
		/// | `deliveryWindow` | object | Delivery Window Object |
		/// | `endDateUtc` | string | Delivery Date End in UTC  |
		/// | `price` | string | Delivery Window Cost |
		/// | `startDateUtc` | string | Delivery Date Starts in UTC |
		/// | `itemIndex` | integer | Logistic Info Item Index |
		/// | `listPrice` | integer | Logistic Info Item List Price |
		/// | `lockTTL` | string | Stock reservation waiting period |
		/// | `pickupStoreInfo` | object | Pickup Store Info Object |
		/// | `additionalInfo` | string | Pickup Store Additional Info |
		/// | `address` | string | Pickup Store Address |
		/// | `dockId` | string | Pickup Store Releated Dock Id |
		/// | `friendlyName` | string | Pickup Store Friendly Name |
		/// | `isPickupStore` | boolean | If is a Pickup Store |
		/// | `polygonName` | string | Releated Polygom Name |
		/// | `price` | integer | Logistic Info Item Price |
		/// | `selectedSla` | string | Selected SLA |
		/// | `sellingPrice` | integer | Logistic Info Item Selling Price |
		/// | `shippingEstimate` | string | Estimate Shipping Duration |
		/// | `shippingEstimateDate` | string | Estimate Shipping Date |
		/// | `shipsTo` | object | Shipping Country in ISO 3166 ALPHA-3 abbreviation |
		/// | `slas` | object | SLAs Object |
		/// | `deliveryChannel` | string | Delivery Channel, allowed values "delivery" or "pickup-in-point" |
		/// | `deliveryWindow` | object | Delivery Window Object |
		/// | `endDateUtc` | string | Delivery Date End in UTC  |
		/// | `price` | string | Delivery Window Cost |
		/// | `startDateUtc` | string | Delivery Date Starts in UTC |
		/// | `id` | string | SLA Id |
		/// | `pickupStoreInfo` | object | Pickup Store Details Object |
		/// | `additionalInfo` | string | Pickup Store Additional Info |
		/// | `address` | string | Pickup Store Address |
		/// | `dockId` | string | Pickup Store releated Dock Id  |
		/// | `friendlyName` | string | Pickup Store Friendly Name |
		/// | `isPickupStore` | boolean | If is a Pickup Store |
		/// | `polygonName` | string | Releated Polygon Name |
		/// | `price` | integer | SLA Price |
		/// | `shippingEstimate` | string | SLA Shipping Estimate |
		/// | `selectedAddresses` | object | Selected Address Details Object |
		/// | `addressId` | string | Shipping Address Id |
		/// | `addressType` | string | Shipping Address Type |
		/// | `city` | string | Shipping City |
		/// | `complement` | string | Shipping Complement |
		/// | `country` | string | Shipping Country in ISO 3166 ALPHA-3 abbreviation  |
		/// | `geoCoordinates` | object | Shipping Geo Coordinates Array |
		/// | `neighborhood` | string | Shipping Neighborhood |
		/// | `number` | string | Shipping Number |
		/// | `postalCode` | string | Shipping Postal Code |
		/// | `receiverName` | string | Shipping Receiver Name |
		/// | `reference` | string | Shipping Reference |
		/// | `state` | string | Shipping State |
		/// | `street` | string | Shipping Street |
		/// | `trackingHints` | array | Array of tracking hint objects, containing `"courierName"`, `"trackingId"`, `"trackingLabel"`, and `"trackingUrl"` |
		/// | `status` | string | Order Status |
		/// | `statusDescription` | string | Status Description |
		/// | `storePreferencesData` | object | Store Preferences Data Object |
		/// | `countryCode` | string | Country Code in ISO 3166 ALPHA-3 abbreviation |
		/// | `currencyCode` | string | Currency Code in ISO 4217  |
		/// | `currencyFormatInfo` | object | Currency Format Info Object |
		/// | `CurrencyDecimalDigits` | integer | Currency Decimal Digits |
		/// | `CurrencyDecimalSeparator` | string | Currency Decimal Separator |
		/// | `CurrencyGroupSeparator` | string | Currency Group Separator |
		/// | `CurrencyGroupSize` | integer | Currency Group Size |
		/// | `StartsWithCurrencySymbol` | boolean | If Starts With Currency Symbol |
		/// | `currencyLocale` | integer | LCID Decimal |
		/// | `currencySymbol` | string | Currency Symbol |
		/// | `timeZone` | string | Order Time Zone |
		/// | `totals` | object | Totals Object |
		/// | `id` | string | Totals Ids, expected values: "Items", "Discounts", "Shipping" and "Tax" |
		/// | `name` | string | Totals ID Description |
		/// | `value` | integer | Totals Value |
		/// | `value` | integer | Order Value |
		/// 
		/// GetOrder2 api/orders/pvt/document/{orderId}
		/// </summary>
		/// <param name="orderId">ID of the order.</param>
		/// <param name="reason">Reason for requesting unmasked data.</param>
		/// <returns>OK</returns>
		public async Task<GetOrder2Return> GetOrder2Async(string orderId, string reason, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/orders/pvt/document/"+ (orderId==null? "" : System.Uri.EscapeDataString(orderId))+"&reason=" + (reason==null? "" : System.Uri.EscapeDataString(reason));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetOrder2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Start handling order
		/// Change the status of an order to indicate that is is in `handling`.
		/// 
		/// > Expect a `status 204` response with no content in case of a successful request.
		/// 
		/// > The `Change order workflow status` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#).
		/// StartHandling2 api/orders/pvt/document/{orderId}/actions/start-handling
		/// </summary>
		/// <param name="orderId">ID of the order.</param>
		public async Task StartHandling2Async(string orderId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/orders/pvt/document/"+ (orderId==null? "" : System.Uri.EscapeDataString(orderId))+"/actions/start-handling";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancel order
		/// You should use this endpoint to cancel an order by its `orderId`.
		/// 
		/// A common scenario is one where the seller has a problem with the order fulfillment and needs to request the order cancellation to the marketplace. To do this, the seller would need to make this request, passing the `orderId` in the URL.
		/// 
		/// You should expect a response with the date when the notification was received, the orderId, and a receipt protocol code.
		/// 
		/// Be aware that if the order status is already `Invoiced`, the order can only be canceled if - before using this request - you send a return invoice through the [Order Invoice Notification endpoint](https://developers.vtex.com/reference/invoice#invoicenotification).
		/// 
		/// > The `Cancel order` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#).
		/// CancelOrder2 api/orders/pvt/document/{orderId}/cancel
		/// </summary>
		/// <param name="orderId">ID of the order.</param>
		/// <returns>OK</returns>
		public async Task<CancelOrder2Return> CancelOrder2Async(string orderId, CancelOrder2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/orders/pvt/document/"+ (orderId==null? "" : System.Uri.EscapeDataString(orderId))+"/cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelOrder2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Order invoice notification
		/// Once the order is invoiced, the seller should use this request to send the invoice information to the marketplace.
		/// 
		/// We strongly recommend that you always send the object of the invoiced items. With this practice, rounding errors will be avoided.
		/// 
		/// It is not allowed to use the same `invoiceNumber` in more than one request to the Order Invoice Notification endpoint.
		/// 
		/// Be aware that this endpoint is also used by the seller to send the order tracking information. This, however, should be done in a separate moment, once the seller has the tracking information.
		/// 
		/// > The `Notify invoice` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#).
		/// InvoiceNotification2 api/orders/pvt/document/{orderId}/invoices
		/// </summary>
		/// <param name="orderId">ID of the order.</param>
		/// <returns>OK</returns>
		public async Task<InvoiceNotification2Return> InvoiceNotification2Async(string orderId, InvoiceNotificationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/orders/pvt/document/"+ (orderId==null? "" : System.Uri.EscapeDataString(orderId))+"/invoices";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<InvoiceNotification2Return>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Send payment notification
		/// Send a payment notification of a given order, by order ID and payment ID.
		/// 
		/// > The `Notify payment` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#).
		/// 
		/// > Learn more about [Transaction Details](https://help.vtex.com/en/tutorial/how-to-view-the-orders-details).
		/// 
		/// 
		/// ## Request body properties
		/// 
		/// | Attribute    | Type        | Description |
		/// | --------------- |:---------:| --------------------------------------:|
		/// | `orderId` | string | Order Id |
		/// | `paymentId` | string | Payment ID |
		/// SendPaymentNotification2 api/orders/pvt/document/{orderId}/payment/{paymentId}/notify-payment
		/// </summary>
		/// <param name="orderId">ID of the order.</param>
		/// <param name="paymentId">ID of the payment.</param>
		/// <returns>OK</returns>
		public async Task SendPaymentNotification2Async(string orderId, string paymentId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/orders/pvt/document/"+ (orderId==null? "" : System.Uri.EscapeDataString(orderId))+"/payment/"+ (paymentId==null? "" : System.Uri.EscapeDataString(paymentId))+"/notify-payment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ListOrders2PostBody
	{
		
		/// <summary>
		/// Concatened value sufix {{creationDate}} and range date in Timestamp format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="f_creationDate")]
		public string F_creationDate { get; set; }
		
		/// <summary>
		/// Number of the page to be retrieved.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		public int Page { get; set; }
		
		/// <summary>
		/// Number of orders per page.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="per_page")]
		public int Per_page { get; set; }
		
		/// <summary>
		/// Full-text search for the orders.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="q")]
		public string Q { get; set; }
	}
	
	public class GetOrder2Return
	{
		
		/// <summary>
		/// Three letter code identifying the marketplace where the order was placed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="affiliateId")]
		public string AffiliateId { get; set; }
		
		/// <summary>
		/// Indicates whether cancelation is allowed for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowCancellation")]
		public System.Nullable<System.Boolean> AllowCancellation { get; set; }
		
		/// <summary>
		/// Indicates whether edition is allowed for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowEdition")]
		public System.Nullable<System.Boolean> AllowEdition { get; set; }
		
		/// <summary>
		/// User that approved the order, in case of manual approval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approvedBy")]
		public string ApprovedBy { get; set; }
		
		/// <summary>
		/// Date in which the order was authorized in UTC.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizedDate")]
		public string AuthorizedDate { get; set; }
		
		/// <summary>
		/// Call center operator data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callCenterOperatorData")]
		public string CallCenterOperatorData { get; set; }
		
		/// <summary>
		/// Reason for cancelation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelReason")]
		public string CancelReason { get; set; }
		
		/// <summary>
		/// User that canceled the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelledBy")]
		public string CancelledBy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="changesAttachment")]
		public ChangesAttachment ChangesAttachment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientProfileData")]
		public ClientProfileData ClientProfileData { get; set; }
		
		/// <summary>
		/// Commercial condition data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commercialConditionData")]
		public string CommercialConditionData { get; set; }
		
		/// <summary>
		/// Creation date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationDate")]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Custom data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customData")]
		public string CustomData { get; set; }
		
		/// <summary>
		/// Email tracked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailTracked")]
		public string EmailTracked { get; set; }
		
		/// <summary>
		/// Follow up email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="followUpEmail")]
		public string FollowUpEmail { get; set; }
		
		/// <summary>
		/// Gift registry data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="giftRegistryData")]
		public string GiftRegistryData { get; set; }
		
		/// <summary>
		/// Host name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostname")]
		public string Hostname { get; set; }
		
		/// <summary>
		/// Information pertinent to the order's invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceData")]
		public string InvoiceData { get; set; }
		
		/// <summary>
		/// Date in which the order was invoiced in UTC.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoicedDate")]
		public string InvoicedDate { get; set; }
		
		/// <summary>
		/// Indicates whether client is checked in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isCheckedIn")]
		public System.Nullable<System.Boolean> IsCheckedIn { get; set; }
		
		/// <summary>
		/// Indicates whether order is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isCompleted")]
		public System.Nullable<System.Boolean> IsCompleted { get; set; }
		
		/// <summary>
		/// Information on each item in the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public GetOrder2ReturnItems[] GetOrder2ReturnItems { get; set; }
		
		/// <summary>
		/// Date of last change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastChange")]
		public string LastChange { get; set; }
		
		/// <summary>
		/// Last message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastMessage")]
		public string LastMessage { get; set; }
		
		/// <summary>
		/// Marketing data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketingData")]
		public string MarketingData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketplace")]
		public Marketplace Marketplace { get; set; }
		
		/// <summary>
		/// Marketplace items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketplaceItems")]
		public string[] MarketplaceItems { get; set; }
		
		/// <summary>
		/// ID of the order in the marketplace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketplaceOrderId")]
		public string MarketplaceOrderId { get; set; }
		
		/// <summary>
		/// Marketplace endpoint for post purchase communication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketplaceServicesEndpoint")]
		public string MarketplaceServicesEndpoint { get; set; }
		
		/// <summary>
		/// Merchant name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merchantName")]
		public string MerchantName { get; set; }
		
		/// <summary>
		/// Open text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openTextField")]
		public string OpenTextField { get; set; }
		
		/// <summary>
		/// ID of the shopping cart from which the order was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderFormId")]
		public string OrderFormId { get; set; }
		
		/// <summary>
		/// Order group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderGroup")]
		public string OrderGroup { get; set; }
		
		/// <summary>
		/// Order ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderId")]
		public string OrderId { get; set; }
		
		/// <summary>
		/// Origin.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origin")]
		public string Origin { get; set; }
		
		/// <summary>
		/// Package attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageAttachment")]
		public GetOrder2ReturnPackageAttachment PackageAttachment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="paymentData")]
		public PaymentData PaymentData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ratesAndBenefitsData")]
		public RatesAndBenefitsData RatesAndBenefitsData { get; set; }
		
		/// <summary>
		/// Rounding error in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roundingError")]
		public System.Nullable<System.Int32> RoundingError { get; set; }
		
		/// <summary>
		/// Sales channel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesChannel")]
		public string SalesChannel { get; set; }
		
		/// <summary>
		/// Seller order ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellerOrderId")]
		public string SellerOrderId { get; set; }
		
		/// <summary>
		/// Array with sellers information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellers")]
		public Seller[] Sellers { get; set; }
		
		/// <summary>
		/// Sequence number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequence")]
		public string Sequence { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shippingData")]
		public ShippingData ShippingData { get; set; }
		
		/// <summary>
		/// Status in the order workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Status description which is displayed on the Admin panel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusDescription")]
		public string StatusDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="storePreferencesData")]
		public StorePreferencesData StorePreferencesData { get; set; }
		
		/// <summary>
		/// Information on each of the order's totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totals")]
		public GetOrder2ReturnTotals[] GetOrder2ReturnTotals { get; set; }
		
		/// <summary>
		/// Value in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	public class GetOrder2ReturnItems
	{
		
		/// <summary>
		/// Additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalInfo")]
		public GetOrder2ReturnItemsAdditionalInfo AdditionalInfo { get; set; }
		
		/// <summary>
		/// Array containing information on attachments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachments")]
		public string[] Attachments { get; set; }
		
		/// <summary>
		/// Availability
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availability")]
		public string Availability { get; set; }
		
		/// <summary>
		/// Information on services sold along with the SKU. Example: a gift package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bundleItems")]
		public GetOrder2ReturnItemsBundleItems[] GetOrder2ReturnItemsBundleItems { get; set; }
		
		/// <summary>
		/// Detail URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detailUrl")]
		public string DetailUrl { get; set; }
		
		/// <summary>
		/// European Article Number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ean")]
		public string Ean { get; set; }
		
		/// <summary>
		/// ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Image URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		/// <summary>
		/// Indicates whether item is a gift.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isGift")]
		public System.Nullable<System.Boolean> IsGift { get; set; }
		
		/// <summary>
		/// List price in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listPrice")]
		public System.Nullable<System.Int32> ListPrice { get; set; }
		
		/// <summary>
		/// Manual price in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manualPrice")]
		public System.Nullable<System.Int32> ManualPrice { get; set; }
		
		/// <summary>
		/// User that applied the manual price, if that is the case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manualPriceAppliedBy")]
		public string ManualPriceAppliedBy { get; set; }
		
		/// <summary>
		/// Manufacturer code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manufacturerCode")]
		public string ManufacturerCode { get; set; }
		
		/// <summary>
		/// Measurement unit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="measurementUnit")]
		public string MeasurementUnit { get; set; }
		
		/// <summary>
		/// Modal type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modalType")]
		public string ModalType { get; set; }
		
		/// <summary>
		/// Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Parent assembly binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentAssemblyBinding")]
		public string ParentAssemblyBinding { get; set; }
		
		/// <summary>
		/// Parent item index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentItemIndex")]
		public System.Nullable<System.Int32> ParentItemIndex { get; set; }
		
		/// <summary>
		/// Presale date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preSaleDate")]
		public string PreSaleDate { get; set; }
		
		/// <summary>
		/// Price in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		/// <summary>
		/// Price information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceDefinition")]
		public GetOrder2ReturnItemsPriceDefinition PriceDefinition { get; set; }
		
		/// <summary>
		/// Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceTags")]
		public GetOrder2ReturnItemsPriceTags[] GetOrder2ReturnItemsPriceTags { get; set; }
		
		/// <summary>
		/// Price expiration date and time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceValidUntil")]
		public string PriceValidUntil { get; set; }
		
		/// <summary>
		/// Object, where each field is an ID from `productCategoryIds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productCategories")]
		public GetOrder2ReturnItemsProductCategories ProductCategories { get; set; }
		
		/// <summary>
		/// Product category IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productCategoryIds")]
		public string ProductCategoryIds { get; set; }
		
		/// <summary>
		/// Product ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		/// <summary>
		/// Product Ref ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productRefId")]
		public string ProductRefId { get; set; }
		
		/// <summary>
		/// Quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// Ref ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refId")]
		public string RefId { get; set; }
		
		/// <summary>
		/// Reward value in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rewardValue")]
		public System.Nullable<System.Int32> RewardValue { get; set; }
		
		/// <summary>
		/// Seller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="seller")]
		public string Seller { get; set; }
		
		/// <summary>
		/// Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/pt/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellerChain")]
		public string[] SellerChain { get; set; }
		
		/// <summary>
		/// Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellingPrice")]
		public System.Nullable<System.Int32> SellingPrice { get; set; }
		
		/// <summary>
		/// SKU name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuName")]
		public string SkuName { get; set; }
		
		/// <summary>
		/// Tax value in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax")]
		public System.Nullable<System.Int32> Tax { get; set; }
		
		/// <summary>
		/// Order's item unique ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uniqueId")]
		public string UniqueId { get; set; }
		
		/// <summary>
		/// Unit multiplier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unitMultiplier")]
		public System.Nullable<System.Int32> UnitMultiplier { get; set; }
	}
	
	public class GetOrder2ReturnItemsAdditionalInfo
	{
		
		/// <summary>
		/// Brand ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brandId")]
		public string BrandId { get; set; }
		
		/// <summary>
		/// Brand name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brandName")]
		public string BrandName { get; set; }
		
		/// <summary>
		/// Dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public string Dimension { get; set; }
		
		/// <summary>
		/// Offering information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offeringInfo")]
		public string OfferingInfo { get; set; }
		
		/// <summary>
		/// Offering type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offeringType")]
		public string OfferingType { get; set; }
		
		/// <summary>
		/// Offering type ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offeringTypeId")]
		public string OfferingTypeId { get; set; }
	}
	
	public class GetOrder2ReturnItemsBundleItems
	{
		
		/// <summary>
		/// Service identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Price in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		/// <summary>
		/// Type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetOrder2ReturnItemsPriceDefinition
	{
		
		/// <summary>
		/// Calculated selling price in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calculatedSellingPrice")]
		public System.Nullable<System.Int32> CalculatedSellingPrice { get; set; }
		
		/// <summary>
		/// Selling prices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellingPrices")]
		public GetOrder2ReturnItemsPriceDefinitionSellingPrices[] GetOrder2ReturnItemsPriceDefinitionSellingPrices { get; set; }
		
		/// <summary>
		/// Total in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
	}
	
	public class GetOrder2ReturnItemsPriceDefinitionSellingPrices
	{
		
		/// <summary>
		/// Quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// Value in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	public class GetOrder2ReturnItemsPriceTags
	{
		
		/// <summary>
		/// Price tag identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		/// <summary>
		/// Indicates whether price tag value is applied through a percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isPercentual")]
		public System.Nullable<System.Boolean> IsPercentual { get; set; }
		
		/// <summary>
		/// Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Raw value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawValue")]
		public System.Nullable<System.Int32> RawValue { get; set; }
		
		/// <summary>
		/// Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	public class GetOrder2ReturnItemsProductCategories
	{
		
		/// <summary>
		/// Product category corresponding to the ID in the field key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="{ID}")]
		public string ID { get; set; }
	}
	
	public class GetOrder2ReturnPackageAttachment
	{
		
		/// <summary>
		/// Information on each package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		public GetOrder2ReturnPackageAttachmentPackages[] GetOrder2ReturnPackageAttachmentPackages { get; set; }
	}
	
	public class GetOrder2ReturnPackageAttachmentPackages
	{
		
		/// <summary>
		/// Fiscal operation code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cfop")]
		public string Cfop { get; set; }
		
		/// <summary>
		/// Courier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="courier")]
		public string Courier { get; set; }
		
		/// <summary>
		/// Courier status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="courierStatus")]
		public string CourierStatus { get; set; }
		
		/// <summary>
		/// Embedded voice in XML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="embeddedInvoice")]
		public string EmbeddedInvoice { get; set; }
		
		/// <summary>
		/// Invoice key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceKey")]
		public string InvoiceKey { get; set; }
		
		/// <summary>
		/// Invoice number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceNumber")]
		public string InvoiceNumber { get; set; }
		
		/// <summary>
		/// Invoice URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceUrl")]
		public string InvoiceUrl { get; set; }
		
		/// <summary>
		/// Invoice value in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceValue")]
		public System.Nullable<System.Int32> InvoiceValue { get; set; }
		
		/// <summary>
		/// Issuance date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuanceDate")]
		public string IssuanceDate { get; set; }
		
		/// <summary>
		/// Information on each item in the package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public GetOrder2ReturnPackageAttachmentPackagesItems[] GetOrder2ReturnPackageAttachmentPackagesItems { get; set; }
		
		/// <summary>
		/// Information on how restitutions are to be made to the customer, in case of a return (invoice `type` is `input`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restitutions")]
		public GetOrder2ReturnPackageAttachmentPackagesRestitutions Restitutions { get; set; }
		
		/// <summary>
		/// Tracking number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingNumber")]
		public string TrackingNumber { get; set; }
		
		/// <summary>
		/// Tracking URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingUrl")]
		public string TrackingUrl { get; set; }
		
		/// <summary>
		/// Invoice type `Output` for sales and `Input` for returns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Quantity of packages involved in the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public System.Nullable<System.Int32> Volumes { get; set; }
	}
	
	public class GetOrder2ReturnPackageAttachmentPackagesItems
	{
		
		/// <summary>
		/// Item description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Item index in reference to the position of the item in the `items` array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemIndex")]
		public System.Nullable<System.Int32> ItemIndex { get; set; }
		
		/// <summary>
		/// Item price in cents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		/// <summary>
		/// Item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// Item unit multiplier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unitMultiplier")]
		public System.Nullable<System.Double> UnitMultiplier { get; set; }
	}
	
	public class GetOrder2ReturnPackageAttachmentPackagesRestitutions
	{
		
		/// <summary>
		/// Information on refunds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refund")]
		public GetOrder2ReturnPackageAttachmentPackagesRestitutionsRefund Refund { get; set; }
	}
	
	public class GetOrder2ReturnPackageAttachmentPackagesRestitutionsRefund
	{
		
		/// <summary>
		/// Information on items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public GetOrder2ReturnPackageAttachmentPackagesRestitutionsRefundItems[] GetOrder2ReturnPackageAttachmentPackagesRestitutionsRefundItems { get; set; }
	}
	
	public class GetOrder2ReturnPackageAttachmentPackagesRestitutionsRefundItems
	{
		
		/// <summary>
		/// Item index corresponding to the position of the item in the main `items` array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemIndex")]
		public string ItemIndex { get; set; }
		
		/// <summary>
		/// Quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetOrder2ReturnTotals
	{
		
		/// <summary>
		/// Order's total ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Order's total name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Order's total value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	public class CancelOrder2PostBody
	{
		
		/// <summary>
		/// Reason for cancelling the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	public class CancelOrder2Return
	{
		
		/// <summary>
		/// Date and time when the notification was received.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Identification of the order in the seller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderId")]
		public string OrderId { get; set; }
		
		/// <summary>
		/// Protocol code generated by the update. It may be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public string Receipt { get; set; }
	}
	
	public class InvoiceNotification2Return
	{
		
		/// <summary>
		/// Date and time when the notification was received.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Identification of the order in the seller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderId")]
		public string OrderId { get; set; }
		
		/// <summary>
		/// Protocol code generated by the update. It may be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="receipt")]
		public string Receipt { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Request message for CloudChannelService.ActivateEntitlement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ActivateEntitlementRequest
	{
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Information needed to create an Admin User for Google Workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1AdminUser
	{
		
		/// <summary>
		/// Primary email of the admin user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Family name of the admin user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="familyName")]
		public string FamilyName { get; set; }
		
		/// <summary>
		/// Given name of the admin user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="givenName")]
		public string GivenName { get; set; }
	}
	
	/// <summary>
	/// Association links that an entitlement has to other entitlements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1AssociationInfo
	{
		
		/// <summary>
		/// The name of the base entitlement, for which this entitlement is an add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseEntitlement")]
		public string BaseEntitlement { get; set; }
	}
	
	/// <summary>
	/// Represents the Billable SKU information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1BillableSku
	{
		
		/// <summary>
		/// Resource name of Service which contains Repricing SKU. Format: services/{service}. Example: "services/B7D9-FDCB-15D8".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// Unique human readable name for the Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceDisplayName")]
		public string ServiceDisplayName { get; set; }
		
		/// <summary>
		/// Resource name of Billable SKU. Format: billableSkus/{sku}. Example: billableSkus/6E1B-6634-470F".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// Unique human readable name for the SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuDisplayName")]
		public string SkuDisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents a billing account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1BillingAccount
	{
		
		/// <summary>
		/// Output only. The time when this billing account was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The 3-letter currency code defined in ISO 4217.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Display name of the billing account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the billing account. Format: accounts/{account_id}/billingAccounts/{billing_account_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The CLDR region code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionCode")]
		public string RegionCode { get; set; }
	}
	
	/// <summary>
	/// Represents a billing account that can be used to make a purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1BillingAccountPurchaseInfo
	{
		
		/// <summary>
		/// Represents a billing account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccount")]
		public GoogleCloudChannelV1BillingAccount BillingAccount { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.CancelEntitlement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CancelEntitlementRequest
	{
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ChangeOffer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ChangeOfferRequest
	{
		
		/// <summary>
		/// Optional. The billing account resource name that is used to pay for this entitlement when setting up billing on a trial subscription. This field is only relevant for multi-currency accounts. It should be left empty for single currency accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccount")]
		public string BillingAccount { get; set; }
		
		/// <summary>
		/// Required. New Offer. Format: accounts/{account_id}/offers/{offer_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offer")]
		public string Offer { get; set; }
		
		/// <summary>
		/// Optional. Parameters needed to purchase the Offer. To view the available Parameters refer to the Offer.parameter_definitions from the desired offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudChannelV1Parameter[] Parameters { get; set; }
		
		/// <summary>
		/// Optional. Purchase order id provided by the reseller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchaseOrderId")]
		public string PurchaseOrderId { get; set; }
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Definition for extended entitlement parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Parameter
	{
		
		/// <summary>
		/// Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="editable")]
		public System.Nullable<System.Boolean> Editable { get; set; }
		
		/// <summary>
		/// Name of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Data type and value of a parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GoogleCloudChannelV1Value Value { get; set; }
	}
	
	/// <summary>
	/// Data type and value of a parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Value
	{
		
		/// <summary>
		/// Represents a boolean value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Represents a double value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// Represents an int64 value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="int64Value")]
		public string Int64Value { get; set; }
		
		/// <summary>
		/// Represents an 'Any' proto value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protoValue")]
		public System.Collections.Generic.Dictionary<string, object> ProtoValue { get; set; }
		
		/// <summary>
		/// Represents a string value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ChangeParametersRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ChangeParametersRequest
	{
		
		/// <summary>
		/// Required. Entitlement parameters to update. You can only change editable parameters. To view the available Parameters for a request, refer to the Offer.parameter_definitions from the desired offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudChannelV1Parameter[] Parameters { get; set; }
		
		/// <summary>
		/// Optional. Purchase order ID provided by the reseller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchaseOrderId")]
		public string PurchaseOrderId { get; set; }
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ChangeRenewalSettings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ChangeRenewalSettingsRequest
	{
		
		/// <summary>
		/// Renewal settings for renewable Offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renewalSettings")]
		public GoogleCloudChannelV1RenewalSettings RenewalSettings { get; set; }
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Renewal settings for renewable Offers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RenewalSettings
	{
		
		/// <summary>
		/// If false, the plan will be completed at the end date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableRenewal")]
		public System.Nullable<System.Boolean> EnableRenewal { get; set; }
		
		/// <summary>
		/// Represents period in days/months/years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentCycle")]
		public GoogleCloudChannelV1Period PaymentCycle { get; set; }
		
		/// <summary>
		/// Describes how a reseller will be billed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentPlan")]
		public System.Nullable<GoogleCloudChannelV1RenewalSettingsPaymentPlan> PaymentPlan { get; set; }
		
		/// <summary>
		/// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resizeUnitCount")]
		public System.Nullable<System.Boolean> ResizeUnitCount { get; set; }
	}
	
	/// <summary>
	/// Represents period in days/months/years.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Period
	{
		
		/// <summary>
		/// Total duration of Period Type defined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		/// <summary>
		/// Period Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="periodType")]
		public System.Nullable<GoogleCloudChannelV1PeriodPeriodType> PeriodType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1PeriodPeriodType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1RenewalSettingsPaymentPlan
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_PLAN_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMITMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLEXIBLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FREE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFFLINE = 5,
	}
	
	/// <summary>
	/// Entity representing a link between distributors and their indirect resellers in an n-tier resale channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ChannelPartnerLink
	{
		
		/// <summary>
		/// Cloud Identity information for the Cloud Channel Customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerCloudIdentityInfo")]
		public GoogleCloudChannelV1CloudIdentityInfo ChannelPartnerCloudIdentityInfo { get; set; }
		
		/// <summary>
		/// Output only. Timestamp of when the channel partner link is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. URI of the web page where partner accepts the link invitation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inviteLinkUri")]
		public string InviteLinkUri { get; set; }
		
		/// <summary>
		/// Required. State of the channel partner link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkState")]
		public System.Nullable<GoogleCloudChannelV1ChannelPartnerLinkLinkState> LinkState { get; set; }
		
		/// <summary>
		/// Output only. Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicId")]
		public string PublicId { get; set; }
		
		/// <summary>
		/// Required. Cloud Identity ID of the linked reseller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resellerCloudIdentityId")]
		public string ResellerCloudIdentityId { get; set; }
		
		/// <summary>
		/// Output only. Timestamp of when the channel partner link is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Cloud Identity information for the Cloud Channel Customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CloudIdentityInfo
	{
		
		/// <summary>
		/// Output only. URI of Customer's Admin console dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adminConsoleUri")]
		public string AdminConsoleUri { get; set; }
		
		/// <summary>
		/// The alternate email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternateEmail")]
		public string AlternateEmail { get; set; }
		
		/// <summary>
		/// CustomerType indicates verification type needed for using services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerType")]
		public System.Nullable<GoogleCloudChannelV1CloudIdentityInfoCustomerType> CustomerType { get; set; }
		
		/// <summary>
		/// Required Edu Attributes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eduData")]
		public GoogleCloudChannelV1EduData EduData { get; set; }
		
		/// <summary>
		/// Output only. Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDomainVerified")]
		public System.Nullable<System.Boolean> IsDomainVerified { get; set; }
		
		/// <summary>
		/// Language code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Phone number associated with the Cloud Identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// Output only. The primary domain name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryDomain")]
		public string PrimaryDomain { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1CloudIdentityInfoCustomerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOMAIN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEAM = 2,
	}
	
	/// <summary>
	/// Required Edu Attributes
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1EduData
	{
		
		/// <summary>
		/// Size of the institute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instituteSize")]
		public System.Nullable<GoogleCloudChannelV1EduDataInstituteSize> InstituteSize { get; set; }
		
		/// <summary>
		/// Designated institute type of customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instituteType")]
		public System.Nullable<GoogleCloudChannelV1EduDataInstituteType> InstituteType { get; set; }
		
		/// <summary>
		/// Web address for the edu customer's institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EduDataInstituteSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTE_SIZE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_1_100 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_101_500 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_501_1000 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_1001_2000 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_2001_5000 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_5001_10000 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIZE_10001_OR_MORE = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EduDataInstituteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		K12 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIVERSITY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1ChannelPartnerLinkLinkState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVITED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVOKED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 4,
	}
	
	/// <summary>
	/// Configuration for how a distributor will rebill a channel partner (also known as a distributor-authorized reseller).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ChannelPartnerRepricingConfig
	{
		
		/// <summary>
		/// Output only. Resource name of the ChannelPartnerRepricingConfig. Format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configuration for repricing a Google bill over a period of time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repricingConfig")]
		public GoogleCloudChannelV1RepricingConfig RepricingConfig { get; set; }
		
		/// <summary>
		/// Output only. Timestamp of an update to the repricing rule. If `update_time` is after RepricingConfig.effective_invoice_month then it indicates this was set mid-month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Configuration for repricing a Google bill over a period of time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RepricingConfig
	{
		
		/// <summary>
		/// A type that represents the various adjustments you can apply to a bill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjustment")]
		public GoogleCloudChannelV1RepricingAdjustment Adjustment { get; set; }
		
		/// <summary>
		/// Applies the repricing configuration at the channel partner level. The channel partner value is derived from the resource name. Takes an empty json object. Deprecated: This is no longer supported. Use RepricingConfig.EntitlementGranularity instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerGranularity")]
		public GoogleCloudChannelV1RepricingConfigChannelPartnerGranularity ChannelPartnerGranularity { get; set; }
		
		/// <summary>
		/// The conditional overrides to apply for this configuration. If you list multiple overrides, only the first valid override is used. If you don't list any overrides, the API uses the normal adjustment and rebilling basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditionalOverrides")]
		public GoogleCloudChannelV1ConditionalOverride[] ConditionalOverrides { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectiveInvoiceMonth")]
		public GoogleTypeDate EffectiveInvoiceMonth { get; set; }
		
		/// <summary>
		/// Applies the repricing configuration at the entitlement level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlementGranularity")]
		public GoogleCloudChannelV1RepricingConfigEntitlementGranularity EntitlementGranularity { get; set; }
		
		/// <summary>
		/// Required. The RebillingBasis to use for this bill. Specifies the relative cost based on repricing costs you will apply.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rebillingBasis")]
		public GoogleCloudChannelV1ConditionalOverrideRebillingBasis RebillingBasis { get; set; }
	}
	
	/// <summary>
	/// A type that represents the various adjustments you can apply to a bill.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RepricingAdjustment
	{
		
		/// <summary>
		/// An adjustment that applies a flat markup or markdown to an entire bill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentageAdjustment")]
		public GoogleCloudChannelV1PercentageAdjustment PercentageAdjustment { get; set; }
	}
	
	/// <summary>
	/// An adjustment that applies a flat markup or markdown to an entire bill.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1PercentageAdjustment
	{
		
		/// <summary>
		/// A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's BigDecimal or Python's decimal.Decimal. [BigDecimal]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentage")]
		public GoogleTypeDecimal Percentage { get; set; }
	}
	
	/// <summary>
	/// A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's BigDecimal or Python's decimal.Decimal. [BigDecimal]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDecimal
	{
		
		/// <summary>
		/// The decimal value, as a string. The string representation consists of an optional sign, `+` (`U+002B`) or `-` (`U+002D`), followed by a sequence of zero or more decimal digits ("the integer"), optionally followed by a fraction, optionally followed by an exponent. An empty string **should** be interpreted as `0`. The fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the significand. The exponent consists of the character `e` (`U+0065`) or `E` (`U+0045`) followed by one or more decimal digits. Services **should** normalize decimal values before storing them by: - Removing an explicitly-provided `+` sign (`+2.5` -> `2.5`). - Replacing a zero-length integer value with `0` (`.5` -> `0.5`). - Coercing the exponent character to upper-case, with explicit sign (`2.5e8` -> `2.5E+8`). - Removing an explicitly-provided zero exponent (`2.5E0` -> `2.5`). Services **may** perform additional normalization based on its own needs and the internal decimal implementation selected, such as shifting the decimal point and exponent value together (example: `2.5E-1` <-> `0.25`). Additionally, services **may** preserve trailing zeroes in the fraction to indicate increased precision, but are not required to do so. Note that only the `.` character is supported to divide the integer and the fraction; `,` **should not** be supported regardless of locale. Additionally, thousand separators **should not** be supported. If a service does support them, values **must** be normalized. The ENBF grammar is: DecimalString = '' | [Sign] Significand [Exponent]; Sign = '+' | '-'; Significand = Digits '.' | [Digits] '.' Digits; Exponent = ('e' | 'E') [Sign] Digits; Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' }; Services **should** clearly document the range of supported values, the maximum supported precision (total number of digits), and, if applicable, the scale (number of digits after the decimal point), as well as how it behaves when receiving out-of-bounds values. Services **may** choose to accept values passed as input even when the value has a higher precision or scale than the service supports, and **should** round the value to fit the supported scale. Alternatively, the service **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC) if precision would be lost. Services **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC) if the service receives a value outside of the supported range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Applies the repricing configuration at the channel partner level. The channel partner value is derived from the resource name. Takes an empty json object. Deprecated: This is no longer supported. Use RepricingConfig.EntitlementGranularity instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RepricingConfigChannelPartnerGranularity
	{
	}
	
	/// <summary>
	/// Specifies the override to conditionally apply.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ConditionalOverride
	{
		
		/// <summary>
		/// A type that represents the various adjustments you can apply to a bill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjustment")]
		public GoogleCloudChannelV1RepricingAdjustment Adjustment { get; set; }
		
		/// <summary>
		/// Required. The RebillingBasis to use for the applied override. Shows the relative cost based on your repricing costs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rebillingBasis")]
		public System.Nullable<GoogleCloudChannelV1ConditionalOverrideRebillingBasis> RebillingBasis { get; set; }
		
		/// <summary>
		/// Represents the various repricing conditions you can use for a conditional override.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repricingCondition")]
		public GoogleCloudChannelV1RepricingCondition RepricingCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1ConditionalOverrideRebillingBasis
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REBILLING_BASIS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COST_AT_LIST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_CUSTOMER_COST = 2,
	}
	
	/// <summary>
	/// Represents the various repricing conditions you can use for a conditional override.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RepricingCondition
	{
		
		/// <summary>
		/// A condition that applies the override if a line item SKU is found in the SKU group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuGroupCondition")]
		public GoogleCloudChannelV1SkuGroupCondition SkuGroupCondition { get; set; }
	}
	
	/// <summary>
	/// A condition that applies the override if a line item SKU is found in the SKU group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1SkuGroupCondition
	{
		
		/// <summary>
		/// Specifies a SKU group (https://cloud.google.com/skus/sku-groups). Resource name of SKU group. Format: accounts/{account}/skuGroups/{sku_group}. Example: "accounts/C01234/skuGroups/3d50fd57-3157-4577-a5a9-a219b8490041".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuGroup")]
		public string SkuGroup { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Applies the repricing configuration at the entitlement level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RepricingConfigEntitlementGranularity
	{
		
		/// <summary>
		/// Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlement")]
		public string Entitlement { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.CheckCloudIdentityAccountsExist.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest
	{
		
		/// <summary>
		/// Required. Domain to fetch for Cloud Identity account customers, including domained and domainless.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.CheckCloudIdentityAccountsExist.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse
	{
		
		/// <summary>
		/// The Cloud Identity accounts associated with the domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityAccounts")]
		public GoogleCloudChannelV1CloudIdentityCustomerAccount[] CloudIdentityAccounts { get; set; }
	}
	
	/// <summary>
	/// Entity representing a Cloud Identity account that may be associated with a Channel Services API partner.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CloudIdentityCustomerAccount
	{
		
		/// <summary>
		/// If existing = true, the Cloud Identity ID of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerCloudIdentityId")]
		public string CustomerCloudIdentityId { get; set; }
		
		/// <summary>
		/// If owned = true, the name of the customer that owns the Cloud Identity account. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerName")]
		public string CustomerName { get; set; }
		
		/// <summary>
		/// Returns true if a Cloud Identity account exists for a specific domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="existing")]
		public System.Nullable<System.Boolean> Existing { get; set; }
		
		/// <summary>
		/// Returns true if the Cloud Identity account is associated with a customer of the Channel Services partner.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owned")]
		public System.Nullable<System.Boolean> Owned { get; set; }
	}
	
	/// <summary>
	/// The definition of a report column. Specifies the data properties in the corresponding position of the report rows.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Column
	{
		
		/// <summary>
		/// The unique name of the column (for example, customer_domain, channel_partner, customer_cost). You can use column IDs in RunReportJobRequest.filter. To see all reports and their columns, call CloudChannelReportsService.ListReports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columnId")]
		public string ColumnId { get; set; }
		
		/// <summary>
		/// The type of the values for this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataType")]
		public System.Nullable<GoogleCloudChannelV1ColumnDataType> DataType { get; set; }
		
		/// <summary>
		/// The column's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1ColumnDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECIMAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONEY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_TIME = 6,
	}
	
	/// <summary>
	/// Commitment settings for commitment-based offers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CommitmentSettings
	{
		
		/// <summary>
		/// Output only. Commitment end timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Renewal settings for renewable Offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renewalSettings")]
		public GoogleCloudChannelV1RenewalSettings RenewalSettings { get; set; }
		
		/// <summary>
		/// Output only. Commitment start timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Represents the constraints for buying the Offer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Constraints
	{
		
		/// <summary>
		/// Represents constraints required to purchase the Offer for a customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerConstraints")]
		public GoogleCloudChannelV1CustomerConstraints CustomerConstraints { get; set; }
	}
	
	/// <summary>
	/// Represents constraints required to purchase the Offer for a customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CustomerConstraints
	{
		
		/// <summary>
		/// Allowed Customer Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedCustomerTypes")]
		public GoogleCloudChannelV1CloudIdentityInfoCustomerType[] AllowedCustomerTypes { get; set; }
		
		/// <summary>
		/// Allowed geographical regions of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedRegions")]
		public string[] AllowedRegions { get; set; }
		
		/// <summary>
		/// Allowed Promotional Order Type. Present for Promotional offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promotionalOrderTypes")]
		public string[] PromotionalOrderTypes { get; set; }
	}
	
	/// <summary>
	/// Contact information for a customer account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ContactInfo
	{
		
		/// <summary>
		/// Output only. The customer account contact's display name, formatted as a combination of the customer's first and last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The customer account contact's first name. Optional for Team customers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		/// <summary>
		/// The customer account contact's last name. Optional for Team customers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		/// <summary>
		/// The customer account's contact phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// Optional. The customer account contact's job title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.CreateEntitlement
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CreateEntitlementRequest
	{
		
		/// <summary>
		/// An entitlement is a representation of a customer's ability to use a service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlement")]
		public GoogleCloudChannelV1Entitlement Entitlement { get; set; }
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// An entitlement is a representation of a customer's ability to use a service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Entitlement
	{
		
		/// <summary>
		/// Association links that an entitlement has to other entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="associationInfo")]
		public GoogleCloudChannelV1AssociationInfo AssociationInfo { get; set; }
		
		/// <summary>
		/// Optional. The billing account resource name that is used to pay for this entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccount")]
		public string BillingAccount { get; set; }
		
		/// <summary>
		/// Commitment settings for commitment-based offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commitmentSettings")]
		public GoogleCloudChannelV1CommitmentSettings CommitmentSettings { get; set; }
		
		/// <summary>
		/// Output only. The time at which the entitlement is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offer")]
		public string Offer { get; set; }
		
		/// <summary>
		/// Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudChannelV1Parameter[] Parameters { get; set; }
		
		/// <summary>
		/// Service provisioned for an entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisionedService")]
		public GoogleCloudChannelV1ProvisionedService ProvisionedService { get; set; }
		
		/// <summary>
		/// Output only. Current provisioning state of the entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<GoogleCloudChannelV1EntitlementProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchaseOrderId")]
		public string PurchaseOrderId { get; set; }
		
		/// <summary>
		/// Output only. Enumerable of all current suspension reasons for an entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspensionReasons")]
		public string[] SuspensionReasons { get; set; }
		
		/// <summary>
		/// Settings for trial offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trialSettings")]
		public GoogleCloudChannelV1TrialSettings TrialSettings { get; set; }
		
		/// <summary>
		/// Output only. The time at which the entitlement is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Service provisioned for an entitlement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ProvisionedService
	{
		
		/// <summary>
		/// Output only. The product pertaining to the provisioning resource as specified in the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		/// <summary>
		/// Output only. Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud, this is the Billing Account ID of the billing subaccount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningId")]
		public string ProvisioningId { get; set; }
		
		/// <summary>
		/// Output only. The SKU pertaining to the provisioning resource as specified in the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuId")]
		public string SkuId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 2,
	}
	
	/// <summary>
	/// Settings for trial offers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TrialSettings
	{
		
		/// <summary>
		/// Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trial")]
		public System.Nullable<System.Boolean> Trial { get; set; }
	}
	
	/// <summary>
	/// Entity representing a customer of a reseller or distributor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Customer
	{
		
		/// <summary>
		/// Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternateEmail")]
		public string AlternateEmail { get; set; }
		
		/// <summary>
		/// Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerId")]
		public string ChannelPartnerId { get; set; }
		
		/// <summary>
		/// Output only. The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityId")]
		public string CloudIdentityId { get; set; }
		
		/// <summary>
		/// Cloud Identity information for the Cloud Channel Customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityInfo")]
		public GoogleCloudChannelV1CloudIdentityInfo CloudIdentityInfo { get; set; }
		
		/// <summary>
		/// Optional. External CRM ID for the customer. Populated only if a CRM ID exists for this customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correlationId")]
		public string CorrelationId { get; set; }
		
		/// <summary>
		/// Output only. Time when the customer was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The customer's primary domain. Must match the primary contact email's domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Name of the organization that the customer entity represents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgDisplayName")]
		public string OrgDisplayName { get; set; }
		
		/// <summary>
		/// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgPostalAddress")]
		public GoogleTypePostalAddress OrgPostalAddress { get; set; }
		
		/// <summary>
		/// Contact information for a customer account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryContactInfo")]
		public GoogleCloudChannelV1ContactInfo PrimaryContactInfo { get; set; }
		
		/// <summary>
		/// Output only. Time when the customer was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypePostalAddress
	{
		
		/// <summary>
		/// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressLines")]
		public string[] AddressLines { get; set; }
		
		/// <summary>
		/// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="administrativeArea")]
		public string AdministrativeArea { get; set; }
		
		/// <summary>
		/// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locality")]
		public string Locality { get; set; }
		
		/// <summary>
		/// Optional. The name of the organization at the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organization")]
		public string Organization { get; set; }
		
		/// <summary>
		/// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public string[] Recipients { get; set; }
		
		/// <summary>
		/// Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionCode")]
		public string RegionCode { get; set; }
		
		/// <summary>
		/// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		/// <summary>
		/// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sortingCode")]
		public string SortingCode { get; set; }
		
		/// <summary>
		/// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sublocality")]
		public string Sublocality { get; set; }
	}
	
	/// <summary>
	/// Represents Pub/Sub message content describing customer update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CustomerEvent
	{
		
		/// <summary>
		/// Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Type of event which happened on the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public System.Nullable<GoogleCloudChannelV1CustomerEventEventType> EventType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1CustomerEventEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY_DOMAIN_CHANGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY_DOMAIN_VERIFIED = 2,
	}
	
	/// <summary>
	/// Configuration for how a reseller will reprice a Customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1CustomerRepricingConfig
	{
		
		/// <summary>
		/// Output only. Resource name of the CustomerRepricingConfig. Format: accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configuration for repricing a Google bill over a period of time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repricingConfig")]
		public GoogleCloudChannelV1RepricingConfig RepricingConfig { get; set; }
		
		/// <summary>
		/// Output only. Timestamp of an update to the repricing rule. If `update_time` is after RepricingConfig.effective_invoice_month then it indicates this was set mid-month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A representation of usage or invoice date ranges.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1DateRange
	{
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceEndDate")]
		public GoogleTypeDate InvoiceEndDate { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceStartDate")]
		public GoogleTypeDate InvoiceStartDate { get; set; }
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageEndDateTime")]
		public GoogleTypeDateTime UsageEndDateTime { get; set; }
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageStartDateTime")]
		public GoogleTypeDateTime UsageStartDateTime { get; set; }
	}
	
	/// <summary>
	/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDateTime
	{
		
		/// <summary>
		/// Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Int32> Hours { get; set; }
		
		/// <summary>
		/// Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minutes")]
		public System.Nullable<System.Int32> Minutes { get; set; }
		
		/// <summary>
		/// Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="seconds")]
		public System.Nullable<System.Int32> Seconds { get; set; }
		
		/// <summary>
		/// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public GoogleTypeTimeZone TimeZone { get; set; }
		
		/// <summary>
		/// UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="utcOffset")]
		public string UtcOffset { get; set; }
		
		/// <summary>
		/// Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeTimeZone
	{
		
		/// <summary>
		/// IANA Time Zone Database time zone, e.g. "America/New_York".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. IANA Time Zone Database version number, e.g. "2019a".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Change event entry for Entitlement order history
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1EntitlementChange
	{
		
		/// <summary>
		/// The Entitlement's activation reason
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activationReason")]
		public System.Nullable<GoogleCloudChannelV1EntitlementChangeActivationReason> ActivationReason { get; set; }
		
		/// <summary>
		/// Cancellation reason for the Entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancellationReason")]
		public System.Nullable<GoogleCloudChannelV1EntitlementChangeCancellationReason> CancellationReason { get; set; }
		
		/// <summary>
		/// The change action type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changeType")]
		public System.Nullable<GoogleCloudChannelV1EntitlementChangeChangeType> ChangeType { get; set; }
		
		/// <summary>
		/// The submitted time of the change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlement")]
		public string Entitlement { get; set; }
		
		/// <summary>
		/// Required. Resource name of the Offer at the time of change. Takes the form: accounts/{account_id}/offers/{offer_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offer")]
		public string Offer { get; set; }
		
		/// <summary>
		/// Human-readable identifier that shows what operator made a change. When the operator_type is RESELLER, this is the user's email address. For all other operator types, this is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public string Operator { get; set; }
		
		/// <summary>
		/// Operator type responsible for the change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operatorType")]
		public System.Nullable<GoogleCloudChannelV1EntitlementChangeOperatorType> OperatorType { get; set; }
		
		/// <summary>
		/// e.g. purchase_number change reason, entered by CRS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherChangeReason")]
		public string OtherChangeReason { get; set; }
		
		/// <summary>
		/// Extended parameters, such as: purchase_order_number, gcp_details; internal_correlation_id, long_running_operation_id, order_id; etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudChannelV1Parameter[] Parameters { get; set; }
		
		/// <summary>
		/// Service provisioned for an entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisionedService")]
		public GoogleCloudChannelV1ProvisionedService ProvisionedService { get; set; }
		
		/// <summary>
		/// Suspension reason for the Entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspensionReason")]
		public System.Nullable<GoogleCloudChannelV1EntitlementChangeSuspensionReason> SuspensionReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementChangeActivationReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATION_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESELLER_REVOKED_SUSPENSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_ACCEPTED_PENDING_TOS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENEWAL_SETTINGS_CHANGED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER_ACTIVATION_REASON = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementChangeCancellationReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLATION_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_TERMINATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELATIONSHIP_ENDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_TRANSFER = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementChangeChangeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRICE_PLAN_SWITCHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMITMENT_CHANGED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENEWED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKU_CHANGED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENEWAL_SETTING_CHANGED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAID_SUBSCRIPTION_STARTED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LICENSE_CAP_CHANGED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENSION_DETAILS_CHANGED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIAL_END_DATE_EXTENDED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIAL_STARTED = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementChangeOperatorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATOR_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_SERVICE_REPRESENTATIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESELLER = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementChangeSuspensionReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENSION_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESELLER_INITIATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIAL_ENDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENEWAL_WITH_TYPE_CANCEL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_TOS_ACCEPTANCE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 5,
	}
	
	/// <summary>
	/// Represents Pub/Sub message content describing entitlement update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1EntitlementEvent
	{
		
		/// <summary>
		/// Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlement")]
		public string Entitlement { get; set; }
		
		/// <summary>
		/// Type of event which happened on the entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public System.Nullable<GoogleCloudChannelV1EntitlementEventEventType> EventType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1EntitlementEventEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRICE_PLAN_SWITCHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMITMENT_CHANGED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENEWED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKU_CHANGED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENEWAL_SETTING_CHANGED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAID_SERVICE_STARTED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LICENSE_ASSIGNMENT_CHANGED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LICENSE_CAP_CHANGED = 12,
	}
	
	/// <summary>
	/// Request message for CloudChannelReportsService.FetchReportResults.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1FetchReportResultsRequest
	{
		
		/// <summary>
		/// Optional. Requested page size of the report. The server may return fewer results than requested. If you don't specify a page size, the server uses a sensible default (may change over time). The maximum value is 30,000; the server will change larger values to 30,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Optional. A token that specifies a page of results beyond the first page. Obtained through FetchReportResultsResponse.next_page_token of the previous CloudChannelReportsService.FetchReportResults call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Optional. List of keys specifying which report partitions to return. If empty, returns all partitions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partitionKeys")]
		public string[] PartitionKeys { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelReportsService.FetchReportResults. Contains a tabular representation of the report results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1FetchReportResultsResponse
	{
		
		/// <summary>
		/// Pass this token to FetchReportResultsRequest.page_token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The features describing the data. Returned by CloudChannelReportsService.RunReportJob and CloudChannelReportsService.FetchReportResults.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportMetadata")]
		public GoogleCloudChannelV1ReportResultsMetadata ReportMetadata { get; set; }
		
		/// <summary>
		/// The report's lists of values. Each row follows the settings and ordering of the columns from `report_metadata`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public GoogleCloudChannelV1Row[] Rows { get; set; }
	}
	
	/// <summary>
	/// The features describing the data. Returned by CloudChannelReportsService.RunReportJob and CloudChannelReportsService.FetchReportResults.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ReportResultsMetadata
	{
		
		/// <summary>
		/// A representation of usage or invoice date ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public GoogleCloudChannelV1DateRange DateRange { get; set; }
		
		/// <summary>
		/// A representation of usage or invoice date ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precedingDateRange")]
		public GoogleCloudChannelV1DateRange PrecedingDateRange { get; set; }
		
		/// <summary>
		/// The ID and description of a report that was used to generate report data. For example, "Google Cloud Daily Spend", "Google Workspace License Activity", etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report")]
		public GoogleCloudChannelV1Report Report { get; set; }
		
		/// <summary>
		/// The total number of rows of data in the final report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowCount")]
		public string RowCount { get; set; }
	}
	
	/// <summary>
	/// The ID and description of a report that was used to generate report data. For example, "Google Cloud Daily Spend", "Google Workspace License Activity", etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Report
	{
		
		/// <summary>
		/// The list of columns included in the report. This defines the schema of the report results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public GoogleCloudChannelV1Column[] Columns { get; set; }
		
		/// <summary>
		/// A description of other aspects of the report, such as the products it supports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A human-readable name for this report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. The report's resource name. Specifies the account and report used to generate report data. The report_id identifier is a UID (for example, `613bf59q`). Name uses the format: accounts/{account_id}/reports/{report_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A row of report values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Row
	{
		
		/// <summary>
		/// The key for the partition this row belongs to. This field is empty if the report is not partitioned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partitionKey")]
		public string PartitionKey { get; set; }
		
		/// <summary>
		/// The list of values in the row.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudChannelV1ReportValue[] Values { get; set; }
	}
	
	/// <summary>
	/// A single report value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ReportValue
	{
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateTimeValue")]
		public GoogleTypeDateTime DateTimeValue { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateValue")]
		public GoogleTypeDate DateValue { get; set; }
		
		/// <summary>
		/// A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's BigDecimal or Python's decimal.Decimal. [BigDecimal]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decimalValue")]
		public GoogleTypeDecimal DecimalValue { get; set; }
		
		/// <summary>
		/// A value of type `int`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intValue")]
		public string IntValue { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moneyValue")]
		public GoogleTypeMoney MoneyValue { get; set; }
		
		/// <summary>
		/// A value of type `string`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// Represents an amount of money with its currency type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeMoney
	{
		
		/// <summary>
		/// The three-letter currency code defined in ISO 4217.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ImportCustomer
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ImportCustomerRequest
	{
		
		/// <summary>
		/// Optional. The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authToken")]
		public string AuthToken { get; set; }
		
		/// <summary>
		/// Optional. Cloud Identity ID of a channel partner who will be the direct reseller for the customer's order. This field is required for 2-tier transfer scenarios and can be provided via the request Parent binding as well.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerId")]
		public string ChannelPartnerId { get; set; }
		
		/// <summary>
		/// Required. Customer's Cloud Identity ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityId")]
		public string CloudIdentityId { get; set; }
		
		/// <summary>
		/// Optional. Specifies the customer that will receive imported Cloud Identity information. Format: accounts/{account_id}/customers/{customer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Required. Customer domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// Required. Choose to overwrite an existing customer if found. This must be set to true if there is an existing customer with a conflicting region code or domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overwriteIfExists")]
		public System.Nullable<System.Boolean> OverwriteIfExists { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListChannelPartnerLinks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListChannelPartnerLinksResponse
	{
		
		/// <summary>
		/// The Channel partner links for a reseller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerLinks")]
		public GoogleCloudChannelV1ChannelPartnerLink[] ChannelPartnerLinks { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListChannelPartnerLinksRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListChannelPartnerRepricingConfigs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListChannelPartnerRepricingConfigsResponse
	{
		
		/// <summary>
		/// The repricing configs for this channel partner.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerRepricingConfigs")]
		public GoogleCloudChannelV1ChannelPartnerRepricingConfig[] ChannelPartnerRepricingConfigs { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListChannelPartnerRepricingConfigsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListCustomerRepricingConfigs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListCustomerRepricingConfigsResponse
	{
		
		/// <summary>
		/// The repricing configs for this channel partner.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerRepricingConfigs")]
		public GoogleCloudChannelV1CustomerRepricingConfig[] CustomerRepricingConfigs { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListCustomerRepricingConfigsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListCustomers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListCustomersResponse
	{
		
		/// <summary>
		/// The customers belonging to a reseller or distributor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customers")]
		public GoogleCloudChannelV1Customer[] Customers { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListCustomersRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListEntitlementChanges
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListEntitlementChangesResponse
	{
		
		/// <summary>
		/// The list of entitlement changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlementChanges")]
		public GoogleCloudChannelV1EntitlementChange[] EntitlementChanges { get; set; }
		
		/// <summary>
		/// A token to list the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListEntitlements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListEntitlementsResponse
	{
		
		/// <summary>
		/// The reseller customer's entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlements")]
		public GoogleCloudChannelV1Entitlement[] Entitlements { get; set; }
		
		/// <summary>
		/// A token to list the next page of results. Pass to ListEntitlementsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListOffers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListOffersResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of Offers requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offers")]
		public GoogleCloudChannelV1Offer[] Offers { get; set; }
	}
	
	/// <summary>
	/// Represents an offer made to resellers for purchase. An offer is associated with a Sku, has a plan for payment, a price, and defines the constraints for buying.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Offer
	{
		
		/// <summary>
		/// Represents the constraints for buying the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public GoogleCloudChannelV1Constraints Constraints { get; set; }
		
		/// <summary>
		/// The deal code of the offer to get a special promotion or discount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dealCode")]
		public string DealCode { get; set; }
		
		/// <summary>
		/// Output only. End of the Offer validity time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Represents the marketing information for a Product, SKU or Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketingInfo")]
		public GoogleCloudChannelV1MarketingInfo MarketingInfo { get; set; }
		
		/// <summary>
		/// Resource Name of the Offer. Format: accounts/{account_id}/offers/{offer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Parameters required to use current Offer to purchase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterDefinitions")]
		public GoogleCloudChannelV1ParameterDefinition[] ParameterDefinitions { get; set; }
		
		/// <summary>
		/// The payment plan for the Offer. Describes how to make a payment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plan")]
		public GoogleCloudChannelV1Plan Plan { get; set; }
		
		/// <summary>
		/// Price for each monetizable resource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceByResources")]
		public GoogleCloudChannelV1PriceByResource[] PriceByResources { get; set; }
		
		/// <summary>
		/// Represents a product's purchasable Stock Keeping Unit (SKU). SKUs represent the different variations of the product. For example, Google Workspace Business Standard and Google Workspace Business Plus are Google Workspace product SKUs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public GoogleCloudChannelV1Sku Sku { get; set; }
		
		/// <summary>
		/// Start of the Offer validity time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Represents the marketing information for a Product, SKU or Offer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1MarketingInfo
	{
		
		/// <summary>
		/// Represents media information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultLogo")]
		public GoogleCloudChannelV1Media DefaultLogo { get; set; }
		
		/// <summary>
		/// Human readable description. Description can contain HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Human readable name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents media information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Media
	{
		
		/// <summary>
		/// URL of the media.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// Title of the media.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of the media.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudChannelV1MediaType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1MediaType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIA_TYPE_IMAGE = 1,
	}
	
	/// <summary>
	/// Parameter's definition. Specifies what parameter is required to use the current Offer to purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ParameterDefinition
	{
		
		/// <summary>
		/// If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedValues")]
		public GoogleCloudChannelV1Value[] AllowedValues { get; set; }
		
		/// <summary>
		/// Data type and value of a parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public GoogleCloudChannelV1Value MaxValue { get; set; }
		
		/// <summary>
		/// Data type and value of a parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public GoogleCloudChannelV1Value MinValue { get; set; }
		
		/// <summary>
		/// Name of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// If set to true, parameter is optional to purchase this Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optional")]
		public System.Nullable<System.Boolean> Optional { get; set; }
		
		/// <summary>
		/// Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterType")]
		public System.Nullable<GoogleCloudChannelV1ParameterDefinitionParameterType> ParameterType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1ParameterDefinitionParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INT64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOUBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 4,
	}
	
	/// <summary>
	/// The payment plan for the Offer. Describes how to make a payment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Plan
	{
		
		/// <summary>
		/// Reseller Billing account to charge after an offer transaction. Only present for Google Cloud offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccount")]
		public string BillingAccount { get; set; }
		
		/// <summary>
		/// Represents period in days/months/years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentCycle")]
		public GoogleCloudChannelV1Period PaymentCycle { get; set; }
		
		/// <summary>
		/// Describes how a reseller will be billed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentPlan")]
		public GoogleCloudChannelV1RenewalSettingsPaymentPlan PaymentPlan { get; set; }
		
		/// <summary>
		/// Specifies when the payment needs to happen.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentType")]
		public System.Nullable<GoogleCloudChannelV1PlanPaymentType> PaymentType { get; set; }
		
		/// <summary>
		/// Represents period in days/months/years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trialPeriod")]
		public GoogleCloudChannelV1Period TrialPeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1PlanPaymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTPAY = 2,
	}
	
	/// <summary>
	/// Represents price by resource type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1PriceByResource
	{
		
		/// <summary>
		/// Represents the price of the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public GoogleCloudChannelV1Price Price { get; set; }
		
		/// <summary>
		/// Specifies the price by time range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pricePhases")]
		public GoogleCloudChannelV1PricePhase[] PricePhases { get; set; }
		
		/// <summary>
		/// Resource Type. Example: SEAT
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public System.Nullable<GoogleCloudChannelV1PriceByResourceResourceType> ResourceType { get; set; }
	}
	
	/// <summary>
	/// Represents the price of the Offer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Price
	{
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basePrice")]
		public GoogleTypeMoney BasePrice { get; set; }
		
		/// <summary>
		/// Discount percentage, represented as decimal. For example, a 20% discount will be represent as 0.2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectivePrice")]
		public GoogleTypeMoney EffectivePrice { get; set; }
		
		/// <summary>
		/// Link to external price list, such as link to Google Voice rate card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalPriceUri")]
		public string ExternalPriceUri { get; set; }
	}
	
	/// <summary>
	/// Specifies the price by the duration of months. For example, a 20% discount for the first six months, then a 10% discount starting on the seventh month.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1PricePhase
	{
		
		/// <summary>
		/// Defines first period for the phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstPeriod")]
		public System.Nullable<System.Int32> FirstPeriod { get; set; }
		
		/// <summary>
		/// Defines first period for the phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastPeriod")]
		public System.Nullable<System.Int32> LastPeriod { get; set; }
		
		/// <summary>
		/// Defines the phase period type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="periodType")]
		public GoogleCloudChannelV1PeriodPeriodType PeriodType { get; set; }
		
		/// <summary>
		/// Represents the price of the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public GoogleCloudChannelV1Price Price { get; set; }
		
		/// <summary>
		/// Price by the resource tiers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceTiers")]
		public GoogleCloudChannelV1PriceTier[] PriceTiers { get; set; }
	}
	
	/// <summary>
	/// Defines price at resource tier level. For example, an offer with following definition : * Tier 1: Provide 25% discount for all seats between 1 and 25. * Tier 2: Provide 10% discount for all seats between 26 and 100. * Tier 3: Provide flat 15% discount for all seats above 100. Each of these tiers is represented as a PriceTier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1PriceTier
	{
		
		/// <summary>
		/// First resource for which the tier price applies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstResource")]
		public System.Nullable<System.Int32> FirstResource { get; set; }
		
		/// <summary>
		/// Last resource for which the tier price applies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastResource")]
		public System.Nullable<System.Int32> LastResource { get; set; }
		
		/// <summary>
		/// Represents the price of the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public GoogleCloudChannelV1Price Price { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1PriceByResourceResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAU = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LICENSED_USER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUTES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAAS_USAGE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION = 7,
	}
	
	/// <summary>
	/// Represents a product's purchasable Stock Keeping Unit (SKU). SKUs represent the different variations of the product. For example, Google Workspace Business Standard and Google Workspace Business Plus are Google Workspace product SKUs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Sku
	{
		
		/// <summary>
		/// Represents the marketing information for a Product, SKU or Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketingInfo")]
		public GoogleCloudChannelV1MarketingInfo MarketingInfo { get; set; }
		
		/// <summary>
		/// Resource Name of the SKU. Format: products/{product_id}/skus/{sku_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A Product is the entity a customer uses when placing an order. For example, Google Workspace, Google Voice, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product")]
		public GoogleCloudChannelV1Product Product { get; set; }
	}
	
	/// <summary>
	/// A Product is the entity a customer uses when placing an order. For example, Google Workspace, Google Voice, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1Product
	{
		
		/// <summary>
		/// Represents the marketing information for a Product, SKU or Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketingInfo")]
		public GoogleCloudChannelV1MarketingInfo MarketingInfo { get; set; }
		
		/// <summary>
		/// Resource Name of the Product. Format: products/{product_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response message for ListProducts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListProductsResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of Products requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public GoogleCloudChannelV1Product[] Products { get; set; }
	}
	
	/// <summary>
	/// Response message for ListPurchasableOffers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListPurchasableOffersResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of Offers requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchasableOffers")]
		public GoogleCloudChannelV1PurchasableOffer[] PurchasableOffers { get; set; }
	}
	
	/// <summary>
	/// Offer that you can purchase for a customer. This is used in the ListPurchasableOffer API response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1PurchasableOffer
	{
		
		/// <summary>
		/// Represents an offer made to resellers for purchase. An offer is associated with a Sku, has a plan for payment, a price, and defines the constraints for buying.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offer")]
		public GoogleCloudChannelV1Offer Offer { get; set; }
	}
	
	/// <summary>
	/// Response message for ListPurchasableSkus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListPurchasableSkusResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of SKUs requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchasableSkus")]
		public GoogleCloudChannelV1PurchasableSku[] PurchasableSkus { get; set; }
	}
	
	/// <summary>
	/// SKU that you can purchase. This is used in ListPurchasableSku API response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1PurchasableSku
	{
		
		/// <summary>
		/// Represents a product's purchasable Stock Keeping Unit (SKU). SKUs represent the different variations of the product. For example, Google Workspace Business Standard and Google Workspace Business Plus are Google Workspace product SKUs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public GoogleCloudChannelV1Sku Sku { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelReportsService.ListReports.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListReportsResponse
	{
		
		/// <summary>
		/// Pass this token to FetchReportResultsRequest.page_token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The reports available to the partner.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reports")]
		public GoogleCloudChannelV1Report[] Reports { get; set; }
	}
	
	/// <summary>
	/// Response message for ListSkuGroupBillableSkus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListSkuGroupBillableSkusResponse
	{
		
		/// <summary>
		/// The list of billable SKUs in the requested SKU group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billableSkus")]
		public GoogleCloudChannelV1BillableSku[] BillableSkus { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListSkuGroupBillableSkus.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListSkuGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListSkuGroupsResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListSkuGroups.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of SKU groups requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuGroups")]
		public GoogleCloudChannelV1SkuGroup[] SkuGroups { get; set; }
	}
	
	/// <summary>
	/// Represents the SKU group information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1SkuGroup
	{
		
		/// <summary>
		/// Unique human readable identifier for the SKU group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name of SKU group. Format: accounts/{account}/skuGroups/{sku_group}. Example: "accounts/C01234/skuGroups/3d50fd57-3157-4577-a5a9-a219b8490041".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response message for ListSkus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListSkusResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of SKUs requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skus")]
		public GoogleCloudChannelV1Sku[] Skus { get; set; }
	}
	
	/// <summary>
	/// Response Message for ListSubscribers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListSubscribersResponse
	{
		
		/// <summary>
		/// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of service accounts which have subscriber access to the topic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccounts")]
		public string[] ServiceAccounts { get; set; }
		
		/// <summary>
		/// Name of the topic registered with the reseller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topic")]
		public string Topic { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ListTransferableOffers
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListTransferableOffersRequest
	{
		
		/// <summary>
		/// Optional. The Billing Account to look up Offers for. Format: accounts/{account_id}/billingAccounts/{billing_account_id}. This field is only relevant for multi-currency accounts. It should be left empty for single currency accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccount")]
		public string BillingAccount { get; set; }
		
		/// <summary>
		/// Customer's Cloud Identity ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityId")]
		public string CloudIdentityId { get; set; }
		
		/// <summary>
		/// A reseller should create a customer and use the resource name of that customer here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerName")]
		public string CustomerName { get; set; }
		
		/// <summary>
		/// Optional. The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 offers. The maximum value is 1000; the server will coerce values above 1000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// A token for a page of results other than the first page. Obtained using ListTransferableOffersResponse.next_page_token of the previous CloudChannelService.ListTransferableOffers call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Required. The SKU to look up Offers for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListTransferableOffers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListTransferableOffersResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListTransferableOffersRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Information about Offers for a customer that can be used for transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transferableOffers")]
		public GoogleCloudChannelV1TransferableOffer[] TransferableOffers { get; set; }
	}
	
	/// <summary>
	/// TransferableOffer represents an Offer that can be used in Transfer. Read-only.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TransferableOffer
	{
		
		/// <summary>
		/// Represents an offer made to resellers for purchase. An offer is associated with a Sku, has a plan for payment, a price, and defines the constraints for buying.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offer")]
		public GoogleCloudChannelV1Offer Offer { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ListTransferableSkus
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListTransferableSkusRequest
	{
		
		/// <summary>
		/// Optional. The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authToken")]
		public string AuthToken { get; set; }
		
		/// <summary>
		/// Customer's Cloud Identity ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityId")]
		public string CloudIdentityId { get; set; }
		
		/// <summary>
		/// A reseller is required to create a customer and use the resource name of the created customer here. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerName")]
		public string CustomerName { get; set; }
		
		/// <summary>
		/// The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US". Optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 SKUs. The maximum value is 1000; the server will coerce values above 1000. Optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// A token for a page of results other than the first page. Obtained using ListTransferableSkusResponse.next_page_token of the previous CloudChannelService.ListTransferableSkus call. Optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.ListTransferableSkus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ListTransferableSkusResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListTransferableSkusRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Information about existing SKUs for a customer that needs a transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transferableSkus")]
		public GoogleCloudChannelV1TransferableSku[] TransferableSkus { get; set; }
	}
	
	/// <summary>
	/// TransferableSku represents information a reseller needs to view existing provisioned services for a customer that they do not own. Read-only.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TransferableSku
	{
		
		/// <summary>
		/// Represents a product's purchasable Stock Keeping Unit (SKU). SKUs represent the different variations of the product. For example, Google Workspace Business Standard and Google Workspace Business Plus are Google Workspace product SKUs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacySku")]
		public GoogleCloudChannelV1Sku LegacySku { get; set; }
		
		/// <summary>
		/// Represents a product's purchasable Stock Keeping Unit (SKU). SKUs represent the different variations of the product. For example, Google Workspace Business Standard and Google Workspace Business Plus are Google Workspace product SKUs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public GoogleCloudChannelV1Sku Sku { get; set; }
		
		/// <summary>
		/// Specifies transfer eligibility of a SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transferEligibility")]
		public GoogleCloudChannelV1TransferEligibility TransferEligibility { get; set; }
	}
	
	/// <summary>
	/// Specifies transfer eligibility of a SKU.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TransferEligibility
	{
		
		/// <summary>
		/// Localized description if reseller is not eligible to transfer the SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Specified the reason for ineligibility.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ineligibilityReason")]
		public System.Nullable<GoogleCloudChannelV1TransferEligibilityIneligibilityReason> IneligibilityReason { get; set; }
		
		/// <summary>
		/// Whether reseller is eligible to transfer the SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isEligible")]
		public System.Nullable<System.Boolean> IsEligible { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1TransferEligibilityIneligibilityReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_TOS_ACCEPTANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKU_NOT_ELIGIBLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKU_SUSPENDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANNEL_PARTNER_NOT_AUTHORIZED_FOR_SKU = 4,
	}
	
	/// <summary>
	/// Provides contextual information about a google.longrunning.Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1OperationMetadata
	{
		
		/// <summary>
		/// The RPC that initiated this Long Running Operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationType")]
		public System.Nullable<GoogleCloudChannelV1OperationMetadataOperationType> OperationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1OperationMetadataOperationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_ENTITLEMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_RENEWAL_SETTINGS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_PAID_SERVICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATE_ENTITLEMENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPEND_ENTITLEMENT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCEL_ENTITLEMENT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_ENTITLEMENTS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_ENTITLEMENTS_TO_GOOGLE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_OFFER = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_PARAMETERS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISION_CLOUD_IDENTITY = 11,
	}
	
	/// <summary>
	/// Request message for CloudChannelService.ProvisionCloudIdentity
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ProvisionCloudIdentityRequest
	{
		
		/// <summary>
		/// Cloud Identity information for the Cloud Channel Customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudIdentityInfo")]
		public GoogleCloudChannelV1CloudIdentityInfo CloudIdentityInfo { get; set; }
		
		/// <summary>
		/// Information needed to create an Admin User for Google Workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public GoogleCloudChannelV1AdminUser User { get; set; }
		
		/// <summary>
		/// Validate the request and preview the review, but do not post it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// Response message for QueryEligibleBillingAccounts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1QueryEligibleBillingAccountsResponse
	{
		
		/// <summary>
		/// List of SKU purchase groups where each group represents a set of SKUs that must be purchased using the same billing account. Each SKU from [QueryEligibleBillingAccountsRequest.skus] will appear in exactly one SKU group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuPurchaseGroups")]
		public GoogleCloudChannelV1SkuPurchaseGroup[] SkuPurchaseGroups { get; set; }
	}
	
	/// <summary>
	/// Represents a set of SKUs that must be purchased using the same billing account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1SkuPurchaseGroup
	{
		
		/// <summary>
		/// List of billing accounts that are eligible to purhcase these SKUs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccountPurchaseInfos")]
		public GoogleCloudChannelV1BillingAccountPurchaseInfo[] BillingAccountPurchaseInfos { get; set; }
		
		/// <summary>
		/// Resource names of the SKUs included in this group. Format: products/{product_id}/skus/{sku_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skus")]
		public string[] Skus { get; set; }
	}
	
	/// <summary>
	/// Request Message for RegisterSubscriber.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RegisterSubscriberRequest
	{
		
		/// <summary>
		/// Required. Service account that provides subscriber access to the registered topic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
	}
	
	/// <summary>
	/// Response Message for RegisterSubscriber.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RegisterSubscriberResponse
	{
		
		/// <summary>
		/// Name of the topic the subscriber will listen to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topic")]
		public string Topic { get; set; }
	}
	
	/// <summary>
	/// The result of a RunReportJob operation. Contains the name to use in FetchReportResultsRequest.report_job and the status of the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ReportJob
	{
		
		/// <summary>
		/// Required. The resource name of a report job. Name uses the format: `accounts/{account_id}/reportJobs/{report_job_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Status of a report generation process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportStatus")]
		public GoogleCloudChannelV1ReportStatus ReportStatus { get; set; }
	}
	
	/// <summary>
	/// Status of a report generation process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1ReportStatus
	{
		
		/// <summary>
		/// The report generation's completion time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The report generation's start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// The current state of the report generation process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudChannelV1ReportStatusState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1ReportStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	/// <summary>
	/// Request message for CloudChannelReportsService.RunReportJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RunReportJobRequest
	{
		
		/// <summary>
		/// A representation of usage or invoice date ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public GoogleCloudChannelV1DateRange DateRange { get; set; }
		
		/// <summary>
		/// Optional. A structured string that defines conditions on dimension columns to restrict the report output. Filters support logical operators (AND, OR, NOT) and conditional operators (=, !=, <, >, <=, and >=) using `column_id` as keys. For example: `(customer:"accounts/C123abc/customers/S456def" OR customer:"accounts/C123abc/customers/S789ghi") AND invoice_start_date.year >= 2022`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Optional. The BCP-47 language code, such as "en-US". If specified, the response is localized to the corresponding language code if the original data sources support it. Default is "en-US".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelReportsService.RunReportJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1RunReportJobResponse
	{
		
		/// <summary>
		/// The result of a RunReportJob operation. Contains the name to use in FetchReportResultsRequest.report_job and the status of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportJob")]
		public GoogleCloudChannelV1ReportJob ReportJob { get; set; }
		
		/// <summary>
		/// The features describing the data. Returned by CloudChannelReportsService.RunReportJob and CloudChannelReportsService.FetchReportResults.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportMetadata")]
		public GoogleCloudChannelV1ReportResultsMetadata ReportMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.StartPaidService.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1StartPaidServiceRequest
	{
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Represents information which resellers will get as part of notification from Pub/Sub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1SubscriberEvent
	{
		
		/// <summary>
		/// Represents Pub/Sub message content describing customer update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerEvent")]
		public GoogleCloudChannelV1CustomerEvent CustomerEvent { get; set; }
		
		/// <summary>
		/// Represents Pub/Sub message content describing entitlement update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlementEvent")]
		public GoogleCloudChannelV1EntitlementEvent EntitlementEvent { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.SuspendEntitlement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1SuspendEntitlementRequest
	{
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.TransferEntitlements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TransferEntitlementsRequest
	{
		
		/// <summary>
		/// The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authToken")]
		public string AuthToken { get; set; }
		
		/// <summary>
		/// Required. The new entitlements to create or transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlements")]
		public GoogleCloudChannelV1Entitlement[] Entitlements { get; set; }
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.TransferEntitlements. This is put in the response field of google.longrunning.Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TransferEntitlementsResponse
	{
		
		/// <summary>
		/// The transferred entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlements")]
		public GoogleCloudChannelV1Entitlement[] Entitlements { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.TransferEntitlementsToGoogle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1TransferEntitlementsToGoogleRequest
	{
		
		/// <summary>
		/// Required. The entitlements to transfer to Google.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlements")]
		public GoogleCloudChannelV1Entitlement[] Entitlements { get; set; }
		
		/// <summary>
		/// Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Request Message for UnregisterSubscriber.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1UnregisterSubscriberRequest
	{
		
		/// <summary>
		/// Required. Service account to unregister from subscriber access to the topic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
	}
	
	/// <summary>
	/// Response Message for UnregisterSubscriber.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1UnregisterSubscriberResponse
	{
		
		/// <summary>
		/// Name of the topic the service account subscriber access was removed from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topic")]
		public string Topic { get; set; }
	}
	
	/// <summary>
	/// Request message for CloudChannelService.UpdateChannelPartnerLink
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1UpdateChannelPartnerLinkRequest
	{
		
		/// <summary>
		/// Entity representing a link between distributors and their indirect resellers in an n-tier resale channel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerLink")]
		public GoogleCloudChannelV1ChannelPartnerLink ChannelPartnerLink { get; set; }
		
		/// <summary>
		/// Required. The update mask that applies to the resource. The only allowable value for an update mask is channel_partner_link.link_state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Association links that an entitlement has to other entitlements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1AssociationInfo
	{
		
		/// <summary>
		/// The name of the base entitlement, for which this entitlement is an add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseEntitlement")]
		public string BaseEntitlement { get; set; }
	}
	
	/// <summary>
	/// Represents Pub/Sub messages about updates to a Channel Partner. You can retrieve updated values through the ChannelPartnerLinks API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1ChannelPartnerEvent
	{
		
		/// <summary>
		/// Resource name for the Channel Partner Link. Channel_partner uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartner")]
		public string ChannelPartner { get; set; }
		
		/// <summary>
		/// Type of event performed on the Channel Partner.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public System.Nullable<GoogleCloudChannelV1alpha1ChannelPartnerEventEventType> EventType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1alpha1ChannelPartnerEventEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINK_STATE_CHANGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTNER_ADVANTAGE_INFO_CHANGED = 2,
	}
	
	/// <summary>
	/// The definition of a report column. Specifies the data properties in the corresponding position of the report rows.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1Column
	{
		
		/// <summary>
		/// The unique name of the column (for example, customer_domain, channel_partner, customer_cost). You can use column IDs in RunReportJobRequest.filter. To see all reports and their columns, call CloudChannelReportsService.ListReports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columnId")]
		public string ColumnId { get; set; }
		
		/// <summary>
		/// The type of the values for this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataType")]
		public GoogleCloudChannelV1ColumnDataType DataType { get; set; }
		
		/// <summary>
		/// The column's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Commitment settings for commitment-based offers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1CommitmentSettings
	{
		
		/// <summary>
		/// Output only. Commitment end timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Renewal settings for renewable Offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renewalSettings")]
		public GoogleCloudChannelV1alpha1RenewalSettings RenewalSettings { get; set; }
		
		/// <summary>
		/// Output only. Commitment start timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Renewal settings for renewable Offers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1RenewalSettings
	{
		
		/// <summary>
		/// If true, disables commitment-based offer on renewal and switches to flexible or pay as you go. Deprecated: Use `payment_plan` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableCommitment")]
		public System.Nullable<System.Boolean> DisableCommitment { get; set; }
		
		/// <summary>
		/// If false, the plan will be completed at the end date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableRenewal")]
		public System.Nullable<System.Boolean> EnableRenewal { get; set; }
		
		/// <summary>
		/// Represents period in days/months/years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentCycle")]
		public GoogleCloudChannelV1alpha1Period PaymentCycle { get; set; }
		
		/// <summary>
		/// Set if enable_renewal=true. Deprecated: Use `payment_cycle` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentOption")]
		public System.Nullable<GoogleCloudChannelV1alpha1RenewalSettingsPaymentOption> PaymentOption { get; set; }
		
		/// <summary>
		/// Describes how a reseller will be billed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentPlan")]
		public GoogleCloudChannelV1RenewalSettingsPaymentPlan PaymentPlan { get; set; }
		
		/// <summary>
		/// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resizeUnitCount")]
		public System.Nullable<System.Boolean> ResizeUnitCount { get; set; }
		
		/// <summary>
		/// Output only. The offer resource name that the entitlement will renew on at the end date. Takes the form: accounts/{account_id}/offers/{offer_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduledRenewalOffer")]
		public string ScheduledRenewalOffer { get; set; }
	}
	
	/// <summary>
	/// Represents period in days/months/years.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1Period
	{
		
		/// <summary>
		/// Total duration of Period Type defined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		/// <summary>
		/// Period Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="periodType")]
		public GoogleCloudChannelV1PeriodPeriodType PeriodType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1alpha1RenewalSettingsPaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANNUAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 2,
	}
	
	/// <summary>
	/// Represents Pub/Sub message content describing customer update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1CustomerEvent
	{
		
		/// <summary>
		/// Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Type of event which happened on the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public GoogleCloudChannelV1CustomerEventEventType EventType { get; set; }
	}
	
	/// <summary>
	/// A representation of usage or invoice date ranges.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1DateRange
	{
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceEndDate")]
		public GoogleTypeDate InvoiceEndDate { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoiceStartDate")]
		public GoogleTypeDate InvoiceStartDate { get; set; }
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageEndDateTime")]
		public GoogleTypeDateTime UsageEndDateTime { get; set; }
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageStartDateTime")]
		public GoogleTypeDateTime UsageStartDateTime { get; set; }
	}
	
	/// <summary>
	/// An entitlement is a representation of a customer's ability to use a service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1Entitlement
	{
		
		/// <summary>
		/// The current number of users that are assigned a license for the product defined in provisioned_service.skuId. Read-only. Deprecated: Use `parameters` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignedUnits")]
		public System.Nullable<System.Int32> AssignedUnits { get; set; }
		
		/// <summary>
		/// Association links that an entitlement has to other entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="associationInfo")]
		public GoogleCloudChannelV1alpha1AssociationInfo AssociationInfo { get; set; }
		
		/// <summary>
		/// Optional. The billing account resource name that is used to pay for this entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingAccount")]
		public string BillingAccount { get; set; }
		
		/// <summary>
		/// Cloud Identity ID of a channel partner who will be the direct reseller for the customer's order. This field is generally used in 2-tier ordering, where the order is placed by a top-level distributor on behalf of their channel partner or reseller. Required for distributors. Deprecated: `channel_partner_id` has been moved to the Customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerId")]
		public string ChannelPartnerId { get; set; }
		
		/// <summary>
		/// Commitment settings for commitment-based offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commitmentSettings")]
		public GoogleCloudChannelV1alpha1CommitmentSettings CommitmentSettings { get; set; }
		
		/// <summary>
		/// Output only. The time at which the entitlement is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Maximum number of units for a non commitment-based Offer, such as Flexible, Trial or Free entitlements. For commitment-based entitlements, this is a read-only field, which only the internal support team can update. Deprecated: Use `parameters` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxUnits")]
		public System.Nullable<System.Int32> MaxUnits { get; set; }
		
		/// <summary>
		/// Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Number of units for a commitment-based Offer. For example, for seat-based Offers, this would be the number of seats; for license-based Offers, this would be the number of licenses. Required for creating commitment-based Offers. Deprecated: Use `parameters` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numUnits")]
		public System.Nullable<System.Int32> NumUnits { get; set; }
		
		/// <summary>
		/// Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offer")]
		public string Offer { get; set; }
		
		/// <summary>
		/// Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudChannelV1alpha1Parameter[] Parameters { get; set; }
		
		/// <summary>
		/// Service provisioned for an entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisionedService")]
		public GoogleCloudChannelV1alpha1ProvisionedService ProvisionedService { get; set; }
		
		/// <summary>
		/// Output only. Current provisioning state of the entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<GoogleCloudChannelV1alpha1EntitlementProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchaseOrderId")]
		public string PurchaseOrderId { get; set; }
		
		/// <summary>
		/// Output only. Enumerable of all current suspension reasons for an entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspensionReasons")]
		public GoogleCloudChannelV1EntitlementChangeSuspensionReason[] SuspensionReasons { get; set; }
		
		/// <summary>
		/// Settings for trial offers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trialSettings")]
		public GoogleCloudChannelV1alpha1TrialSettings TrialSettings { get; set; }
		
		/// <summary>
		/// Output only. The time at which the entitlement is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Definition for extended entitlement parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1Parameter
	{
		
		/// <summary>
		/// Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="editable")]
		public System.Nullable<System.Boolean> Editable { get; set; }
		
		/// <summary>
		/// Name of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Data type and value of a parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GoogleCloudChannelV1alpha1Value Value { get; set; }
	}
	
	/// <summary>
	/// Data type and value of a parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1Value
	{
		
		/// <summary>
		/// Represents a boolean value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Represents a double value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// Represents an int64 value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="int64Value")]
		public string Int64Value { get; set; }
		
		/// <summary>
		/// Represents an 'Any' proto value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protoValue")]
		public System.Collections.Generic.Dictionary<string, object> ProtoValue { get; set; }
		
		/// <summary>
		/// Represents a string value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// Service provisioned for an entitlement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1ProvisionedService
	{
		
		/// <summary>
		/// Output only. The product pertaining to the provisioning resource as specified in the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		/// <summary>
		/// Output only. Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud, this is the Billing Account ID of the billing subaccount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningId")]
		public string ProvisioningId { get; set; }
		
		/// <summary>
		/// Output only. The SKU pertaining to the provisioning resource as specified in the Offer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuId")]
		public string SkuId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1alpha1EntitlementProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 5,
	}
	
	/// <summary>
	/// Settings for trial offers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1TrialSettings
	{
		
		/// <summary>
		/// Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trial")]
		public System.Nullable<System.Boolean> Trial { get; set; }
	}
	
	/// <summary>
	/// Represents Pub/Sub message content describing entitlement update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1EntitlementEvent
	{
		
		/// <summary>
		/// Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlement")]
		public string Entitlement { get; set; }
		
		/// <summary>
		/// Type of event which happened on the entitlement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public GoogleCloudChannelV1EntitlementEventEventType EventType { get; set; }
	}
	
	/// <summary>
	/// Provides contextual information about a google.longrunning.Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1OperationMetadata
	{
		
		/// <summary>
		/// The RPC that initiated this Long Running Operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationType")]
		public System.Nullable<GoogleCloudChannelV1alpha1OperationMetadataOperationType> OperationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudChannelV1alpha1OperationMetadataOperationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_ENTITLEMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_QUANTITY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_RENEWAL_SETTINGS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_PLAN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_PAID_SERVICE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_SKU = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATE_ENTITLEMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPEND_ENTITLEMENT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCEL_ENTITLEMENT = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_ENTITLEMENTS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_ENTITLEMENTS_TO_GOOGLE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_OFFER = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_PARAMETERS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISION_CLOUD_IDENTITY = 14,
	}
	
	/// <summary>
	/// The ID and description of a report that was used to generate report data. For example, "Google Cloud Daily Spend", "Google Workspace License Activity", etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1Report
	{
		
		/// <summary>
		/// The list of columns included in the report. This defines the schema of the report results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public GoogleCloudChannelV1alpha1Column[] Columns { get; set; }
		
		/// <summary>
		/// A description of other aspects of the report, such as the products it supports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A human-readable name for this report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. The report's resource name. Specifies the account and report used to generate report data. The report_id identifier is a UID (for example, `613bf59q`). Name uses the format: accounts/{account_id}/reports/{report_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The result of a RunReportJob operation. Contains the name to use in FetchReportResultsRequest.report_job and the status of the operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1ReportJob
	{
		
		/// <summary>
		/// Required. The resource name of a report job. Name uses the format: `accounts/{account_id}/reportJobs/{report_job_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Status of a report generation process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportStatus")]
		public GoogleCloudChannelV1alpha1ReportStatus ReportStatus { get; set; }
	}
	
	/// <summary>
	/// Status of a report generation process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1ReportStatus
	{
		
		/// <summary>
		/// The report generation's completion time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The report generation's start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// The current state of the report generation process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudChannelV1ReportStatusState State { get; set; }
	}
	
	/// <summary>
	/// The features describing the data. Returned by CloudChannelReportsService.RunReportJob and CloudChannelReportsService.FetchReportResults.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1ReportResultsMetadata
	{
		
		/// <summary>
		/// A representation of usage or invoice date ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public GoogleCloudChannelV1alpha1DateRange DateRange { get; set; }
		
		/// <summary>
		/// A representation of usage or invoice date ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precedingDateRange")]
		public GoogleCloudChannelV1alpha1DateRange PrecedingDateRange { get; set; }
		
		/// <summary>
		/// The ID and description of a report that was used to generate report data. For example, "Google Cloud Daily Spend", "Google Workspace License Activity", etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report")]
		public GoogleCloudChannelV1alpha1Report Report { get; set; }
		
		/// <summary>
		/// The total number of rows of data in the final report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowCount")]
		public string RowCount { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelReportsService.RunReportJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1RunReportJobResponse
	{
		
		/// <summary>
		/// The result of a RunReportJob operation. Contains the name to use in FetchReportResultsRequest.report_job and the status of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportJob")]
		public GoogleCloudChannelV1alpha1ReportJob ReportJob { get; set; }
		
		/// <summary>
		/// The features describing the data. Returned by CloudChannelReportsService.RunReportJob and CloudChannelReportsService.FetchReportResults.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportMetadata")]
		public GoogleCloudChannelV1alpha1ReportResultsMetadata ReportMetadata { get; set; }
	}
	
	/// <summary>
	/// Represents information which resellers will get as part of notification from Pub/Sub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1SubscriberEvent
	{
		
		/// <summary>
		/// Represents Pub/Sub messages about updates to a Channel Partner. You can retrieve updated values through the ChannelPartnerLinks API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelPartnerEvent")]
		public GoogleCloudChannelV1alpha1ChannelPartnerEvent ChannelPartnerEvent { get; set; }
		
		/// <summary>
		/// Represents Pub/Sub message content describing customer update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerEvent")]
		public GoogleCloudChannelV1alpha1CustomerEvent CustomerEvent { get; set; }
		
		/// <summary>
		/// Represents Pub/Sub message content describing entitlement update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlementEvent")]
		public GoogleCloudChannelV1alpha1EntitlementEvent EntitlementEvent { get; set; }
	}
	
	/// <summary>
	/// Response message for CloudChannelService.TransferEntitlements. This is put in the response field of google.longrunning.Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudChannelV1alpha1TransferEntitlementsResponse
	{
		
		/// <summary>
		/// The transferred entitlements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entitlements")]
		public GoogleCloudChannelV1alpha1Entitlement[] Entitlements { get; set; }
	}
	
	/// <summary>
	/// The request message for Operations.CancelOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningCancelOperationRequest
	{
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists the Products the reseller is authorized to sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.
		/// Cloudchannel_products_list v1/products
		/// </summary>
		/// <param name="account">Required. The resource name of the reseller account. Format: accounts/{account_id}.</param>
		/// <param name="languageCode">Optional. The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US".</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 Products. The maximum value is 1000; the server will coerce values above 1000.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListProductsResponse> Cloudchannel_products_listAsync(string account, string languageCode, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/products?account=" + (account==null? "" : System.Uri.EscapeDataString(account))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListProductsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: A list of service email addresses.
		/// Cloudchannel_accounts_listSubscribers v1/{account}:listSubscribers
		/// </summary>
		/// <param name="account">Required. Resource name of the account.</param>
		/// <param name="pageSize">Optional. The maximum number of service accounts to return. The service may return fewer than this value. If unspecified, returns at most 100 service accounts. The maximum value is 1000; the server will coerce values above 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListSubscribers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscribers` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListSubscribersResponse> Cloudchannel_accounts_listSubscribersAsync(string account, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (account==null? "" : System.Uri.EscapeDataString(account))+":listSubscribers&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListSubscribersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Registers a service account with subscriber privileges on the Cloud Pub/Sub topic for this Channel Services account. After you create a subscriber, you get the events through SubscriberEvent Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The topic name with the registered service email address.
		/// Cloudchannel_accounts_register v1/{account}:register
		/// </summary>
		/// <param name="account">Required. Resource name of the account.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1RegisterSubscriberResponse> Cloudchannel_accounts_registerAsync(string account, GoogleCloudChannelV1RegisterSubscriberRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (account==null? "" : System.Uri.EscapeDataString(account))+":register";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1RegisterSubscriberResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Unregisters a service account with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. If there are no service accounts left with subscriber privileges, this deletes the topic. You can call ListSubscribers to check for these accounts. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The topic name that unregistered the service email address. Returns a success response if the service email address wasn't registered with the topic.
		/// Cloudchannel_accounts_unregister v1/{account}:unregister
		/// </summary>
		/// <param name="account">Required. Resource name of the account.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1UnregisterSubscriberResponse> Cloudchannel_accounts_unregisterAsync(string account, GoogleCloudChannelV1UnregisterSubscriberRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (account==null? "" : System.Uri.EscapeDataString(account))+":unregister";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1UnregisterSubscriberResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the following: * Offers that you can purchase for a customer. * Offers that you can change for an entitlement. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid.
		/// Cloudchannel_accounts_customers_listPurchasableOffers v1/{customer}:listPurchasableOffers
		/// </summary>
		/// <param name="customer">Required. The resource name of the customer to list Offers for. Format: accounts/{account_id}/customers/{customer_id}.</param>
		/// <param name="changeOfferPurchase_billingAccount">Optional. Resource name of the new target Billing Account. Provide this Billing Account when setting up billing for a trial subscription. Format: accounts/{account_id}/billingAccounts/{billing_account_id}. This field is only relevant for multi-currency accounts. It should be left empty for single currency accounts.</param>
		/// <param name="changeOfferPurchase_entitlement">Required. Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <param name="changeOfferPurchase_newSku">Optional. Resource name of the new target SKU. Provide this SKU when upgrading or downgrading an entitlement. Format: products/{product_id}/skus/{sku_id}</param>
		/// <param name="createEntitlementPurchase_billingAccount">Optional. Billing account that the result should be restricted to. Format: accounts/{account_id}/billingAccounts/{billing_account_id}.</param>
		/// <param name="createEntitlementPurchase_sku">Required. SKU that the result should be restricted to. Format: products/{product_id}/skus/{sku_id}.</param>
		/// <param name="languageCode">Optional. The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US".</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 Offers. The maximum value is 1000; the server will coerce values above 1000.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListPurchasableOffersResponse> Cloudchannel_accounts_customers_listPurchasableOffersAsync(string customer, string changeOfferPurchase_billingAccount, string changeOfferPurchase_entitlement, string changeOfferPurchase_newSku, string createEntitlementPurchase_billingAccount, string createEntitlementPurchase_sku, string languageCode, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (customer==null? "" : System.Uri.EscapeDataString(customer))+":listPurchasableOffers&changeOfferPurchase.billingAccount=" + (changeOfferPurchase_billingAccount==null? "" : System.Uri.EscapeDataString(changeOfferPurchase_billingAccount))+"&changeOfferPurchase.entitlement=" + (changeOfferPurchase_entitlement==null? "" : System.Uri.EscapeDataString(changeOfferPurchase_entitlement))+"&changeOfferPurchase.newSku=" + (changeOfferPurchase_newSku==null? "" : System.Uri.EscapeDataString(changeOfferPurchase_newSku))+"&createEntitlementPurchase.billingAccount=" + (createEntitlementPurchase_billingAccount==null? "" : System.Uri.EscapeDataString(createEntitlementPurchase_billingAccount))+"&createEntitlementPurchase.sku=" + (createEntitlementPurchase_sku==null? "" : System.Uri.EscapeDataString(createEntitlementPurchase_sku))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListPurchasableOffersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the following: * SKUs that you can purchase for a customer * SKUs that you can upgrade or downgrade for an entitlement. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid.
		/// Cloudchannel_accounts_customers_listPurchasableSkus v1/{customer}:listPurchasableSkus
		/// </summary>
		/// <param name="customer">Required. The resource name of the customer to list SKUs for. Format: accounts/{account_id}/customers/{customer_id}.</param>
		/// <param name="changeOfferPurchase_changeType">Required. Change Type for the entitlement.</param>
		/// <param name="changeOfferPurchase_entitlement">Required. Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <param name="createEntitlementPurchase_product">Required. List SKUs belonging to this Product. Format: products/{product_id}. Supports products/- to retrieve SKUs for all products.</param>
		/// <param name="languageCode">Optional. The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US".</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 SKUs. The maximum value is 1000; the server will coerce values above 1000.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListPurchasableSkusResponse> Cloudchannel_accounts_customers_listPurchasableSkusAsync(string customer, Cloudchannel_accounts_customers_listPurchasableSkusChangeOfferPurchase_changeType changeOfferPurchase_changeType, string changeOfferPurchase_entitlement, string createEntitlementPurchase_product, string languageCode, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (customer==null? "" : System.Uri.EscapeDataString(customer))+":listPurchasableSkus&changeOfferPurchase.changeType=" + changeOfferPurchase_changeType+"&changeOfferPurchase.entitlement=" + (changeOfferPurchase_entitlement==null? "" : System.Uri.EscapeDataString(changeOfferPurchase_entitlement))+"&createEntitlementPurchase.product=" + (createEntitlementPurchase_product==null? "" : System.Uri.EscapeDataString(createEntitlementPurchase_product))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListPurchasableSkusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Cloud Identity for the given customer using the customer's information, or the information provided here. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller. * You are not authorized to provision cloud identity id. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer was not found. * ALREADY_EXISTS: The customer's primary email already exists. Retry after changing the customer's primary contact email. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata contains an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_provisionCloudIdentity v1/{customer}:provisionCloudIdentity
		/// </summary>
		/// <param name="customer">Required. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_provisionCloudIdentityAsync(string customer, GoogleCloudChannelV1ProvisionCloudIdentityRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (customer==null? "" : System.Uri.EscapeDataString(customer))+":provisionCloudIdentity";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the billing accounts that are eligible to purchase particular SKUs for a given customer. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: Based on the provided list of SKUs, returns a list of SKU groups that must be purchased using the same billing account and the billing accounts eligible to purchase each SKU group.
		/// Cloudchannel_accounts_customers_queryEligibleBillingAccounts v1/{customer}:queryEligibleBillingAccounts
		/// </summary>
		/// <param name="customer">Required. The resource name of the customer to list eligible billing accounts for. Format: accounts/{account_id}/customers/{customer_id}.</param>
		/// <param name="skus">Required. List of SKUs to list eligible billing accounts for. At least one SKU is required. Format: products/{product_id}/skus/{sku_id}.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1QueryEligibleBillingAccountsResponse> Cloudchannel_accounts_customers_queryEligibleBillingAccountsAsync(string customer, string[] skus, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (customer==null? "" : System.Uri.EscapeDataString(customer))+":queryEligibleBillingAccounts&"+string.Join("&", skus.Select(z => $"skus={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1QueryEligibleBillingAccountsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the requested Offer resource. Possible error codes: * PERMISSION_DENIED: The entitlement doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement or offer was not found. Return value: The Offer resource.
		/// Cloudchannel_accounts_customers_entitlements_lookupOffer v1/{entitlement}:lookupOffer
		/// </summary>
		/// <param name="entitlement">Required. The resource name of the entitlement to retrieve the Offer. Entitlement uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1Offer> Cloudchannel_accounts_customers_entitlements_lookupOfferAsync(string entitlement, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entitlement==null? "" : System.Uri.EscapeDataString(entitlement))+":lookupOffer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1Offer>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		/// Cloudchannel_operations_delete v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource to be deleted.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Cloudchannel_operations_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Cloudchannel_operations_list v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Cloudchannel_operations_listAsync(string name, Cloudchannel_operations_listFilter filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&filter=" + filter+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a CustomerRepricingConfig. Call this method to set modifications for a specific customer's bill. This method overwrites the existing CustomerRepricingConfig. You can only update configs if the RepricingConfig.effective_invoice_month is a future month. To make changes to configs for the current month, use CreateCustomerRepricingConfig, taking note of its restrictions. You cannot update the RepricingConfig.effective_invoice_month. When updating a config in the future: * This config must already exist. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated CustomerRepricingConfig resource, otherwise returns an error.
		/// Cloudchannel_accounts_customers_customerRepricingConfigs_patch v1/{name}
		/// </summary>
		/// <param name="name">Output only. Resource name of the CustomerRepricingConfig. Format: accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.</param>
		/// <param name="updateMask">The update mask that applies to the resource. Optional.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1CustomerRepricingConfig> Cloudchannel_accounts_customers_customerRepricingConfigs_patchAsync(string name, string updateMask, GoogleCloudChannelV1CustomerRepricingConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1CustomerRepricingConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Activates a previously suspended entitlement. Entitlements suspended for pending ToS acceptance can't be activated using this method. An entitlement activation is a long-running operation and it updates the state of the customer entitlement. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated suspensions and entitlements that have accepted the TOS. * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE state. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_activate v1/{name}:activate
		/// </summary>
		/// <param name="name">Required. The resource name of the entitlement to activate. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_activateAsync(string name, GoogleCloudChannelV1ActivateEntitlementRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":activate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Cloudchannel_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Cloudchannel_operations_cancelAsync(string name, GoogleLongrunningCancelOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the Offer for an existing customer entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Offer or Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_changeOffer v1/{name}:changeOffer
		/// </summary>
		/// <param name="name">Required. The resource name of the entitlement to update. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_changeOfferAsync(string name, GoogleCloudChannelV1ChangeOfferRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":changeOffer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Change parameters of the entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. For example, the number of seats being changed is greater than the allowed number of max seats, or decreasing seats for a commitment based plan. * NOT_FOUND: Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_changeParameters v1/{name}:changeParameters
		/// </summary>
		/// <param name="name">Required. The name of the entitlement to update. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_changeParametersAsync(string name, GoogleCloudChannelV1ChangeParametersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":changeParameters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the renewal settings for an existing customer entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a commitment plan. Can't enable or disable renewals for non-commitment plans. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_changeRenewalSettings v1/{name}:changeRenewalSettings
		/// </summary>
		/// <param name="name">Required. The name of the entitlement to update. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_changeRenewalSettingsAsync(string name, GoogleCloudChannelV1ChangeRenewalSettingsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":changeRenewalSettings";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Begins generation of data for a given report. The report identifier is a UID (for example, `613bf59q`). Possible error codes: * PERMISSION_DENIED: The user doesn't have access to this report. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The report identifier was not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata contains an instance of OperationMetadata. To get the results of report generation, call CloudChannelReportsService.FetchReportResults with the RunReportJobResponse.report_job. Deprecated: Please use [Export Channel Services data to BigQuery](https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery) instead.
		/// Cloudchannel_accounts_reports_run v1/{name}:run
		/// </summary>
		/// <param name="name">Required. The report's resource name. Specifies the account and report used to generate report data. The report_id identifier is a UID (for example, `613bf59q`). Name uses the format: accounts/{account_id}/reports/{report_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_reports_runAsync(string name, GoogleCloudChannelV1RunReportJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":run";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts paid service for a trial entitlement. Starts paid service for a trial entitlement immediately. This method is only applicable if a plan is set up for a trial entitlement but has some trial days remaining. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for entitlement on trial plans. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_startPaidService v1/{name}:startPaidService
		/// </summary>
		/// <param name="name">Required. The name of the entitlement to start a paid service for. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_startPaidServiceAsync(string name, GoogleCloudChannelV1StartPaidServiceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":startPaidService";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Suspends a previously fulfilled entitlement. An entitlement suspension is a long-running operation. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_suspend v1/{name}:suspend
		/// </summary>
		/// <param name="name">Required. The resource name of the entitlement to suspend. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_suspendAsync(string name, GoogleCloudChannelV1SuspendEntitlementRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":suspend";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the Billable SKUs in a given SKU group. Possible error codes: PERMISSION_DENIED: If the account making the request and the account being queried for are different, or the account doesn't exist. INVALID_ARGUMENT: Missing or invalid required parameters in the request. INTERNAL: Any non-user error related to technical issue in the backend. In this case, contact cloud channel support. Return Value: If successful, the BillableSku resources. The data for each resource is displayed in the ascending order of: * BillableSku.service_display_name * BillableSku.sku_display_name If unsuccessful, returns an error.
		/// Cloudchannel_accounts_skuGroups_billableSkus_list v1/{parent}/billableSkus
		/// </summary>
		/// <param name="parent">Required. Resource name of the SKU group. Format: accounts/{account}/skuGroups/{sku_group}.</param>
		/// <param name="pageSize">Optional. The maximum number of SKUs to return. The service may return fewer than this value. If unspecified, returns a maximum of 100000 SKUs. The maximum value is 100000; values above 100000 will be coerced to 100000.</param>
		/// <param name="pageToken">Optional. A token identifying a page of results beyond the first page. Obtained through ListSkuGroupBillableSkus.next_page_token of the previous CloudChannelService.ListSkuGroupBillableSkus call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListSkuGroupBillableSkusResponse> Cloudchannel_accounts_skuGroups_billableSkus_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/billableSkus&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListSkuGroupBillableSkusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List ChannelPartnerLinks belonging to a distributor. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: The list of the distributor account's ChannelPartnerLink resources.
		/// Cloudchannel_accounts_channelPartnerLinks_list v1/{parent}/channelPartnerLinks
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller account for listing channel partner links. Parent uses the format: accounts/{account_id}</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, server will pick a default size (25). The maximum value is 200; the server will coerce values above 200.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page. Obtained using ListChannelPartnerLinksResponse.next_page_token of the previous CloudChannelService.ListChannelPartnerLinks call.</param>
		/// <param name="view">Optional. The level of granularity the ChannelPartnerLink will display.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListChannelPartnerLinksResponse> Cloudchannel_accounts_channelPartnerLinks_listAsync(string parent, int pageSize, string pageToken, Cloudchannel_operations_listFilter view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/channelPartnerLinks&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListChannelPartnerLinksResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Initiates a channel partner link between a distributor and a reseller, or between resellers in an n-tier reseller channel. Invited partners need to follow the invite_link_uri provided in the response to accept. After accepting the invitation, a link is set up between the two parties. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud Identity customer exists for provided domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The new ChannelPartnerLink resource.
		/// Cloudchannel_accounts_channelPartnerLinks_create v1/{parent}/channelPartnerLinks
		/// </summary>
		/// <param name="parent">Required. Create a channel partner link for the provided reseller account's resource name. Parent uses the format: accounts/{account_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ChannelPartnerLink> Cloudchannel_accounts_channelPartnerLinks_createAsync(string parent, GoogleCloudChannelV1ChannelPartnerLink requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/channelPartnerLinks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ChannelPartnerLink>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists information about how a Reseller modifies their bill before sending it to a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * NOT_FOUND: The ChannelPartnerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the ChannelPartnerRepricingConfig resources. The data for each resource is displayed in the ascending order of: * Channel Partner ID * RepricingConfig.effective_invoice_month * ChannelPartnerRepricingConfig.update_time If unsuccessful, returns an error.
		/// Cloudchannel_accounts_channelPartnerLinks_channelPartnerRepricingConfigs_list v1/{parent}/channelPartnerRepricingConfigs
		/// </summary>
		/// <param name="parent">Required. The resource name of the account's ChannelPartnerLink. Parent uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}. Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs for all channel partners.</param>
		/// <param name="filter">Optional. A filter for [CloudChannelService.ListChannelPartnerRepricingConfigs] results (channel_partner_link only). You can use this filter when you support a BatchGet-like query. To use the filter, you must set `parent=accounts/{account_id}/channelPartnerLinks/-`. Example: `channel_partner_link = accounts/account_id/channelPartnerLinks/c1` OR `channel_partner_link = accounts/account_id/channelPartnerLinks/c2`.</param>
		/// <param name="pageSize">Optional. The maximum number of repricing configs to return. The service may return fewer than this value. If unspecified, returns a maximum of 50 rules. The maximum value is 100; values above 100 will be coerced to 100.</param>
		/// <param name="pageToken">Optional. A token identifying a page of results beyond the first page. Obtained through ListChannelPartnerRepricingConfigsResponse.next_page_token of the previous CloudChannelService.ListChannelPartnerRepricingConfigs call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListChannelPartnerRepricingConfigsResponse> Cloudchannel_accounts_channelPartnerLinks_channelPartnerRepricingConfigs_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/channelPartnerRepricingConfigs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListChannelPartnerRepricingConfigsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a ChannelPartnerRepricingConfig. Call this method to set modifications for a specific ChannelPartner's bill. You can only create configs if the RepricingConfig.effective_invoice_month is a future month. If needed, you can create a config for the current month, with some restrictions. When creating a config for a future month, make sure there are no existing configs for that RepricingConfig.effective_invoice_month. The following restrictions are for creating configs in the current month. * This functionality is reserved for recovering from an erroneous config, and should not be used for regular business cases. * The new config will not modify exports used with other configs. Changes to the config may be immediate, but may take up to 24 hours. * There is a limit of ten configs for any ChannelPartner or RepricingConfig.EntitlementGranularity.entitlement, for any RepricingConfig.effective_invoice_month. * The contained ChannelPartnerRepricingConfig.repricing_config value must be different from the value used in the current config for a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The ChannelPartnerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated ChannelPartnerRepricingConfig resource, otherwise returns an error.
		/// Cloudchannel_accounts_channelPartnerLinks_channelPartnerRepricingConfigs_create v1/{parent}/channelPartnerRepricingConfigs
		/// </summary>
		/// <param name="parent">Required. The resource name of the ChannelPartner that will receive the repricing config. Parent uses the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ChannelPartnerRepricingConfig> Cloudchannel_accounts_channelPartnerLinks_channelPartnerRepricingConfigs_createAsync(string parent, GoogleCloudChannelV1ChannelPartnerRepricingConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/channelPartnerRepricingConfigs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ChannelPartnerRepricingConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists information about how a Reseller modifies their bill before sending it to a Customer. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the CustomerRepricingConfig resources. The data for each resource is displayed in the ascending order of: * Customer ID * RepricingConfig.EntitlementGranularity.entitlement * RepricingConfig.effective_invoice_month * CustomerRepricingConfig.update_time If unsuccessful, returns an error.
		/// Cloudchannel_accounts_customers_customerRepricingConfigs_list v1/{parent}/customerRepricingConfigs
		/// </summary>
		/// <param name="parent">Required. The resource name of the customer. Parent uses the format: accounts/{account_id}/customers/{customer_id}. Supports accounts/{account_id}/customers/- to retrieve configs for all customers.</param>
		/// <param name="filter">Optional. A filter for [CloudChannelService.ListCustomerRepricingConfigs] results (customer only). You can use this filter when you support a BatchGet-like query. To use the filter, you must set `parent=accounts/{account_id}/customers/-`. Example: customer = accounts/account_id/customers/c1 OR customer = accounts/account_id/customers/c2.</param>
		/// <param name="pageSize">Optional. The maximum number of repricing configs to return. The service may return fewer than this value. If unspecified, returns a maximum of 50 rules. The maximum value is 100; values above 100 will be coerced to 100.</param>
		/// <param name="pageToken">Optional. A token identifying a page of results beyond the first page. Obtained through ListCustomerRepricingConfigsResponse.next_page_token of the previous CloudChannelService.ListCustomerRepricingConfigs call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListCustomerRepricingConfigsResponse> Cloudchannel_accounts_customers_customerRepricingConfigs_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customerRepricingConfigs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListCustomerRepricingConfigsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a CustomerRepricingConfig. Call this method to set modifications for a specific customer's bill. You can only create configs if the RepricingConfig.effective_invoice_month is a future month. If needed, you can create a config for the current month, with some restrictions. When creating a config for a future month, make sure there are no existing configs for that RepricingConfig.effective_invoice_month. The following restrictions are for creating configs in the current month. * This functionality is reserved for recovering from an erroneous config, and should not be used for regular business cases. * The new config will not modify exports used with other configs. Changes to the config may be immediate, but may take up to 24 hours. * There is a limit of ten configs for any RepricingConfig.EntitlementGranularity.entitlement, for any RepricingConfig.effective_invoice_month. * The contained CustomerRepricingConfig.repricing_config value must be different from the value used in the current config for a RepricingConfig.EntitlementGranularity.entitlement. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated CustomerRepricingConfig resource, otherwise returns an error.
		/// Cloudchannel_accounts_customers_customerRepricingConfigs_create v1/{parent}/customerRepricingConfigs
		/// </summary>
		/// <param name="parent">Required. The resource name of the customer that will receive this repricing config. Parent uses the format: accounts/{account_id}/customers/{customer_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1CustomerRepricingConfig> Cloudchannel_accounts_customers_customerRepricingConfigs_createAsync(string parent, GoogleCloudChannelV1CustomerRepricingConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customerRepricingConfigs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1CustomerRepricingConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List Customers. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of Customers, or an empty list if there are no customers.
		/// Cloudchannel_accounts_customers_list v1/{parent}/customers
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller account to list customers from. Parent uses the format: accounts/{account_id}.</param>
		/// <param name="filter">Optional. Filters applied to the [CloudChannelService.ListCustomers] results. See https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers for more information.</param>
		/// <param name="pageSize">Optional. The maximum number of customers to return. The service may return fewer than this value. If unspecified, returns at most 10 customers. The maximum value is 50.</param>
		/// <param name="pageToken">Optional. A token identifying a page of results other than the first page. Obtained through ListCustomersResponse.next_page_token of the previous CloudChannelService.ListCustomers call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListCustomersResponse> Cloudchannel_accounts_customers_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customers&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListCustomersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Customer resource under the reseller or distributor account. Possible error codes: * PERMISSION_DENIED: * The reseller account making the request is different from the reseller account in the API request. * You are not authorized to create a customer. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * Domain field value doesn't match the primary email domain. Return value: The newly created Customer resource.
		/// Cloudchannel_accounts_customers_create v1/{parent}/customers
		/// </summary>
		/// <param name="parent">Required. The resource name of reseller account in which to create the customer. Parent uses the format: accounts/{account_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1Customer> Cloudchannel_accounts_customers_createAsync(string parent, GoogleCloudChannelV1Customer requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1Customer>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Imports a Customer from the Cloud Identity associated with the provided Cloud Identity ID or domain before a TransferEntitlements call. If a linked Customer already exists and overwrite_if_exists is true, it will update that Customer's data. Possible error codes: * PERMISSION_DENIED: * The reseller account making the request is different from the reseller account in the API request. * You are not authorized to import the customer. See https://support.google.com/channelservices/answer/9759265 * NOT_FOUND: Cloud Identity doesn't exist or was deleted. * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is expired or invalid. * ALREADY_EXISTS: A customer already exists and has conflicting critical fields. Requires an overwrite. Return value: The Customer.
		/// Cloudchannel_accounts_customers_import v1/{parent}/customers:import
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller's account. Parent takes the format: accounts/{account_id} or accounts/{account_id}/channelPartnerLinks/{channel_partner_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1Customer> Cloudchannel_accounts_customers_importAsync(string parent, GoogleCloudChannelV1ImportCustomerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customers:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1Customer>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Entitlements belonging to a customer. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: A list of the customer's Entitlements.
		/// Cloudchannel_accounts_customers_entitlements_list v1/{parent}/entitlements
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller's customer account to list entitlements for. Parent uses the format: accounts/{account_id}/customers/{customer_id}</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, return at most 50 entitlements. The maximum value is 100; the server will coerce values above 100.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page. Obtained using ListEntitlementsResponse.next_page_token of the previous CloudChannelService.ListEntitlements call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListEntitlementsResponse> Cloudchannel_accounts_customers_entitlements_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entitlements&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListEntitlementsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an entitlement for a customer. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller. * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * There is already a customer entitlement for a SKU from the same product family. * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact Google Channel support for further troubleshooting. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: * The SKU was already purchased for the customer. * The customer's primary email already exists. Retry after changing the customer's primary contact email. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The domain required for purchasing a SKU has not been verified. * A pre-requisite SKU required to purchase an Add-On SKU is missing. For example, Google Workspace Business Starter is required to purchase Vault or Drive. * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_entitlements_create v1/{parent}/entitlements
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller's customer account in which to create the entitlement. Parent uses the format: accounts/{account_id}/customers/{customer_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_entitlements_createAsync(string parent, GoogleCloudChannelV1CreateEntitlementRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entitlements";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the Offers the reseller can sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.
		/// Cloudchannel_accounts_offers_list v1/{parent}/offers
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller account from which to list Offers. Parent uses the format: accounts/{account_id}.</param>
		/// <param name="filter">Optional. The expression to filter results by name (name of the Offer), sku.name (name of the SKU), or sku.product.name (name of the Product). Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1 Example 2: name=accounts/a1/offers/o1</param>
		/// <param name="languageCode">Optional. The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US".</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 500 Offers. The maximum value is 1000; the server will coerce values above 1000.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page.</param>
		/// <param name="showFutureOffers">Optional. A boolean flag that determines if a response returns future offers 30 days from now. If the show_future_offers is true, the response will only contain offers that are scheduled to be available 30 days from now.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListOffersResponse> Cloudchannel_accounts_offers_listAsync(string parent, string filter, string languageCode, int pageSize, string pageToken, bool showFutureOffers, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/offers&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&showFutureOffers="+showFutureOffers;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListOffersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the reports that RunReportJob can run. These reports include an ID, a description, and the list of columns that will be in the result. Deprecated: Please use [Export Channel Services data to BigQuery](https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery) instead.
		/// Cloudchannel_accounts_reports_list v1/{parent}/reports
		/// </summary>
		/// <param name="parent">Required. The resource name of the partner account to list available reports for. Parent uses the format: accounts/{account_id}</param>
		/// <param name="languageCode">Optional. The BCP-47 language code, such as "en-US". If specified, the response is localized to the corresponding language code if the original data sources support it. Default is "en-US".</param>
		/// <param name="pageSize">Optional. Requested page size of the report. The server might return fewer results than requested. If unspecified, returns 20 reports. The maximum value is 100.</param>
		/// <param name="pageToken">Optional. A token that specifies a page of results beyond the first page. Obtained through ListReportsResponse.next_page_token of the previous CloudChannelReportsService.ListReports call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListReportsResponse> Cloudchannel_accounts_reports_listAsync(string parent, string languageCode, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/reports&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListReportsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Rebilling supported SKU groups the account is authorized to sell. Reference: https://cloud.google.com/skus/sku-groups Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different, or the account doesn't exist. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the SkuGroup resources. The data for each resource is displayed in the alphabetical order of SKU group display name. The data for each resource is displayed in the ascending order of SkuGroup.display_name If unsuccessful, returns an error.
		/// Cloudchannel_accounts_skuGroups_list v1/{parent}/skuGroups
		/// </summary>
		/// <param name="parent">Required. The resource name of the account from which to list SKU groups. Parent uses the format: accounts/{account}.</param>
		/// <param name="pageSize">Optional. The maximum number of SKU groups to return. The service may return fewer than this value. If unspecified, returns a maximum of 1000 SKU groups. The maximum value is 1000; values above 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">Optional. A token identifying a page of results beyond the first page. Obtained through ListSkuGroups.next_page_token of the previous CloudChannelService.ListSkuGroups call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListSkuGroupsResponse> Cloudchannel_accounts_skuGroups_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/skuGroups&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListSkuGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the SKUs for a product the reseller is authorized to sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.
		/// Cloudchannel_products_skus_list v1/{parent}/skus
		/// </summary>
		/// <param name="parent">Required. The resource name of the Product to list SKUs for. Parent uses the format: products/{product_id}. Supports products/- to retrieve SKUs for all products.</param>
		/// <param name="account">Required. Resource name of the reseller. Format: accounts/{account_id}.</param>
		/// <param name="languageCode">Optional. The BCP-47 language code. For example, "en-US". The response will localize in the corresponding language code, if specified. The default value is "en-US".</param>
		/// <param name="pageSize">Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 SKUs. The maximum value is 1000; the server will coerce values above 1000.</param>
		/// <param name="pageToken">Optional. A token for a page of results other than the first page. Optional.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListSkusResponse> Cloudchannel_products_skus_listAsync(string parent, string account, string languageCode, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/skus&account=" + (account==null? "" : System.Uri.EscapeDataString(account))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListSkusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Confirms the existence of Cloud Identity accounts based on the domain and if the Cloud Identity accounts are owned by the reseller. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * INVALID_VALUE: Invalid domain value in the request. Return value: A list of CloudIdentityCustomerAccount resources for the domain (may be empty) Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if no CloudIdentityCustomerAccount resources match the domain.
		/// Cloudchannel_accounts_checkCloudIdentityAccountsExist v1/{parent}:checkCloudIdentityAccountsExist
		/// </summary>
		/// <param name="parent">Required. The reseller account's resource name. Parent uses the format: accounts/{account_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse> Cloudchannel_accounts_checkCloudIdentityAccountsExistAsync(string parent, GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":checkCloudIdentityAccountsExist";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List entitlement history. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different. * INVALID_ARGUMENT: Missing or invalid required fields in the request. * NOT_FOUND: The parent resource doesn't exist. Usually the result of an invalid name parameter. * INTERNAL: Any non-user error related to a technical issue in the backend. In this case, contact CloudChannel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. In this case, contact Cloud Channel support. Return value: List of EntitlementChanges.
		/// Cloudchannel_accounts_customers_entitlements_listEntitlementChanges v1/{parent}:listEntitlementChanges
		/// </summary>
		/// <param name="parent">Required. The resource name of the entitlement for which to list entitlement changes. The `-` wildcard may be used to match entitlements across a customer. Formats: * accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id} * accounts/{account_id}/customers/{customer_id}/entitlements/-</param>
		/// <param name="filter">Optional. Filters applied to the list results.</param>
		/// <param name="pageSize">Optional. The maximum number of entitlement changes to return. The service may return fewer than this value. If unspecified, returns at most 10 entitlement changes. The maximum value is 50; the server will coerce values above 50.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous CloudChannelService.ListEntitlementChanges call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to CloudChannelService.ListEntitlementChanges must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListEntitlementChangesResponse> Cloudchannel_accounts_customers_entitlements_listEntitlementChangesAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":listEntitlementChanges&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListEntitlementChangesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List TransferableOffers of a customer based on Cloud Identity ID or Customer Name in the request. Use this method when a reseller gets the entitlement information of an unowned customer. The reseller should provide the customer's Cloud Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller and has no auth token. * The customer provided incorrect reseller information when generating auth token. * The reseller account making the request is different from the reseller account in the query. * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of TransferableOffer for the given customer and SKU.
		/// Cloudchannel_accounts_listTransferableOffers v1/{parent}:listTransferableOffers
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller's account.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListTransferableOffersResponse> Cloudchannel_accounts_listTransferableOffersAsync(string parent, GoogleCloudChannelV1ListTransferableOffersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":listTransferableOffers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListTransferableOffersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List TransferableSkus of a customer based on the Cloud Identity ID or Customer Name in the request. Use this method to list the entitlements information of an unowned customer. You should provide the customer's Cloud Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller and has no auth token. * The supplied auth token is invalid. * The reseller account making the request is different from the reseller account in the query. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: A list of the customer's TransferableSku.
		/// Cloudchannel_accounts_listTransferableSkus v1/{parent}:listTransferableSkus
		/// </summary>
		/// <param name="parent">Required. The reseller account's resource name. Parent uses the format: accounts/{account_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1ListTransferableSkusResponse> Cloudchannel_accounts_listTransferableSkusAsync(string parent, GoogleCloudChannelV1ListTransferableSkusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":listTransferableSkus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1ListTransferableSkusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Transfers customer entitlements to new reseller. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller. * The reseller is not authorized to transact on this Product. See https://support.google.com/channelservices/answer/9759265 * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * Specify all transferring entitlements. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_transferEntitlements v1/{parent}:transferEntitlements
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller's customer account that will receive transferred entitlements. Parent uses the format: accounts/{account_id}/customers/{customer_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_transferEntitlementsAsync(string parent, GoogleCloudChannelV1TransferEntitlementsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":transferEntitlements";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Transfers customer entitlements from their current reseller to Google. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The response will contain google.protobuf.Empty on success. The Operation metadata will contain an instance of OperationMetadata.
		/// Cloudchannel_accounts_customers_transferEntitlementsToGoogle v1/{parent}:transferEntitlementsToGoogle
		/// </summary>
		/// <param name="parent">Required. The resource name of the reseller's customer account where the entitlements transfer from. Parent uses the format: accounts/{account_id}/customers/{customer_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Cloudchannel_accounts_customers_transferEntitlementsToGoogleAsync(string parent, GoogleCloudChannelV1TransferEntitlementsToGoogleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":transferEntitlementsToGoogle";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves data generated by CloudChannelReportsService.RunReportJob. Deprecated: Please use [Export Channel Services data to BigQuery](https://cloud.google.com/channel/docs/rebilling/export-data-to-bigquery) instead.
		/// Cloudchannel_accounts_reportJobs_fetchReportResults v1/{reportJob}:fetchReportResults
		/// </summary>
		/// <param name="reportJob">Required. The report job created by CloudChannelReportsService.RunReportJob. Report_job uses the format: accounts/{account_id}/reportJobs/{report_job_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudChannelV1FetchReportResultsResponse> Cloudchannel_accounts_reportJobs_fetchReportResultsAsync(string reportJob, GoogleCloudChannelV1FetchReportResultsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (reportJob==null? "" : System.Uri.EscapeDataString(reportJob))+":fetchReportResults";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudChannelV1FetchReportResultsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum Cloudchannel_accounts_customers_listPurchasableSkusChangeOfferPurchase_changeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPGRADE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOWNGRADE = 2,
	}
	
	public enum Cloudchannel_operations_listFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Api
	{
		
		/// <summary>
		/// Link to the API reference of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api_reference_url")]
		public string Api_reference_url { get; set; }
		
		/// <summary>
		/// List of categories the API belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public string[] Categories { get; set; }
		
		/// <summary>
		/// Description of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// List of event types this API supports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public string[] Events { get; set; }
		
		/// <summary>
		/// ID of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// ID of the Postman collection of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postman_collection_id")]
		public string Postman_collection_id { get; set; }
		
		/// <summary>
		/// List of resources supported in this API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public ApiResources[] ApiResources { get; set; }
		
		/// <summary>
		/// Link to the latest OpenAPI specification of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spec_url")]
		public string Spec_url { get; set; }
		
		/// <summary>
		/// Status of the API. APIs with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ApiStatus> Status { get; set; }
		
		/// <summary>
		/// Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ApiType> Type { get; set; }
	}
	
	public class ApiResources
	{
		
		/// <summary>
		/// Exclude from mapping coverage
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excluded_from_coverage")]
		public System.Nullable<System.Boolean> Excluded_from_coverage { get; set; }
		
		/// <summary>
		/// ID of the resource, typically a lowercased version of its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the resource (plural)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Status of the resource. Resources with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ApiResourcesStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ApiResourcesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		live = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		beta = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		development = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		upcoming = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		considering = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ApiStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		live = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		beta = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		development = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		considering = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ApiType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		platform = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unified = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ApiResource
	{
		
		/// <summary>
		/// ID of the resource, typically a lowercased version of name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// List of linked resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linked_resources")]
		public ApiResourceLinked_resources[] ApiResourceLinked_resources { get; set; }
		
		/// <summary>
		/// Name of the resource (plural)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// JSON Schema of the resource in our Unified API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// Status of the resource. Resources with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiResourcesStatus Status { get; set; }
	}
	
	public class ApiResourceLinked_resources
	{
		
		/// <summary>
		/// ID of the resource, typically a lowercased version of name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the property in our Unified API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unified_property")]
		public string Unified_property { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ApiResourceCoverage
	{
		
		[System.Runtime.Serialization.DataMember(Name="coverage")]
		public ApiResourceCoverageCoverage[] ApiResourceCoverageCoverage { get; set; }
		
		/// <summary>
		/// ID of the resource, typically a lowercased version of name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the resource (plural)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Status of the resource. Resources with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiResourcesStatus Status { get; set; }
	}
	
	public class ApiResourceCoverageCoverage
	{
		
		/// <summary>
		/// ID of the resource in the Connector's API (downstream)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// Name of the resource in the Connector's API (downstream)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_name")]
		public string Downstream_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pagination")]
		public PaginationCoverage Pagination { get; set; }
		
		/// <summary>
		/// Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pagination_supported")]
		public System.Nullable<System.Boolean> Pagination_supported { get; set; }
		
		/// <summary>
		/// Supported fields on the detail endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_fields")]
		public SupportedProperty[] Supported_fields { get; set; }
		
		/// <summary>
		/// Supported filters on the list endpoint of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_filters")]
		public string[] Supported_filters { get; set; }
		
		/// <summary>
		/// Supported fields on the list endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_list_fields")]
		public SupportedProperty[] Supported_list_fields { get; set; }
		
		/// <summary>
		/// List of supported operations on the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_operations")]
		public string[] Supported_operations { get; set; }
		
		/// <summary>
		/// Supported sorting properties on the list endpoint of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_sort_by")]
		public string[] Supported_sort_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaginationCoverage
	{
		
		/// <summary>
		/// Indicates whether the connector supports changing the page size by using the limit parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit_support")]
		public System.Nullable<System.Boolean> Limit_support { get; set; }
		
		/// <summary>
		/// How pagination is implemented on this connector. Native mode means Apideck is using the pagination parameters of the connector. With virtual pagination, the connector does not support pagination, but Apideck emulates it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public System.Nullable<PaginationCoverageMode> Mode { get; set; }
		
		/// <summary>
		/// Indicates whether the connector supports paging through results using the cursor parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paging_support")]
		public System.Nullable<System.Boolean> Paging_support { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PaginationCoverageMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		native = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="virtual")]
		_virtual = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SupportedProperty
	{
		
		/// <summary>
		/// List of child properties of the unified property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="child_properties")]
		public SupportedPropertyChild_properties[] SupportedPropertyChild_properties { get; set; }
		
		/// <summary>
		/// Name of the property in our Unified API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unified_property")]
		public string Unified_property { get; set; }
	}
	
	public class SupportedPropertyChild_properties
	{
		
		[System.Runtime.Serialization.DataMember(Name="unified_property")]
		public SupportedProperty Unified_property { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ApisFilter
	{
		
		/// <summary>
		/// Status of the API. APIs with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BadRequestResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Connector
	{
		
		/// <summary>
		/// Indicates whether a connector only supports authentication. In this case the connector is not mapped to a Unified API, but can be used with the Proxy API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth_only")]
		public System.Nullable<System.Boolean> Auth_only { get; set; }
		
		/// <summary>
		/// Type of authorization used by the connector
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth_type")]
		public System.Nullable<ConnectorAuth_type> Auth_type { get; set; }
		
		/// <summary>
		/// Set to `true` when connector was implemented from downstream docs only and without API access. This state indicates that integration will require Apideck support, and access to downstream API to validate mapping quality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blind_mapped")]
		public System.Nullable<System.Boolean> Blind_mapped { get; set; }
		
		/// <summary>
		/// List of resources that have settings that can be configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurable_resources")]
		public string[] Configurable_resources { get; set; }
		
		/// <summary>
		/// Set to `true` when connector allows the definition of custom scopes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_scopes")]
		public System.Nullable<System.Boolean> Custom_scopes { get; set; }
		
		/// <summary>
		/// A description of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="docs")]
		public ConnectorDoc[] Docs { get; set; }
		
		/// <summary>
		/// Set to `true` when the connector offers a free trial. Use `signup_url` to sign up for a free trial
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="free_trial_available")]
		public System.Nullable<System.Boolean> Free_trial_available { get; set; }
		
		/// <summary>
		/// Indicates whether Apideck Sandbox OAuth credentials are available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_sandbox_credentials")]
		public System.Nullable<System.Boolean> Has_sandbox_credentials { get; set; }
		
		/// <summary>
		/// Link to a small square icon for the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="icon_url")]
		public string Icon_url { get; set; }
		
		/// <summary>
		/// ID of the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Link to the full logo for the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// Name of the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Location of the OAuth client credentials. For most connectors the OAuth client credentials are stored on integration and managed by the application owner. For others they are stored on connection and managed by the consumer in Vault.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oauth_credentials_source")]
		public System.Nullable<ConnectorOauth_credentials_source> Oauth_credentials_source { get; set; }
		
		/// <summary>
		/// OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oauth_grant_type")]
		public System.Nullable<ConnectorOauth_grant_type> Oauth_grant_type { get; set; }
		
		/// <summary>
		/// List of OAuth Scopes available for this connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oauth_scopes")]
		public ConnectorOauth_scopes[] ConnectorOauth_scopes { get; set; }
		
		/// <summary>
		/// Link to the connector's partner program signup page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partner_signup_url")]
		public string Partner_signup_url { get; set; }
		
		/// <summary>
		/// When a connector has schema_support, a call can be made to retrieve a json schema that describes a downstream resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema_support")]
		public SchemaSupport Schema_support { get; set; }
		
		/// <summary>
		/// Service provider identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_id")]
		public string Service_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public ConnectorSetting[] Settings { get; set; }
		
		/// <summary>
		/// Link to the connector's signup page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signup_url")]
		public string Signup_url { get; set; }
		
		/// <summary>
		/// Status of the connector. Connectors with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiStatus Status { get; set; }
		
		/// <summary>
		/// List of events that are supported on the connector across all Unified APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_events")]
		public ConnectorEvent[] Supported_events { get; set; }
		
		/// <summary>
		/// List of resources that are supported on the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_resources")]
		public LinkedConnectorResource[] Supported_resources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tls_support")]
		public ConnectorTls_support Tls_support { get; set; }
		
		/// <summary>
		/// List of Unified APIs that feature this connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unified_apis")]
		public ConnectorUnified_apis[] ConnectorUnified_apis { get; set; }
		
		/// <summary>
		/// How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_support")]
		public WebhookSupport Webhook_support { get; set; }
		
		/// <summary>
		/// Link to the connector's website.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website_url")]
		public string Website_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorAuth_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oauth2 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		apiKey = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		basic = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorDoc
	{
		
		/// <summary>
		/// Audience for the doc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audience")]
		public System.Nullable<ConnectorDocAudience> Audience { get; set; }
		
		/// <summary>
		/// Format of the doc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public System.Nullable<ConnectorDocFormat> Format { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the doc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Link to fetch the content of the doc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorDocAudience
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		application_owner = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consumer = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorDocFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		markdown = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorOauth_credentials_source
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		integration = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		connection = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorOauth_grant_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authorization_code = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		client_credentials = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		password = 2,
	}
	
	public class ConnectorOauth_scopes
	{
		
		/// <summary>
		/// List of Unified APIs that request this OAuth Scope by default. Application owners can customize the requested scopes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_apis")]
		public string[] Default_apis { get; set; }
		
		/// <summary>
		/// ID of the OAuth scope.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Label of the OAuth scope.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
	}
	
	/// <summary>
	/// When a connector has schema_support, a call can be made to retrieve a json schema that describes a downstream resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SchemaSupport
	{
		
		/// <summary>
		/// Can a resource schema be retrieved for this connector?
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported")]
		public System.Nullable<System.Boolean> Supported { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorSetting
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ConnectorSettingType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorSettingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checkbox = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tel = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		url = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		textarea = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		select = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="filtered-select")]
		filteredMinusselect = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="multi-select")]
		multiMinusselect = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		datetime = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		time = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		number = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		password = 13,
	}
	
	/// <summary>
	/// Unify event that is supported on the connector. Events are delivered via Webhooks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorEvent
	{
		
		/// <summary>
		/// Downstream event type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_event_type")]
		public string Downstream_event_type { get; set; }
		
		/// <summary>
		/// Unify entity type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity_type")]
		public string Entity_type { get; set; }
		
		/// <summary>
		/// Unify event source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_source")]
		public System.Nullable<ConnectorEventEvent_source> Event_source { get; set; }
		
		/// <summary>
		/// Unify event type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_type")]
		public string Event_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public string[] Resources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorEventEvent_source
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		native = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="virtual")]
		_virtual = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LinkedConnectorResource
	{
		
		/// <summary>
		/// ID of the resource in the Connector's API (downstream)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// Name of the resource in the Connector's API (downstream)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_name")]
		public string Downstream_name { get; set; }
		
		/// <summary>
		/// ID of the resource, typically a lowercased version of name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the resource (plural)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Status of the resource. Resources with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiResourcesStatus Status { get; set; }
	}
	
	public class ConnectorTls_support
	{
		
		/// <summary>
		/// Description of the TLS support
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ConnectorUnified_apis
	{
		
		/// <summary>
		/// Indicates whether a connector only supports authentication. In this case the connector is not mapped to a Unified API, but can be used with the Proxy API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth_only")]
		public System.Nullable<System.Boolean> Auth_only { get; set; }
		
		/// <summary>
		/// List of resources that are not supported on the downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_unsupported_resources")]
		public string[] Downstream_unsupported_resources { get; set; }
		
		/// <summary>
		/// Name of Apideck Unified API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<ConnectorUnified_apisId> Id { get; set; }
		
		/// <summary>
		/// Name of the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="oauth_scopes")]
		public ConnectorUnified_apisOauth_scopes[] ConnectorUnified_apisOauth_scopes { get; set; }
		
		/// <summary>
		/// List of events that are supported on the connector for this Unified API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_events")]
		public ConnectorEvent[] Supported_events { get; set; }
		
		/// <summary>
		/// List of resources that are supported on the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_resources")]
		public LinkedConnectorResource[] Supported_resources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorUnified_apisId
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ats = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		calendar = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		crm = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		csp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="customer-support")]
		customerMinussupport = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecommerce = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-marketing")]
		emailMinusmarketing = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="expense-management")]
		expenseMinusmanagement = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="file-storage")]
		fileMinusstorage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		form = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hris = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lead = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pos = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		procurement = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="project-management")]
		projectMinusmanagement = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		script = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		spreadsheet = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="team-messaging")]
		teamMinusmessaging = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking")]
		issueMinustracking = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="time-registration")]
		timeMinusregistration = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="transactional-email")]
		transactionalMinusemail = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vault = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="data-warehouse")]
		dataMinuswarehouse = 26,
	}
	
	public class ConnectorUnified_apisOauth_scopes
	{
		
		/// <summary>
		/// ID of the OAuth scope.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Label of the OAuth scope.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
	}
	
	/// <summary>
	/// How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WebhookSupport
	{
		
		/// <summary>
		/// How the subscription is managed in the downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managed_via")]
		public System.Nullable<WebhookSupportManaged_via> Managed_via { get; set; }
		
		/// <summary>
		/// Mode of the webhook support.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public System.Nullable<WebhookSupportMode> Mode { get; set; }
		
		/// <summary>
		/// Received events are scoped to connection or across integration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscription_level")]
		public System.Nullable<WebhookSupportSubscription_level> Subscription_level { get; set; }
		
		/// <summary>
		/// Virtual webhook config for the connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtual_webhooks")]
		public WebhookSupportVirtual_webhooks Virtual_webhooks { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum WebhookSupportManaged_via
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manual = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum WebhookSupportMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		native = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="virtual")]
		_virtual = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum WebhookSupportSubscription_level
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		connection = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		integration = 1,
	}
	
	public class WebhookSupportVirtual_webhooks
	{
		
		/// <summary>
		/// The rate at which requests for resources will be made to downstream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_rate")]
		public WebhookSupportVirtual_webhooksRequest_rate Request_rate { get; set; }
		
		/// <summary>
		/// The resources that will be requested from downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public string Resources { get; set; }
	}
	
	public class WebhookSupportVirtual_webhooksRequest_rate
	{
		
		/// <summary>
		/// The number of requests per window unit.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public int Rate { get; set; }
		
		/// <summary>
		/// Size of request window.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="size")]
		public int Size { get; set; }
		
		/// <summary>
		/// The window unit for the rate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public WebhookSupportVirtual_webhooksRequest_rateUnit Unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum WebhookSupportVirtual_webhooksRequest_rateUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		second = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		minute = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hour = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		day = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorResource
	{
		
		/// <summary>
		/// Indicates if custom fields are supported on this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_fields_supported")]
		public System.Nullable<System.Boolean> Custom_fields_supported { get; set; }
		
		/// <summary>
		/// ID of the resource in the Connector's API (downstream)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// Name of the resource in the Connector's API (downstream)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_name")]
		public string Downstream_name { get; set; }
		
		/// <summary>
		/// List of operations that are not supported on the downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_unsupported_operations")]
		public string[] Downstream_unsupported_operations { get; set; }
		
		/// <summary>
		/// ID of the resource, typically a lowercased version of name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the resource (plural)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pagination")]
		public PaginationCoverage Pagination { get; set; }
		
		/// <summary>
		/// Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pagination_supported")]
		public System.Nullable<System.Boolean> Pagination_supported { get; set; }
		
		/// <summary>
		/// Status of the resource. Resources with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiResourcesStatus Status { get; set; }
		
		/// <summary>
		/// Supported fields on the detail endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_fields")]
		public SupportedProperty[] Supported_fields { get; set; }
		
		/// <summary>
		/// Supported filters on the list endpoint of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_filters")]
		public string[] Supported_filters { get; set; }
		
		/// <summary>
		/// Supported fields on the list endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_list_fields")]
		public SupportedProperty[] Supported_list_fields { get; set; }
		
		/// <summary>
		/// List of supported operations on the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_operations")]
		public string[] Supported_operations { get; set; }
		
		/// <summary>
		/// Supported sorting properties on the list endpoint of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supported_sort_by")]
		public string[] Supported_sort_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorResourceExample
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorResourceSchema
	{
	}
	
	/// <summary>
	/// Status of the connector. Connectors with status live or beta are callable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		live = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		beta = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		development = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		considering = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorsFilter
	{
		
		/// <summary>
		/// Status of the connector. Connectors with status live or beta are callable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ApiStatus Status { get; set; }
		
		/// <summary>
		/// Name of Apideck Unified API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unified_api")]
		public System.Nullable<ConnectorsFilterUnified_api> Unified_api { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ConnectorsFilterUnified_api
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ats = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		calendar = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		crm = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		csp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="customer-support")]
		customerMinussupport = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecommerce = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-marketing")]
		emailMinusmarketing = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="expense-management")]
		expenseMinusmanagement = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="file-storage")]
		fileMinusstorage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		form = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hris = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lead = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pos = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		procurement = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="project-management")]
		projectMinusmanagement = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		script = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		spreadsheet = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="team-messaging")]
		teamMinusmessaging = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking")]
		issueMinustracking = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="time-registration")]
		timeMinusregistration = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="transactional-email")]
		transactionalMinusemail = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vault = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="data-warehouse")]
		dataMinuswarehouse = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetApiResourceCoverageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ApiResourceCoverage Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Links to navigate to previous or next pages through the API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Links
	{
		
		/// <summary>
		/// Link to navigate to the current page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	/// <summary>
	/// Response metadata
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Meta
	{
		
		/// <summary>
		/// Cursors to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursors")]
		public MetaCursors Cursors { get; set; }
		
		/// <summary>
		/// Number of items returned in the data property of the response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items_on_page")]
		public System.Nullable<System.Int32> Items_on_page { get; set; }
	}
	
	public class MetaCursors
	{
		
		/// <summary>
		/// Cursor to navigate to the current page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the next page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the previous page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetApiResourceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ApiResource Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetApiResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Api Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetApisResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Api[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetConnectorResourceExampleResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GetConnectorResourceExampleResponseData Data { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	public class GetConnectorResourceExampleResponseData
	{
		
		[System.Runtime.Serialization.DataMember(Name="example_response")]
		public ConnectorResourceExample Example_response { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public LinkedConnectorResource Resource { get; set; }
		
		/// <summary>
		/// Service provider identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_id")]
		public string Service_id { get; set; }
		
		/// <summary>
		/// Name of Apideck Unified API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unified_api")]
		public System.Nullable<GetConnectorResourceExampleResponseDataUnified_api> Unified_api { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GetConnectorResourceExampleResponseDataUnified_api
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ats = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		calendar = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		crm = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		csp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="customer-support")]
		customerMinussupport = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecommerce = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-marketing")]
		emailMinusmarketing = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="expense-management")]
		expenseMinusmanagement = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="file-storage")]
		fileMinusstorage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		form = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hris = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lead = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pos = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		procurement = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="project-management")]
		projectMinusmanagement = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		script = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		spreadsheet = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="team-messaging")]
		teamMinusmessaging = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking")]
		issueMinustracking = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="time-registration")]
		timeMinusregistration = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="transactional-email")]
		transactionalMinusemail = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vault = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="data-warehouse")]
		dataMinuswarehouse = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetConnectorResourceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ConnectorResource Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetConnectorResourceSchemaResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ConnectorResourceSchema Data { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetConnectorResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Connector Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetConnectorsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Connector[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotFoundResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentRequiredResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	/// <summary>
	/// Status of the resource. Resources with status live or beta are callable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		live = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		beta = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		development = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		upcoming = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		considering = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TooManyRequestsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public TooManyRequestsResponseDetail Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	public class TooManyRequestsResponseDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnauthorizedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnexpectedErrorResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	/// <summary>
	/// Name of Apideck Unified API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum UnifiedApiId
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ats = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		calendar = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		crm = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		csp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="customer-support")]
		customerMinussupport = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecommerce = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-marketing")]
		emailMinusmarketing = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="expense-management")]
		expenseMinusmanagement = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="file-storage")]
		fileMinusstorage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		form = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hris = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lead = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pos = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		procurement = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="project-management")]
		projectMinusmanagement = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		script = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		spreadsheet = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="team-messaging")]
		teamMinusmessaging = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking")]
		issueMinustracking = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="time-registration")]
		timeMinusregistration = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="transactional-email")]
		transactionalMinusemail = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vault = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="data-warehouse")]
		dataMinuswarehouse = 26,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List APIs
		/// List APIs
		/// ApisAll connector/apis
		/// </summary>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20</param>
		/// <param name="filter">Apply filters</param>
		/// <returns>Apis</returns>
		public async Task<GetApisResponse> ApisAllAsync(string cursor, int limit, ApisFilter filter, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/apis?cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetApisResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get API
		/// Get API
		/// ApisOne connector/apis/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <returns>Apis</returns>
		public async Task<GetApiResponse> ApisOneAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/apis/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetApiResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get API Resource
		/// Get API Resource
		/// ApiResourcesOne connector/apis/{id}/resources/{resource_id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="resource_id">ID of the resource you are acting upon.</param>
		/// <returns>ApiResources</returns>
		public async Task<GetApiResourceResponse> ApiResourcesOneAsync(string id, string resource_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/apis/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/resources/"+ (resource_id==null? "" : System.Uri.EscapeDataString(resource_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetApiResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get API Resource Coverage
		/// Get API Resource Coverage
		/// ApiResourceCoverageOne connector/apis/{id}/resources/{resource_id}/coverage
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="resource_id">ID of the resource you are acting upon.</param>
		/// <returns>ApiResources</returns>
		public async Task<GetApiResourceCoverageResponse> ApiResourceCoverageOneAsync(string id, string resource_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/apis/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/resources/"+ (resource_id==null? "" : System.Uri.EscapeDataString(resource_id))+"/coverage";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetApiResourceCoverageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Connectors
		/// List Connectors
		/// ConnectorsAll connector/connectors
		/// </summary>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20</param>
		/// <param name="filter">Apply filters</param>
		/// <returns>Connectors</returns>
		public async Task<GetConnectorsResponse> ConnectorsAllAsync(string cursor, int limit, ConnectorsFilter filter, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/connectors?cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetConnectorsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Connector
		/// Get Connector
		/// ConnectorsOne connector/connectors/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <returns>Connectors</returns>
		public async Task<GetConnectorResponse> ConnectorsOneAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/connectors/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetConnectorResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Connector Doc content
		/// Get Connector Doc content
		/// ConnectorDocsOne connector/connectors/{id}/docs/{doc_id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="doc_id">ID of the Doc</param>
		/// <returns>Connectors</returns>
		public async Task ConnectorDocsOneAsync(string id, string doc_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/connectors/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/docs/"+ (doc_id==null? "" : System.Uri.EscapeDataString(doc_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Connector Resource
		/// Get Connector Resource
		/// ConnectorResourcesOne connector/connectors/{id}/resources/{resource_id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="resource_id">ID of the resource you are acting upon.</param>
		/// <param name="unified_api">Specify unified API for the connector resource. This is useful when a resource appears in multiple APIs</param>
		/// <returns>ConnectorResources</returns>
		public async Task<GetConnectorResourceResponse> ConnectorResourcesOneAsync(string id, string resource_id, UnifiedApiId unified_api, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/connectors/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/resources/"+ (resource_id==null? "" : System.Uri.EscapeDataString(resource_id))+"&unified_api=" + unified_api;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetConnectorResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Connector Resource Example
		/// Get Connector Resource Example
		/// ConnectorResourcesExample connector/connectors/{id}/resources/{resource_id}/unified_api/{api_id}/example
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="resource_id">ID of the resource you are acting upon.</param>
		/// <param name="api_id">ID of the Unified API</param>
		/// <returns>Connector Resource Example</returns>
		public async Task<GetConnectorResourceExampleResponse> ConnectorResourcesExampleAsync(string id, string resource_id, string api_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/connectors/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/resources/"+ (resource_id==null? "" : System.Uri.EscapeDataString(resource_id))+"/unified_api/"+ (api_id==null? "" : System.Uri.EscapeDataString(api_id))+"/example";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetConnectorResourceExampleResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Connector Resource Schema
		/// Get Connector Resource Schema
		/// ConnectorResourcesSchema connector/connectors/{id}/resources/{resource_id}/unified_api/{api_id}/schema
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="resource_id">ID of the resource you are acting upon.</param>
		/// <param name="api_id">ID of the Unified API</param>
		/// <returns>Connector Resource Schema</returns>
		public async Task<GetConnectorResourceSchemaResponse> ConnectorResourcesSchemaAsync(string id, string resource_id, string api_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connector/connectors/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/resources/"+ (resource_id==null? "" : System.Uri.EscapeDataString(resource_id))+"/unified_api/"+ (api_id==null? "" : System.Uri.EscapeDataString(api_id))+"/schema";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetConnectorResourceSchemaResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The request message for Operations.CancelOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelOperationRequest
	{
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// LINT.IfChange Message describing Evaluation object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Evaluation
	{
		
		/// <summary>
		/// Output only. [Output only] Create time stamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The Cloud Storage bucket name for custom rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customRulesBucket")]
		public string CustomRulesBucket { get; set; }
		
		/// <summary>
		/// Description of the Evaluation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Labels as key value pairs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// name of resource names have the form 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Message describing resource filters
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFilter")]
		public ResourceFilter ResourceFilter { get; set; }
		
		/// <summary>
		/// Message describing resource status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceStatus")]
		public ResourceStatus ResourceStatus { get; set; }
		
		/// <summary>
		/// the name of the rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleNames")]
		public string[] RuleNames { get; set; }
		
		/// <summary>
		/// Output only. [Output only] The updated rule ids if exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleVersions")]
		public string[] RuleVersions { get; set; }
		
		/// <summary>
		/// crontab format schedule for scheduled evaluation, currently only support the following schedule: "0 */1 * * *", "0 */6 * * *", "0 */12 * * *", "0 0 */1 * *", "0 0 */7 * *",
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public string Schedule { get; set; }
		
		/// <summary>
		/// Output only. [Output only] Update time stamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Message describing resource filters
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceFilter
	{
		
		/// <summary>
		/// Message describing compute engine instance filter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gceInstanceFilter")]
		public GceInstanceFilter GceInstanceFilter { get; set; }
		
		/// <summary>
		/// The label used for filter resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inclusionLabels")]
		public System.Collections.Generic.Dictionary<string, string> InclusionLabels { get; set; }
		
		/// <summary>
		/// The id pattern for filter resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceIdPatterns")]
		public string[] ResourceIdPatterns { get; set; }
		
		/// <summary>
		/// The scopes of evaluation resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
	}
	
	/// <summary>
	/// Message describing compute engine instance filter
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GceInstanceFilter
	{
		
		/// <summary>
		/// Service account of compute engine
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccounts")]
		public string[] ServiceAccounts { get; set; }
	}
	
	/// <summary>
	/// Message describing resource status
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceStatus
	{
		
		/// <summary>
		/// Historical: Used before 2023-05-22 the new version of rule id if exists
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rulesNewerVersions")]
		public string[] RulesNewerVersions { get; set; }
		
		/// <summary>
		/// State of the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<ResourceStatusState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResourceStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
	}
	
	/// <summary>
	/// Message describing Execution object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Execution
	{
		
		/// <summary>
		/// Output only. [Output only] End time stamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. [Output only] Evaluation ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluationId")]
		public string EvaluationId { get; set; }
		
		/// <summary>
		/// Output only. [Output only] Inventory time stamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventoryTime")]
		public string InventoryTime { get; set; }
		
		/// <summary>
		/// Labels as key value pairs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The name of execution resource. The format is projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// type represent whether the execution executed directly by user or scheduled according evaluation.schedule field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runType")]
		public System.Nullable<ExecutionRunType> RunType { get; set; }
		
		/// <summary>
		/// Output only. [Output only] Start time stamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. [Output only] State
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<ExecutionState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExecutionRunType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExecutionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Message describing the result of an execution
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecutionResult
	{
		
		/// <summary>
		/// the document url of the rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentationUrl")]
		public string DocumentationUrl { get; set; }
		
		/// <summary>
		/// Message represent resource in execution result
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public Resource Resource { get; set; }
		
		/// <summary>
		/// the rule which violate in execution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rule")]
		public string Rule { get; set; }
		
		/// <summary>
		/// severity of violation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public string Severity { get; set; }
		
		/// <summary>
		/// Message describing the violdation in execution result
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="violationDetails")]
		public ViolationDetails ViolationDetails { get; set; }
		
		/// <summary>
		/// the violation message of an execution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="violationMessage")]
		public string ViolationMessage { get; set; }
	}
	
	/// <summary>
	/// Message represent resource in execution result
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Resource
	{
		
		/// <summary>
		/// the name of the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// the service account accosiate with resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// the type of reresource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Message describing the violdation in execution result
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ViolationDetails
	{
		
		/// <summary>
		/// the name of asset
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset")]
		public string Asset { get; set; }
		
		/// <summary>
		/// observed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observed")]
		public System.Collections.Generic.Dictionary<string, string> Observed { get; set; }
		
		/// <summary>
		/// the service account associate with resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
	}
	
	/// <summary>
	/// A presentation of host resource usage where the workload runs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Insight
	{
		
		/// <summary>
		/// Required. The instance id where the insight is generated from
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceId")]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The schema of SAP system discovery data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sapDiscovery")]
		public SapDiscovery SapDiscovery { get; set; }
		
		/// <summary>
		/// A presentation of SAP workload insight. The schema of SAP workloads validation related data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sapValidation")]
		public SapValidation SapValidation { get; set; }
		
		/// <summary>
		/// Output only. [Output only] Create time stamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentTime")]
		public string SentTime { get; set; }
		
		/// <summary>
		/// A presentation of SQLServer workload insight. The schema of SqlServer workloads validation related data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlserverValidation")]
		public SqlserverValidation SqlserverValidation { get; set; }
	}
	
	/// <summary>
	/// The schema of SAP system discovery data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscovery
	{
		
		/// <summary>
		/// Message describing the system component.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationLayer")]
		public SapDiscoveryComponent ApplicationLayer { get; set; }
		
		/// <summary>
		/// Message describing the system component.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseLayer")]
		public SapDiscoveryComponent DatabaseLayer { get; set; }
		
		/// <summary>
		/// Message describing SAP discovery system metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public SapDiscoveryMetadata Metadata { get; set; }
		
		/// <summary>
		/// Optional. The GCP project number that this SapSystem belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectNumber")]
		public string ProjectNumber { get; set; }
		
		/// <summary>
		/// Output only. A combination of database SID, database instance URI and tenant DB name to make a unique identifier per-system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="systemId")]
		public string SystemId { get; set; }
		
		/// <summary>
		/// Required. Unix timestamp this system has been updated last.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Message describing the system component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscoveryComponent
	{
		
		/// <summary>
		/// A set of properties describing an SAP Application layer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationProperties")]
		public SapDiscoveryComponentApplicationProperties ApplicationProperties { get; set; }
		
		/// <summary>
		/// A set of properties describing an SAP Database layer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseProperties")]
		public SapDiscoveryComponentDatabaseProperties DatabaseProperties { get; set; }
		
		/// <summary>
		/// Optional. A list of host URIs that are part of the HA configuration if present. An empty list indicates the component is not configured for HA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="haHosts")]
		public string[] HaHosts { get; set; }
		
		/// <summary>
		/// Required. Pantheon Project in which the resources reside.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostProject")]
		public string HostProject { get; set; }
		
		/// <summary>
		/// Optional. The resources in a component.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public SapDiscoveryResource[] Resources { get; set; }
		
		/// <summary>
		/// Optional. The SAP identifier, used by the SAP software and helps differentiate systems for customers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		/// <summary>
		/// Optional. The detected topology of the component.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topologyType")]
		public System.Nullable<SapDiscoveryComponentTopologyType> TopologyType { get; set; }
	}
	
	/// <summary>
	/// A set of properties describing an SAP Application layer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscoveryComponentApplicationProperties
	{
		
		/// <summary>
		/// Optional. Indicates whether this is a Java or ABAP Netweaver instance. true means it is ABAP, false means it is Java.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abap")]
		public System.Nullable<System.Boolean> Abap { get; set; }
		
		/// <summary>
		/// Required. Type of the application. Netweaver, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationType")]
		public System.Nullable<SapDiscoveryComponentApplicationPropertiesApplicationType> ApplicationType { get; set; }
		
		/// <summary>
		/// Optional. Resource URI of the recognized ASCS host of the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ascsUri")]
		public string AscsUri { get; set; }
		
		/// <summary>
		/// Optional. Kernel version for Netweaver running in the system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kernelVersion")]
		public string KernelVersion { get; set; }
		
		/// <summary>
		/// Optional. Resource URI of the recognized shared NFS of the application. May be empty if the application server has only a single node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nfsUri")]
		public string NfsUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SapDiscoveryComponentApplicationPropertiesApplicationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWEAVER = 1,
	}
	
	/// <summary>
	/// A set of properties describing an SAP Database layer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscoveryComponentDatabaseProperties
	{
		
		/// <summary>
		/// Required. Type of the database. HANA, DB2, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseType")]
		public System.Nullable<SapDiscoveryComponentDatabasePropertiesDatabaseType> DatabaseType { get; set; }
		
		/// <summary>
		/// Optional. The version of the database software running in the system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseVersion")]
		public string DatabaseVersion { get; set; }
		
		/// <summary>
		/// Required. URI of the recognized primary instance of the database.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryInstanceUri")]
		public string PrimaryInstanceUri { get; set; }
		
		/// <summary>
		/// Optional. URI of the recognized shared NFS of the database. May be empty if the database has only a single node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedNfsUri")]
		public string SharedNfsUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SapDiscoveryComponentDatabasePropertiesDatabaseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX_DB = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB2 = 3,
	}
	
	/// <summary>
	/// Message describing a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscoveryResource
	{
		
		/// <summary>
		/// A set of properties only present for an instance type resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceProperties")]
		public SapDiscoveryResourceInstanceProperties InstanceProperties { get; set; }
		
		/// <summary>
		/// Optional. A list of resource URIs related to this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedResources")]
		public string[] RelatedResources { get; set; }
		
		/// <summary>
		/// Required. ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceKind")]
		public System.Nullable<SapDiscoveryResourceResourceKind> ResourceKind { get; set; }
		
		/// <summary>
		/// Required. The type of this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public System.Nullable<SapDiscoveryResourceResourceType> ResourceType { get; set; }
		
		/// <summary>
		/// Required. URI of the resource, includes project, location, and name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceUri")]
		public string ResourceUri { get; set; }
		
		/// <summary>
		/// Required. Unix timestamp of when this resource last had its discovery data updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A set of properties only present for an instance type resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscoveryResourceInstanceProperties
	{
		
		/// <summary>
		/// Optional. A list of instance URIs that are part of a cluster with this one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterInstances")]
		public string[] ClusterInstances { get; set; }
		
		/// <summary>
		/// Optional. A virtual hostname of the instance if it has one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualHostname")]
		public string VirtualHostname { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SapDiscoveryResourceResourceKind
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_INSTANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_DISK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_ADDRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_FILESTORE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_HEALTH_CHECK = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_FORWARDING_RULE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_BACKEND_SERVICE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_SUBNETWORK = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_NETWORK = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_PUBLIC_ADDRESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_KIND_INSTANCE_GROUP = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SapDiscoveryResourceResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_TYPE_COMPUTE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_TYPE_STORAGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_TYPE_NETWORK = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SapDiscoveryComponentTopologyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOPOLOGY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOPOLOGY_SCALE_UP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOPOLOGY_SCALE_OUT = 2,
	}
	
	/// <summary>
	/// Message describing SAP discovery system metadata
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapDiscoveryMetadata
	{
		
		/// <summary>
		/// Optional. Customer region string for customer's use. Does not represent GCP region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerRegion")]
		public string CustomerRegion { get; set; }
		
		/// <summary>
		/// Optional. Customer defined, something like "E-commerce pre prod"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="definedSystem")]
		public string DefinedSystem { get; set; }
		
		/// <summary>
		/// Optional. Should be "prod", "QA", "dev", "staging", etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentType")]
		public string EnvironmentType { get; set; }
		
		/// <summary>
		/// Optional. This SAP product name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sapProduct")]
		public string SapProduct { get; set; }
	}
	
	/// <summary>
	/// A presentation of SAP workload insight. The schema of SAP workloads validation related data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapValidation
	{
		
		/// <summary>
		/// Required. The project_id of the cloud project that the Insight data comes from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Optional. A list of SAP validation metrics data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationDetails")]
		public SapValidationValidationDetail[] ValidationDetails { get; set; }
		
		/// <summary>
		/// Optional. The zone of the instance that the Insight data comes from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public string Zone { get; set; }
	}
	
	/// <summary>
	/// Message describing the SAP validation metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SapValidationValidationDetail
	{
		
		/// <summary>
		/// Optional. The pairs of metrics data: field name & field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public System.Collections.Generic.Dictionary<string, string> Details { get; set; }
		
		/// <summary>
		/// Optional. Was there a SAP system detected for this validation type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isPresent")]
		public System.Nullable<System.Boolean> IsPresent { get; set; }
		
		/// <summary>
		/// Optional. The SAP system that the validation data is from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sapValidationType")]
		public System.Nullable<SapValidationValidationDetailSapValidationType> SapValidationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SapValidationValidationDetailSapValidationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAP_VALIDATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COROSYNC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PACEMAKER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANA = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWEAVER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANA_SECURITY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 7,
	}
	
	/// <summary>
	/// A presentation of SQLServer workload insight. The schema of SqlServer workloads validation related data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlserverValidation
	{
		
		/// <summary>
		/// Optional. The agent version collected this data point
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentVersion")]
		public string AgentVersion { get; set; }
		
		/// <summary>
		/// Required. The instance_name of the instance that the Insight data comes from. According to https://linter.aip.dev/122/name-suffix: field names should not use the _name suffix unless the field would be ambiguous without it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Required. The project_id of the cloud project that the Insight data comes from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Optional. A list of SqlServer validation metrics data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationDetails")]
		public SqlserverValidationValidationDetail[] ValidationDetails { get; set; }
	}
	
	/// <summary>
	/// Message describing the Sqlserver validation metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlserverValidationValidationDetail
	{
		
		/// <summary>
		/// Required. Details wraps map that represents collected data names and values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public SqlserverValidationDetails[] Details { get; set; }
		
		/// <summary>
		/// Optional. The Sqlserver system that the validation data is from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<SqlserverValidationValidationDetailType> Type { get; set; }
	}
	
	/// <summary>
	/// Message containing collected data names and values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlserverValidationDetails
	{
		
		/// <summary>
		/// Required. Collected data is in format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public System.Collections.Generic.Dictionary<string, string> Fields { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SqlserverValidationValidationDetailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQLSERVER_VALIDATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_LOG_DISK_SEPARATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_MAX_PARALLELISM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_CXPACKET_WAITS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_TRANSACTION_LOG_HANDLING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_VIRTUAL_LOG_FILE_COUNT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_BUFFER_POOL_EXTENSION = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_MAX_SERVER_MEMORY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_METRICS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_INDEX_FRAGMENTATION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_TABLE_INDEX_COMPRESSION = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DB_BACKUP_POLICY = 12,
	}
	
	/// <summary>
	/// Message for response to listing Evaluations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEvaluationsResponse
	{
		
		/// <summary>
		/// The list of Evaluation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluations")]
		public Evaluation[] Evaluations { get; set; }
		
		/// <summary>
		/// A token identifying a page of results the server should return.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// Message for response of list execution results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExecutionResultsResponse
	{
		
		/// <summary>
		/// The versions from the specified publisher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionResults")]
		public ExecutionResult[] ExecutionResults { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Message for response to listing Executions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExecutionsResponse
	{
		
		/// <summary>
		/// The list of Execution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public Execution[] Executions { get; set; }
		
		/// <summary>
		/// A token identifying a page of results the server should return.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// The response message for Locations.ListLocations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLocationsResponse
	{
		
		/// <summary>
		/// A list of locations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public Location[] Locations { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A resource that represents a Google Cloud location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Location
	{
		
		/// <summary>
		/// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The canonical id for this location. For example: `"us-east1"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// Service-specific metadata. For example the available capacity at the given location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public Operation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Mesesage of response of list rules
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRulesResponse
	{
		
		/// <summary>
		/// A token identifying a page of results the server should return.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// all rules in response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public Rule[] Rules { get; set; }
	}
	
	/// <summary>
	/// Message represent a rule
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rule
	{
		
		/// <summary>
		/// descrite rule in plain language
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// the name display in UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// the message template for rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
		
		/// <summary>
		/// rule name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// the primary category
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryCategory")]
		public string PrimaryCategory { get; set; }
		
		/// <summary>
		/// the remediation for the rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remediation")]
		public string Remediation { get; set; }
		
		/// <summary>
		/// Output only. the version of the rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// the secondary category
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secondaryCategory")]
		public string SecondaryCategory { get; set; }
		
		/// <summary>
		/// the severity of the rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public string Severity { get; set; }
		
		/// <summary>
		/// the docuement url for the rule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Message for response to list scanned resources
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListScannedResourcesResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All scanned resources in response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scannedResources")]
		public ScannedResource[] ScannedResources { get; set; }
	}
	
	/// <summary>
	/// Message of scanned resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScannedResource
	{
		
		/// <summary>
		/// resource name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// Represents the metadata of the long-running operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationMetadata
	{
		
		/// <summary>
		/// Output only. API version used to start the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiVersion")]
		public string ApiVersion { get; set; }
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedCancellation")]
		public System.Nullable<System.Boolean> RequestedCancellation { get; set; }
		
		/// <summary>
		/// Output only. Human-readable status of the operation, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusMessage")]
		public string StatusMessage { get; set; }
		
		/// <summary>
		/// Output only. Server-defined resource path for the target of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
		
		/// <summary>
		/// Output only. Name of the verb executed by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verb")]
		public string Verb { get; set; }
	}
	
	/// <summary>
	/// Message for creating a Execution
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunEvaluationRequest
	{
		
		/// <summary>
		/// Message describing Execution object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution")]
		public Execution Execution { get; set; }
		
		/// <summary>
		/// Required. Id of the requesting object If auto-generating Id server-side, remove this field and execution_id from the method_signature of Create RPC
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionId")]
		public string ExecutionId { get; set; }
		
		/// <summary>
		/// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Request for sending the data insights.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteInsightRequest
	{
		
		/// <summary>
		/// A presentation of host resource usage where the workload runs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insight")]
		public Insight Insight { get; set; }
		
		/// <summary>
		/// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The response for write insights request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteInsightResponse
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Write the data insights to workload manager data warehouse.
		/// Workloadmanager_projects_locations_insights_writeInsight v1/{location}/insights:writeInsight
		/// </summary>
		/// <param name="location">Required. The GCP location. The format is: projects/{project}/locations/{location}.</param>
		/// <returns>Successful response</returns>
		public async Task<WriteInsightResponse> Workloadmanager_projects_locations_insights_writeInsightAsync(string location, WriteInsightRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/insights:writeInsight";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WriteInsightResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		/// Workloadmanager_projects_locations_operations_delete v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource to be deleted.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Workloadmanager_projects_locations_operations_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Empty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
		/// Workloadmanager_projects_locations_operations_get v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Workloadmanager_projects_locations_operations_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Operation>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Execution in a given project and location.
		/// Workloadmanager_projects_locations_evaluations_executions_run v1/{name}/executions:run
		/// </summary>
		/// <param name="name">Required. The resource name of the Execution using the form: 'projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}'</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Workloadmanager_projects_locations_evaluations_executions_runAsync(string name, RunEvaluationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/executions:run";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Operation>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists information about the supported locations for this service.
		/// Workloadmanager_projects_locations_list v1/{name}/locations
		/// </summary>
		/// <param name="name">The resource that owns the locations collection, if applicable.</param>
		/// <param name="filter">A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).</param>
		/// <param name="pageSize">The maximum number of results to return. If not set, the service selects a default.</param>
		/// <param name="pageToken">A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<ListLocationsResponse> Workloadmanager_projects_locations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/locations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListLocationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Workloadmanager_projects_locations_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListOperationsResponse> Workloadmanager_projects_locations_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListOperationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Workloadmanager_projects_locations_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Workloadmanager_projects_locations_operations_cancelAsync(string name, CancelOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Empty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Evaluations in a given project and location.
		/// Workloadmanager_projects_locations_evaluations_list v1/{parent}/evaluations
		/// </summary>
		/// <param name="parent">Required. Parent value for ListEvaluationsRequest</param>
		/// <param name="filter">Filtering results</param>
		/// <param name="orderBy">Hint for how to order the results</param>
		/// <param name="pageSize">Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.</param>
		/// <param name="pageToken">A token identifying a page of results the server should return.</param>
		/// <returns>Successful response</returns>
		public async Task<ListEvaluationsResponse> Workloadmanager_projects_locations_evaluations_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/evaluations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEvaluationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Evaluation in a given project and location.
		/// Workloadmanager_projects_locations_evaluations_create v1/{parent}/evaluations
		/// </summary>
		/// <param name="parent">Required. The resource prefix of the evaluation location using the form: `projects/{project_id}/locations/{location_id}`</param>
		/// <param name="evaluationId">Required. Id of the requesting object</param>
		/// <param name="requestId">Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Workloadmanager_projects_locations_evaluations_createAsync(string parent, string evaluationId, string requestId, Evaluation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/evaluations&evaluationId=" + (evaluationId==null? "" : System.Uri.EscapeDataString(evaluationId))+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Operation>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Executions in a given project and location.
		/// Workloadmanager_projects_locations_evaluations_executions_list v1/{parent}/executions
		/// </summary>
		/// <param name="parent">Required. The resource prefix of the Execution using the form: 'projects/{project}/locations/{location}/evaluations/{evaluation}'</param>
		/// <param name="filter">Filtering results</param>
		/// <param name="orderBy">Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.</param>
		/// <param name="pageToken">A token identifying a page of results the server should return.</param>
		/// <returns>Successful response</returns>
		public async Task<ListExecutionsResponse> Workloadmanager_projects_locations_evaluations_executions_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/executions&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListExecutionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the running result of a single Execution.
		/// Workloadmanager_projects_locations_evaluations_executions_results_list v1/{parent}/results
		/// </summary>
		/// <param name="parent">Required. The execution results. Format: {parent}/evaluations/*/executions/*/results</param>
		/// <param name="filter">Filtering results</param>
		/// <param name="pageSize">Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.</param>
		/// <param name="pageToken">A token identifying a page of results the server should return.</param>
		/// <returns>Successful response</returns>
		public async Task<ListExecutionResultsResponse> Workloadmanager_projects_locations_evaluations_executions_results_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/results&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListExecutionResultsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists rules in a given project.
		/// Workloadmanager_projects_locations_rules_list v1/{parent}/rules
		/// </summary>
		/// <param name="parent">Required. The [project] on which to execute the request. The format is: projects/{project_id}/locations/{location} Currently, the pre-defined rules are global available to all projects and all regions</param>
		/// <param name="customRulesBucket">The Cloud Storage bucket name for custom rules.</param>
		/// <param name="filter">Filter based on primary_category, secondary_category</param>
		/// <param name="pageSize">Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.</param>
		/// <param name="pageToken">A token identifying a page of results the server should return.</param>
		/// <returns>Successful response</returns>
		public async Task<ListRulesResponse> Workloadmanager_projects_locations_rules_listAsync(string parent, string customRulesBucket, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/rules&customRulesBucket=" + (customRulesBucket==null? "" : System.Uri.EscapeDataString(customRulesBucket))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRulesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all scanned resources for a single Execution.
		/// Workloadmanager_projects_locations_evaluations_executions_scannedResources_list v1/{parent}/scannedResources
		/// </summary>
		/// <param name="parent">Required. parent for ListScannedResourcesRequest</param>
		/// <param name="filter">Filtering results</param>
		/// <param name="orderBy">Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.</param>
		/// <param name="pageToken">A token identifying a page of results the server should return.</param>
		/// <param name="rule">rule name</param>
		/// <returns>Successful response</returns>
		public async Task<ListScannedResourcesResponse> Workloadmanager_projects_locations_evaluations_executions_scannedResources_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string rule, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/scannedResources&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&rule=" + (rule==null? "" : System.Uri.EscapeDataString(rule));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListScannedResourcesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The response from ListSettings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1ListSettingsResponse
	{
		
		/// <summary>
		/// Unused. A page token used to retrieve the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of settings that are available at the specified Cloud resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GoogleCloudResourcesettingsV1Setting[] Settings { get; set; }
	}
	
	/// <summary>
	/// The schema for settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1Setting
	{
		
		/// <summary>
		/// The data in a setting value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectiveValue")]
		public GoogleCloudResourcesettingsV1Value EffectiveValue { get; set; }
		
		/// <summary>
		/// A fingerprint used for optimistic concurrency. See UpdateSetting for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The data in a setting value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localValue")]
		public GoogleCloudResourcesettingsV1Value LocalValue { get; set; }
		
		/// <summary>
		/// Metadata about a setting which is not editable by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudResourcesettingsV1SettingMetadata Metadata { get; set; }
		
		/// <summary>
		/// The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, "/projects/123/settings/gcp-enableMyFeature"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The data in a setting value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1Value
	{
		
		/// <summary>
		/// Defines this value as being a boolean value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="booleanValue")]
		public System.Nullable<System.Boolean> BooleanValue { get; set; }
		
		/// <summary>
		/// Defines this value as being a Duration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="durationValue")]
		public string DurationValue { get; set; }
		
		/// <summary>
		/// A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enumValue")]
		public GoogleCloudResourcesettingsV1ValueEnumValue EnumValue { get; set; }
		
		/// <summary>
		/// A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringMapValue")]
		public GoogleCloudResourcesettingsV1ValueStringMap StringMapValue { get; set; }
		
		/// <summary>
		/// A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringSetValue")]
		public GoogleCloudResourcesettingsV1ValueStringSet StringSetValue { get; set; }
		
		/// <summary>
		/// Defines this value as being a string value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1ValueEnumValue
	{
		
		/// <summary>
		/// The value of this enum
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1ValueStringMap
	{
		
		/// <summary>
		/// The key-value pairs in the map
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mappings")]
		public System.Collections.Generic.Dictionary<string, string> Mappings { get; set; }
	}
	
	/// <summary>
	/// A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1ValueStringSet
	{
		
		/// <summary>
		/// The strings in the set
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Metadata about a setting which is not editable by the end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudResourcesettingsV1SettingMetadata
	{
		
		/// <summary>
		/// The data type for this setting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataType")]
		public System.Nullable<GoogleCloudResourcesettingsV1SettingMetadataDataType> DataType { get; set; }
		
		/// <summary>
		/// The data in a setting value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public GoogleCloudResourcesettingsV1Value DefaultValue { get; set; }
		
		/// <summary>
		/// A detailed description of what this setting does.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The human readable name for this setting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudResourcesettingsV1SettingMetadataDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING_SET = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENUM_VALUE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DURATION_VALUE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING_MAP = 6,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist.
		/// Resourcesettings_projects_settings_get v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the setting to get. See Setting for naming requirements.</param>
		/// <param name="view">The SettingView for this request.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudResourcesettingsV1Setting> Resourcesettings_projects_settings_getAsync(string name, Resourcesettings_projects_settings_getView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleCloudResourcesettingsV1Setting>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
		/// Resourcesettings_projects_settings_patch v1/{name}
		/// </summary>
		/// <param name="name">The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, "/projects/123/settings/gcp-enableMyFeature"</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudResourcesettingsV1Setting> Resourcesettings_projects_settings_patchAsync(string name, GoogleCloudResourcesettingsV1Setting requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleCloudResourcesettingsV1Setting>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the settings that are available on the Cloud resource `parent`.
		/// Resourcesettings_projects_settings_list v1/{parent}/settings
		/// </summary>
		/// <param name="parent">Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`</param>
		/// <param name="pageSize">Unused. The size of the page to be returned.</param>
		/// <param name="pageToken">Unused. A page token used to retrieve the next page.</param>
		/// <param name="view">The SettingView for this request.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudResourcesettingsV1ListSettingsResponse> Resourcesettings_projects_settings_listAsync(string parent, int pageSize, string pageToken, Resourcesettings_projects_settings_getView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/settings&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleCloudResourcesettingsV1ListSettingsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Resourcesettings_projects_settings_getView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SETTING_VIEW_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SETTING_VIEW_BASIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SETTING_VIEW_EFFECTIVE_VALUE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SETTING_VIEW_LOCAL_VALUE = 3,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

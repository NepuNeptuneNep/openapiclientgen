//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AppClient
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:app-client:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appClientId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:app-client:[a-z0-9-_]+$")]
		public string AppClientId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="callbackUrls")]
		public string[] CallbackUrls { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public string ClientSecret { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^http://localhost.*|^https://.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="defaultLoginUrl")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^http://localhost.*|^https://.*")]
		public string DefaultLoginUrl { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hasSecret")]
		public bool HasSecret { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loginUrls")]
		public string[] LoginUrls { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logoutUrls")]
		public string[] LogoutUrls { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AppClients
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appClients")]
		public AppClientsAppClients1[] AppClientsAppClients1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
	}
	
	public class AppClientsAppClients1
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:app-client:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appClientId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:app-client:[a-z0-9-_]+$")]
		public string AppClientId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="callbackUrls")]
		public string[] CallbackUrls { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public string ClientSecret { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^http://localhost.*|^https://.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="defaultLoginUrl")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^http://localhost.*|^https://.*")]
		public string DefaultLoginUrl { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hasSecret")]
		public bool HasSecret { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loginUrls")]
		public string[] LoginUrls { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logoutUrls")]
		public string[] LogoutUrls { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Asset
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:asset:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:asset:[a-f0-9]{32}$")]
		public string AssetId { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Content { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentMD5")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string ContentMD5 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Assets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public AssetsAssets1[] AssetsAssets1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
	}
	
	public class AssetsAssets1
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:asset:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:asset:[a-f0-9]{32}$")]
		public string AssetId { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Content { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentMD5")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string ContentMD5 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DataBundle
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-data-bundle:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataBundleId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-data-bundle:[a-f0-9]{32}$")]
		public string DataBundleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasets")]
		public DataBundleDatasets[] DataBundleDatasets { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DataBundleStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public string Summary { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	public class DataBundleDatasets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containsPersonallyIdentifiableInformation")]
		public bool ContainsPersonallyIdentifiableInformation { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groundTruthSummary")]
		public string GroundTruthSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfDocuments")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfDocuments { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// Maximum: 1825
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(0, 1825)]
		public int RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storageLocation")]
		public DataBundleDatasetsStorageLocation StorageLocation { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DataBundleDatasetsStorageLocation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EU")]
		EU = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DataBundleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="running")]
		running = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="succeeded")]
		succeeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failed")]
		failed = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DataBundles
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataBundles")]
		public DataBundlesDataBundles1[] DataBundlesDataBundles1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DataBundleStatus[] Status { get; set; }
	}
	
	public class DataBundlesDataBundles1
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-data-bundle:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataBundleId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-data-bundle:[a-f0-9]{32}$")]
		public string DataBundleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasets")]
		public DataBundlesDataBundles1Datasets[] DataBundlesDataBundles1Datasets { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DataBundleStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public string Summary { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	public class DataBundlesDataBundles1Datasets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containsPersonallyIdentifiableInformation")]
		public bool ContainsPersonallyIdentifiableInformation { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groundTruthSummary")]
		public string GroundTruthSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfDocuments")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfDocuments { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// Maximum: 1825
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(0, 1825)]
		public int RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storageLocation")]
		public DataBundleDatasetsStorageLocation StorageLocation { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Dataset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containsPersonallyIdentifiableInformation")]
		public bool ContainsPersonallyIdentifiableInformation { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="groundTruthSummary")]
		public string GroundTruthSummary { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfDocuments")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfDocuments { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// Maximum: 1825
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(0, 1825)]
		public int RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storageLocation")]
		public DataBundleDatasetsStorageLocation StorageLocation { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Datasets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasets")]
		public DatasetsDatasets1[] DatasetsDatasets1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
	}
	
	public class DatasetsDatasets1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containsPersonallyIdentifiableInformation")]
		public bool ContainsPersonallyIdentifiableInformation { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="groundTruthSummary")]
		public string GroundTruthSummary { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfDocuments")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfDocuments { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// Maximum: 1825
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(0, 1825)]
		public int RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storageLocation")]
		public DataBundleDatasetsStorageLocation StorageLocation { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeploymentEnvironment
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentEnvironmentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string DeploymentEnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentUnits")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int ModelDeploymentUnits { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentEnvironmentStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DeploymentEnvironmentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="available")]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unavailable")]
		unavailable = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeploymentEnvironments
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentEnvironments")]
		public DeploymentEnvironmentsDeploymentEnvironments1[] DeploymentEnvironmentsDeploymentEnvironments1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
	}
	
	public class DeploymentEnvironmentsDeploymentEnvironments1
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentEnvironmentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string DeploymentEnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentUnits")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int ModelDeploymentUnits { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentEnvironmentStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Document
	{
		
		/// <summary>
		/// Pattern: ^las:consent:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:consent:[a-f0-9]{32}$")]
		public string ConsentId { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Content { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentMD5")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string ContentMD5 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public DocumentContentType ContentType { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:document:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:document:[a-f0-9]{32}$")]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groundTruth")]
		public DocumentGroundTruth[] DocumentGroundTruth { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DocumentContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="application/pdf")]
		application_pdf = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/jpeg")]
		image_jpeg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/png")]
		image_png = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/tiff")]
		image_tiff = 3,
	}
	
	public class DocumentGroundTruth
	{
		
		/// <summary>
		/// Required
		/// Max length: 36
		/// Min length: 1
		/// Pattern: ^[0-9A-Za-z-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z-_]+$")]
		public string Label { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Documents
	{
		
		[System.Runtime.Serialization.DataMember(Name="consentId")]
		public string[] ConsentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string[] DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public DocumentsDocuments1[] DocumentsDocuments1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<DocumentsOrder> Order { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sortBy")]
		public System.Nullable<DocumentsSortBy> SortBy { get; set; }
	}
	
	public class DocumentsDocuments1
	{
		
		/// <summary>
		/// Pattern: ^las:consent:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:consent:[a-f0-9]{32}$")]
		public string ConsentId { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Content { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentMD5")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string ContentMD5 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public DocumentsDocuments1ContentType ContentType { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:document:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:document:[a-f0-9]{32}$")]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groundTruth")]
		public DocumentsDocuments1GroundTruth[] DocumentsDocuments1GroundTruth { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int RetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DocumentsDocuments1ContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="application/pdf")]
		application_pdf = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/jpeg")]
		image_jpeg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/png")]
		image_png = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/tiff")]
		image_tiff = 3,
	}
	
	public class DocumentsDocuments1GroundTruth
	{
		
		/// <summary>
		/// Required
		/// Max length: 36
		/// Min length: 1
		/// Pattern: ^[0-9A-Za-z-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z-_]+$")]
		public string Label { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DocumentsOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ascending")]
		ascending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="descending")]
		descending = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum DocumentsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="createdTime")]
		createdTime = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Empty
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Error
	{
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Log
	{
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public string[] Events { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string LogId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:transition-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionExecutionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:transition-execution:[a-f0-9]{32}$")]
		public string TransitionExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowExecutionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow-execution:[a-f0-9]{32}$")]
		public string WorkflowExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Logs
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public LogsLogs1[] LogsLogs1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order")]
		public DocumentsOrder Order { get; set; }
		
		/// <summary>
		/// Pattern: ^las:transition-execution:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transitionExecutionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:transition-execution:[a-f0-9]{32}$")]
		public string TransitionExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
		
		/// <summary>
		/// Pattern: ^las:workflow-execution:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflowExecutionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow-execution:[a-f0-9]{32}$")]
		public string WorkflowExecutionId { get; set; }
		
		/// <summary>
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	public class LogsLogs1
	{
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public string[] Events { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string LogId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:transition-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionExecutionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:transition-execution:[a-f0-9]{32}$")]
		public string TransitionExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowExecutionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow-execution:[a-f0-9]{32}$")]
		public string WorkflowExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Model
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fieldConfig")]
		public System.Collections.Generic.Dictionary<string, object> FieldConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfDataBundles")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfDataBundles { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfRunningTrainings")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfRunningTrainings { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public ModelPostprocessConfig PostprocessConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="preprocessConfig")]
		public ModelPreprocessConfig PreprocessConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ModelStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	public class ModelPostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ModelPostprocessConfigStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BEST_FIRST")]
		BEST_FIRST = 0,
	}
	
	public class ModelPreprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public bool AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int MaxPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ModelPreprocessConfigImageQuality
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOW")]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HIGH")]
		HIGH = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="active")]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inactive")]
		inactive = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Models
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="models")]
		public ModelsModels1[] ModelsModels1 { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
	}
	
	public class ModelsModels1
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fieldConfig")]
		public System.Collections.Generic.Dictionary<string, object> FieldConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfDataBundles")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfDataBundles { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfRunningTrainings")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfRunningTrainings { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public ModelsModels1PostprocessConfig PostprocessConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="preprocessConfig")]
		public ModelsModels1PreprocessConfig PreprocessConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ModelStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	public class ModelsModels1PostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	public class ModelsModels1PreprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public bool AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int MaxPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Organization
	{
		
		/// <summary>
		/// Pattern: ^[0-9a-z]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-z]+$")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentsAllowed")]
		public string DeploymentsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentsCreated")]
		public string DeploymentsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentRetentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int DocumentRetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfActiveModelsUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfActiveModelsUsed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDataBundlesAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDataBundlesAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDataBundlesCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDataBundlesCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDocumentsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDocumentsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDocumentsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDocumentsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfFieldPredictionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfFieldPredictionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfFieldPredictionsUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfFieldPredictionsUsed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfGpuHoursUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double MonthlyNumberOfGpuHoursUsed { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfModelDeploymentUnitsUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MonthlyNumberOfModelDeploymentUnitsUsed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfPredictionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfPredictionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfPredictionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfPredictionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTrainingsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTrainingsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTrainingsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTrainingsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTransitionExecutionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTransitionExecutionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTransitionExecutionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTransitionExecutionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfWorkflowExecutionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfWorkflowExecutionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfWorkflowExecutionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfWorkflowExecutionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyUsageSummary")]
		public string MonthlyUsageSummary { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAppClientsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAppClientsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAppClientsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAppClientsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAssetsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAssetsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAssetsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAssetsCreated { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfDatasetsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfDatasetsAllowed { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfDatasetsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfDatasetsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfModelsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfModelsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfModelsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfModelsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfSecretsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfSecretsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfSecretsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfSecretsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfTransitionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfTransitionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfTransitionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfTransitionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUsersAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfUsersAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUsersCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfUsersCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfWorkflowsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfWorkflowsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfWorkflowsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfWorkflowsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:payment-method:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentMethodId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:payment-method:[a-f0-9]{32}$")]
		public string PaymentMethodId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="planId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string PlanId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Organizations
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizations")]
		public OrganizationsOrganizations1[] OrganizationsOrganizations1 { get; set; }
	}
	
	public class OrganizationsOrganizations1
	{
		
		/// <summary>
		/// Pattern: ^[0-9a-z]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-z]+$")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentsAllowed")]
		public string DeploymentsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentsCreated")]
		public string DeploymentsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentRetentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int DocumentRetentionInDays { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfActiveModelsUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfActiveModelsUsed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDataBundlesAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDataBundlesAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDataBundlesCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDataBundlesCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDocumentsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDocumentsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfDocumentsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfDocumentsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfFieldPredictionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfFieldPredictionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfFieldPredictionsUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfFieldPredictionsUsed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfGpuHoursUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double MonthlyNumberOfGpuHoursUsed { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfModelDeploymentUnitsUsed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MonthlyNumberOfModelDeploymentUnitsUsed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfPredictionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfPredictionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfPredictionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfPredictionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTrainingsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTrainingsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTrainingsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTrainingsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTransitionExecutionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTransitionExecutionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfTransitionExecutionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfTransitionExecutionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfWorkflowExecutionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfWorkflowExecutionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyNumberOfWorkflowExecutionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int MonthlyNumberOfWorkflowExecutionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthlyUsageSummary")]
		public string MonthlyUsageSummary { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAppClientsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAppClientsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAppClientsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAppClientsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAssetsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAssetsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfAssetsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfAssetsCreated { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfDatasetsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfDatasetsAllowed { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfDatasetsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfDatasetsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfModelsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfModelsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfModelsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfModelsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfSecretsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfSecretsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfSecretsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfSecretsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfTransitionsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfTransitionsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfTransitionsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfTransitionsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUsersAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfUsersAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUsersCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfUsersCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfWorkflowsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfWorkflowsAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfWorkflowsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int NumberOfWorkflowsCreated { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:payment-method:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentMethodId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:payment-method:[a-f0-9]{32}$")]
		public string PaymentMethodId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="planId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string PlanId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchAppClientId
	{
		
		/// <summary>
		/// Pattern: ^http://localhost.*|^https://.*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultLoginUrl")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^http://localhost.*|^https://.*")]
		public string DefaultLoginUrl { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loginUrls")]
		public string[] LoginUrls { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchAssetId
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Content { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchDataBundleId
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchDatasetId
	{
		
		[System.Runtime.Serialization.DataMember(Name="containsPersonallyIdentifiableInformation")]
		public System.Nullable<System.Boolean> ContainsPersonallyIdentifiableInformation { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetentionInDays { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchDocumentId
	{
		
		/// <summary>
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groundTruth")]
		public PatchDocumentIdGroundTruth[] PatchDocumentIdGroundTruth { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetentionInDays { get; set; }
	}
	
	public class PatchDocumentIdGroundTruth
	{
		
		/// <summary>
		/// Required
		/// Max length: 36
		/// Min length: 1
		/// Pattern: ^[0-9A-Za-z-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z-_]+$")]
		public string Label { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchModelId
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldConfig")]
		public System.Collections.Generic.Dictionary<string, object> FieldConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public PatchModelIdPostprocessConfig PostprocessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preprocessConfig")]
		public PatchModelIdPreprocessConfig PreprocessConfig { get; set; }
		
		/// <summary>
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	public class PatchModelIdPostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	public class PatchModelIdPreprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public bool AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int MaxPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchOrganizationId
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: ^las:payment-method:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentMethodId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:payment-method:[a-f0-9]{32}$")]
		public string PaymentMethodId { get; set; }
		
		/// <summary>
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="planId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string PlanId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchPaymentMethodId
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stripeSetupIntentSecret")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string StripeSetupIntentSecret { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchSecretId
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchTrainingId
	{
		
		/// <summary>
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentEnvironmentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string DeploymentEnvironmentId { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<PatchTrainingIdStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PatchTrainingIdStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cancelled")]
		cancelled = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchTransistionExecutionId
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PatchTransistionExecutionIdError Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="output")]
		public string Output { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class PatchTransistionExecutionIdError
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchTransitionId
	{
		
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public PatchTransitionIdAssets Assets { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputJsonSchema")]
		public string InputJsonSchema { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputJsonSchema")]
		public string OutputJsonSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public PatchTransitionIdParameters Parameters { get; set; }
	}
	
	public class PatchTransitionIdAssets
	{
		
		/// <summary>
		/// Pattern: ^las:asset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsRemoteComponent")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:asset:[a-f0-9]{32}$")]
		public string JsRemoteComponent { get; set; }
	}
	
	public class PatchTransitionIdParameters
	{
		
		[System.Runtime.Serialization.DataMember(Name="cpu")]
		public System.Nullable<PatchTransitionIdParametersCpu> Cpu { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<PatchTransitionIdParametersMemory> Memory { get; set; }
		
		/// <summary>
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PatchTransitionIdParametersCpu
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_256 = 256,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_512 = 512,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1024 = 1024,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PatchTransitionIdParametersMemory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_512 = 512,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1024 = 1024,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_2048 = 2048,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4096 = 4096,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_8192 = 8192,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchUserId
	{
		
		/// <summary>
		/// Max length: 131072
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar")]
		[System.ComponentModel.DataAnnotations.MaxLength(131072)]
		public string Avatar { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchWorkflowExecutionId
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextTransitionId")]
		public string NextTransitionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PatchWorkflowId
	{
		
		[System.Runtime.Serialization.DataMember(Name="completedConfig")]
		public PatchWorkflowIdCompletedConfig CompletedConfig { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public PatchWorkflowIdErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	public class PatchWorkflowIdCompletedConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		/// <summary>
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
	}
	
	public class PatchWorkflowIdErrorConfig
	{
		
		/// <summary>
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manualRetry")]
		public System.Nullable<System.Boolean> ManualRetry { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentMethod
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string Details { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:payment-method:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentMethodId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:payment-method:[a-f0-9]{32}$")]
		public string PaymentMethodId { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stripePublishableKey")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string StripePublishableKey { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stripeSetupIntentSecret")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string StripeSetupIntentSecret { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentMethods
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentMethods")]
		public PaymentMethodsPaymentMethods1[] PaymentMethodsPaymentMethods1 { get; set; }
	}
	
	public class PaymentMethodsPaymentMethods1
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string Details { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:payment-method:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paymentMethodId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:payment-method:[a-f0-9]{32}$")]
		public string PaymentMethodId { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stripePublishableKey")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string StripePublishableKey { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stripeSetupIntentSecret")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string StripeSetupIntentSecret { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Plan
	{
		
		[System.Runtime.Serialization.DataMember(Name="activeModels")]
		public string ActiveModels { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available")]
		public bool Available { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public PlanCurrency Currency { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldPredictions")]
		public string FieldPredictions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gpuHours")]
		public string GpuHours { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="latest")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Latest { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentUnits")]
		public string ModelDeploymentUnits { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="planId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string PlanId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlanCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USD")]
		USD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EUR")]
		EUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOK")]
		NOK = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Plans
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="plans")]
		public PlansPlans1[] PlansPlans1 { get; set; }
	}
	
	public class PlansPlans1
	{
		
		[System.Runtime.Serialization.DataMember(Name="activeModels")]
		public string ActiveModels { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available")]
		public bool Available { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public PlanCurrency Currency { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldPredictions")]
		public string FieldPredictions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gpuHours")]
		public string GpuHours { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="latest")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Latest { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentUnits")]
		public string ModelDeploymentUnits { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:organization:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:organization:[a-z0-9-_]+$")]
		public string OrganizationId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="planId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:plan:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string PlanId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostAppClients
	{
		
		[System.Runtime.Serialization.DataMember(Name="callbackUrls")]
		public string[] CallbackUrls { get; set; }
		
		/// <summary>
		/// Pattern: ^http://localhost.*|^https://.*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultLoginUrl")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^http://localhost.*|^https://.*")]
		public string DefaultLoginUrl { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="generateSecret")]
		public System.Nullable<System.Boolean> GenerateSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loginUrls")]
		public string[] LoginUrls { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logoutUrls")]
		public string[] LogoutUrls { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostAssets
	{
		
		/// <summary>
		/// Required
		/// Max length: 6250000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(6250000)]
		public string Content { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostDataBundles
	{
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetIds")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] DatasetIds { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostDatasets
	{
		
		[System.Runtime.Serialization.DataMember(Name="containsPersonallyIdentifiableInformation")]
		public System.Nullable<System.Boolean> ContainsPersonallyIdentifiableInformation { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetentionInDays { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostDocuments
	{
		
		/// <summary>
		/// Pattern: ^las:consent:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:consent:[a-f0-9]{32}$")]
		public string ConsentId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 6250000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(6250000)]
		public string Content { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public System.Nullable<PostDocumentsContentType> ContentType { get; set; }
		
		/// <summary>
		/// Pattern: ^las:dataset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:dataset:[a-f0-9]{32}$")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groundTruth")]
		public PostDocumentsGroundTruth[] PostDocumentsGroundTruth { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retentionInDays")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> RetentionInDays { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostDocumentsContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="application/pdf")]
		application_pdf = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/jpeg")]
		image_jpeg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/png")]
		image_png = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/tiff")]
		image_tiff = 3,
	}
	
	public class PostDocumentsGroundTruth
	{
		
		/// <summary>
		/// Required
		/// Max length: 36
		/// Min length: 1
		/// Pattern: ^[0-9A-Za-z-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z-_]+$")]
		public string Label { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostHeartbeats
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostModels
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fieldConfig")]
		public System.Collections.Generic.Dictionary<string, object> FieldConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public PostModelsPostprocessConfig PostprocessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preprocessConfig")]
		public PostModelsPreprocessConfig PreprocessConfig { get; set; }
	}
	
	public class PostModelsPostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	public class PostModelsPreprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public bool AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int MaxPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostOrganizations
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostPaymentMethods
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostPredictions
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public System.Nullable<System.Boolean> AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:document:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:document:[a-f0-9]{32}$")]
		public string DocumentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public System.Nullable<System.Int32> MaxPages { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public PostPredictionsPostprocessConfig PostprocessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rotation")]
		public System.Nullable<PostPredictionsRotation> Rotation { get; set; }
		
		/// <summary>
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	public class PostPredictionsPostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostPredictionsRotation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_90 = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_180 = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_270 = 270,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostSecrets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostTrainings
	{
		
		/// <summary>
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataBundleIds")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] DataBundleIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataScientistAssistance")]
		public System.Nullable<System.Boolean> DataScientistAssistance { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public System.Nullable<PostTrainingsInstanceType> InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="warmStartConfig")]
		public PostTrainingsWarmStartConfig WarmStartConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostTrainingsInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="small-gpu")]
		smallMinusgpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="medium-gpu")]
		mediumMinusgpu = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="large-gpu")]
		largeMinusgpu = 2,
	}
	
	public class PostTrainingsWarmStartConfig
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostTransitionExecution
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostTransitions
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputJsonSchema")]
		public string InputJsonSchema { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputJsonSchema")]
		public string OutputJsonSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public PostTransitionsParameters Parameters { get; set; }
		
		/// <summary>
		/// Minimum: 60
		/// Maximum: 1800
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeoutInSeconds")]
		[System.ComponentModel.DataAnnotations.Range(60, 1800)]
		public System.Nullable<System.Int32> TimeoutInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionType")]
		public PostTransitionsTransitionType TransitionType { get; set; }
	}
	
	public class PostTransitionsParameters
	{
		
		[System.Runtime.Serialization.DataMember(Name="cpu")]
		public System.Nullable<PostTransitionsParametersCpu> Cpu { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<PostTransitionsParametersMemory> Memory { get; set; }
		
		/// <summary>
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostTransitionsParametersCpu
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_256 = 256,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_512 = 512,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1024 = 1024,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostTransitionsParametersMemory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_512 = 512,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1024 = 1024,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_2048 = 2048,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4096 = 4096,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_8192 = 8192,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostTransitionsTransitionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="docker")]
		docker = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="manual")]
		manual = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostUsers
	{
		
		/// <summary>
		/// Pattern: ^las:app-client:[a-z0-9-_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appClientId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:app-client:[a-z0-9-_]+$")]
		public string AppClientId { get; set; }
		
		/// <summary>
		/// Max length: 131072
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar")]
		[System.ComponentModel.DataAnnotations.MaxLength(131072)]
		public string Avatar { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostWorkflowExecutions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PostWorkflows
	{
		
		[System.Runtime.Serialization.DataMember(Name="completedConfig")]
		public PostWorkflowsCompletedConfig CompletedConfig { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public PostWorkflowsErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="specification")]
		public PostWorkflowsSpecification Specification { get; set; }
	}
	
	public class PostWorkflowsCompletedConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		/// <summary>
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
	}
	
	public class PostWorkflowsErrorConfig
	{
		
		/// <summary>
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manualRetry")]
		public System.Nullable<System.Boolean> ManualRetry { get; set; }
	}
	
	public class PostWorkflowsSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="definition")]
		public string Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="language")]
		public System.Nullable<PostWorkflowsSpecificationLanguage> Language { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<PostWorkflowsSpecificationVersion> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostWorkflowsSpecificationLanguage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ASL")]
		ASL = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PostWorkflowsSpecificationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="1.0.0")]
		_1_0_0 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Prediction
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:document:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:document:[a-f0-9]{32}$")]
		public string DocumentId { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inferenceTime")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double InferenceTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public PredictionPostprocessConfig PostprocessConfig { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:prediction:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="predictionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:prediction:[a-f0-9]{32}$")]
		public string PredictionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public string[] Predictions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preprocessConfig")]
		public PredictionPreprocessConfig PreprocessConfig { get; set; }
		
		/// <summary>
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	public class PredictionPostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	public class PredictionPreprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public bool AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int MaxPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Predictions
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order")]
		public DocumentsOrder Order { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public PredictionsPredictions1[] PredictionsPredictions1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sortBy")]
		public DocumentsSortBy SortBy { get; set; }
	}
	
	public class PredictionsPredictions1
	{
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:document:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:document:[a-f0-9]{32}$")]
		public string DocumentId { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inferenceTime")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double InferenceTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postprocessConfig")]
		public PredictionsPredictions1PostprocessConfig PostprocessConfig { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:prediction:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="predictionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:prediction:[a-f0-9]{32}$")]
		public string PredictionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public string[] Predictions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preprocessConfig")]
		public PredictionsPredictions1PreprocessConfig PreprocessConfig { get; set; }
		
		/// <summary>
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	public class PredictionsPredictions1PostprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public ModelPostprocessConfigStrategy Strategy { get; set; }
	}
	
	public class PredictionsPredictions1PreprocessConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="autoRotate")]
		public bool AutoRotate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageQuality")]
		public ModelPreprocessConfigImageQuality ImageQuality { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxPages")]
		[System.ComponentModel.DataAnnotations.Range(1, 3)]
		public int MaxPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Profile
	{
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="familyName")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string FamilyName { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="givenName")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string GivenName { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locale")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfOrganizationsAllowed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfOrganizationsAllowed { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfOrganizationsCreated")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumberOfOrganizationsCreated { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="picture")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Picture { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:profile:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="profileId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:profile:[a-f0-9]{32}$")]
		public string ProfileId { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Secret
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Secrets
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secrets")]
		public SecretsSecrets1[] SecretsSecrets1 { get; set; }
	}
	
	public class SecretsSecrets1
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Training
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataBundleIds")]
		public string[] DataBundleIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataScientistAssistance")]
		public System.Nullable<System.Boolean> DataScientistAssistance { get; set; }
		
		/// <summary>
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentEnvironmentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string DeploymentEnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="evaluation")]
		public string Evaluation { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="gpuHours")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> GpuHours { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public TrainingInstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TrainingStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="warmStartConfig")]
		public TrainingWarmStartConfig WarmStartConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TrainingInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="small-gpu")]
		smallMinusgpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="medium-gpu")]
		mediumMinusgpu = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="large-gpu")]
		largeMinusgpu = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TrainingStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="waiting-for-approval")]
		waitingMinusforMinusapproval = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pending")]
		pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="running")]
		running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="succeeded")]
		succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failed")]
		failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cancelled")]
		cancelled = 5,
	}
	
	public class TrainingWarmStartConfig
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Trainings
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string[] Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainings")]
		public TrainingsTrainings1[] TrainingsTrainings1 { get; set; }
	}
	
	public class TrainingsTrainings1
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataBundleIds")]
		public string[] DataBundleIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataScientistAssistance")]
		public System.Nullable<System.Boolean> DataScientistAssistance { get; set; }
		
		/// <summary>
		/// Pattern: ^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentEnvironmentId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(|las:organization:[a-z0-9-_]+/)las:deployment-environment:[a-z0-9-_]+(|:@[a-z0-9-_]+|:[0-9]+)$")]
		public string DeploymentEnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="evaluation")]
		public string Evaluation { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="gpuHours")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> GpuHours { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public TrainingsTrainings1InstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model:[a-z0-9-_]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model:[a-z0-9-_]+$")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TrainingsTrainings1Status Status { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="warmStartConfig")]
		public TrainingsTrainings1WarmStartConfig WarmStartConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TrainingsTrainings1InstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="small-gpu")]
		smallMinusgpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="medium-gpu")]
		mediumMinusgpu = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="large-gpu")]
		largeMinusgpu = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TrainingsTrainings1Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="waiting-for-approval")]
		waitingMinusforMinusapproval = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pending")]
		pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="running")]
		running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="succeeded")]
		succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failed")]
		failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cancelled")]
		cancelled = 5,
	}
	
	public class TrainingsTrainings1WarmStartConfig
	{
		
		/// <summary>
		/// Required
		/// Pattern: ^las:model-training:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainingId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:model-training:[a-f0-9]{32}$")]
		public string TrainingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Transition
	{
		
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public TransitionAssets Assets { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputJsonSchema")]
		public string InputJsonSchema { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputJsonSchema")]
		public string OutputJsonSchema { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 60
		/// Maximum: 1800
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timeoutInSeconds")]
		[System.ComponentModel.DataAnnotations.Range(60, 1800)]
		public int TimeoutInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionType")]
		public PostTransitionsTransitionType TransitionType { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	public class TransitionAssets
	{
		
		/// <summary>
		/// Pattern: ^las:asset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsRemoteComponent")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:asset:[a-f0-9]{32}$")]
		public string JsRemoteComponent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TransitionExecution
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CompletedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:transition-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:transition-execution:[a-f0-9]{32}$")]
		public string ExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		/// <summary>
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string LogId { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransitionExecutionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TransitionExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="running")]
		running = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="succeeded")]
		succeeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failed")]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="rejected")]
		rejected = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="retry")]
		retry = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TransitionExecutions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public TransitionExecutionsExecutions[] TransitionExecutionsExecutions { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransitionExecutionStatus[] Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
	}
	
	public class TransitionExecutionsExecutions
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CompletedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:transition-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:transition-execution:[a-f0-9]{32}$")]
		public string ExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		/// <summary>
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string LogId { get; set; }
		
		/// <summary>
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransitionExecutionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Transitions
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transitionType")]
		public PostTransitionsTransitionType[] TransitionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitions")]
		public TransitionsTransitions1[] TransitionsTransitions1 { get; set; }
	}
	
	public class TransitionsTransitions1
	{
		
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public TransitionsTransitions1Assets Assets { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputJsonSchema")]
		public string InputJsonSchema { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputJsonSchema")]
		public string OutputJsonSchema { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 60
		/// Maximum: 1800
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timeoutInSeconds")]
		[System.ComponentModel.DataAnnotations.Range(60, 1800)]
		public int TimeoutInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionId")]
		public string TransitionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionType")]
		public PostTransitionsTransitionType TransitionType { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
	}
	
	public class TransitionsTransitions1Assets
	{
		
		/// <summary>
		/// Pattern: ^las:asset:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsRemoteComponent")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:asset:[a-f0-9]{32}$")]
		public string JsRemoteComponent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class User
	{
		
		/// <summary>
		/// Max length: 131072
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar")]
		[System.ComponentModel.DataAnnotations.MaxLength(131072)]
		public string Avatar { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: ^las:profile:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profileId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:profile:[a-f0-9]{32}$")]
		public string ProfileId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:user:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:user:[a-f0-9]{32}$")]
		public string UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Users
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="users")]
		public UsersUsers1[] UsersUsers1 { get; set; }
	}
	
	public class UsersUsers1
	{
		
		/// <summary>
		/// Max length: 131072
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar")]
		[System.ComponentModel.DataAnnotations.MaxLength(131072)]
		public string Avatar { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public string Metadata { get; set; }
		
		/// <summary>
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Pattern: ^las:profile:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profileId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:profile:[a-f0-9]{32}$")]
		public string ProfileId { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:user:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:user:[a-f0-9]{32}$")]
		public string UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Workflow
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completedConfig")]
		public WorkflowCompletedConfig CompletedConfig { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public WorkflowErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfRunningExecutions")]
		public int NumberOfRunningExecutions { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	public class WorkflowCompletedConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		/// <summary>
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
	}
	
	public class WorkflowErrorConfig
	{
		
		/// <summary>
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manualRetry")]
		public System.Nullable<System.Boolean> ManualRetry { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkflowExecution
	{
		
		[System.Runtime.Serialization.DataMember(Name="completedBy")]
		public string[] CompletedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completedTaskLogId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string CompletedTaskLogId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public string[] Events { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow-execution:[a-f0-9]{32}$")]
		public string ExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		/// <summary>
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string LogId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="output")]
		public string Output { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorkflowExecutionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionExecutions")]
		public string TransitionExecutions { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum WorkflowExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="running")]
		running = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="succeeded")]
		succeeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failed")]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="rejected")]
		rejected = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="retry")]
		retry = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="error")]
		error = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkflowExecutions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public WorkflowExecutionsExecutions[] WorkflowExecutionsExecutions { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order")]
		public DocumentsOrder Order { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sortBy")]
		public System.Nullable<WorkflowExecutionsSortBy> SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorkflowExecutionStatus[] Status { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	public class WorkflowExecutionsExecutions
	{
		
		[System.Runtime.Serialization.DataMember(Name="completedBy")]
		public string[] CompletedBy { get; set; }
		
		/// <summary>
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completedTaskLogId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string CompletedTaskLogId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public string[] Events { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow-execution:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="executionId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow-execution:[a-f0-9]{32}$")]
		public string ExecutionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		/// <summary>
		/// Pattern: ^las:log:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:log:[a-f0-9]{32}$")]
		public string LogId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="output")]
		public string Output { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorkflowExecutionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transitionExecutions")]
		public string TransitionExecutions { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum WorkflowExecutionsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="startTime")]
		startTime = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="endTime")]
		endTime = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Workflows
	{
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflows")]
		public WorkflowsWorkflows1[] WorkflowsWorkflows1 { get; set; }
	}
	
	public class WorkflowsWorkflows1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completedConfig")]
		public WorkflowsWorkflows1CompletedConfig CompletedConfig { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public WorkflowsWorkflows1ErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfRunningExecutions")]
		public int NumberOfRunningExecutions { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 4096
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]{4}-?[0-9]{2}-?[0-9]{2}( |T)?[0-9]{2}:?[0-9]{2}:?[0-9]{2}(.[0-9]{1,6})?(Z|[+][0-9]{2}(:|)[0-9]{2})$")]
		public string UpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^las:workflow:[a-f0-9]{32}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflowId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:workflow:[a-f0-9]{32}$")]
		public string WorkflowId { get; set; }
	}
	
	public class WorkflowsWorkflows1CompletedConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public System.Collections.Generic.Dictionary<string, string> Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentSecrets")]
		public string[] EnvironmentSecrets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		/// <summary>
		/// Pattern: ^las:secret:[a-f0-9]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretId")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^las:secret:[a-f0-9]{32}$")]
		public string SecretId { get; set; }
	}
	
	public class WorkflowsWorkflows1ErrorConfig
	{
		
		/// <summary>
		/// Pattern: ^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9][-+._A-Za-z0-9]*@([-_.A-Za-z0-9]+\.)+[A-Za-z]{2,}$")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manualRetry")]
		public System.Nullable<System.Boolean> ManualRetry { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GroundTruthList
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// AppClientsGetByNextTokenAndMaxResults appClients
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<AppClients> AppClientsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "appClients?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AppClients>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppClientsPost appClients
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<AppClient> AppClientsPostAsync(PostAppClients requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "appClients";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AppClient>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// AppClients_appClientIdDelete appClients/{appClientId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<AppClient> AppClients_appClientIdDeleteAsync(string appClientId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "appClients/"+ (appClientId==null? "" : System.Uri.EscapeDataString(appClientId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AppClient>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppClients_appClientIdPatch appClients/{appClientId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<AppClient> AppClients_appClientIdPatchAsync(string appClientId, PatchAppClientId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "appClients/"+ (appClientId==null? "" : System.Uri.EscapeDataString(appClientId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AppClient>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// AssetsGetByNextTokenAndMaxResults assets
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Assets> AssetsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Assets>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AssetsPost assets
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Asset> AssetsPostAsync(PostAssets requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Asset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Assets_assetIdDelete assets/{assetId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Asset> Assets_assetIdDeleteAsync(string assetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets/"+ (assetId==null? "" : System.Uri.EscapeDataString(assetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Asset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Assets_assetIdGet assets/{assetId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Asset> Assets_assetIdGetAsync(string assetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets/"+ (assetId==null? "" : System.Uri.EscapeDataString(assetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Asset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Assets_assetIdPatch assets/{assetId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Asset> Assets_assetIdPatchAsync(string assetId, PatchAssetId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets/"+ (assetId==null? "" : System.Uri.EscapeDataString(assetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Asset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// DatasetsGetByNextTokenAndMaxResults datasets
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Datasets> DatasetsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "datasets?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Datasets>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// DatasetsPost datasets
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Dataset> DatasetsPostAsync(PostDatasets requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "datasets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Dataset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Datasets_datasetIdDelete datasets/{datasetId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Dataset> Datasets_datasetIdDeleteAsync(string datasetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "datasets/"+ (datasetId==null? "" : System.Uri.EscapeDataString(datasetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Dataset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Datasets_datasetIdGet datasets/{datasetId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Dataset> Datasets_datasetIdGetAsync(string datasetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "datasets/"+ (datasetId==null? "" : System.Uri.EscapeDataString(datasetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Dataset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Datasets_datasetIdPatch datasets/{datasetId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Dataset> Datasets_datasetIdPatchAsync(string datasetId, PatchDatasetId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "datasets/"+ (datasetId==null? "" : System.Uri.EscapeDataString(datasetId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Dataset>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// DeploymentEnvironmentsGetByOwnerAndNextTokenAndMaxResults deploymentEnvironments
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<DeploymentEnvironments> DeploymentEnvironmentsGetByOwnerAndNextTokenAndMaxResultsAsync(string owner, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deploymentEnvironments?owner=" + (owner==null? "" : System.Uri.EscapeDataString(owner))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeploymentEnvironments>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// DeploymentEnvironments_deploymentEnvironmentIdGet deploymentEnvironments/{deploymentEnvironmentId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<DeploymentEnvironment> DeploymentEnvironments_deploymentEnvironmentIdGetAsync(string deploymentEnvironmentId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deploymentEnvironments/"+ (deploymentEnvironmentId==null? "" : System.Uri.EscapeDataString(deploymentEnvironmentId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeploymentEnvironment>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// DocumentsDeleteByConsentIdAndDatasetIdAndNextTokenAndMaxResults documents
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Documents> DocumentsDeleteByConsentIdAndDatasetIdAndNextTokenAndMaxResultsAsync(string consentId, string datasetId, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "documents?consentId=" + (consentId==null? "" : System.Uri.EscapeDataString(consentId))+"&datasetId=" + (datasetId==null? "" : System.Uri.EscapeDataString(datasetId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Documents>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// DocumentsGetByDatasetIdAndNextTokenAndOrderAndDocumentIdAndConsentIdAndMaxResultsAndSortBy documents
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Documents> DocumentsGetByDatasetIdAndNextTokenAndOrderAndDocumentIdAndConsentIdAndMaxResultsAndSortByAsync(string datasetId, string nextToken, string order, string documentId, string consentId, string maxResults, string sortBy, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "documents?datasetId=" + (datasetId==null? "" : System.Uri.EscapeDataString(datasetId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&order=" + (order==null? "" : System.Uri.EscapeDataString(order))+"&documentId=" + (documentId==null? "" : System.Uri.EscapeDataString(documentId))+"&consentId=" + (consentId==null? "" : System.Uri.EscapeDataString(consentId))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&sortBy=" + (sortBy==null? "" : System.Uri.EscapeDataString(sortBy));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Documents>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// DocumentsPost documents
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Document> DocumentsPostAsync(PostDocuments requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "documents";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Document>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Documents_documentIdDelete documents/{documentId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Document> Documents_documentIdDeleteAsync(string documentId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "documents/"+ (documentId==null? "" : System.Uri.EscapeDataString(documentId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Document>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Documents_documentIdGet documents/{documentId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Document> Documents_documentIdGetAsync(string documentId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "documents/"+ (documentId==null? "" : System.Uri.EscapeDataString(documentId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Document>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Documents_documentIdPatch documents/{documentId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Document> Documents_documentIdPatchAsync(string documentId, PatchDocumentId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "documents/"+ (documentId==null? "" : System.Uri.EscapeDataString(documentId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Document>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// LogsGetByWorkflowIdAndNextTokenAndOrderAndTransitionExecutionIdAndTransitionIdAndMaxResultsAndWorkflowExecutionId logs
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Logs> LogsGetByWorkflowIdAndNextTokenAndOrderAndTransitionExecutionIdAndTransitionIdAndMaxResultsAndWorkflowExecutionIdAsync(string workflowId, string nextToken, string order, string transitionExecutionId, string transitionId, string maxResults, string workflowExecutionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "logs?workflowId=" + (workflowId==null? "" : System.Uri.EscapeDataString(workflowId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&order=" + (order==null? "" : System.Uri.EscapeDataString(order))+"&transitionExecutionId=" + (transitionExecutionId==null? "" : System.Uri.EscapeDataString(transitionExecutionId))+"&transitionId=" + (transitionId==null? "" : System.Uri.EscapeDataString(transitionId))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&workflowExecutionId=" + (workflowExecutionId==null? "" : System.Uri.EscapeDataString(workflowExecutionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Logs>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Logs_logIdGet logs/{logId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Log> Logs_logIdGetAsync(string logId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "logs/"+ (logId==null? "" : System.Uri.EscapeDataString(logId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Log>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ModelsGetByOwnerAndNextTokenAndMaxResults models
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Models> ModelsGetByOwnerAndNextTokenAndMaxResultsAsync(string owner, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models?owner=" + (owner==null? "" : System.Uri.EscapeDataString(owner))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Models>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ModelsPost models
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Model> ModelsPostAsync(PostModels requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Model>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdDelete models/{modelId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Model> Models_modelIdDeleteAsync(string modelId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Model>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdGet models/{modelId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Model> Models_modelIdGetAsync(string modelId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Model>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdPatch models/{modelId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Model> Models_modelIdPatchAsync(string modelId, PatchModelId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Model>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdDataBundlesGetByStatusAndNextTokenAndMaxResults models/{modelId}/dataBundles
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<DataBundles> Models_modelIdDataBundlesGetByStatusAndNextTokenAndMaxResultsAsync(string modelId, string status, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/dataBundles&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DataBundles>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdDataBundlesPost models/{modelId}/dataBundles
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<DataBundle> Models_modelIdDataBundlesPostAsync(string modelId, PostDataBundles requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/dataBundles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DataBundle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdDataBundles_dataBundleIdDelete models/{modelId}/dataBundles/{dataBundleId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<DataBundle> Models_modelIdDataBundles_dataBundleIdDeleteAsync(string dataBundleId, string modelId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/dataBundles/"+ (dataBundleId==null? "" : System.Uri.EscapeDataString(dataBundleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DataBundle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdDataBundles_dataBundleIdPatch models/{modelId}/dataBundles/{dataBundleId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<DataBundle> Models_modelIdDataBundles_dataBundleIdPatchAsync(string dataBundleId, string modelId, PatchDataBundleId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/dataBundles/"+ (dataBundleId==null? "" : System.Uri.EscapeDataString(dataBundleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DataBundle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdTrainingsGetByStatusAndNextTokenAndMaxResults models/{modelId}/trainings
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Trainings> Models_modelIdTrainingsGetByStatusAndNextTokenAndMaxResultsAsync(string modelId, string status, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/trainings&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Trainings>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdTrainingsPost models/{modelId}/trainings
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Training> Models_modelIdTrainingsPostAsync(string modelId, PostTrainings requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/trainings";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Training>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Models_modelIdTrainings_trainingIdPatch models/{modelId}/trainings/{trainingId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Training> Models_modelIdTrainings_trainingIdPatchAsync(string modelId, string trainingId, PatchTrainingId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "models/"+ (modelId==null? "" : System.Uri.EscapeDataString(modelId))+"/trainings/"+ (trainingId==null? "" : System.Uri.EscapeDataString(trainingId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Training>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// OrganizationsGetByNextTokenAndMaxResults organizations
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Organizations> OrganizationsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organizations?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Organizations>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// OrganizationsPost organizations
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Organization> OrganizationsPostAsync(PostOrganizations requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organizations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Organization>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Organizations_organizationIdGet organizations/{organizationId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Organization> Organizations_organizationIdGetAsync(string organizationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organizations/"+ (organizationId==null? "" : System.Uri.EscapeDataString(organizationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Organization>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Organizations_organizationIdPatch organizations/{organizationId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Organization> Organizations_organizationIdPatchAsync(string organizationId, PatchOrganizationId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organizations/"+ (organizationId==null? "" : System.Uri.EscapeDataString(organizationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Organization>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// PaymentMethodsGetByNextTokenAndMaxResults paymentMethods
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<PaymentMethods> PaymentMethodsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "paymentMethods?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentMethods>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PaymentMethodsPost paymentMethods
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<PaymentMethod> PaymentMethodsPostAsync(PostPaymentMethods requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "paymentMethods";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentMethod>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// PaymentMethods_paymentMethodIdDelete paymentMethods/{paymentMethodId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<PaymentMethod> PaymentMethods_paymentMethodIdDeleteAsync(string paymentMethodId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "paymentMethods/"+ (paymentMethodId==null? "" : System.Uri.EscapeDataString(paymentMethodId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentMethod>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PaymentMethods_paymentMethodIdGet paymentMethods/{paymentMethodId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<PaymentMethod> PaymentMethods_paymentMethodIdGetAsync(string paymentMethodId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "paymentMethods/"+ (paymentMethodId==null? "" : System.Uri.EscapeDataString(paymentMethodId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentMethod>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PaymentMethods_paymentMethodIdPatch paymentMethods/{paymentMethodId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<PaymentMethod> PaymentMethods_paymentMethodIdPatchAsync(string paymentMethodId, PatchPaymentMethodId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "paymentMethods/"+ (paymentMethodId==null? "" : System.Uri.EscapeDataString(paymentMethodId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentMethod>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// PlansGetByOwnerAndNextTokenAndMaxResults plans
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Plans> PlansGetByOwnerAndNextTokenAndMaxResultsAsync(string owner, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "plans?owner=" + (owner==null? "" : System.Uri.EscapeDataString(owner))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Plans>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Plans_planIdGet plans/{planId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Plan> Plans_planIdGetAsync(string planId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "plans/"+ (planId==null? "" : System.Uri.EscapeDataString(planId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Plan>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PredictionsGetByNextTokenAndMaxResultsAndSortByAndOrder predictions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Predictions> PredictionsGetByNextTokenAndMaxResultsAndSortByAndOrderAsync(string nextToken, string maxResults, string sortBy, string order, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "predictions?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&sortBy=" + (sortBy==null? "" : System.Uri.EscapeDataString(sortBy))+"&order=" + (order==null? "" : System.Uri.EscapeDataString(order));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Predictions>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PredictionsPost predictions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Prediction> PredictionsPostAsync(PostPredictions requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "predictions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Prediction>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Profiles_profileIdGet profiles/{profileId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Profile> Profiles_profileIdGetAsync(string profileId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "profiles/"+ (profileId==null? "" : System.Uri.EscapeDataString(profileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Profile>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_profileIdPatch profiles/{profileId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Profile> Profiles_profileIdPatchAsync(string profileId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "profiles/"+ (profileId==null? "" : System.Uri.EscapeDataString(profileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Profile>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// SecretsGetByNextTokenAndMaxResults secrets
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Secrets> SecretsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "secrets?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Secrets>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// SecretsPost secrets
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Secret> SecretsPostAsync(PostSecrets requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "secrets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Secret>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Secrets_secretIdDelete secrets/{secretId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Secret> Secrets_secretIdDeleteAsync(string secretId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "secrets/"+ (secretId==null? "" : System.Uri.EscapeDataString(secretId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Secret>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Secrets_secretIdPatch secrets/{secretId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Secret> Secrets_secretIdPatchAsync(string secretId, PatchSecretId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "secrets/"+ (secretId==null? "" : System.Uri.EscapeDataString(secretId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Secret>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// TransitionsGetByTransitionTypeAndNextTokenAndMaxResults transitions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Transitions> TransitionsGetByTransitionTypeAndNextTokenAndMaxResultsAsync(string transitionType, string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions?transitionType=" + (transitionType==null? "" : System.Uri.EscapeDataString(transitionType))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Transitions>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// TransitionsPost transitions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Transition> TransitionsPostAsync(PostTransitions requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Transition>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdDelete transitions/{transitionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Transition> Transitions_transitionIdDeleteAsync(string transitionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Transition>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdGet transitions/{transitionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Transition> Transitions_transitionIdGetAsync(string transitionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Transition>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdPatch transitions/{transitionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Transition> Transitions_transitionIdPatchAsync(string transitionId, PatchTransitionId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Transition>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdExecutionsGetByNextTokenAndOrderAndExecutionIdAndStatusAndMaxResultsAndSortBy transitions/{transitionId}/executions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<TransitionExecutions> Transitions_transitionIdExecutionsGetByNextTokenAndOrderAndExecutionIdAndStatusAndMaxResultsAndSortByAsync(string nextToken, string order, string executionId, string transitionId, string status, string maxResults, string sortBy, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId))+"/executions?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&order=" + (order==null? "" : System.Uri.EscapeDataString(order))+"&executionId=" + (executionId==null? "" : System.Uri.EscapeDataString(executionId))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&sortBy=" + (sortBy==null? "" : System.Uri.EscapeDataString(sortBy));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TransitionExecutions>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdExecutionsPost transitions/{transitionId}/executions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<TransitionExecution> Transitions_transitionIdExecutionsPostAsync(string transitionId, PostTransitionExecution requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId))+"/executions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TransitionExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdExecutions_executionIdGet transitions/{transitionId}/executions/{executionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<TransitionExecution> Transitions_transitionIdExecutions_executionIdGetAsync(string transitionId, string executionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId))+"/executions/"+ (executionId==null? "" : System.Uri.EscapeDataString(executionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TransitionExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdExecutions_executionIdPatch transitions/{transitionId}/executions/{executionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<TransitionExecution> Transitions_transitionIdExecutions_executionIdPatchAsync(string transitionId, string executionId, PatchTransistionExecutionId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId))+"/executions/"+ (executionId==null? "" : System.Uri.EscapeDataString(executionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TransitionExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Transitions_transitionIdExecutions_executionIdHeartbeatsPost transitions/{transitionId}/executions/{executionId}/heartbeats
		/// </summary>
		public async Task Transitions_transitionIdExecutions_executionIdHeartbeatsPostAsync(string transitionId, string executionId, PostHeartbeats requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transitions/"+ (transitionId==null? "" : System.Uri.EscapeDataString(transitionId))+"/executions/"+ (executionId==null? "" : System.Uri.EscapeDataString(executionId))+"/heartbeats";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// UsersGetByNextTokenAndMaxResults users
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Users> UsersGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Users>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// UsersPost users
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<User> UsersPostAsync(PostUsers requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<User>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Users_userIdDelete users/{userId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<User> Users_userIdDeleteAsync(string userId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (userId==null? "" : System.Uri.EscapeDataString(userId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<User>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_userIdGet users/{userId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<User> Users_userIdGetAsync(string userId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (userId==null? "" : System.Uri.EscapeDataString(userId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<User>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_userIdPatch users/{userId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<User> Users_userIdPatchAsync(string userId, PatchUserId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (userId==null? "" : System.Uri.EscapeDataString(userId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<User>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// WorkflowsGetByNextTokenAndMaxResults workflows
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Workflows> WorkflowsGetByNextTokenAndMaxResultsAsync(string nextToken, string maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Workflows>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// WorkflowsPost workflows
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Workflow> WorkflowsPostAsync(PostWorkflows requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Workflow>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdDelete workflows/{workflowId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Workflow> Workflows_workflowIdDeleteAsync(string workflowId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Workflow>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdGet workflows/{workflowId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Workflow> Workflows_workflowIdGetAsync(string workflowId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Workflow>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdPatch workflows/{workflowId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<Workflow> Workflows_workflowIdPatchAsync(string workflowId, PatchWorkflowId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Workflow>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdExecutionsGetByFromStartTimeAndToStartTimeAndNextTokenAndOrderAndStatusAndMaxResultsAndSortBy workflows/{workflowId}/executions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<WorkflowExecutions> Workflows_workflowIdExecutionsGetByFromStartTimeAndToStartTimeAndNextTokenAndOrderAndStatusAndMaxResultsAndSortByAsync(string fromStartTime, string toStartTime, string workflowId, string nextToken, string order, string status, string maxResults, string sortBy, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId))+"/executions?fromStartTime=" + (fromStartTime==null? "" : System.Uri.EscapeDataString(fromStartTime))+"&toStartTime=" + (toStartTime==null? "" : System.Uri.EscapeDataString(toStartTime))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&order=" + (order==null? "" : System.Uri.EscapeDataString(order))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&sortBy=" + (sortBy==null? "" : System.Uri.EscapeDataString(sortBy));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkflowExecutions>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdExecutionsPost workflows/{workflowId}/executions
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<WorkflowExecution> Workflows_workflowIdExecutionsPostAsync(string workflowId, PostWorkflowExecutions requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId))+"/executions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkflowExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdExecutions_executionIdDelete workflows/{workflowId}/executions/{executionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<WorkflowExecution> Workflows_workflowIdExecutions_executionIdDeleteAsync(string executionId, string workflowId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId))+"/executions/"+ (executionId==null? "" : System.Uri.EscapeDataString(executionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkflowExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdExecutions_executionIdGet workflows/{workflowId}/executions/{executionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<WorkflowExecution> Workflows_workflowIdExecutions_executionIdGetAsync(string executionId, string workflowId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId))+"/executions/"+ (executionId==null? "" : System.Uri.EscapeDataString(executionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkflowExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Workflows_workflowIdExecutions_executionIdPatch workflows/{workflowId}/executions/{executionId}
		/// </summary>
		/// <returns>200 response</returns>
		public async Task<WorkflowExecution> Workflows_workflowIdExecutions_executionIdPatchAsync(string executionId, string workflowId, PatchWorkflowExecutionId requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "workflows/"+ (workflowId==null? "" : System.Uri.EscapeDataString(workflowId))+"/executions/"+ (executionId==null? "" : System.Uri.EscapeDataString(executionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkflowExecution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public Expr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Expr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Empty
	{
	}
	
	/// <summary>
	/// Request message for `GetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetIamPolicyRequest
	{
		
		/// <summary>
		/// Encapsulates settings provided to GetIamPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetPolicyOptions Options { get; set; }
	}
	
	/// <summary>
	/// Encapsulates settings provided to GetIamPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetPolicyOptions
	{
		
		/// <summary>
		/// Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedPolicyVersion")]
		public System.Nullable<System.Int32> RequestedPolicyVersion { get; set; }
	}
	
	/// <summary>
	/// Specification for the BigQuery connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryConnectionSpec
	{
		
		/// <summary>
		/// Specification for the BigQuery connection to a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudSql")]
		public GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec CloudSql { get; set; }
		
		/// <summary>
		/// The type of the BigQuery connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionType")]
		public System.Nullable<GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType> ConnectionType { get; set; }
		
		/// <summary>
		/// True if there are credentials attached to the BigQuery connection; false otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasCredential")]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
	}
	
	/// <summary>
	/// Specification for the BigQuery connection to a Cloud SQL instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec
	{
		
		/// <summary>
		/// Database name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// Cloud SQL instance ID in the format of `project:location:instance`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceId")]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Type of the Cloud SQL database.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRES = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYSQL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL = 1,
	}
	
	/// <summary>
	/// Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryDateShardedSpec
	{
		
		/// <summary>
		/// Output only. The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// Output only. BigQuery resource name of the latest shard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestShardResource")]
		public string LatestShardResource { get; set; }
		
		/// <summary>
		/// Output only. Total number of shards.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardCount")]
		public string ShardCount { get; set; }
		
		/// <summary>
		/// Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tablePrefix")]
		public string TablePrefix { get; set; }
	}
	
	/// <summary>
	/// Fields specific for BigQuery routines.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryRoutineSpec
	{
		
		/// <summary>
		/// Paths of the imported libraries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedLibraries")]
		public string[] ImportedLibraries { get; set; }
	}
	
	/// <summary>
	/// Describes a BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryTableSpec
	{
		
		/// <summary>
		/// Output only. The table source type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSourceType")]
		public System.Nullable<GoogleCloudDatacatalogV1BigQueryTableSpecTableSourceType> TableSourceType { get; set; }
		
		/// <summary>
		/// Normal BigQuery table specification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSpec")]
		public GoogleCloudDatacatalogV1TableSpec TableSpec { get; set; }
		
		/// <summary>
		/// Table view specification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewSpec")]
		public GoogleCloudDatacatalogV1ViewSpec ViewSpec { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1BigQueryTableSpecTableSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE_SOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY_VIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY_TABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY_MATERIALIZED_VIEW = 3,
	}
	
	/// <summary>
	/// Normal BigQuery table specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TableSpec
	{
		
		/// <summary>
		/// Output only. If the table is date-sharded, that is, it matches the `[prefix]YYYYMMDD` name pattern, this field is the Data Catalog resource name of the date-sharded grouped entry. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`. Otherwise, `grouped_entry` is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupedEntry")]
		public string GroupedEntry { get; set; }
	}
	
	/// <summary>
	/// Table view specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ViewSpec
	{
		
		/// <summary>
		/// Output only. The query that defines the table view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewQuery")]
		public string ViewQuery { get; set; }
	}
	
	/// <summary>
	/// Business Context of the entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BusinessContext
	{
		
		/// <summary>
		/// Contact people for the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public GoogleCloudDatacatalogV1Contacts Contacts { get; set; }
		
		/// <summary>
		/// Entry overview fields for rich text descriptions of entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entryOverview")]
		public GoogleCloudDatacatalogV1EntryOverview EntryOverview { get; set; }
	}
	
	/// <summary>
	/// Contact people for the entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Contacts
	{
		
		/// <summary>
		/// The list of contact people for the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="people")]
		public GoogleCloudDatacatalogV1ContactsPerson[] People { get; set; }
	}
	
	/// <summary>
	/// A contact person for the entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ContactsPerson
	{
		
		/// <summary>
		/// Designation of the person, for example, Data Steward.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="designation")]
		public string Designation { get; set; }
		
		/// <summary>
		/// Email of the person in the format of `john.doe@xyz`, ``, or `John Doe`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
	}
	
	/// <summary>
	/// Entry overview fields for rich text descriptions of entries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1EntryOverview
	{
		
		/// <summary>
		/// Entry overview with support for rich text. The overview must only contain Unicode characters, and should be formatted using HTML. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overview")]
		public string Overview { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to Instance entries that are part of `CLOUD_BIGTABLE` system. (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudBigtableInstanceSpec
	{
		
		/// <summary>
		/// The list of clusters for the Instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudBigtableClusterSpecs")]
		public GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec[] CloudBigtableClusterSpecs { get; set; }
	}
	
	/// <summary>
	/// Spec that applies to clusters of an Instance of Cloud Bigtable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec
	{
		
		/// <summary>
		/// Name of the cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A link back to the parent resource, in this case Instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// Location of the cluster, typically a Cloud zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Type of the resource. For a cluster this would be "CLUSTER".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to all entries that are part of `CLOUD_BIGTABLE` system (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudBigtableSystemSpec
	{
		
		/// <summary>
		/// Display name of the Instance. This is user specified and different from the resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceDisplayName")]
		public string InstanceDisplayName { get; set; }
	}
	
	/// <summary>
	/// A column within a schema. Columns can be nested inside other columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ColumnSchema
	{
		
		/// <summary>
		/// Required. Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Optional. Default value for the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Garbage collection policy for the column or column family. Applies to systems like Cloud Bigtable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcRule")]
		public string GcRule { get; set; }
		
		/// <summary>
		/// Optional. Most important inclusion of this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="highestIndexingType")]
		public System.Nullable<GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType> HighestIndexingType { get; set; }
		
		/// <summary>
		/// Column info specific to Looker System.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lookerColumnSpec")]
		public GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec LookerColumnSpec { get; set; }
		
		/// <summary>
		/// Optional. A column's mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public string Mode { get; set; }
		
		/// <summary>
		/// Optional. Ordinal position
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ordinalPosition")]
		public System.Nullable<System.Int32> OrdinalPosition { get; set; }
		
		/// <summary>
		/// Optional. Schema of sub-columns. A column can have zero or more sub-columns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subcolumns")]
		public GoogleCloudDatacatalogV1ColumnSchema[] Subcolumns { get; set; }
		
		/// <summary>
		/// Required. Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXING_TYPE_NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXING_TYPE_NON_UNIQUE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXING_TYPE_UNIQUE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXING_TYPE_PRIMARY_KEY = 4,
	}
	
	/// <summary>
	/// Column info specific to Looker System.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec
	{
		
		/// <summary>
		/// Looker specific column type of this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOOKER_COLUMN_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION_GROUP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEASURE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER = 5,
	}
	
	/// <summary>
	/// Common statistics on the entry's usage. They can be set on any system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CommonUsageStats
	{
		
		/// <summary>
		/// View count in source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewCount")]
		public string ViewCount { get; set; }
	}
	
	/// <summary>
	/// Physical location of an entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataSource
	{
		
		/// <summary>
		/// Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Service that physically stores the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public System.Nullable<GoogleCloudDatacatalogV1DataSourceService> Service { get; set; }
		
		/// <summary>
		/// Output only. Data Catalog entry name, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceEntry")]
		public string SourceEntry { get; set; }
		
		/// <summary>
		/// Details the properties of the underlying storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageProperties")]
		public GoogleCloudDatacatalogV1StorageProperties StorageProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DataSourceService
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_STORAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY = 2,
	}
	
	/// <summary>
	/// Details the properties of the underlying storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1StorageProperties
	{
		
		/// <summary>
		/// Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: * `gs://bucket_name/dir/*`: matches all files in the `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in the `bucket_name/dir` and all subdirectories recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePattern")]
		public string[] FilePattern { get; set; }
		
		/// <summary>
		/// File type in MIME format, for example, `text/plain`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileType")]
		public string FileType { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs can be set at the time, and cannot be changed later.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataSourceConnectionSpec
	{
		
		/// <summary>
		/// Specification for the BigQuery connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryConnectionSpec")]
		public GoogleCloudDatacatalogV1BigQueryConnectionSpec BigqueryConnectionSpec { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DatabaseTableSpec
	{
		
		/// <summary>
		/// Specification that applies to database view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseViewSpec")]
		public GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec DatabaseViewSpec { get; set; }
		
		/// <summary>
		/// Entry specification for a Dataplex table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexTable")]
		public GoogleCloudDatacatalogV1DataplexTableSpec DataplexTable { get; set; }
		
		/// <summary>
		/// Type of this table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1DatabaseTableSpecType> Type { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to database view.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec
	{
		
		/// <summary>
		/// Name of a singular table this view reflects one to one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseTable")]
		public string BaseTable { get; set; }
		
		/// <summary>
		/// SQL query used to generate this view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlQuery")]
		public string SqlQuery { get; set; }
		
		/// <summary>
		/// Type of this view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewType")]
		public System.Nullable<GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType> ViewType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEW_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_VIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATERIALIZED_VIEW = 2,
	}
	
	/// <summary>
	/// Entry specification for a Dataplex table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexTableSpec
	{
		
		/// <summary>
		/// Common Dataplex fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexSpec")]
		public GoogleCloudDatacatalogV1DataplexSpec DataplexSpec { get; set; }
		
		/// <summary>
		/// List of external tables registered by Dataplex in other systems based on the same underlying data. External tables allow to query this data in those systems.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalTables")]
		public GoogleCloudDatacatalogV1DataplexExternalTable[] ExternalTables { get; set; }
		
		/// <summary>
		/// Indicates if the table schema is managed by the user or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userManaged")]
		public System.Nullable<System.Boolean> UserManaged { get; set; }
	}
	
	/// <summary>
	/// Common Dataplex fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexSpec
	{
		
		/// <summary>
		/// Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset")]
		public string Asset { get; set; }
		
		/// <summary>
		/// Compression format of the data, e.g., zip, gzip etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compressionFormat")]
		public string CompressionFormat { get; set; }
		
		/// <summary>
		/// Native schema used by a resource represented as an entry. Used by query engines for deserializing and parsing source data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataFormat")]
		public GoogleCloudDatacatalogV1PhysicalSchema DataFormat { get; set; }
		
		/// <summary>
		/// Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	/// <summary>
	/// Native schema used by a resource represented as an entry. Used by query engines for deserializing and parsing source data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchema
	{
		
		/// <summary>
		/// Schema in Avro JSON format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avro")]
		public GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema Avro { get; set; }
		
		/// <summary>
		/// Marks a CSV-encoded data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csv")]
		public GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema Csv { get; set; }
		
		/// <summary>
		/// Marks an ORC-encoded data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orc")]
		public GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema Orc { get; set; }
		
		/// <summary>
		/// Marks a Parquet-encoded data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parquet")]
		public GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema Parquet { get; set; }
		
		/// <summary>
		/// Schema in protocol buffer format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protobuf")]
		public GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema Protobuf { get; set; }
		
		/// <summary>
		/// Schema in Thrift format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thrift")]
		public GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema Thrift { get; set; }
	}
	
	/// <summary>
	/// Schema in Avro JSON format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
	{
		
		/// <summary>
		/// JSON source of the Avro schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Marks a CSV-encoded data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema
	{
	}
	
	/// <summary>
	/// Marks an ORC-encoded data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema
	{
	}
	
	/// <summary>
	/// Marks a Parquet-encoded data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema
	{
	}
	
	/// <summary>
	/// Schema in protocol buffer format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
	{
		
		/// <summary>
		/// Protocol buffer source of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Schema in Thrift format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
	{
		
		/// <summary>
		/// Thrift IDL source of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// External table registered by Dataplex. Dataplex publishes data discovered from an asset into multiple other systems (BigQuery, DPMS) in form of tables. We call them "external tables". External tables are also synced into the Data Catalog. This message contains pointers to those external tables (fully qualified name, resource name et cetera) within the Data Catalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexExternalTable
	{
		
		/// <summary>
		/// Name of the Data Catalog entry representing the external table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCatalogEntry")]
		public string DataCatalogEntry { get; set; }
		
		/// <summary>
		/// Fully qualified name (FQN) of the external table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullyQualifiedName")]
		public string FullyQualifiedName { get; set; }
		
		/// <summary>
		/// Google Cloud resource name of the external table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleCloudResource")]
		public string GoogleCloudResource { get; set; }
		
		/// <summary>
		/// Service in which the external table is registered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="system")]
		public System.Nullable<GoogleCloudDatacatalogV1DataplexExternalTableSystem> System { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DataplexExternalTableSystem
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGRATED_SYSTEM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_PUBSUB = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATAPROC_METASTORE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATAPLEX = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SPANNER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BIGTABLE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOOKER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERTEX_AI = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DatabaseTableSpecType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NATIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL = 2,
	}
	
	/// <summary>
	/// Entry specyfication for a Dataplex fileset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexFilesetSpec
	{
		
		/// <summary>
		/// Common Dataplex fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexSpec")]
		public GoogleCloudDatacatalogV1DataplexSpec DataplexSpec { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a dataset. Valid only for entries with the `DATASET` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DatasetSpec
	{
		
		/// <summary>
		/// Specification for vertex dataset resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexDatasetSpec")]
		public GoogleCloudDatacatalogV1VertexDatasetSpec VertexDatasetSpec { get; set; }
	}
	
	/// <summary>
	/// Specification for vertex dataset resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1VertexDatasetSpec
	{
		
		/// <summary>
		/// The number of DataItems in this Dataset. Only apply for non-structured Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemCount")]
		public string DataItemCount { get; set; }
		
		/// <summary>
		/// Type of the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataType")]
		public System.Nullable<GoogleCloudDatacatalogV1VertexDatasetSpecDataType> DataType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1VertexDatasetSpecDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIDEO = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERSATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_SERIES = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT_TO_SPEECH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSLATION = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORE_VISION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTERPRISE_KNOWLEDGE_GRAPH = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT_PROMPT = 12,
	}
	
	/// <summary>
	/// Wrapper for any item that can be contained in the dump.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DumpItem
	{
		
		/// <summary>
		/// Wrapper containing Entry and information about Tags that should and should not be attached to it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taggedEntry")]
		public GoogleCloudDatacatalogV1TaggedEntry TaggedEntry { get; set; }
	}
	
	/// <summary>
	/// Wrapper containing Entry and information about Tags that should and should not be attached to it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TaggedEntry
	{
		
		/// <summary>
		/// Optional. Tags that should be deleted from the Data Catalog. Caller should populate template name and column only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="absentTags")]
		public GoogleCloudDatacatalogV1Tag[] AbsentTags { get; set; }
		
		/// <summary>
		/// Optional. Tags that should be ingested into the Data Catalog. Caller should populate template name, column and fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="presentTags")]
		public GoogleCloudDatacatalogV1Tag[] PresentTags { get; set; }
		
		/// <summary>
		/// Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="v1Entry")]
		public GoogleCloudDatacatalogV1Entry V1Entry { get; set; }
	}
	
	/// <summary>
	/// Tags contain custom metadata and are attached to Data Catalog resources. Tags conform with the specification of their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Tag
	{
		
		/// <summary>
		/// Resources like entry can have schemas associated with them. This scope allows you to attach tags to an individual column based on that schema. To attach a tag to a nested column, separate column names with a dot (`.`). Example: `column.nested_column`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Required. Maps the ID of a tag field to its value and additional information about that field. Tag template defines valid field IDs. A tag must have at least 1 field and at most 500 fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1TagField> Fields { get; set; }
		
		/// <summary>
		/// The resource name of the tag in URL format where tag ID is a system-generated identifier. Note: The tag itself might not be stored in the location specified in its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The resource name of the tag template this tag uses. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE_ID}` This field cannot be modified after creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		/// <summary>
		/// Output only. The display name of the tag template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateDisplayName")]
		public string TemplateDisplayName { get; set; }
	}
	
	/// <summary>
	/// Contains the value and additional information on a field within a Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TagField
	{
		
		/// <summary>
		/// The value of a tag field with a boolean type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Output only. The display name of this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The value of a tag field with a double type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// An enum value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enumValue")]
		public GoogleCloudDatacatalogV1TagFieldEnumValue EnumValue { get; set; }
		
		/// <summary>
		/// Output only. The order of this field with respect to other fields in this tag. Can be set by Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag don't have to be sequential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		/// <summary>
		/// The value of a tag field with a rich text type. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="richtextValue")]
		public string RichtextValue { get; set; }
		
		/// <summary>
		/// The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
		
		/// <summary>
		/// The value of a tag field with a timestamp type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampValue")]
		public string TimestampValue { get; set; }
	}
	
	/// <summary>
	/// An enum value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TagFieldEnumValue
	{
		
		/// <summary>
		/// The display name of the enum value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Entry
	{
		
		/// <summary>
		/// Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDateShardedSpec")]
		public GoogleCloudDatacatalogV1BigQueryDateShardedSpec BigqueryDateShardedSpec { get; set; }
		
		/// <summary>
		/// Describes a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryTableSpec")]
		public GoogleCloudDatacatalogV1BigQueryTableSpec BigqueryTableSpec { get; set; }
		
		/// <summary>
		/// Business Context of the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="businessContext")]
		public GoogleCloudDatacatalogV1BusinessContext BusinessContext { get; set; }
		
		/// <summary>
		/// Specification that applies to all entries that are part of `CLOUD_BIGTABLE` system (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudBigtableSystemSpec")]
		public GoogleCloudDatacatalogV1CloudBigtableSystemSpec CloudBigtableSystemSpec { get; set; }
		
		/// <summary>
		/// Physical location of an entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSource")]
		public GoogleCloudDatacatalogV1DataSource DataSource { get; set; }
		
		/// <summary>
		/// Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs can be set at the time, and cannot be changed later.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSourceConnectionSpec")]
		public GoogleCloudDatacatalogV1DataSourceConnectionSpec DataSourceConnectionSpec { get; set; }
		
		/// <summary>
		/// Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseTableSpec")]
		public GoogleCloudDatacatalogV1DatabaseTableSpec DatabaseTableSpec { get; set; }
		
		/// <summary>
		/// Specification that applies to a dataset. Valid only for entries with the `DATASET` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetSpec")]
		public GoogleCloudDatacatalogV1DatasetSpec DatasetSpec { get; set; }
		
		/// <summary>
		/// Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Specification that applies to a fileset. Valid only for entries with the 'FILESET' type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filesetSpec")]
		public GoogleCloudDatacatalogV1FilesetSpec FilesetSpec { get; set; }
		
		/// <summary>
		/// [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullyQualifiedName")]
		public string FullyQualifiedName { get; set; }
		
		/// <summary>
		/// Describes a Cloud Storage fileset entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsFilesetSpec")]
		public GoogleCloudDatacatalogV1GcsFilesetSpec GcsFilesetSpec { get; set; }
		
		/// <summary>
		/// Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integratedSystem")]
		public GoogleCloudDatacatalogV1DataplexExternalTableSystem IntegratedSystem { get; set; }
		
		/// <summary>
		/// Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// Specification that applies to entries that are part `LOOKER` system (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lookerSystemSpec")]
		public GoogleCloudDatacatalogV1LookerSystemSpec LookerSystemSpec { get; set; }
		
		/// <summary>
		/// Specification that applies to a model. Valid only for entries with the `MODEL` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelSpec")]
		public GoogleCloudDatacatalogV1ModelSpec ModelSpec { get; set; }
		
		/// <summary>
		/// Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Entry metadata relevant only to the user and private to them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personalDetails")]
		public GoogleCloudDatacatalogV1PersonalDetails PersonalDetails { get; set; }
		
		/// <summary>
		/// Specification that applies to a routine. Valid only for entries with the `ROUTINE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routineSpec")]
		public GoogleCloudDatacatalogV1RoutineSpec RoutineSpec { get; set; }
		
		/// <summary>
		/// Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public GoogleCloudDatacatalogV1Schema Schema { get; set; }
		
		/// <summary>
		/// Specification that applies to a Service resource. Valid only for entries with the `SERVICE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceSpec")]
		public GoogleCloudDatacatalogV1ServiceSpec ServiceSpec { get; set; }
		
		/// <summary>
		/// Timestamps associated with this resource in a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceSystemTimestamps")]
		public GoogleCloudDatacatalogV1SystemTimestamps SourceSystemTimestamps { get; set; }
		
		/// <summary>
		/// Specification that applies to entries that are part `SQL_DATABASE` system (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlDatabaseSystemSpec")]
		public GoogleCloudDatacatalogV1SqlDatabaseSystemSpec SqlDatabaseSystemSpec { get; set; }
		
		/// <summary>
		/// The type of the entry. For details, see [`EntryType`](#entrytype).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1EntryType> Type { get; set; }
		
		/// <summary>
		/// The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageSignal")]
		public GoogleCloudDatacatalogV1UsageSignal UsageSignal { get; set; }
		
		/// <summary>
		/// Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedSystem")]
		public string UserSpecifiedSystem { get; set; }
		
		/// <summary>
		/// Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedType")]
		public string UserSpecifiedType { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a fileset. Valid only for entries with the 'FILESET' type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1FilesetSpec
	{
		
		/// <summary>
		/// Entry specyfication for a Dataplex fileset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexFileset")]
		public GoogleCloudDatacatalogV1DataplexFilesetSpec DataplexFileset { get; set; }
	}
	
	/// <summary>
	/// Describes a Cloud Storage fileset entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1GcsFilesetSpec
	{
		
		/// <summary>
		/// Required. Patterns to identify a set of files in Google Cloud Storage. For more information, see [Wildcard Names] (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). Note: Currently, bucket wildcards are not supported. Examples of valid `file_patterns`: * `gs://bucket_name/dir/*`: matches all files in `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` and all subdirectories * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to match complex sets of files, for example: `gs://bucket_name/[a-m]??.j*g`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePatterns")]
		public string[] FilePatterns { get; set; }
		
		/// <summary>
		/// Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleGcsFileSpecs")]
		public GoogleCloudDatacatalogV1GcsFileSpec[] SampleGcsFileSpecs { get; set; }
	}
	
	/// <summary>
	/// Specification of a single file in Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1GcsFileSpec
	{
		
		/// <summary>
		/// Required. Full file path. Example: `gs://bucket_name/a/b.txt`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePath")]
		public string FilePath { get; set; }
		
		/// <summary>
		/// Timestamps associated with this resource in a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsTimestamps")]
		public GoogleCloudDatacatalogV1SystemTimestamps GcsTimestamps { get; set; }
		
		/// <summary>
		/// Output only. File size in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeBytes")]
		public string SizeBytes { get; set; }
	}
	
	/// <summary>
	/// Timestamps associated with this resource in a particular system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SystemTimestamps
	{
		
		/// <summary>
		/// Creation timestamp of the resource within the given system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Expiration timestamp of the resource within the given system. Currently only applicable to BigQuery resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Timestamp of the last modification of the resource or its metadata within a given system. Note: Depending on the source system, not every modification updates this timestamp. For example, BigQuery timestamps every metadata modification but not data or permission changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to entries that are part `LOOKER` system (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1LookerSystemSpec
	{
		
		/// <summary>
		/// Name of the parent Looker Instance. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentInstanceDisplayName")]
		public string ParentInstanceDisplayName { get; set; }
		
		/// <summary>
		/// ID of the parent Looker Instance. Empty if it does not exist. Example value: `someinstance.looker.com`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentInstanceId")]
		public string ParentInstanceId { get; set; }
		
		/// <summary>
		/// Name of the parent Model. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModelDisplayName")]
		public string ParentModelDisplayName { get; set; }
		
		/// <summary>
		/// ID of the parent Model. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModelId")]
		public string ParentModelId { get; set; }
		
		/// <summary>
		/// Name of the parent View. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentViewDisplayName")]
		public string ParentViewDisplayName { get; set; }
		
		/// <summary>
		/// ID of the parent View. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentViewId")]
		public string ParentViewId { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a model. Valid only for entries with the `MODEL` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ModelSpec
	{
		
		/// <summary>
		/// Specification for vertex model resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexModelSpec")]
		public GoogleCloudDatacatalogV1VertexModelSpec VertexModelSpec { get; set; }
	}
	
	/// <summary>
	/// Specification for vertex model resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1VertexModelSpec
	{
		
		/// <summary>
		/// URI of the Docker image to be used as the custom container for serving predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerImageUri")]
		public string ContainerImageUri { get; set; }
		
		/// <summary>
		/// User provided version aliases so that a model version can be referenced via alias
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionAliases")]
		public string[] VersionAliases { get; set; }
		
		/// <summary>
		/// The description of this version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionDescription")]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// The version ID of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionId")]
		public string VersionId { get; set; }
		
		/// <summary>
		/// Detail description of the source information of a Vertex model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexModelSourceInfo")]
		public GoogleCloudDatacatalogV1VertexModelSourceInfo VertexModelSourceInfo { get; set; }
	}
	
	/// <summary>
	/// Detail description of the source information of a Vertex model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1VertexModelSourceInfo
	{
		
		/// <summary>
		/// If this Model is copy of another Model. If true then source_type pertains to the original.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copy")]
		public System.Nullable<System.Boolean> Copy { get; set; }
		
		/// <summary>
		/// Type of the model source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceType")]
		public System.Nullable<GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType> SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODEL_SOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOML = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BQML = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODEL_GARDEN = 4,
	}
	
	/// <summary>
	/// Entry metadata relevant only to the user and private to them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PersonalDetails
	{
		
		/// <summary>
		/// Set if the entry is starred; unset otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starTime")]
		public string StarTime { get; set; }
		
		/// <summary>
		/// True if the entry is starred by the user; false otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starred")]
		public System.Nullable<System.Boolean> Starred { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a routine. Valid only for entries with the `ROUTINE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1RoutineSpec
	{
		
		/// <summary>
		/// Fields specific for BigQuery routines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryRoutineSpec")]
		public GoogleCloudDatacatalogV1BigQueryRoutineSpec BigqueryRoutineSpec { get; set; }
		
		/// <summary>
		/// The body of the routine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="definitionBody")]
		public string DefinitionBody { get; set; }
		
		/// <summary>
		/// The language the routine is written in. The exact value depends on the source system. For BigQuery routines, possible values are: * `SQL` * `JAVASCRIPT`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Return type of the argument. The exact value depends on the source system and the language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnType")]
		public string ReturnType { get; set; }
		
		/// <summary>
		/// Arguments of the routine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routineArguments")]
		public GoogleCloudDatacatalogV1RoutineSpecArgument[] RoutineArguments { get; set; }
		
		/// <summary>
		/// The type of the routine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routineType")]
		public System.Nullable<GoogleCloudDatacatalogV1RoutineSpecRoutineType> RoutineType { get; set; }
	}
	
	/// <summary>
	/// Input or output argument of a function or stored procedure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1RoutineSpecArgument
	{
		
		/// <summary>
		/// Specifies whether the argument is input or output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public System.Nullable<GoogleCloudDatacatalogV1RoutineSpecArgumentMode> Mode { get; set; }
		
		/// <summary>
		/// The name of the argument. A return argument of a function might not have a name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Type of the argument. The exact value depends on the source system and the language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1RoutineSpecArgumentMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INOUT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1RoutineSpecRoutineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTINE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCALAR_FUNCTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCEDURE = 2,
	}
	
	/// <summary>
	/// Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Schema
	{
		
		/// <summary>
		/// The unified GoogleSQL-like schema of columns. The overall maximum number of columns and nested columns is 10,000. The maximum nested depth is 15 levels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public GoogleCloudDatacatalogV1ColumnSchema[] Columns { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a Service resource. Valid only for entries with the `SERVICE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ServiceSpec
	{
		
		/// <summary>
		/// Specification that applies to Instance entries that are part of `CLOUD_BIGTABLE` system. (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudBigtableInstanceSpec")]
		public GoogleCloudDatacatalogV1CloudBigtableInstanceSpec CloudBigtableInstanceSpec { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to entries that are part `SQL_DATABASE` system (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SqlDatabaseSystemSpec
	{
		
		/// <summary>
		/// Version of the database engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseVersion")]
		public string DatabaseVersion { get; set; }
		
		/// <summary>
		/// Host of the SQL database enum InstanceHost { UNDEFINED = 0; SELF_HOSTED = 1; CLOUD_SQL = 2; AMAZON_RDS = 3; AZURE_SQL = 4; } Host of the enclousing database instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceHost")]
		public string InstanceHost { get; set; }
		
		/// <summary>
		/// SQL Database Engine. enum SqlEngine { UNDEFINED = 0; MY_SQL = 1; POSTGRE_SQL = 2; SQL_SERVER = 3; } Engine of the enclosing database instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlEngine")]
		public string SqlEngine { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1EntryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTRY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODEL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_STREAM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILESET = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SOURCE_CONNECTION = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTINE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAKE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZONE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE_SCHEMA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASHBOARD = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPLORE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOOK = 15,
	}
	
	/// <summary>
	/// The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1UsageSignal
	{
		
		/// <summary>
		/// Common usage statistics over each of the predefined time ranges. Supported time ranges are `{"24H", "7D", "30D", "Lifetime"}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonUsageWithinTimeRange")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1CommonUsageStats> CommonUsageWithinTimeRange { get; set; }
		
		/// <summary>
		/// Favorite count in the source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="favoriteCount")]
		public string FavoriteCount { get; set; }
		
		/// <summary>
		/// The end timestamp of the duration of usage statistics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Output only. BigQuery usage statistics over each of the predefined time ranges. Supported time ranges are `{"24H", "7D", "30D"}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageWithinTimeRange")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1UsageStats> UsageWithinTimeRange { get; set; }
	}
	
	/// <summary>
	/// Detailed statistics on the entry's usage. Usage statistics have the following limitations: - Only BigQuery tables have them. - They only include BigQuery query jobs. - They might be underestimated because wildcard table references are not yet counted. For more information, see [Querying multiple tables using a wildcard table] (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1UsageStats
	{
		
		/// <summary>
		/// The number of cancelled attempts to use the underlying entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCancellations")]
		public System.Nullable<System.Single> TotalCancellations { get; set; }
		
		/// <summary>
		/// The number of successful uses of the underlying entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCompletions")]
		public System.Nullable<System.Single> TotalCompletions { get; set; }
		
		/// <summary>
		/// Total time spent only on successful uses, in milliseconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalExecutionTimeForCompletionsMillis")]
		public System.Nullable<System.Single> TotalExecutionTimeForCompletionsMillis { get; set; }
		
		/// <summary>
		/// The number of failed attempts to use the underlying entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalFailures")]
		public System.Nullable<System.Single> TotalFailures { get; set; }
	}
	
	/// <summary>
	/// Metadata message for long-running operation returned by the ImportEntries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportEntriesMetadata
	{
		
		/// <summary>
		/// Partial errors that are encountered during the ImportEntries operation. There is no guarantee that all the encountered errors are reported. However, if no errors are reported, it means that no errors were encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public Status[] Errors { get; set; }
		
		/// <summary>
		/// State of the import operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDatacatalogV1ImportEntriesMetadataState> State { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ImportEntriesMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_DONE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_OBSOLETE = 4,
	}
	
	/// <summary>
	/// Response message for long-running operation returned by the ImportEntries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportEntriesResponse
	{
		
		/// <summary>
		/// Number of entries deleted as a result of import operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deletedEntriesCount")]
		public string DeletedEntriesCount { get; set; }
		
		/// <summary>
		/// Cumulative number of entries created and entries updated as a result of import operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upsertedEntriesCount")]
		public string UpsertedEntriesCount { get; set; }
	}
	
	/// <summary>
	/// Long-running operation metadata message returned by the ReconcileTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ReconcileTagsMetadata
	{
		
		/// <summary>
		/// Maps the name of each tagged column (or empty string for a sole entry) to tagging operation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public System.Collections.Generic.Dictionary<string, Status> Errors { get; set; }
		
		/// <summary>
		/// State of the reconciliation operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDatacatalogV1ReconcileTagsMetadataState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ReconcileTagsMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONCILIATION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONCILIATION_QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONCILIATION_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONCILIATION_DONE = 3,
	}
	
	/// <summary>
	/// Long-running operation response message returned by ReconcileTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ReconcileTagsResponse
	{
		
		/// <summary>
		/// Number of tags created in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTagsCount")]
		public string CreatedTagsCount { get; set; }
		
		/// <summary>
		/// Number of tags deleted in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deletedTagsCount")]
		public string DeletedTagsCount { get; set; }
		
		/// <summary>
		/// Number of tags updated in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedTagsCount")]
		public string UpdatedTagsCount { get; set; }
	}
	
	/// <summary>
	/// Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec
	{
		
		/// <summary>
		/// Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// Output only. Total number of shards.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardCount")]
		public string ShardCount { get; set; }
		
		/// <summary>
		/// Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tablePrefix")]
		public string TablePrefix { get; set; }
	}
	
	/// <summary>
	/// Describes a BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1BigQueryTableSpec
	{
		
		/// <summary>
		/// Output only. The table source type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSourceType")]
		public GoogleCloudDatacatalogV1BigQueryTableSpecTableSourceType TableSourceType { get; set; }
		
		/// <summary>
		/// Normal BigQuery table spec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSpec")]
		public GoogleCloudDatacatalogV1beta1TableSpec TableSpec { get; set; }
		
		/// <summary>
		/// Table view specification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewSpec")]
		public GoogleCloudDatacatalogV1beta1ViewSpec ViewSpec { get; set; }
	}
	
	/// <summary>
	/// Normal BigQuery table spec.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1TableSpec
	{
		
		/// <summary>
		/// Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the date sharded grouped entry, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`. Otherwise, `grouped_entry` is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupedEntry")]
		public string GroupedEntry { get; set; }
	}
	
	/// <summary>
	/// Table view specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ViewSpec
	{
		
		/// <summary>
		/// Output only. The query that defines the table view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewQuery")]
		public string ViewQuery { get; set; }
	}
	
	/// <summary>
	/// Representation of a column within a schema. Columns could be nested inside other columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ColumnSchema
	{
		
		/// <summary>
		/// Required. Name of the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Optional. Description of the column. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public string Mode { get; set; }
		
		/// <summary>
		/// Optional. Schema of sub-columns. A column can have zero or more sub-columns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subcolumns")]
		public GoogleCloudDatacatalogV1beta1ColumnSchema[] Subcolumns { get; set; }
		
		/// <summary>
		/// Required. Type of the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1Entry
	{
		
		/// <summary>
		/// Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDateShardedSpec")]
		public GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec BigqueryDateShardedSpec { get; set; }
		
		/// <summary>
		/// Describes a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryTableSpec")]
		public GoogleCloudDatacatalogV1beta1BigQueryTableSpec BigqueryTableSpec { get; set; }
		
		/// <summary>
		/// Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display information such as title and description. A short name to identify the entry, for example, "Analytics Data - Jan 2011". Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Describes a Cloud Storage fileset entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsFilesetSpec")]
		public GoogleCloudDatacatalogV1beta1GcsFilesetSpec GcsFilesetSpec { get; set; }
		
		/// <summary>
		/// Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integratedSystem")]
		public System.Nullable<GoogleCloudDatacatalogV1beta1EntryIntegratedSystem> IntegratedSystem { get; set; }
		
		/// <summary>
		/// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public GoogleCloudDatacatalogV1beta1Schema Schema { get; set; }
		
		/// <summary>
		/// Timestamps about this resource according to a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceSystemTimestamps")]
		public GoogleCloudDatacatalogV1beta1SystemTimestamps SourceSystemTimestamps { get; set; }
		
		/// <summary>
		/// The type of the entry. Only used for Entries with types in the EntryType enum.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1beta1EntryType> Type { get; set; }
		
		/// <summary>
		/// The set of all usage signals that we store in Data Catalog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageSignal")]
		public GoogleCloudDatacatalogV1beta1UsageSignal UsageSignal { get; set; }
		
		/// <summary>
		/// This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedSystem")]
		public string UserSpecifiedSystem { get; set; }
		
		/// <summary>
		/// Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example "my_special_type". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedType")]
		public string UserSpecifiedType { get; set; }
	}
	
	/// <summary>
	/// Describes a Cloud Storage fileset entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1GcsFilesetSpec
	{
		
		/// <summary>
		/// Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames) for more information. Note that bucket wildcards are currently not supported. Examples of valid file_patterns: * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir` directory. * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` spanning all subdirectories. * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to provide more powerful matches, for example: * `gs://bucket_name/[a-m]??.j*g`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePatterns")]
		public string[] FilePatterns { get; set; }
		
		/// <summary>
		/// Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleGcsFileSpecs")]
		public GoogleCloudDatacatalogV1beta1GcsFileSpec[] SampleGcsFileSpecs { get; set; }
	}
	
	/// <summary>
	/// Specifications of a single file in Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1GcsFileSpec
	{
		
		/// <summary>
		/// Required. The full file path. Example: `gs://bucket_name/a/b.txt`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePath")]
		public string FilePath { get; set; }
		
		/// <summary>
		/// Timestamps about this resource according to a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsTimestamps")]
		public GoogleCloudDatacatalogV1beta1SystemTimestamps GcsTimestamps { get; set; }
		
		/// <summary>
		/// Output only. The size of the file, in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeBytes")]
		public string SizeBytes { get; set; }
	}
	
	/// <summary>
	/// Timestamps about this resource according to a particular system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SystemTimestamps
	{
		
		/// <summary>
		/// The creation time of the resource within the given system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// The last-modified time of the resource within the given system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1beta1EntryIntegratedSystem
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGRATED_SYSTEM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_PUBSUB = 2,
	}
	
	/// <summary>
	/// Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1Schema
	{
		
		/// <summary>
		/// Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public GoogleCloudDatacatalogV1beta1ColumnSchema[] Columns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1beta1EntryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTRY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODEL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_STREAM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILESET = 4,
	}
	
	/// <summary>
	/// The set of all usage signals that we store in Data Catalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1UsageSignal
	{
		
		/// <summary>
		/// The timestamp of the end of the usage statistics duration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {"24H", "7D", "30D"}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageWithinTimeRange")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1beta1UsageStats> UsageWithinTimeRange { get; set; }
	}
	
	/// <summary>
	/// Detailed counts on the entry's usage. Caveats: - Only BigQuery tables have usage stats - The usage stats only include BigQuery query jobs - The usage stats might be underestimated, e.g. wildcard table references are not yet counted in usage computation https://cloud.google.com/bigquery/docs/querying-wildcard-tables
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1UsageStats
	{
		
		/// <summary>
		/// The number of times that the underlying entry was attempted to be used but was cancelled by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCancellations")]
		public System.Nullable<System.Single> TotalCancellations { get; set; }
		
		/// <summary>
		/// The number of times that the underlying entry was successfully used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCompletions")]
		public System.Nullable<System.Single> TotalCompletions { get; set; }
		
		/// <summary>
		/// Total time spent (in milliseconds) during uses the resulted in completions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalExecutionTimeForCompletionsMillis")]
		public System.Nullable<System.Single> TotalExecutionTimeForCompletionsMillis { get; set; }
		
		/// <summary>
		/// The number of times that the underlying entry was attempted to be used but failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalFailures")]
		public System.Nullable<System.Single> TotalFailures { get; set; }
	}
	
	/// <summary>
	/// EntryGroup Metadata. An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1EntryGroup
	{
		
		/// <summary>
		/// Timestamps about this resource according to a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCatalogTimestamps")]
		public GoogleCloudDatacatalogV1beta1SystemTimestamps DataCatalogTimestamps { get; set; }
		
		/// <summary>
		/// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A short name to identify the entry group, for example, "analytics data - jan 2011". Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The resource name of the entry group in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response message for ExportTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse
	{
		
		/// <summary>
		/// List of taxonomies and policy tags in a tree structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1beta1SerializedTaxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// Message capturing a taxonomy and its policy tag hierarchy as a nested proto. Used for taxonomy import/export and mutation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SerializedTaxonomy
	{
		
		/// <summary>
		/// A list of policy types that are activated for a taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activatedPolicyTypes")]
		public string[] ActivatedPolicyTypes { get; set; }
		
		/// <summary>
		/// Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Top level policy tags associated with the taxonomy if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTags")]
		public GoogleCloudDatacatalogV1beta1SerializedPolicyTag[] PolicyTags { get; set; }
	}
	
	/// <summary>
	/// Message representing one policy tag when exported as a nested proto.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SerializedPolicyTag
	{
		
		/// <summary>
		/// Children of the policy tag if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childPolicyTags")]
		public GoogleCloudDatacatalogV1beta1SerializedPolicyTag[] ChildPolicyTags { get; set; }
		
		/// <summary>
		/// Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name of the policy tag. This field will be ignored when calling ImportTaxonomies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTag")]
		public string PolicyTag { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1FieldType
	{
		
		[System.Runtime.Serialization.DataMember(Name="enumType")]
		public GoogleCloudDatacatalogV1beta1FieldTypeEnumType EnumType { get; set; }
		
		/// <summary>
		/// Represents primitive types - string, bool etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primitiveType")]
		public System.Nullable<GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType> PrimitiveType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1FieldTypeEnumType
	{
		
		[System.Runtime.Serialization.DataMember(Name="allowedValues")]
		public GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue[] AllowedValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue
	{
		
		/// <summary>
		/// Required. The display name of the enum value. Must not be an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMITIVE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOUBLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMESTAMP = 4,
	}
	
	/// <summary>
	/// Request message for ImportTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest
	{
		
		/// <summary>
		/// Inline source used for taxonomies import.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineSource")]
		public GoogleCloudDatacatalogV1beta1InlineSource InlineSource { get; set; }
	}
	
	/// <summary>
	/// Inline source used for taxonomies import.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1InlineSource
	{
		
		/// <summary>
		/// Required. Taxonomies to be imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1beta1SerializedTaxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// Response message for ImportTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse
	{
		
		/// <summary>
		/// Taxonomies that were imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1beta1Taxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data *sensitivity* taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1Taxonomy
	{
		
		/// <summary>
		/// Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activatedPolicyTypes")]
		public string[] ActivatedPolicyTypes { get; set; }
		
		/// <summary>
		/// Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Identifier. Resource name of this taxonomy, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Number of policy tags contained in this taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTagCount")]
		public System.Nullable<System.Int32> PolicyTagCount { get; set; }
		
		/// <summary>
		/// The source system of the Taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public GoogleCloudDatacatalogV1beta1TaxonomyService Service { get; set; }
		
		/// <summary>
		/// Timestamps about this resource according to a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomyTimestamps")]
		public GoogleCloudDatacatalogV1beta1SystemTimestamps TaxonomyTimestamps { get; set; }
	}
	
	/// <summary>
	/// The source system of the Taxonomy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1TaxonomyService
	{
		
		/// <summary>
		/// The service agent for the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The Google Cloud service name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public System.Nullable<GoogleCloudDatacatalogV1beta1TaxonomyServiceName> Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1beta1TaxonomyServiceName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGING_SYSTEM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGING_SYSTEM_DATAPLEX = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGING_SYSTEM_OTHER = 2,
	}
	
	/// <summary>
	/// Response message for ListEntries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ListEntriesResponse
	{
		
		/// <summary>
		/// Entry details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entries")]
		public GoogleCloudDatacatalogV1beta1Entry[] Entries { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results. It is set to empty if no items remain in results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListEntryGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse
	{
		
		/// <summary>
		/// EntryGroup details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entryGroups")]
		public GoogleCloudDatacatalogV1beta1EntryGroup[] EntryGroups { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results. It is set to empty if no items remain in results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListPolicyTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse
	{
		
		/// <summary>
		/// Token used to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The policy tags that are in the requested taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTags")]
		public GoogleCloudDatacatalogV1beta1PolicyTag[] PolicyTags { get; set; }
	}
	
	/// <summary>
	/// Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined in a hierarchy. For example, consider the following hierarchy: Geolocation -> (LatLong, City, ZipCode). PolicyTag "Geolocation" contains three child policy tags: "LatLong", "City", and "ZipCode".
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1PolicyTag
	{
		
		/// <summary>
		/// Output only. Resource names of child policy tags of this policy tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childPolicyTags")]
		public string[] ChildPolicyTags { get; set; }
		
		/// <summary>
		/// Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Identifier. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentPolicyTag")]
		public string ParentPolicyTag { get; set; }
	}
	
	/// <summary>
	/// Response message for ListTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ListTagsResponse
	{
		
		/// <summary>
		/// Token to retrieve the next page of results. It is set to empty if no items remain in results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Tag details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GoogleCloudDatacatalogV1beta1Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1Tag
	{
		
		/// <summary>
		/// Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an individual column based on that schema. For attaching a tag to a nested column, use `.` to separate the column names. Example: * `outer_column.inner_column`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Required. This maps the ID of a tag field to the value of and additional information about that field. Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1beta1TagField> Fields { get; set; }
		
		/// <summary>
		/// The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The resource name of the tag template that this tag uses. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} This field cannot be modified after creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		/// <summary>
		/// Output only. The display name of the tag template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateDisplayName")]
		public string TemplateDisplayName { get; set; }
	}
	
	/// <summary>
	/// Contains the value and supporting information for a field within a Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1TagField
	{
		
		/// <summary>
		/// Holds the value for a tag field with boolean type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Output only. The display name of this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Holds the value for a tag field with double type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// Holds an enum value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enumValue")]
		public GoogleCloudDatacatalogV1beta1TagFieldEnumValue EnumValue { get; set; }
		
		/// <summary>
		/// Output only. The order of this field with respect to other fields in this tag. It can be set in Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		/// <summary>
		/// Holds the value for a tag field with string type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
		
		/// <summary>
		/// Holds the value for a tag field with timestamp type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampValue")]
		public string TimestampValue { get; set; }
	}
	
	/// <summary>
	/// Holds an enum value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1TagFieldEnumValue
	{
		
		/// <summary>
		/// The display name of the enum value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Response message for ListTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse
	{
		
		/// <summary>
		/// Token used to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Taxonomies that the project contains.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1beta1Taxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// Request message for RenameTagTemplateFieldEnumValue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest
	{
		
		/// <summary>
		/// Required. The new display name of the enum value. For example, `my_new_enum_value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newEnumValueDisplayName")]
		public string NewEnumValueDisplayName { get; set; }
	}
	
	/// <summary>
	/// Request message for RenameTagTemplateField.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest
	{
		
		/// <summary>
		/// Required. The new ID of this tag template field. For example, `my_new_field`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newTagTemplateFieldId")]
		public string NewTagTemplateFieldId { get; set; }
	}
	
	/// <summary>
	/// Request message for SearchCatalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SearchCatalogRequest
	{
		
		/// <summary>
		/// Specifies the ordering of results, currently supported case-sensitive choices are: * `relevance`, only supports descending * `last_modified_timestamp [asc|desc]`, defaults to descending if not specified * `default` that can only be descending If not specified, defaults to `relevance` descending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderBy")]
		public string OrderBy { get; set; }
		
		/// <summary>
		/// Number of results in the search page. If <=0 then defaults to 10. Max limit for page_size is 1000. Throws an invalid argument for page_size > 1000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Optional. Pagination token returned in an earlier SearchCatalogResponse.next_page_token, which indicates that this is a continuation of a prior SearchCatalogRequest call, and that the system should return the next page of data. If empty, the first page is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Optional. The query string in search query syntax. An empty query string will result in all data assets (in the specified scope) that the user has access to. Query strings can be simple as "x" or more qualified as: * name:x * column:x * description:y Note: Query tokens need to have a minimum of 3 characters for substring matching to work correctly. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// The criteria that select the subspace used for query matching.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope Scope { get; set; }
	}
	
	/// <summary>
	/// The criteria that select the subspace used for query matching.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope
	{
		
		/// <summary>
		/// If `true`, include Google Cloud public datasets in the search results. Info on Google Cloud public datasets is available at https://cloud.google.com/public-datasets/. By default, Google Cloud public datasets are excluded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeGcpPublicDatasets")]
		public System.Nullable<System.Boolean> IncludeGcpPublicDatasets { get; set; }
		
		/// <summary>
		/// The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeOrgIds")]
		public string[] IncludeOrgIds { get; set; }
		
		/// <summary>
		/// The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeProjectIds")]
		public string[] IncludeProjectIds { get; set; }
		
		/// <summary>
		/// Optional. The list of locations to search within. 1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the `SearchCatalogResponse.unreachable` field, users can repeat the search request with this parameter set to get additional information on the error. Valid locations: * asia-east1 * asia-east2 * asia-northeast1 * asia-northeast2 * asia-northeast3 * asia-south1 * asia-southeast1 * australia-southeast1 * eu * europe-north1 * europe-west1 * europe-west2 * europe-west3 * europe-west4 * europe-west6 * global * northamerica-northeast1 * southamerica-east1 * us * us-central1 * us-east1 * us-east4 * us-west1 * us-west2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restrictedLocations")]
		public string[] RestrictedLocations { get; set; }
	}
	
	/// <summary>
	/// Response message for SearchCatalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SearchCatalogResponse
	{
		
		/// <summary>
		/// The token that can be used to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GoogleCloudDatacatalogV1beta1SearchCatalogResult[] Results { get; set; }
		
		/// <summary>
		/// The approximate total number of entries matched by the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
		
		/// <summary>
		/// Unreachable locations. Search result does not include data from those locations. Users can get additional information on the error by repeating the search request with a more restrictive parameter -- setting the value for `SearchDataCatalogRequest.scope.restricted_locations`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// A result that appears in the response of a search request. Each result captures details of one entry that matches the search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1SearchCatalogResult
	{
		
		/// <summary>
		/// The full name of the cloud resource the entry belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Example: * `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// Last-modified timestamp of the entry from the managing system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifyTime")]
		public string ModifyTime { get; set; }
		
		/// <summary>
		/// The relative resource name of the resource in URL format. Examples: * `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}` * `projects/{project_id}/tagTemplates/{tag_template_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativeResourceName")]
		public string RelativeResourceName { get; set; }
		
		/// <summary>
		/// Sub-type of the search result. This is a dot-delimited description of the resource's full type, and is the same as the value callers would provide in the "type" search facet. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchResultSubtype")]
		public string SearchResultSubtype { get; set; }
		
		/// <summary>
		/// Type of the search result. This field can be used to determine which Get method to call to fetch the full resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchResultType")]
		public System.Nullable<GoogleCloudDatacatalogV1beta1SearchCatalogResultSearchResultType> SearchResultType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1beta1SearchCatalogResultSearchResultType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_RESULT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTRY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAG_TEMPLATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTRY_GROUP = 3,
	}
	
	/// <summary>
	/// A tag template defines a tag, which can have one or more typed fields. The template is used to create and attach the tag to Google Cloud resources. [Tag template roles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. See, for example, the [TagTemplate User](https://cloud.google.com/data-catalog/docs/how-to/template-user) role, which includes permission to use the tag template to tag resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1TagTemplate
	{
		
		/// <summary>
		/// The display name for this template. Defaults to an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1beta1TagTemplateField> Fields { get; set; }
		
		/// <summary>
		/// The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The template for an individual field within a tag template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1beta1TagTemplateField
	{
		
		/// <summary>
		/// The description for this field. Defaults to an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The display name for this field. Defaults to an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Whether this is a required field. Defaults to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isRequired")]
		public System.Nullable<System.Boolean> IsRequired { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudDatacatalogV1beta1FieldType Type { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Policy
	{
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public Policy Policy { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Searches Data Catalog for multiple resources like entries, tags that match a query. This is a custom method (https://cloud.google.com/apis/design/custom_methods) and does not return the complete resource, only the resource identifier and high level fields. Clients can subsequently call `Get` methods. Note that Data Catalog search queries do not guarantee full recall. Query results that match your query may not be returned, even in subsequent result pages. Also note that results returned (and not returned) can vary across repeated search queries. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.
		/// Datacatalog_catalog_search v1beta1/catalog:search
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1SearchCatalogResponse> Datacatalog_catalog_searchAsync(GoogleCloudDatacatalogV1beta1SearchCatalogRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/catalog:search";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1SearchCatalogResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Get an entry by target resource name. This method allows clients to use the resource name from the source Google Cloud Platform service to get the Data Catalog Entry.
		/// Datacatalog_entries_lookup v1beta1/entries:lookup
		/// </summary>
		/// <param name="linkedResource">The full name of the Google Cloud Platform resource the Data Catalog entry represents. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are case-sensitive. Examples: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId * //pubsub.googleapis.com/projects/projectId/topics/topicId</param>
		/// <param name="sqlResource">The SQL name of the entry. SQL names are case-sensitive. Examples: * `pubsub.project_id.topic_id` * ``pubsub.project_id.`topic.id.with.dots` `` * `bigquery.table.project_id.dataset_id.table_id` * `bigquery.dataset.project_id.dataset_id` * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id` `*_id`s should satisfy the standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1Entry> Datacatalog_entries_lookupAsync(string linkedResource, string sqlResource, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/entries:lookup?linkedResource=" + (linkedResource==null? "" : System.Uri.EscapeDataString(linkedResource))+"&sqlResource=" + (sqlResource==null? "" : System.Uri.EscapeDataString(sqlResource));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1Entry>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a policy tag. Also deletes all of its descendant policy tags.
		/// Datacatalog_projects_locations_taxonomies_policyTags_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also be deleted.</param>
		/// <param name="force">Required. Currently, this field must always be set to `true`. This confirms the deletion of this field from any tags using this field. `force = false` will be supported in the future.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Datacatalog_projects_locations_taxonomies_policyTags_deleteAsync(string name, bool force, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&force="+force;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_get v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of the requested policy tag.</param>
		/// <param name="readMask">The fields to return. If not set or empty, all fields are returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1PolicyTag> Datacatalog_projects_locations_taxonomies_policyTags_getAsync(string name, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1PolicyTag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_patch v1beta1/{name}
		/// </summary>
		/// <param name="name">Identifier. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".</param>
		/// <param name="updateMask">The update mask applies to the resource. Only display_name, description and parent_policy_tag can be updated and thus can be listed in the mask. If update_mask is not provided, all allowed fields (i.e. display_name, description and parent) will be updated. For more information including the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1PolicyTag> Datacatalog_projects_locations_taxonomies_policyTags_patchAsync(string name, string updateMask, GoogleCloudDatacatalogV1beta1PolicyTag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1PolicyTag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Renames an enum value in a tag template. The enum values have to be unique within one enum field. Thus, an enum value cannot be renamed with a name used in any other enum value within the same enum field.
		/// Datacatalog_projects_locations_tagTemplates_fields_enumValues_rename v1beta1/{name}:rename
		/// </summary>
		/// <param name="name">Required. The name of the enum field value. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1TagTemplateField> Datacatalog_projects_locations_tagTemplates_fields_enumValues_renameAsync(string name, GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":rename";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1TagTemplateField>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists entries.
		/// Datacatalog_projects_locations_entryGroups_entries_list v1beta1/{parent}/entries
		/// </summary>
		/// <param name="parent">Required. The name of the entry group that contains the entries, which can be provided in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}</param>
		/// <param name="pageSize">The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size > 1000`.</param>
		/// <param name="pageToken">Token that specifies which page is requested. If empty, the first page is returned.</param>
		/// <param name="readMask">The fields to return for each Entry. If not set or empty, all fields are returned. For example, setting read_mask to contain only one path "name" will cause ListEntries to return a list of Entries with only "name" field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ListEntriesResponse> Datacatalog_projects_locations_entryGroups_entries_listAsync(string parent, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ListEntriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group.
		/// Datacatalog_projects_locations_entryGroups_entries_create v1beta1/{parent}/entries
		/// </summary>
		/// <param name="parent">Required. The name of the entry group this entry is in. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this Entry and its child resources may not actually be stored in the location in this name.</param>
		/// <param name="entryId">Required. The id of the entry to create.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1Entry> Datacatalog_projects_locations_entryGroups_entries_createAsync(string parent, string entryId, GoogleCloudDatacatalogV1beta1Entry requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries&entryId=" + (entryId==null? "" : System.Uri.EscapeDataString(entryId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1Entry>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists entry groups.
		/// Datacatalog_projects_locations_entryGroups_list v1beta1/{parent}/entryGroups
		/// </summary>
		/// <param name="parent">Required. The name of the location that contains the entry groups, which can be provided in URL format. Example: * projects/{project_id}/locations/{location}</param>
		/// <param name="pageSize">Optional. The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size > 1000`.</param>
		/// <param name="pageToken">Optional. Token that specifies which page is requested. If empty, the first page is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse> Datacatalog_projects_locations_entryGroups_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entryGroups&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
		/// Datacatalog_projects_locations_entryGroups_create v1beta1/{parent}/entryGroups
		/// </summary>
		/// <param name="parent">Required. The name of the project this entry group is in. Example: * projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.</param>
		/// <param name="entryGroupId">Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1EntryGroup> Datacatalog_projects_locations_entryGroups_createAsync(string parent, string entryGroupId, GoogleCloudDatacatalogV1beta1EntryGroup requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entryGroups&entryGroupId=" + (entryGroupId==null? "" : System.Uri.EscapeDataString(entryGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1EntryGroup>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
		/// Datacatalog_projects_locations_tagTemplates_fields_create v1beta1/{parent}/fields
		/// </summary>
		/// <param name="parent">Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}</param>
		/// <param name="tagTemplateFieldId">Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1TagTemplateField> Datacatalog_projects_locations_tagTemplates_fields_createAsync(string parent, string tagTemplateFieldId, GoogleCloudDatacatalogV1beta1TagTemplateField requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/fields&tagTemplateFieldId=" + (tagTemplateFieldId==null? "" : System.Uri.EscapeDataString(tagTemplateFieldId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1TagTemplateField>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all policy tags in a taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_list v1beta1/{parent}/policyTags
		/// </summary>
		/// <param name="parent">Required. Resource name of the taxonomy to list the policy tags of.</param>
		/// <param name="pageSize">The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.</param>
		/// <param name="pageToken">The next_page_token value returned from a previous List request, if any. If not set, defaults to an empty string.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse> Datacatalog_projects_locations_taxonomies_policyTags_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/policyTags&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a policy tag in the specified taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_create v1beta1/{parent}/policyTags
		/// </summary>
		/// <param name="parent">Required. Resource name of the taxonomy that the policy tag will belong to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1PolicyTag> Datacatalog_projects_locations_taxonomies_policyTags_createAsync(string parent, GoogleCloudDatacatalogV1beta1PolicyTag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/policyTags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1PolicyTag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
		/// Datacatalog_projects_locations_tagTemplates_create v1beta1/{parent}/tagTemplates
		/// </summary>
		/// <param name="parent">Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions. Example: * projects/{project_id}/locations/us-central1</param>
		/// <param name="tagTemplateId">Required. The id of the tag template to create.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1TagTemplate> Datacatalog_projects_locations_tagTemplates_createAsync(string parent, string tagTemplateId, GoogleCloudDatacatalogV1beta1TagTemplate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tagTemplates&tagTemplateId=" + (tagTemplateId==null? "" : System.Uri.EscapeDataString(tagTemplateId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1TagTemplate>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists tags assigned to an Entry. The columns in the response are lowercased.
		/// Datacatalog_projects_locations_entryGroups_tags_list v1beta1/{parent}/tags
		/// </summary>
		/// <param name="parent">Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry or an EntryGroup. Examples: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}</param>
		/// <param name="pageSize">The maximum number of tags to return. Default is 10. Max limit is 1000.</param>
		/// <param name="pageToken">Token that specifies which page is requested. If empty, the first page is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ListTagsResponse> Datacatalog_projects_locations_entryGroups_tags_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ListTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization.
		/// Datacatalog_projects_locations_entryGroups_tags_create v1beta1/{parent}/tags
		/// </summary>
		/// <param name="parent">Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Tag and its child resources may not actually be stored in the location in this name.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1Tag> Datacatalog_projects_locations_entryGroups_tags_createAsync(string parent, GoogleCloudDatacatalogV1beta1Tag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1Tag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all taxonomies in a project in a particular location that the caller has permission to view.
		/// Datacatalog_projects_locations_taxonomies_list v1beta1/{parent}/taxonomies
		/// </summary>
		/// <param name="parent">Required. Resource name of the project to list the taxonomies of.</param>
		/// <param name="filter">Supported field for filter is 'service' and value is 'dataplex'. Eg: service=dataplex.</param>
		/// <param name="pageSize">The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.</param>
		/// <param name="pageToken">The next_page_token value returned from a previous list request, if any. If not set, defaults to an empty string.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse> Datacatalog_projects_locations_taxonomies_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a taxonomy in the specified project.
		/// Datacatalog_projects_locations_taxonomies_create v1beta1/{parent}/taxonomies
		/// </summary>
		/// <param name="parent">Required. Resource name of the project that the taxonomy will belong to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1Taxonomy> Datacatalog_projects_locations_taxonomies_createAsync(string parent, GoogleCloudDatacatalogV1beta1Taxonomy requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1Taxonomy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Exports all taxonomies and their policy tags in a project. This method generates SerializedTaxonomy protos with nested policy tags that can be used as an input for future ImportTaxonomies calls.
		/// Datacatalog_projects_locations_taxonomies_export v1beta1/{parent}/taxonomies:export
		/// </summary>
		/// <param name="parent">Required. Resource name of the project that taxonomies to be exported will share.</param>
		/// <param name="serializedTaxonomies">Export taxonomies as serialized taxonomies.</param>
		/// <param name="taxonomies">Required. Resource names of the taxonomies to be exported.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse> Datacatalog_projects_locations_taxonomies_exportAsync(string parent, bool serializedTaxonomies, string[] taxonomies, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies:export&serializedTaxonomies="+serializedTaxonomies+"&"+string.Join("&", taxonomies.Select(z => $"taxonomies={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides a bulk taxonomy / policy tag creation using nested proto structure.
		/// Datacatalog_projects_locations_taxonomies_import v1beta1/{parent}/taxonomies:import
		/// </summary>
		/// <param name="parent">Required. Resource name of project that the imported taxonomies will belong to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse> Datacatalog_projects_locations_taxonomies_importAsync(string parent, GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the IAM policy for a taxonomy or a policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_getIamPolicy v1beta1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Datacatalog_projects_locations_taxonomies_policyTags_getIamPolicyAsync(string resource, GetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sets the IAM policy for a taxonomy or a policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_setIamPolicy v1beta1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Datacatalog_projects_locations_taxonomies_policyTags_setIamPolicyAsync(string resource, SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the permissions that a caller has on the specified taxonomy or policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_testIamPermissions v1beta1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<TestIamPermissionsResponse> Datacatalog_projects_locations_taxonomies_policyTags_testIamPermissionsAsync(string resource, TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

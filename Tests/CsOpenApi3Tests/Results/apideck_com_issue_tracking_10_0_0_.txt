//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
		
		/// <summary>
		/// Name of city.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Name of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_name")]
		public string Contact_name { get; set; }
		
		/// <summary>
		/// country code according to ISO 3166-1 alpha-2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Address field that holds a sublocality, such as a county
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="county")]
		public string County { get; set; }
		
		/// <summary>
		/// Email address of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Fax number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// Unique identifier for the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Latitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		/// <summary>
		/// Line 1 of the address e.g. number, street, suite, apt #, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line1")]
		public string Line1 { get; set; }
		
		/// <summary>
		/// Line 2 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line2")]
		public string Line2 { get; set; }
		
		/// <summary>
		/// Line 3 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line3")]
		public string Line3 { get; set; }
		
		/// <summary>
		/// Line 4 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line4")]
		public string Line4 { get; set; }
		
		/// <summary>
		/// Longitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		/// <summary>
		/// The name of the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Additional notes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// Phone number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// Zip code or equivalent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Salutation of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		/// <summary>
		/// Name of state
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Street number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_number")]
		public string Street_number { get; set; }
		
		/// <summary>
		/// The address string. Some APIs don't provide structured address data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="string")]
		public string String { get; set; }
		
		/// <summary>
		/// The type of address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AddressType> Type { get; set; }
		
		/// <summary>
		/// Website of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddressType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billing = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Assignee
	{
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Collection
	{
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Description of the collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The collections's parent ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// The collections's type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	/// <summary>
	/// When custom mappings are configured on the resource, the result is included here.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomMappings
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollectionTag
	{
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollectionTicketComment
	{
		
		/// <summary>
		/// Body of the comment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="body")]
		public string Body { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollectionUser
	{
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Email address of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Last name of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Full name of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The URL of the photo of a person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="photo_url")]
		public string Photo_url { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollectionsSort
	{
		
		/// <summary>
		/// The field on which to sort the Collections
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<CollectionsSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<CollectionsSortDirection> Direction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CollectionsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CollectionsSortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CommentsSort
	{
		
		/// <summary>
		/// The field on which to sort the Comments
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<CommentsSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.ComponentModel.DefaultValue(CollectionsSortDirection.asc)]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public CollectionsSortDirection Direction { get; set; } = CollectionsSortDirection.asc;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CommentsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCommentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnifiedId
	{
		
		/// <summary>
		/// The unique identifier of the resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTicketResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Currency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETH = 182,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomField
	{
		
		/// <summary>
		/// More information about the custom field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Unique identifier for the custom field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the custom field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCommentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTicketResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Department
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Department name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Parent ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Email
	{
		
		/// <summary>
		/// Email address
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Email1 { get; set; }
		
		/// <summary>
		/// Unique identifier for the email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Email type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<EmailType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	/// <summary>
	/// The gender represents the gender identity of a person.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Gender
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		male = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		female = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unisex = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_specified = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollectionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Collection Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollectionTagsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CollectionTag[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Links to navigate to previous or next pages through the API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Links
	{
		
		/// <summary>
		/// Link to navigate to the current page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	/// <summary>
	/// Response metadata
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Meta
	{
		
		/// <summary>
		/// Cursors to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursors")]
		public MetaCursors Cursors { get; set; }
		
		/// <summary>
		/// Number of items returned in the data property of the response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items_on_page")]
		public System.Nullable<System.Int32> Items_on_page { get; set; }
	}
	
	public class MetaCursors
	{
		
		/// <summary>
		/// Cursor to navigate to the current page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the next page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the previous page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollectionUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CollectionUser Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollectionUsersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CollectionUser[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollectionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Collection[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCommentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CollectionTicketComment Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCommentsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CollectionTicketComment[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTicketResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Ticket Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ticket
	{
		
		[System.Runtime.Serialization.DataMember(Name="assignees")]
		public Assignee[] Assignees { get; set; }
		
		/// <summary>
		/// The ticket's collection ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="collection_id")]
		public string Collection_id { get; set; }
		
		/// <summary>
		/// When the ticket was completed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The ticket's description. HTML version of description is mapped if supported by the third-party platform
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Due date of the ticket
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="due_date")]
		public System.Nullable<System.DateTimeOffset> Due_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ticket's parent ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// Priority of the ticket
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<TicketPriority> Priority { get; set; }
		
		/// <summary>
		/// The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Subject of the ticket
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public CollectionTag[] Tags { get; set; }
		
		/// <summary>
		/// The ticket's type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TicketPriority
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		low = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		normal = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		high = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		urgent = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTicketsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Ticket[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IssueTrackingEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="*")]
		_ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking.ticket.created")]
		issueMinustracking_ticket_created = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking.ticket.updated")]
		issueMinustracking_ticket_updated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking.ticket.deleted")]
		issueMinustracking_ticket_deleted = 3,
	}
	
	public class IssueTrackingWebhookEvent
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IssuesFilter
	{
		
		/// <summary>
		/// Only return tickets assigned to a specific user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee_id")]
		public string Assignee_id { get; set; }
		
		/// <summary>
		/// Only return tickets since a specific date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="since")]
		public System.Nullable<System.DateTimeOffset> Since { get; set; }
		
		/// <summary>
		/// Filter by ticket status, can be `open`, `closed` or `all`. Will passthrough if none of the above match
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string[] Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotImplementedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PassThroughQuery
	{
		
		/// <summary>
		/// All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="example_downstream_property")]
		public string Example_downstream_property { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentRequiredResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	/// <summary>
	/// Unit of measurement for employee compensation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hour = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		week = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		month = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		year = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paycheck = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumber
	{
		
		/// <summary>
		/// The area code of the phone number, e.g. 323
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="area_code")]
		public string Area_code { get; set; }
		
		/// <summary>
		/// The country code of the phone number, e.g. +1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The extension of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extension")]
		public string Extension { get; set; }
		
		/// <summary>
		/// Unique identifier of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The phone number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Number { get; set; }
		
		/// <summary>
		/// The type of phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PhoneNumberType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mobile = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assistant = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fax = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="direct-dial-in")]
		directMinusdialMinusin = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 10,
	}
	
	/// <summary>
	/// The direction in which to sort the results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TicketsSort
	{
		
		/// <summary>
		/// The field on which to sort the Tickets
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public CommentsSortBy By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.ComponentModel.DefaultValue(CollectionsSortDirection.asc)]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public CollectionsSortDirection Direction { get; set; } = CollectionsSortDirection.asc;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public TooManyRequestsResponseDetail Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	public class TooManyRequestsResponseDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnauthorizedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnexpectedErrorResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnprocessableResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCommentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTicketResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Website
	{
		
		/// <summary>
		/// Unique identifier for the website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The type of website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<WebsiteType> Type { get; set; }
		
		/// <summary>
		/// The website URL
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebsiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 4,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List Collections
		/// List Collections
		/// CollectionsAll issue-tracking/collections
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>List Collections</returns>
		public async Task<GetCollectionsResponse> CollectionsAllAsync(bool raw, string cursor, int limit, CollectionsSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollectionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Collection
		/// Get Collection
		/// CollectionsOne issue-tracking/collections/{collection_id}
		/// </summary>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Get a Collection</returns>
		public async Task<GetCollectionResponse> CollectionsOneAsync(string collection_id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Tags
		/// List Tags
		/// CollectionTagsAll issue-tracking/collections/{collection_id}/tags
		/// </summary>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>List Tags</returns>
		public async Task<GetCollectionTagsResponse> CollectionTagsAllAsync(string collection_id, bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tags&raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollectionTagsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Tickets
		/// List Tickets
		/// CollectionTicketsAll issue-tracking/collections/{collection_id}/tickets
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>List Tickets</returns>
		public async Task<GetTicketsResponse> CollectionTicketsAllAsync(bool raw, string cursor, int limit, string collection_id, TicketsSort sort, IssuesFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&sort=" + sort+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetTicketsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Ticket
		/// Create Ticket
		/// CollectionTicketsAdd issue-tracking/collections/{collection_id}/tickets
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		public async Task CollectionTicketsAddAsync(bool raw, string collection_id, Ticket requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets?raw="+raw;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Ticket
		/// Delete Ticket
		/// CollectionTicketsDelete issue-tracking/collections/{collection_id}/tickets/{ticket_id}
		/// </summary>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		/// <returns>Delete a Ticket</returns>
		public async Task<DeleteTicketResponse> CollectionTicketsDeleteAsync(string ticket_id, bool raw, string collection_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"&raw="+raw;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteTicketResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Ticket
		/// Get Ticket
		/// CollectionTicketsOne issue-tracking/collections/{collection_id}/tickets/{ticket_id}
		/// </summary>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Get a Ticket</returns>
		public async Task<GetTicketResponse> CollectionTicketsOneAsync(string ticket_id, bool raw, string collection_id, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetTicketResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Ticket
		/// Update Ticket
		/// CollectionTicketsUpdate issue-tracking/collections/{collection_id}/tickets/{ticket_id}
		/// </summary>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		/// <returns>Update a Ticket</returns>
		public async Task<UpdateTicketResponse> CollectionTicketsUpdateAsync(string ticket_id, bool raw, string collection_id, Ticket requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"&raw="+raw;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTicketResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Comments
		/// List Comments
		/// CollectionTicketCommentsAll issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>List Comments</returns>
		public async Task<GetCommentsResponse> CollectionTicketCommentsAllAsync(bool raw, string cursor, int limit, string collection_id, string ticket_id, CommentsSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"/comments?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCommentsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Comment
		/// Create Comment
		/// CollectionTicketCommentsAdd issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		public async Task CollectionTicketCommentsAddAsync(bool raw, string collection_id, string ticket_id, CollectionTicketComment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"/comments?raw="+raw;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Comment
		/// Delete Comment
		/// CollectionTicketCommentsDelete issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <returns>Delete a Comment</returns>
		public async Task<DeleteCommentResponse> CollectionTicketCommentsDeleteAsync(string id, bool raw, string collection_id, string ticket_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"/comments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteCommentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Comment
		/// Get Comment
		/// CollectionTicketCommentsOne issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Get a Comment</returns>
		public async Task<GetCommentResponse> CollectionTicketCommentsOneAsync(string id, bool raw, string cursor, int limit, string collection_id, string ticket_id, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"/comments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCommentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Comment
		/// Update Comment
		/// CollectionTicketCommentsUpdate issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="ticket_id">ID of the ticket you are acting upon.</param>
		/// <returns>Update a Comment</returns>
		public async Task<UpdateCommentResponse> CollectionTicketCommentsUpdateAsync(string id, bool raw, string collection_id, string ticket_id, CollectionTicketComment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/tickets/"+ (ticket_id==null? "" : System.Uri.EscapeDataString(ticket_id))+"/comments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateCommentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Users
		/// List Users
		/// CollectionUsersAll issue-tracking/collections/{collection_id}/users
		/// </summary>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Users</returns>
		public async Task<GetCollectionUsersResponse> CollectionUsersAllAsync(string collection_id, bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/users&raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollectionUsersResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get user
		/// Get user
		/// CollectionUsersOne issue-tracking/collections/{collection_id}/users/{id}
		/// </summary>
		/// <param name="collection_id">The collection ID</param>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>User</returns>
		public async Task<GetCollectionUserResponse> CollectionUsersOneAsync(string collection_id, string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "issue-tracking/collections/"+ (collection_id==null? "" : System.Uri.EscapeDataString(collection_id))+"/users/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollectionUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

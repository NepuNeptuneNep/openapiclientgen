//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCliTokenResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CliToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WebServerHostname { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEnvironmentOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Enables the Apache Airflow log type (e.g. <code>DagProcessingLogs</code>) and defines the log level to send to CloudWatch Logs (e.g. <code>INFO</code>).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModuleLoggingConfigurationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LoggingLevel LogLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoggingLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWebLoginTokenResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string WebServerHostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WebToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEnvironmentOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEnvironmentOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Environment Environment { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Environment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AirflowConfigurationOptions AirflowConfigurationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AirflowVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DagS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EnvironmentClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LastUpdate LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfiguration LoggingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinWorkers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetworkConfiguration NetworkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PluginsS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PluginsS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequirementsS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequirementsS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Schedulers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceBucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartupScriptS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartupScriptS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WebserverAccessMode WebserverAccessMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WebserverUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WeeklyMaintenanceWindowStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AirflowConfigurationOptions
	{
	}
	
	/// <summary>
	/// Describes the status of the last update on the environment, and any errors that were encountered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LastUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateError Error { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateStatus Status { get; set; }
	}
	
	/// <summary>
	/// Describes the error(s) encountered with the last update of the environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	/// <summary>
	/// Describes the Apache Airflow log types that are published to CloudWatch Logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoggingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfiguration DagProcessingLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfiguration SchedulerLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfiguration TaskLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfiguration WebserverLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfiguration WorkerLogs { get; set; }
	}
	
	/// <summary>
	/// Describes the Apache Airflow log details for the log type (e.g. <code>DagProcessingLogs</code>).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModuleLoggingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingLevel LogLevel { get; set; }
	}
	
	/// <summary>
	/// Describes the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnvironmentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLING_BACK = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING_SNAPSHOT = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebserverAccessMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_ONLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC_ONLY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEnvironmentsOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Environments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishMetricsOutput
	{
	}
	
	/// <summary>
	///  <b>Internal only</b>. Collects Apache Airflow metrics. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricDatum
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Dimension[] Dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StatisticSet StatisticValues { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Unit Unit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	///  <b>Internal only</b>. Represents the dimensions of a metric. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dimension
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	///  <b>Internal only</b>. Represents a set of statistics that describe a specific metric. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StatisticSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Maximum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Minimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SampleCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Sum { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Seconds = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Microseconds = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Milliseconds = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bytes = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kilobytes = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Megabytes = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gigabytes = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terabytes = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bits = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kilobits = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Megabits = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gigabits = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terabits = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Percent = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Count = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Bytes/Second")]
		Bytes_Second = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Kilobytes/Second")]
		Kilobytes_Second = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Megabytes/Second")]
		Megabytes_Second = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Gigabytes/Second")]
		Gigabytes_Second = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Terabytes/Second")]
		Terabytes_Second = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Bits/Second")]
		Bits_Second = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Kilobits/Second")]
		Kilobits_Second = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Megabits/Second")]
		Megabits_Second = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Gigabits/Second")]
		Gigabits_Second = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Terabits/Second")]
		Terabits_Second = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Count/Second")]
		Count_Second = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEnvironmentOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCliTokenRequest
	{
	}
	
	/// <summary>
	/// Defines the Apache Airflow log types to send to CloudWatch Logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoggingConfigurationInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput DagProcessingLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput SchedulerLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput TaskLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput WebserverLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput WorkerLogs { get; set; }
	}
	
	/// <summary>
	/// This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation to create an environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html">Get started with Amazon Managed Workflows for Apache Airflow</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEnvironmentInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AirflowConfigurationOptions AirflowConfigurationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AirflowVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DagS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EnvironmentClass { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfigurationInput LoggingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinWorkers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NetworkConfiguration NetworkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PluginsS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PluginsS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequirementsS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequirementsS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Schedulers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceBucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartupScriptS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartupScriptS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WebserverAccessMode WebserverAccessMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WeeklyMaintenanceWindowStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWebLoginTokenRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEnvironmentInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEnvironmentInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEnvironmentsInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishMetricsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricDatum[] MetricData { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceInput
	{
	}
	
	/// <summary>
	/// Defines the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNetworkConfigurationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEnvironmentInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AirflowConfigurationOptions AirflowConfigurationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AirflowVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DagS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EnvironmentClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfigurationInput LoggingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinWorkers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateNetworkConfigurationInput NetworkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PluginsS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PluginsS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequirementsS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequirementsS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Schedulers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceBucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartupScriptS3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartupScriptS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WebserverAccessMode WebserverAccessMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WeeklyMaintenanceWindowStart { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates a CLI token for the Airflow CLI. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-cli.html">Creating an Apache Airflow CLI token</a>.
		/// CreateCliToken clitoken/{Name}
		/// </summary>
		/// <param name="Name">The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateCliTokenResponse> CreateCliTokenAsync(string Name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clitoken/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateCliTokenResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
		/// CreateEnvironment environments/{Name}
		/// </summary>
		/// <param name="Name">The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateEnvironmentOutput> CreateEnvironmentAsync(string Name, CreateEnvironmentPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "environments/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateEnvironmentOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
		/// DeleteEnvironment environments/{Name}
		/// </summary>
		/// <param name="Name">The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteEnvironmentOutput> DeleteEnvironmentAsync(string Name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "environments/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteEnvironmentOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
		/// GetEnvironment environments/{Name}
		/// </summary>
		/// <param name="Name">The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<GetEnvironmentOutput> GetEnvironmentAsync(string Name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "environments/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEnvironmentOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
		/// UpdateEnvironment environments/{Name}
		/// </summary>
		/// <param name="Name">The name of your Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateEnvironmentOutput> UpdateEnvironmentAsync(string Name, UpdateEnvironmentPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "environments/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateEnvironmentOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a web login token for the Airflow Web UI. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-web.html">Creating an Apache Airflow web login token</a>.
		/// CreateWebLoginToken webtoken/{Name}
		/// </summary>
		/// <param name="Name">The name of the Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateWebLoginTokenResponse> CreateWebLoginTokenAsync(string Name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "webtoken/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateWebLoginTokenResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Amazon Managed Workflows for Apache Airflow (MWAA) environments.
		/// ListEnvironments environments
		/// </summary>
		/// <param name="MaxResults">The maximum number of results to retrieve per page. For example, <code>5</code> environments per page.
		/// Minimum: 1
		/// Maximum: 25
		// </param>
		/// <param name="NextToken">Retrieves the next page of the results.
		/// Min length: 0
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<ListEnvironmentsOutput> ListEnvironmentsAsync(int MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "environments?MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListEnvironmentsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the key-value tag pairs associated to the Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, <code>"Environment": "Staging"</code>.
		/// ListTagsForResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 1224
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceOutput> ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListTagsForResourceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associates key-value tag pairs to your Amazon Managed Workflows for Apache Airflow (MWAA) environment.
		/// TagResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 1224
		// </param>
		/// <returns>Success</returns>
		public async Task<TagResourceOutput> TagResourceAsync(string ResourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TagResourceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <b>Internal only</b>. Publishes environment health metrics to Amazon CloudWatch.
		/// PublishMetrics metrics/environments/{EnvironmentName}
		/// </summary>
		/// <param name="EnvironmentName"> <b>Internal only</b>. The name of the environment.
		/// Min length: 1
		/// Max length: 80
		// </param>
		/// <returns>Success</returns>
		public async Task<PublishMetricsOutput> PublishMetricsAsync(string EnvironmentName, PublishMetricsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "metrics/environments/"+ (EnvironmentName==null? "" : System.Uri.EscapeDataString(EnvironmentName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PublishMetricsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes key-value tag pairs associated to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, <code>"Environment": "Staging"</code>.
		/// UntagResource tags/{ResourceArn}#tagKeys
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, <code>arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment</code>.
		/// Min length: 1
		/// Max length: 1224
		// </param>
		/// <param name="tagKeys">The key-value tag pair you want to remove. For example, <code>"Environment": "Staging"</code>. 
		/// Minimum items: 0
		/// Maximum items: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<UntagResourceOutput> UntagResourceAsync(string ResourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UntagResourceOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class CreateEnvironmentPutBody
	{
		
		/// <summary>
		/// A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache Airflow configuration options</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AirflowConfigurationOptions { get; set; }
		
		/// <summary>
		/// The Apache Airflow version for your environment. If no value is specified, it defaults to the latest version. Valid values: <code>1.10.12</code>, <code>2.0.2</code>, <code>2.2.2</code>, <code>2.4.3</code>, and <code>2.5.1</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/airflow-versions.html">Apache Airflow versions on Amazon Managed Workflows for Apache Airflow (MWAA)</a>.
		/// Min length: 1
		/// Max length: 32
		/// Pattern: ^[0-9a-z.]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-z.]+$")]
		public string AirflowVersion { get; set; }
		
		/// <summary>
		/// The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding or updating DAGs</a>.
		/// Required
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string DagS3Path { get; set; }
		
		/// <summary>
		/// The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon MWAA environment class</a>.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string EnvironmentClass { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an Amazon Web Services Identity and Access Management (IAM) role that grants MWAA permission to access Amazon Web Services services and resources used by your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon MWAA Execution role</a>.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: ^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The Amazon Web Services Key Management Service (KMS) key to encrypt the data in your environment. You can use an Amazon Web Services owned CMK, or a Customer managed CMK (advanced). For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/create-environment.html">Create an Amazon MWAA environment</a>.
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: ^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$")]
		public string KmsKey { get; set; }
		
		/// <summary>
		/// Defines the Apache Airflow log types to send to CloudWatch Logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEnvironmentPutBodyLoggingConfiguration LoggingConfiguration { get; set; }
		
		/// <summary>
		/// The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. For example, <code>20</code>. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in <code>MinWorkers</code>.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		/// <summary>
		/// The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the <code>MinWorkers</code> field. For example, <code>2</code>.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MinWorkers { get; set; }
		
		/// <summary>
		/// Describes the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateEnvironmentPutBodyNetworkConfiguration NetworkConfiguration { get; set; }
		
		/// <summary>
		/// The version of the plugins.zip file on your Amazon S3 bucket. You must specify a version each time a plugins.zip file is updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string PluginsS3ObjectVersion { get; set; }
		
		/// <summary>
		/// The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. If specified, then the <code>plugins.zip</code> version is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string PluginsS3Path { get; set; }
		
		/// <summary>
		/// The version of the <code>requirements.txt</code> file on your Amazon S3 bucket. You must specify a version each time a requirements.txt file is updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string RequirementsS3ObjectVersion { get; set; }
		
		/// <summary>
		/// The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. If specified, then a version is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string RequirementsS3Path { get; set; }
		
		/// <summary>
		/// <p>The number of Apache Airflow schedulers to run in your environment. Valid values:</p> <ul> <li> <p>v2 - Accepts between 2 to 5. Defaults to 2.</p> </li> <li> <p>v1 - Accepts 1.</p> </li> </ul>
		/// Maximum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 5)]
		public System.Nullable<System.Int32> Schedulers { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create an Amazon S3 bucket for Amazon MWAA</a>.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: ^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$")]
		public string SourceBucketArn { get; set; }
		
		/// <summary>
		/// <p>The version of the startup shell script in your Amazon S3 bucket. You must specify the <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">version ID</a> that Amazon S3 assigns to the file every time you update the script. </p> <p> Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that are no more than 1,024 bytes long. The following is an example: </p> <p> <code>3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo</code> </p> <p> For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html">Using a startup script</a>. </p>
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string StartupScriptS3ObjectVersion { get; set; }
		
		/// <summary>
		/// <p>The relative path to the startup shell script in your Amazon S3 bucket. For example, <code>s3://mwaa-environment/startup.sh</code>.</p> <p> Amazon MWAA runs the script as your environment starts, and before running the Apache Airflow process. You can use this script to install dependencies, modify Apache Airflow configuration options, and set environment variables. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html">Using a startup script</a>. </p>
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string StartupScriptS3Path { get; set; }
		
		/// <summary>
		/// The key-value tag pairs you want to associate to your environment. For example, <code>"Environment": "Staging"</code>. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The Apache Airflow <i>Web server</i> access mode. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache Airflow access modes</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WebserverAccessMode WebserverAccessMode { get; set; }
		
		/// <summary>
		/// The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time to start weekly maintenance updates of your environment in the following format: <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You can specify a start time in 30 minute increments only.
		/// Min length: 1
		/// Max length: 9
		/// Pattern: (MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(9)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)")]
		public string WeeklyMaintenanceWindowStart { get; set; }
	}
	
	public class CreateEnvironmentPutBodyLoggingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput DagProcessingLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput SchedulerLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput TaskLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput WebserverLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput WorkerLogs { get; set; }
	}
	
	public class CreateEnvironmentPutBodyNetworkConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
	}
	
	public class UpdateEnvironmentPatchBody
	{
		
		/// <summary>
		/// A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache Airflow configuration options</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AirflowConfigurationOptions { get; set; }
		
		/// <summary>
		/// <p>The Apache Airflow version for your environment. To upgrade your environment, specify a newer version of Apache Airflow supported by Amazon MWAA.</p> <p>Before you upgrade an environment, make sure your requirements, DAGs, plugins, and other resources used in your workflows are compatible with the new Apache Airflow version. For more information about updating your resources, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/upgrading-environment.html">Upgrading an Amazon MWAA environment</a>.</p> <p>Valid values: <code>1.10.12</code>, <code>2.0.2</code>, <code>2.2.2</code>, <code>2.4.3</code>, and <code>2.5.1</code>.</p>
		/// Min length: 1
		/// Max length: 32
		/// Pattern: ^[0-9a-z.]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-z.]+$")]
		public string AirflowVersion { get; set; }
		
		/// <summary>
		/// The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding or updating DAGs</a>.
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string DagS3Path { get; set; }
		
		/// <summary>
		/// The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon MWAA environment class</a>.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string EnvironmentClass { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access Amazon Web Services resources in your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon MWAA Execution role</a>.
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: ^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Defines the Apache Airflow log types to send to CloudWatch Logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEnvironmentPatchBodyLoggingConfiguration LoggingConfiguration { get; set; }
		
		/// <summary>
		/// The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. For example, <code>20</code>. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in <code>MinWorkers</code>.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxWorkers { get; set; }
		
		/// <summary>
		/// The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the <code>MinWorkers</code> field. For example, <code>2</code>.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MinWorkers { get; set; }
		
		/// <summary>
		/// Defines the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEnvironmentPatchBodyNetworkConfiguration NetworkConfiguration { get; set; }
		
		/// <summary>
		/// The version of the plugins.zip file on your Amazon S3 bucket. You must specify a version each time a <code>plugins.zip</code> file is updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string PluginsS3ObjectVersion { get; set; }
		
		/// <summary>
		/// The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. If specified, then the plugins.zip version is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string PluginsS3Path { get; set; }
		
		/// <summary>
		/// The version of the requirements.txt file on your Amazon S3 bucket. You must specify a version each time a <code>requirements.txt</code> file is updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string RequirementsS3ObjectVersion { get; set; }
		
		/// <summary>
		/// The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. If specified, then a file version is required. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string RequirementsS3Path { get; set; }
		
		/// <summary>
		/// The number of Apache Airflow schedulers to run in your Amazon MWAA environment.
		/// Maximum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 5)]
		public System.Nullable<System.Int32> Schedulers { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create an Amazon S3 bucket for Amazon MWAA</a>.
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: ^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$")]
		public string SourceBucketArn { get; set; }
		
		/// <summary>
		/// <p> The version of the startup shell script in your Amazon S3 bucket. You must specify the <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">version ID</a> that Amazon S3 assigns to the file every time you update the script. </p> <p> Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that are no more than 1,024 bytes long. The following is an example: </p> <p> <code>3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo</code> </p> <p> For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html">Using a startup script</a>. </p>
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string StartupScriptS3ObjectVersion { get; set; }
		
		/// <summary>
		/// <p>The relative path to the startup shell script in your Amazon S3 bucket. For example, <code>s3://mwaa-environment/startup.sh</code>.</p> <p> Amazon MWAA runs the script as your environment starts, and before running the Apache Airflow process. You can use this script to install dependencies, modify Apache Airflow configuration options, and set environment variables. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html">Using a startup script</a>. </p>
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string StartupScriptS3Path { get; set; }
		
		/// <summary>
		/// The Apache Airflow <i>Web server</i> access mode. For more information, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache Airflow access modes</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public WebserverAccessMode WebserverAccessMode { get; set; }
		
		/// <summary>
		/// The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time to start weekly maintenance updates of your environment in the following format: <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You can specify a start time in 30 minute increments only.
		/// Min length: 1
		/// Max length: 9
		/// Pattern: (MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(9)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)")]
		public string WeeklyMaintenanceWindowStart { get; set; }
	}
	
	public class UpdateEnvironmentPatchBodyLoggingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput DagProcessingLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput SchedulerLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput TaskLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput WebserverLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleLoggingConfigurationInput WorkerLogs { get; set; }
	}
	
	public class UpdateEnvironmentPatchBodyNetworkConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The key-value tag pairs you want to associate to your environment. For example, <code>"Environment": "Staging"</code>. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class PublishMetricsPostBody
	{
		
		/// <summary>
		///  <b>Internal only</b>. Publishes metrics to Amazon CloudWatch. To learn more about the metrics published to Amazon CloudWatch, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html">Amazon MWAA performance metrics in Amazon CloudWatch</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricDatum[] MetricData { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

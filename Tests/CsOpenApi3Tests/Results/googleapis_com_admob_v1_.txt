//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Describes an AdMob ad unit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdUnit
	{
		
		/// <summary>
		/// AdFormat of the ad unit. Possible values are as follows: "APP_OPEN" - App Open ad format. "BANNER" - Banner ad format. "BANNER_INTERSTITIAL" - Legacy format that can be used as either banner or interstitial. This format can no longer be created but can be targeted by mediation groups. "INTERSTITIAL" - A full screen ad. Supported ad types are "RICH_MEDIA" and "VIDEO". "NATIVE" - Native ad format. "REWARDED" - An ad that, once viewed, gets a callback verifying the view so that a reward can be given to the user. Supported ad types are "RICH_MEDIA" (interactive) and video where video can not be excluded. "REWARDED_INTERSTITIAL" - Rewarded Interstitial ad format. Only supports video ad type. See https://support.google.com/admob/answer/9884467.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adFormat")]
		public string AdFormat { get; set; }
		
		/// <summary>
		/// Ad media type supported by this ad unit. Possible values as follows: "RICH_MEDIA" - Text, image, and other non-video media. "VIDEO" - Video media.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adTypes")]
		public string[] AdTypes { get; set; }
		
		/// <summary>
		/// The externally visible ID of the ad unit which can be used to integrate with the AdMob SDK. This is a read only property. Example: ca-app-pub-9876543210987654/0123456789
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adUnitId")]
		public string AdUnitId { get; set; }
		
		/// <summary>
		/// The externally visible ID of the app this ad unit is associated with. Example: ca-app-pub-9876543210987654~0123456789
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appId")]
		public string AppId { get; set; }
		
		/// <summary>
		/// The display name of the ad unit as shown in the AdMob UI, which is provided by the user. The maximum length allowed is 80 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name for this ad unit. Format is accounts/{publisher_id}/adUnits/{ad_unit_id_fragment} Example: accounts/pub-9876543210987654/adUnits/0123456789
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Describes an AdMob app for a specific platform (For example: Android or iOS).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App
	{
		
		/// <summary>
		/// Output only. The approval state for the app. The field is read-only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appApprovalState")]
		public System.Nullable<AppAppApprovalState> AppApprovalState { get; set; }
		
		/// <summary>
		/// The externally visible ID of the app which can be used to integrate with the AdMob SDK. This is a read only property. Example: ca-app-pub-9876543210987654~0123456789
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appId")]
		public string AppId { get; set; }
		
		/// <summary>
		/// Information from the app store if the app is linked to an app store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedAppInfo")]
		public AppLinkedAppInfo LinkedAppInfo { get; set; }
		
		/// <summary>
		/// Information provided for manual apps which are not linked to an application store (Example: Google Play, App Store).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manualAppInfo")]
		public AppManualAppInfo ManualAppInfo { get; set; }
		
		/// <summary>
		/// Resource name for this app. Format is accounts/{publisher_id}/apps/{app_id_fragment} Example: accounts/pub-9876543210987654/apps/0123456789
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Describes the platform of the app. Limited to "IOS" and "ANDROID".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppAppApprovalState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_APPROVAL_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTION_REQUIRED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 3,
	}
	
	/// <summary>
	/// Information from the app store if the app is linked to an app store.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppLinkedAppInfo
	{
		
		/// <summary>
		/// The app store ID of the app; present if and only if the app is linked to an app store. If the app is added to the Google Play store, it will be the application ID of the app. For example: "com.example.myapp". See https://developer.android.com/studio/build/application-id. If the app is added to the Apple App Store, it will be app store ID. For example "105169111". Note that setting the app store id is considered an irreversible action. Once an app is linked, it cannot be unlinked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appStoreId")]
		public string AppStoreId { get; set; }
		
		/// <summary>
		/// Output only. Display name of the app as it appears in the app store. This is an output-only field, and may be empty if the app cannot be found in the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Information provided for manual apps which are not linked to an application store (Example: Google Play, App Store).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppManualAppInfo
	{
		
		/// <summary>
		/// The display name of the app as shown in the AdMob UI, which is provided by the user. The maximum length allowed is 80 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Date
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Specification of a single date range. Both dates are inclusive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateRange
	{
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endDate")]
		public Date EndDate { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startDate")]
		public Date StartDate { get; set; }
	}
	
	/// <summary>
	/// Request to generate an AdMob mediation report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateMediationReportRequest
	{
		
		/// <summary>
		/// The specification for generating an AdMob Mediation report. For example, the specification to get observed ECPM sliced by ad source and app for the 'US' and 'CN' countries can look like the following example: { "date_range": { "start_date": {"year": 2021, "month": 9, "day": 1}, "end_date": {"year": 2021, "month": 9, "day": 30} }, "dimensions": ["AD_SOURCE", "APP", "COUNTRY"], "metrics": ["OBSERVED_ECPM"], "dimension_filters": [ { "dimension": "COUNTRY", "matches_any": {"values": [{"value": "US", "value": "CN"}]} } ], "sort_conditions": [ {"dimension":"APP", order: "ASCENDING"} ], "localization_settings": { "currency_code": "USD", "language_code": "en-US" } } For a better understanding, you can treat the preceding specification like the following pseudo SQL: SELECT AD_SOURCE, APP, COUNTRY, OBSERVED_ECPM FROM MEDIATION_REPORT WHERE DATE >= '2021-09-01' AND DATE <= '2021-09-30' AND COUNTRY IN ('US', 'CN') GROUP BY AD_SOURCE, APP, COUNTRY ORDER BY APP ASC;
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportSpec")]
		public MediationReportSpec ReportSpec { get; set; }
	}
	
	/// <summary>
	/// The specification for generating an AdMob Mediation report. For example, the specification to get observed ECPM sliced by ad source and app for the 'US' and 'CN' countries can look like the following example: { "date_range": { "start_date": {"year": 2021, "month": 9, "day": 1}, "end_date": {"year": 2021, "month": 9, "day": 30} }, "dimensions": ["AD_SOURCE", "APP", "COUNTRY"], "metrics": ["OBSERVED_ECPM"], "dimension_filters": [ { "dimension": "COUNTRY", "matches_any": {"values": [{"value": "US", "value": "CN"}]} } ], "sort_conditions": [ {"dimension":"APP", order: "ASCENDING"} ], "localization_settings": { "currency_code": "USD", "language_code": "en-US" } } For a better understanding, you can treat the preceding specification like the following pseudo SQL: SELECT AD_SOURCE, APP, COUNTRY, OBSERVED_ECPM FROM MEDIATION_REPORT WHERE DATE >= '2021-09-01' AND DATE <= '2021-09-30' AND COUNTRY IN ('US', 'CN') GROUP BY AD_SOURCE, APP, COUNTRY ORDER BY APP ASC;
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MediationReportSpec
	{
		
		/// <summary>
		/// Specification of a single date range. Both dates are inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public DateRange DateRange { get; set; }
		
		/// <summary>
		/// Describes which report rows to match based on their dimension values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensionFilters")]
		public MediationReportSpecDimensionFilter[] DimensionFilters { get; set; }
		
		/// <summary>
		/// List of dimensions of the report. The value combination of these dimensions determines the row of the report. If no dimensions are specified, the report returns a single row of requested metrics for the entire account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public MediationReportSpecDimensionFilterDimension[] Dimensions { get; set; }
		
		/// <summary>
		/// Localization settings for reports, such as currency and language. It affects how metrics are calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localizationSettings")]
		public LocalizationSettings LocalizationSettings { get; set; }
		
		/// <summary>
		/// Maximum number of report data rows to return. If the value is not set, the API returns as many rows as possible, up to 100000. Acceptable values are 1-100000, inclusive. Values larger than 100000 return an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxReportRows")]
		public System.Nullable<System.Int32> MaxReportRows { get; set; }
		
		/// <summary>
		/// List of metrics of the report. A report must specify at least one metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public string[] Metrics { get; set; }
		
		/// <summary>
		/// Describes the sorting of report rows. The order of the condition in the list defines its precedence; the earlier the condition, the higher its precedence. If no sort conditions are specified, the row ordering is undefined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sortConditions")]
		public MediationReportSpecSortCondition[] SortConditions { get; set; }
		
		/// <summary>
		/// A report time zone. Accepts an IANA TZ name values, such as "America/Los_Angeles." If no time zone is defined, the account default takes effect. Check default value by the get account action. **Warning:** The "America/Los_Angeles" is the only supported value at the moment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
	}
	
	/// <summary>
	/// Describes which report rows to match based on their dimension values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MediationReportSpecDimensionFilter
	{
		
		/// <summary>
		/// Applies the filter criterion to the specified dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public System.Nullable<MediationReportSpecDimensionFilterDimension> Dimension { get; set; }
		
		/// <summary>
		/// List of string values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchesAny")]
		public StringList MatchesAny { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MediationReportSpecDimensionFilterDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_SOURCE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_SOURCE_INSTANCE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_UNIT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIATION_GROUP = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNTRY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORMAT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLATFORM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE_OS_VERSION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMA_SDK_VERSION = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_VERSION_NAME = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVING_RESTRICTION = 15,
	}
	
	/// <summary>
	/// List of string values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringList
	{
		
		/// <summary>
		/// The string values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Localization settings for reports, such as currency and language. It affects how metrics are calculated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LocalizationSettings
	{
		
		/// <summary>
		/// Currency code of the earning related metrics, which is the 3-letter code defined in ISO 4217. The daily average rate is used for the currency conversion. Defaults to the account currency code if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Language used for any localized text, such as some dimension value display labels. The language tag defined in the IETF BCP47. Defaults to 'en-US' if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
	}
	
	/// <summary>
	/// Sorting direction to be applied on a dimension or a metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MediationReportSpecSortCondition
	{
		
		/// <summary>
		/// Sort by the specified dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public MediationReportSpecDimensionFilterDimension Dimension { get; set; }
		
		/// <summary>
		/// Sort by the specified metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metric")]
		public System.Nullable<MediationReportSpecSortConditionMetric> Metric { get; set; }
		
		/// <summary>
		/// Sorting order of the dimension or metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<MediationReportSpecSortConditionOrder> Order { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MediationReportSpecSortConditionMetric
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METRIC_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_REQUESTS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLICKS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ESTIMATED_EARNINGS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPRESSIONS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPRESSION_CTR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCHED_REQUESTS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCH_RATE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSERVED_ECPM = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MediationReportSpecSortConditionOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SORT_ORDER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASCENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCENDING = 2,
	}
	
	/// <summary>
	/// The streaming response for the AdMob mediation report where the first response contains the report header, then a stream of row responses, and finally a footer as the last response message. For example: [{ "header": { "date_range": { "start_date": {"year": 2018, "month": 9, "day": 1}, "end_date": {"year": 2018, "month": 9, "day": 1} }, "localization_settings": { "currency_code": "USD", "language_code": "en-US" } } }, { "row": { "dimension_values": { "DATE": {"value": "20180918"}, "APP": { "value": "ca-app-pub-8123415297019784~1001342552", "display_label": "My app name!" } }, "metric_values": { "ESTIMATED_EARNINGS": {"decimal_value": "1324746"} } } }, { "footer": {"matching_row_count": 1} }]
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateMediationReportResponse
	{
		
		/// <summary>
		/// Groups data available after report generation, for example, warnings and row counts. Always sent as the last message in the stream response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="footer")]
		public ReportFooter Footer { get; set; }
		
		/// <summary>
		/// Groups data helps to treat the generated report. Always sent as a first message in the stream response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public ReportHeader Header { get; set; }
		
		/// <summary>
		/// A row of the returning report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row")]
		public ReportRow Row { get; set; }
	}
	
	/// <summary>
	/// Groups data available after report generation, for example, warnings and row counts. Always sent as the last message in the stream response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportFooter
	{
		
		/// <summary>
		/// Total number of rows that matched the request. Warning: This count does NOT always match the number of rows in the response. Do not make that assumption when processing the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchingRowCount")]
		public string MatchingRowCount { get; set; }
		
		/// <summary>
		/// Warnings associated with generation of the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public ReportWarning[] Warnings { get; set; }
	}
	
	/// <summary>
	/// Warnings associated with generation of the report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportWarning
	{
		
		/// <summary>
		/// Describes the details of the warning message, in English.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Type of the warning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ReportWarningType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReportWarningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_BEFORE_ACCOUNT_TIMEZONE_CHANGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_DELAYED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORT_CURRENCY_NOT_ACCOUNT_CURRENCY = 4,
	}
	
	/// <summary>
	/// Groups data helps to treat the generated report. Always sent as a first message in the stream response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportHeader
	{
		
		/// <summary>
		/// Specification of a single date range. Both dates are inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public DateRange DateRange { get; set; }
		
		/// <summary>
		/// Localization settings for reports, such as currency and language. It affects how metrics are calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localizationSettings")]
		public LocalizationSettings LocalizationSettings { get; set; }
		
		/// <summary>
		/// The report time zone. The value is a time-zone ID as specified by the CLDR project, for example, "America/Los_Angeles".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportingTimeZone")]
		public string ReportingTimeZone { get; set; }
	}
	
	/// <summary>
	/// A row of the returning report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportRow
	{
		
		/// <summary>
		/// Map of dimension values in a row, with keys as enum name of the dimensions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensionValues")]
		public System.Collections.Generic.Dictionary<string, ReportRowDimensionValue> DimensionValues { get; set; }
		
		/// <summary>
		/// Map of metric values in a row, with keys as enum name of the metrics. If a metric being requested has no value returned, the map will not include it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricValues")]
		public System.Collections.Generic.Dictionary<string, ReportRowMetricValue> MetricValues { get; set; }
	}
	
	/// <summary>
	/// Representation of a dimension value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportRowDimensionValue
	{
		
		/// <summary>
		/// The localized string representation of the value. If unspecified, the display label should be derived from the value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayLabel")]
		public string DisplayLabel { get; set; }
		
		/// <summary>
		/// Dimension value in the format specified in the report's spec Dimension enum.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Representation of a metric value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportRowMetricValue
	{
		
		/// <summary>
		/// Double precision (approximate) decimal values. Rates are from 0 to 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// Metric integer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerValue")]
		public string IntegerValue { get; set; }
		
		/// <summary>
		/// Amount in micros. One million is equivalent to one unit. Currency value is in the unit (USD, EUR or other) specified by the request. For example, $6.50 whould be represented as 6500000 micros.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="microsValue")]
		public string MicrosValue { get; set; }
	}
	
	/// <summary>
	/// Request to generate an AdMob Network report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateNetworkReportRequest
	{
		
		/// <summary>
		/// The specification for generating an AdMob Network report. For example, the specification to get clicks and estimated earnings for only the 'US' and 'CN' countries can look like the following example: { 'date_range': { 'start_date': {'year': 2021, 'month': 9, 'day': 1}, 'end_date': {'year': 2021, 'month': 9, 'day': 30} }, 'dimensions': ['DATE', 'APP', 'COUNTRY'], 'metrics': ['CLICKS', 'ESTIMATED_EARNINGS'], 'dimension_filters': [ { 'dimension': 'COUNTRY', 'matches_any': {'values': [{'value': 'US', 'value': 'CN'}]} } ], 'sort_conditions': [ {'dimension':'APP', order: 'ASCENDING'}, {'metric':'CLICKS', order: 'DESCENDING'} ], 'localization_settings': { 'currency_code': 'USD', 'language_code': 'en-US' } } For a better understanding, you can treat the preceding specification like the following pseudo SQL: SELECT DATE, APP, COUNTRY, CLICKS, ESTIMATED_EARNINGS FROM NETWORK_REPORT WHERE DATE >= '2021-09-01' AND DATE <= '2021-09-30' AND COUNTRY IN ('US', 'CN') GROUP BY DATE, APP, COUNTRY ORDER BY APP ASC, CLICKS DESC;
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportSpec")]
		public NetworkReportSpec ReportSpec { get; set; }
	}
	
	/// <summary>
	/// The specification for generating an AdMob Network report. For example, the specification to get clicks and estimated earnings for only the 'US' and 'CN' countries can look like the following example: { 'date_range': { 'start_date': {'year': 2021, 'month': 9, 'day': 1}, 'end_date': {'year': 2021, 'month': 9, 'day': 30} }, 'dimensions': ['DATE', 'APP', 'COUNTRY'], 'metrics': ['CLICKS', 'ESTIMATED_EARNINGS'], 'dimension_filters': [ { 'dimension': 'COUNTRY', 'matches_any': {'values': [{'value': 'US', 'value': 'CN'}]} } ], 'sort_conditions': [ {'dimension':'APP', order: 'ASCENDING'}, {'metric':'CLICKS', order: 'DESCENDING'} ], 'localization_settings': { 'currency_code': 'USD', 'language_code': 'en-US' } } For a better understanding, you can treat the preceding specification like the following pseudo SQL: SELECT DATE, APP, COUNTRY, CLICKS, ESTIMATED_EARNINGS FROM NETWORK_REPORT WHERE DATE >= '2021-09-01' AND DATE <= '2021-09-30' AND COUNTRY IN ('US', 'CN') GROUP BY DATE, APP, COUNTRY ORDER BY APP ASC, CLICKS DESC;
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkReportSpec
	{
		
		/// <summary>
		/// Specification of a single date range. Both dates are inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public DateRange DateRange { get; set; }
		
		/// <summary>
		/// Describes which report rows to match based on their dimension values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensionFilters")]
		public NetworkReportSpecDimensionFilter[] DimensionFilters { get; set; }
		
		/// <summary>
		/// List of dimensions of the report. The value combination of these dimensions determines the row of the report. If no dimensions are specified, the report returns a single row of requested metrics for the entire account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public NetworkReportSpecDimensionFilterDimension[] Dimensions { get; set; }
		
		/// <summary>
		/// Localization settings for reports, such as currency and language. It affects how metrics are calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localizationSettings")]
		public LocalizationSettings LocalizationSettings { get; set; }
		
		/// <summary>
		/// Maximum number of report data rows to return. If the value is not set, the API returns as many rows as possible, up to 100000. Acceptable values are 1-100000, inclusive. Values larger than 100000 return an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxReportRows")]
		public System.Nullable<System.Int32> MaxReportRows { get; set; }
		
		/// <summary>
		/// List of metrics of the report. A report must specify at least one metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public string[] Metrics { get; set; }
		
		/// <summary>
		/// Describes the sorting of report rows. The order of the condition in the list defines its precedence; the earlier the condition, the higher its precedence. If no sort conditions are specified, the row ordering is undefined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sortConditions")]
		public NetworkReportSpecSortCondition[] SortConditions { get; set; }
		
		/// <summary>
		/// A report time zone. Accepts an IANA TZ name values, such as "America/Los_Angeles." If no time zone is defined, the account default takes effect. Check default value by the get account action. **Warning:** The "America/Los_Angeles" is the only supported value at the moment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
	}
	
	/// <summary>
	/// Describes which report rows to match based on their dimension values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkReportSpecDimensionFilter
	{
		
		/// <summary>
		/// Applies the filter criterion to the specified dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public System.Nullable<NetworkReportSpecDimensionFilterDimension> Dimension { get; set; }
		
		/// <summary>
		/// List of string values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchesAny")]
		public StringList MatchesAny { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NetworkReportSpecDimensionFilterDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_UNIT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_TYPE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNTRY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORMAT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLATFORM = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE_OS_VERSION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMA_SDK_VERSION = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_VERSION_NAME = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVING_RESTRICTION = 13,
	}
	
	/// <summary>
	/// Sorting direction to be applied on a dimension or a metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkReportSpecSortCondition
	{
		
		/// <summary>
		/// Sort by the specified dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public NetworkReportSpecDimensionFilterDimension Dimension { get; set; }
		
		/// <summary>
		/// Sort by the specified metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metric")]
		public System.Nullable<NetworkReportSpecSortConditionMetric> Metric { get; set; }
		
		/// <summary>
		/// Sorting order of the dimension or metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public MediationReportSpecSortConditionOrder Order { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NetworkReportSpecSortConditionMetric
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METRIC_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD_REQUESTS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLICKS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ESTIMATED_EARNINGS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPRESSIONS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPRESSION_CTR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPRESSION_RPM = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCHED_REQUESTS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCH_RATE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHOW_RATE = 9,
	}
	
	/// <summary>
	/// The streaming response for the AdMob Network report where the first response contains the report header, then a stream of row responses, and finally a footer as the last response message. For example: [{ "header": { "dateRange": { "startDate": {"year": 2018, "month": 9, "day": 1}, "endDate": {"year": 2018, "month": 9, "day": 1} }, "localizationSettings": { "currencyCode": "USD", "languageCode": "en-US" } } }, { "row": { "dimensionValues": { "DATE": {"value": "20180918"}, "APP": { "value": "ca-app-pub-8123415297019784~1001342552", displayLabel: "My app name!" } }, "metricValues": { "ESTIMATED_EARNINGS": {"microsValue": 6500000} } } }, { "footer": {"matchingRowCount": 1} }]
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateNetworkReportResponse
	{
		
		/// <summary>
		/// Groups data available after report generation, for example, warnings and row counts. Always sent as the last message in the stream response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="footer")]
		public ReportFooter Footer { get; set; }
		
		/// <summary>
		/// Groups data helps to treat the generated report. Always sent as a first message in the stream response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public ReportHeader Header { get; set; }
		
		/// <summary>
		/// A row of the returning report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row")]
		public ReportRow Row { get; set; }
	}
	
	/// <summary>
	/// Response for the ad units list request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAdUnitsResponse
	{
		
		/// <summary>
		/// The resulting ad units for the requested account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adUnits")]
		public AdUnit[] AdUnits { get; set; }
		
		/// <summary>
		/// If not empty, indicates that there may be more ad units for the request; this value should be passed in a new `ListAdUnitsRequest`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for the apps list request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAppsResponse
	{
		
		/// <summary>
		/// The resulting apps for the requested account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apps")]
		public App[] Apps { get; set; }
		
		/// <summary>
		/// If not empty, indicates that there may be more apps for the request; this value should be passed in a new `ListAppsRequest`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for the publisher account list request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPublisherAccountsResponse
	{
		
		/// <summary>
		/// Publisher that the client credentials can access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account")]
		public PublisherAccount[] Account { get; set; }
		
		/// <summary>
		/// If not empty, indicates that there might be more accounts for the request; you must pass this value in a new `ListPublisherAccountsRequest`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A publisher account contains information relevant to the use of this API, such as the time zone used for the reports.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublisherAccount
	{
		
		/// <summary>
		/// Currency code of the earning-related metrics, which is the 3-letter code defined in ISO 4217. The daily average rate is used for the currency conversion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Resource name of this account. Format is accounts/{publisher_id}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The unique ID by which this publisher account can be identified in the API requests (for example, pub-1234567890).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publisherId")]
		public string PublisherId { get; set; }
		
		/// <summary>
		/// The time zone that is used in reports that are generated for this account. The value is a time-zone ID as specified by the CLDR project, for example, "America/Los_Angeles".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportingTimeZone")]
		public string ReportingTimeZone { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists the AdMob publisher account that was most recently signed in to from the AdMob UI. For more information, see https://support.google.com/admob/answer/10243672.
		/// Admob_accounts_list v1/accounts
		/// </summary>
		/// <param name="pageSize">Maximum number of accounts to return.</param>
		/// <param name="pageToken">The value returned by the last `ListPublisherAccountsResponse`; indicates that this is a continuation of a prior `ListPublisherAccounts` call, and that the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<ListPublisherAccountsResponse> Admob_accounts_listAsync(int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/accounts?pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListPublisherAccountsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about the specified AdMob publisher account.
		/// Admob_accounts_get v1/{name}
		/// </summary>
		/// <param name="name">Resource name of the publisher account to retrieve. Example: accounts/pub-9876543210987654</param>
		/// <returns>Successful response</returns>
		public async Task<PublisherAccount> Admob_accounts_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PublisherAccount>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the ad units under the specified AdMob account.
		/// Admob_accounts_adUnits_list v1/{parent}/adUnits
		/// </summary>
		/// <param name="parent">Required. Resource name of the account to list ad units for. Example: accounts/pub-9876543210987654</param>
		/// <param name="pageSize">The maximum number of ad units to return. If unspecified or 0, at most 10,000 ad units will be returned. The maximum value is 20,000; values above 20,000 will be coerced to 20,000.</param>
		/// <param name="pageToken">The value returned by the last `ListAdUnitsResponse`; indicates that this is a continuation of a prior `ListAdUnits` call, and that the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAdUnitsResponse> Admob_accounts_adUnits_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/adUnits&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAdUnitsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the apps under the specified AdMob account.
		/// Admob_accounts_apps_list v1/{parent}/apps
		/// </summary>
		/// <param name="parent">Required. Resource name of the account to list apps for. Example: accounts/pub-9876543210987654</param>
		/// <param name="pageSize">The maximum number of apps to return. If unspecified or 0, at most 10,000 apps will be returned. The maximum value is 20,000; values above 20,000 will be coerced to 20,000.</param>
		/// <param name="pageToken">The value returned by the last `ListAppsResponse`; indicates that this is a continuation of a prior `ListApps` call, and that the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAppsResponse> Admob_accounts_apps_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apps&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAppsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates an AdMob mediation report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses.
		/// Admob_accounts_mediationReport_generate v1/{parent}/mediationReport:generate
		/// </summary>
		/// <param name="parent">Resource name of the account to generate the report for. Example: accounts/pub-9876543210987654</param>
		/// <returns>Successful response</returns>
		public async Task<GenerateMediationReportResponse> Admob_accounts_mediationReport_generateAsync(string parent, GenerateMediationReportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/mediationReport:generate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GenerateMediationReportResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates an AdMob Network report based on the provided report specification. Returns result of a server-side streaming RPC. The result is returned in a sequence of responses.
		/// Admob_accounts_networkReport_generate v1/{parent}/networkReport:generate
		/// </summary>
		/// <param name="parent">Resource name of the account to generate the report for. Example: accounts/pub-9876543210987654</param>
		/// <returns>Successful response</returns>
		public async Task<GenerateNetworkReportResponse> Admob_accounts_networkReport_generateAsync(string parent, GenerateNetworkReportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/networkReport:generate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GenerateNetworkReportResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

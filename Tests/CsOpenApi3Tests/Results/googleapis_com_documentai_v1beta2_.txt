//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Metadata of the auto-labeling documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The list of individual auto-labeling statuses of the dataset documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualAutoLabelStatuses")]
		public GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus[] IndividualAutoLabelStatuses { get; set; }
		
		/// <summary>
		/// Total number of the auto-labeling documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDocumentCount")]
		public System.Nullable<System.Int32> TotalDocumentCount { get; set; }
	}
	
	/// <summary>
	/// The common metadata for long running operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A related resource to this operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// The state of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDocumentaiUiv1beta3CommonOperationMetadataState> State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiUiv1beta3CommonOperationMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 5,
	}
	
	/// <summary>
	/// The status of individual documents in the auto-labeling process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Document Identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DocumentId
	{
		
		/// <summary>
		/// Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsManagedDocId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId GcsManagedDocId { get; set; }
		
		/// <summary>
		/// The revision reference specifies which revision on the document to read.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionRef")]
		public GoogleCloudDocumentaiUiv1beta3RevisionRef RevisionRef { get; set; }
		
		/// <summary>
		/// Identifies a document uniquely within the scope of a dataset in unmanaged option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unmanagedDocId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId UnmanagedDocId { get; set; }
	}
	
	/// <summary>
	/// Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId
	{
		
		/// <summary>
		/// Id of the document (indexed) managed by Content Warehouse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cwDocId")]
		public string CwDocId { get; set; }
		
		/// <summary>
		/// Required. The Cloud Storage URI where the actual document is stored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
	}
	
	/// <summary>
	/// The revision reference specifies which revision on the document to read.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3RevisionRef
	{
		
		/// <summary>
		/// Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestProcessorVersion")]
		public string LatestProcessorVersion { get; set; }
		
		/// <summary>
		/// Reads the revision by the predefined case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCase")]
		public System.Nullable<GoogleCloudDocumentaiUiv1beta3RevisionRefRevisionCase> RevisionCase { get; set; }
		
		/// <summary>
		/// Reads the revision given by the id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiUiv1beta3RevisionRefRevisionCase
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVISION_CASE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LATEST_HUMAN_REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LATEST_TIMESTAMP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASE_OCR_REVISION = 3,
	}
	
	/// <summary>
	/// Identifies a document uniquely within the scope of a dataset in unmanaged option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId
	{
		
		/// <summary>
		/// Required. The id of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="docId")]
		public string DocId { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The response proto of AutoLabelDocuments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// Total number of documents that failed to be deleted in storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorDocumentCount")]
		public System.Nullable<System.Int32> ErrorDocumentCount { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualBatchDeleteStatuses")]
		public GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus[] IndividualBatchDeleteStatuses { get; set; }
		
		/// <summary>
		/// Total number of documents deleting from dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDocumentCount")]
		public System.Nullable<System.Int32> TotalDocumentCount { get; set; }
	}
	
	/// <summary>
	/// The status of each individual document in the batch delete process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Response of the delete documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The destination dataset split type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destDatasetType")]
		public System.Nullable<GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataDestDatasetType> DestDatasetType { get; set; }
		
		/// <summary>
		/// The destination dataset split type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destSplitType")]
		public GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataDestDatasetType DestSplitType { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualBatchMoveStatuses")]
		public GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus[] IndividualBatchMoveStatuses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataDestDatasetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_SPLIT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_SPLIT_TRAIN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_SPLIT_TEST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_SPLIT_UNASSIGNED = 3,
	}
	
	/// <summary>
	/// The status of each individual document in the batch move process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Response of the batch move documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualBatchUpdateStatuses")]
		public GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus[] IndividualBatchUpdateStatuses { get; set; }
	}
	
	/// <summary>
	/// The status of each individual document in the batch update process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Response of the batch update documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the CreateLabelerPool method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for DeleteLabelerPool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeleteProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeleteProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the DeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the DisableProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the EnableProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse
	{
	}
	
	/// <summary>
	/// Metadata of the EvaluateProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response of the EvaluateProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse
	{
		
		/// <summary>
		/// The resource name of the created evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluation")]
		public string Evaluation { get; set; }
	}
	
	/// <summary>
	/// Metadata of the batch export documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualExportStatuses")]
		public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus[] IndividualExportStatuses { get; set; }
		
		/// <summary>
		/// The list of statistics for each dataset split type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="splitExportStats")]
		public GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat[] SplitExportStats { get; set; }
	}
	
	/// <summary>
	/// The status of each individual document in the export process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The output_gcs_destination of the exported document if it was successful, otherwise empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputGcsDestination")]
		public string OutputGcsDestination { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The statistic representing a dataset split type for this export.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat
	{
		
		/// <summary>
		/// The dataset split type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="splitType")]
		public GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataDestDatasetType SplitType { get; set; }
		
		/// <summary>
		/// Total number of documents with the given dataset split type to be exported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDocumentCount")]
		public System.Nullable<System.Int32> TotalDocumentCount { get; set; }
	}
	
	/// <summary>
	/// The response proto of ExportDocuments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse
	{
	}
	
	/// <summary>
	/// Metadata message associated with the ExportProcessorVersion operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message associated with the ExportProcessorVersion operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse
	{
		
		/// <summary>
		/// The Cloud Storage URI containing the output artifacts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
	}
	
	/// <summary>
	/// Metadata of the import document operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// Validation statuses of the batch documents import config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importConfigValidationResults")]
		public GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult[] ImportConfigValidationResults { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualImportStatuses")]
		public GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus[] IndividualImportStatuses { get; set; }
		
		/// <summary>
		/// Total number of the documents that are qualified for importing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDocumentCount")]
		public System.Nullable<System.Int32> TotalDocumentCount { get; set; }
	}
	
	/// <summary>
	/// The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult
	{
		
		/// <summary>
		/// The source Cloud Storage URI specified in the import config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputGcsSource")]
		public string InputGcsSource { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of each individual document in the import process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus
	{
		
		/// <summary>
		/// The source Cloud Storage URI of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputGcsSource")]
		public string InputGcsSource { get; set; }
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputDocumentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId OutputDocumentId { get; set; }
		
		/// <summary>
		/// The output_gcs_destination of the processed document if it was successful, otherwise empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputGcsDestination")]
		public string OutputGcsDestination { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Response of the import document operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the ImportProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The response message for the ImportProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse
	{
		
		/// <summary>
		/// The destination processor version name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processorVersion")]
		public string ProcessorVersion { get; set; }
	}
	
	/// <summary>
	/// The metadata proto of `ResyncDataset` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The list of dataset resync statuses. Not checked when ResyncDatasetRequest.dataset_documents is specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetResyncStatuses")]
		public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus[] DatasetResyncStatuses { get; set; }
		
		/// <summary>
		/// The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualDocumentResyncStatuses")]
		public GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus[] IndividualDocumentResyncStatuses { get; set; }
	}
	
	/// <summary>
	/// Resync status against inconsistency types on the dataset level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus
	{
		
		/// <summary>
		/// The type of the inconsistency of the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetInconsistencyType")]
		public System.Nullable<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatusDatasetInconsistencyType> DatasetInconsistencyType { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatusDatasetInconsistencyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_INCONSISTENCY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER = 1,
	}
	
	/// <summary>
	/// Resync status for each document per inconsistency type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiUiv1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The type of document inconsistency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentInconsistencyType")]
		public System.Nullable<GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatusDocumentInconsistencyType> DocumentInconsistencyType { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatusDocumentInconsistencyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE = 3,
	}
	
	/// <summary>
	/// The response proto of ResyncDataset method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse
	{
	}
	
	/// <summary>
	/// Metadata of the sample documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response of the sample documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse
	{
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleTestStatus")]
		public GoogleRpcStatus SampleTestStatus { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleTrainingStatus")]
		public GoogleRpcStatus SampleTrainingStatus { get; set; }
		
		/// <summary>
		/// The result of the sampling process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectedDocuments")]
		public GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument[] SelectedDocuments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument
	{
		
		/// <summary>
		/// An internal identifier for document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public string DocumentId { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the SetDefaultProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the SetDefaultProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// The metadata that represents a processor version being created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The dataset validation information. This includes any and all errors with documents and the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testDatasetValidation")]
		public GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation TestDatasetValidation { get; set; }
		
		/// <summary>
		/// The dataset validation information. This includes any and all errors with documents and the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingDatasetValidation")]
		public GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation TrainingDatasetValidation { get; set; }
	}
	
	/// <summary>
	/// The dataset validation information. This includes any and all errors with documents and the dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation
	{
		
		/// <summary>
		/// The total number of dataset errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetErrorCount")]
		public System.Nullable<System.Int32> DatasetErrorCount { get; set; }
		
		/// <summary>
		/// Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetErrors")]
		public GoogleRpcStatus[] DatasetErrors { get; set; }
		
		/// <summary>
		/// The total number of document errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentErrorCount")]
		public System.Nullable<System.Int32> DocumentErrorCount { get; set; }
		
		/// <summary>
		/// Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentErrors")]
		public GoogleRpcStatus[] DocumentErrors { get; set; }
	}
	
	/// <summary>
	/// The response for TrainProcessorVersion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse
	{
		
		/// <summary>
		/// The resource name of the processor version produced by training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processorVersion")]
		public string ProcessorVersion { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the UndeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the UndeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for updating the human review configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for UpdateLabelerPool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for BatchProcessDocuments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1BatchProcessMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualProcessStatuses")]
		public GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus[] IndividualProcessStatuses { get; set; }
		
		/// <summary>
		/// The state of the current batch processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDocumentaiV1BatchProcessMetadataState> State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing. For example, the error message if the operation is failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The status of a each individual document in the batch process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus
	{
		
		/// <summary>
		/// The status of human review on a processed document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReviewStatus")]
		public GoogleCloudDocumentaiV1HumanReviewStatus HumanReviewStatus { get; set; }
		
		/// <summary>
		/// The source of the document, same as the input_gcs_source field in the request when the batch process started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputGcsSource")]
		public string InputGcsSource { get; set; }
		
		/// <summary>
		/// The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputGcsDestination")]
		public string OutputGcsDestination { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of human review on a processed document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1HumanReviewStatus
	{
		
		/// <summary>
		/// The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReviewOperation")]
		public string HumanReviewOperation { get; set; }
		
		/// <summary>
		/// The state of human review on the processing request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDocumentaiV1HumanReviewStatusState> State { get; set; }
		
		/// <summary>
		/// A message providing more details about the human review state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1HumanReviewStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_PASSED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1BatchProcessMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 6,
	}
	
	/// <summary>
	/// Response message for BatchProcessDocuments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1BatchProcessResponse
	{
	}
	
	/// <summary>
	/// The common metadata for long running operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1CommonOperationMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A related resource to this operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// The state of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadataState State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeleteProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1DeleteProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeleteProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1DeployProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the DeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1DeployProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the DisableProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1DisableProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1DisableProcessorResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the EnableProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1EnableProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1EnableProcessorResponse
	{
	}
	
	/// <summary>
	/// Metadata of the EvaluateProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response of the EvaluateProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse
	{
		
		/// <summary>
		/// The resource name of the created evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluation")]
		public string Evaluation { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the ReviewDocument method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The Crowd Compute question ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="questionId")]
		public string QuestionId { get; set; }
	}
	
	/// <summary>
	/// Response message for the ReviewDocument method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1ReviewDocumentResponse
	{
		
		/// <summary>
		/// The Cloud Storage uri for the human reviewed document if the review is succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public string GcsDestination { get; set; }
		
		/// <summary>
		/// The reason why the review is rejected by reviewer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rejectionReason")]
		public string RejectionReason { get; set; }
		
		/// <summary>
		/// The state of the review operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDocumentaiV1ReviewDocumentResponseState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1ReviewDocumentResponseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
	}
	
	/// <summary>
	/// The long-running operation metadata for the SetDefaultProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the SetDefaultProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// The metadata that represents a processor version being created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1TrainProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The dataset validation information. This includes any and all errors with documents and the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testDatasetValidation")]
		public GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation TestDatasetValidation { get; set; }
		
		/// <summary>
		/// The dataset validation information. This includes any and all errors with documents and the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingDatasetValidation")]
		public GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation TrainingDatasetValidation { get; set; }
	}
	
	/// <summary>
	/// The dataset validation information. This includes any and all errors with documents and the dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation
	{
		
		/// <summary>
		/// The total number of dataset errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetErrorCount")]
		public System.Nullable<System.Int32> DatasetErrorCount { get; set; }
		
		/// <summary>
		/// Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetErrors")]
		public GoogleRpcStatus[] DatasetErrors { get; set; }
		
		/// <summary>
		/// The total number of document errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentErrorCount")]
		public System.Nullable<System.Int32> DocumentErrorCount { get; set; }
		
		/// <summary>
		/// Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentErrors")]
		public GoogleRpcStatus[] DocumentErrors { get; set; }
	}
	
	/// <summary>
	/// The response for TrainProcessorVersion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1TrainProcessorVersionResponse
	{
		
		/// <summary>
		/// The resource name of the processor version produced by training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processorVersion")]
		public string ProcessorVersion { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the UndeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the UndeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1UndeployProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// Encodes the detailed information of a barcode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1Barcode
	{
		
		/// <summary>
		/// Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		/// <summary>
		/// Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawValue")]
		public string RawValue { get; set; }
		
		/// <summary>
		/// Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFormat")]
		public string ValueFormat { get; set; }
	}
	
	/// <summary>
	/// Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse
	{
		
		/// <summary>
		/// Responses for each individual document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responses")]
		public GoogleCloudDocumentaiV1beta1ProcessDocumentResponse[] Responses { get; set; }
	}
	
	/// <summary>
	/// Response to a single document processing request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1ProcessDocumentResponse
	{
		
		/// <summary>
		/// The desired input location and metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudDocumentaiV1beta1InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// The desired output location and metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputConfig")]
		public GoogleCloudDocumentaiV1beta1OutputConfig OutputConfig { get; set; }
	}
	
	/// <summary>
	/// The desired input location and metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1InputConfig
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the input file will be read from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudDocumentaiV1beta1GcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// The Google Cloud Storage location where the input file will be read from.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1GcsSource
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// The desired output location and metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1OutputConfig
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the output file will be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudDocumentaiV1beta1GcsDestination GcsDestination { get; set; }
		
		/// <summary>
		/// The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pagesPerShard")]
		public System.Nullable<System.Int32> PagesPerShard { get; set; }
	}
	
	/// <summary>
	/// The Google Cloud Storage location where the output file will be written to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1GcsDestination
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// A bounding polygon for the detected image annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1BoundingPoly
	{
		
		/// <summary>
		/// The bounding polygon normalized vertices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="normalizedVertices")]
		public GoogleCloudDocumentaiV1beta1NormalizedVertex[] NormalizedVertices { get; set; }
		
		/// <summary>
		/// The bounding polygon vertices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertices")]
		public GoogleCloudDocumentaiV1beta1Vertex[] Vertices { get; set; }
	}
	
	/// <summary>
	/// A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1NormalizedVertex
	{
		
		/// <summary>
		/// X coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		public System.Nullable<System.Single> X { get; set; }
		
		/// <summary>
		/// Y coordinate (starts from the top of the image).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		public System.Nullable<System.Single> Y { get; set; }
	}
	
	/// <summary>
	/// A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1Vertex
	{
		
		/// <summary>
		/// X coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		public System.Nullable<System.Int32> X { get; set; }
		
		/// <summary>
		/// Y coordinate (starts from the top of the image).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		public System.Nullable<System.Int32> Y { get; set; }
	}
	
	/// <summary>
	/// Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1Document
	{
		
		/// <summary>
		/// Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public GoogleCloudDocumentaiV1beta1DocumentEntity[] Entities { get; set; }
		
		/// <summary>
		/// Placeholder. Relationship among Document.entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityRelations")]
		public GoogleCloudDocumentaiV1beta1DocumentEntityRelation[] EntityRelations { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Visual page layout for the Document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pages")]
		public GoogleCloudDocumentaiV1beta1DocumentPage[] Pages { get; set; }
		
		/// <summary>
		/// Placeholder. Revision history of this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisions")]
		public GoogleCloudDocumentaiV1beta1DocumentRevision[] Revisions { get; set; }
		
		/// <summary>
		/// For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardInfo")]
		public GoogleCloudDocumentaiV1beta1DocumentShardInfo ShardInfo { get; set; }
		
		/// <summary>
		/// Optional. UTF-8 encoded text in reading order from the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textChanges")]
		public GoogleCloudDocumentaiV1beta1DocumentTextChange[] TextChanges { get; set; }
		
		/// <summary>
		/// Styles for the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textStyles")]
		public GoogleCloudDocumentaiV1beta1DocumentStyle[] TextStyles { get; set; }
		
		/// <summary>
		/// Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentEntity
	{
		
		/// <summary>
		/// Optional. Confidence of detected Schema entity. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Optional. Canonical id. This will be a unique value in the entity list for this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. Deprecated. Use `id` field instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mentionId")]
		public string MentionId { get; set; }
		
		/// <summary>
		/// Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mentionText")]
		public string MentionText { get; set; }
		
		/// <summary>
		/// Parsed and normalized entity value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="normalizedValue")]
		public GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue NormalizedValue { get; set; }
		
		/// <summary>
		/// Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageAnchor")]
		public GoogleCloudDocumentaiV1beta1DocumentPageAnchor PageAnchor { get; set; }
		
		/// <summary>
		/// Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudDocumentaiV1beta1DocumentEntity[] Properties { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// Optional. Whether the entity will be redacted for de-identification purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redacted")]
		public System.Nullable<System.Boolean> Redacted { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta1DocumentTextAnchor TextAnchor { get; set; }
		
		/// <summary>
		/// Required. Entity type from a schema e.g. `Address`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Parsed and normalized entity value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue
	{
		
		/// <summary>
		/// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressValue")]
		public GoogleTypePostalAddress AddressValue { get; set; }
		
		/// <summary>
		/// Boolean value. Can be used for entities with binary values, or for checkboxes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="booleanValue")]
		public System.Nullable<System.Boolean> BooleanValue { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateValue")]
		public GoogleTypeDate DateValue { get; set; }
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datetimeValue")]
		public GoogleTypeDateTime DatetimeValue { get; set; }
		
		/// <summary>
		/// Float value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="floatValue")]
		public System.Nullable<System.Single> FloatValue { get; set; }
		
		/// <summary>
		/// Integer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerValue")]
		public System.Nullable<System.Int32> IntegerValue { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moneyValue")]
		public GoogleTypeMoney MoneyValue { get; set; }
		
		/// <summary>
		/// Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypePostalAddress
	{
		
		/// <summary>
		/// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressLines")]
		public string[] AddressLines { get; set; }
		
		/// <summary>
		/// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="administrativeArea")]
		public string AdministrativeArea { get; set; }
		
		/// <summary>
		/// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locality")]
		public string Locality { get; set; }
		
		/// <summary>
		/// Optional. The name of the organization at the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organization")]
		public string Organization { get; set; }
		
		/// <summary>
		/// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public string[] Recipients { get; set; }
		
		/// <summary>
		/// Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionCode")]
		public string RegionCode { get; set; }
		
		/// <summary>
		/// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		/// <summary>
		/// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sortingCode")]
		public string SortingCode { get; set; }
		
		/// <summary>
		/// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sublocality")]
		public string Sublocality { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDateTime
	{
		
		/// <summary>
		/// Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Int32> Hours { get; set; }
		
		/// <summary>
		/// Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minutes")]
		public System.Nullable<System.Int32> Minutes { get; set; }
		
		/// <summary>
		/// Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="seconds")]
		public System.Nullable<System.Int32> Seconds { get; set; }
		
		/// <summary>
		/// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public GoogleTypeTimeZone TimeZone { get; set; }
		
		/// <summary>
		/// UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="utcOffset")]
		public string UtcOffset { get; set; }
		
		/// <summary>
		/// Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeTimeZone
	{
		
		/// <summary>
		/// IANA Time Zone Database time zone, e.g. "America/New_York".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. IANA Time Zone Database version number, e.g. "2019a".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Represents an amount of money with its currency type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeMoney
	{
		
		/// <summary>
		/// The three-letter currency code defined in ISO 4217.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
	}
	
	/// <summary>
	/// Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageAnchor
	{
		
		/// <summary>
		/// One or more references to visual page elements
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageRefs")]
		public GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef[] PageRefs { get; set; }
	}
	
	/// <summary>
	/// Represents a weak reference to a page element within a document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef
	{
		
		/// <summary>
		/// A bounding polygon for the detected image annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingPoly")]
		public GoogleCloudDocumentaiV1beta1BoundingPoly BoundingPoly { get; set; }
		
		/// <summary>
		/// Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Optional. Deprecated. Use PageRef.bounding_poly instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layoutId")]
		public string LayoutId { get; set; }
		
		/// <summary>
		/// Optional. The type of the layout element that is being referenced if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layoutType")]
		public System.Nullable<GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRefLayoutType> LayoutType { get; set; }
		
		/// <summary>
		/// Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="page")]
		public string Page { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRefLayoutType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAYOUT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAGRAPH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOKEN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VISUAL_ELEMENT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_FIELD = 7,
	}
	
	/// <summary>
	/// Structure to identify provenance relationships between annotations in different revisions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentProvenance
	{
		
		/// <summary>
		/// The Id of this operation. Needs to be unique within the scope of the revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// References to the original elements that are replaced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parents")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenanceParent[] Parents { get; set; }
		
		/// <summary>
		/// The index of the revision that produced this element.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		/// <summary>
		/// The type of provenance operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDocumentaiV1beta1DocumentProvenanceType> Type { get; set; }
	}
	
	/// <summary>
	/// The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentProvenanceParent
	{
		
		/// <summary>
		/// The id of the parent provenance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
		
		/// <summary>
		/// The index of the index into current revision's parent_ids list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1beta1DocumentProvenanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVAL_REQUESTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVAL_APPROVED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVAL_SKIPPED = 7,
	}
	
	/// <summary>
	/// Text reference indexing into the Document.text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentTextAnchor
	{
		
		/// <summary>
		/// Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The text segments from the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSegments")]
		public GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment[] TextSegments { get; set; }
	}
	
	/// <summary>
	/// A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment
	{
		
		/// <summary>
		/// TextSegment half open end UTF-8 char index in the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public string EndIndex { get; set; }
		
		/// <summary>
		/// TextSegment start UTF-8 char index in the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public string StartIndex { get; set; }
	}
	
	/// <summary>
	/// Relationship between Entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentEntityRelation
	{
		
		/// <summary>
		/// Object entity id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectId")]
		public string ObjectId { get; set; }
		
		/// <summary>
		/// Relationship description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relation")]
		public string Relation { get; set; }
		
		/// <summary>
		/// Subject entity id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subjectId")]
		public string SubjectId { get; set; }
	}
	
	/// <summary>
	/// A page in a Document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPage
	{
		
		/// <summary>
		/// A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blocks")]
		public GoogleCloudDocumentaiV1beta1DocumentPageBlock[] Blocks { get; set; }
		
		/// <summary>
		/// A list of detected barcodes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedBarcodes")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode[] DetectedBarcodes { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Dimension for the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDimension Dimension { get; set; }
		
		/// <summary>
		/// A list of visually detected form fields on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formFields")]
		public GoogleCloudDocumentaiV1beta1DocumentPageFormField[] FormFields { get; set; }
		
		/// <summary>
		/// Rendered image contents for this page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public GoogleCloudDocumentaiV1beta1DocumentPageImage Image { get; set; }
		
		/// <summary>
		/// Image quality scores for the page image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageQualityScores")]
		public GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores ImageQualityScores { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLine[] Lines { get; set; }
		
		/// <summary>
		/// 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageNumber")]
		public System.Nullable<System.Int32> PageNumber { get; set; }
		
		/// <summary>
		/// A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paragraphs")]
		public GoogleCloudDocumentaiV1beta1DocumentPageParagraph[] Paragraphs { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// A list of visually detected symbols on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="symbols")]
		public GoogleCloudDocumentaiV1beta1DocumentPageSymbol[] Symbols { get; set; }
		
		/// <summary>
		/// A list of visually detected tables on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tables")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTable[] Tables { get; set; }
		
		/// <summary>
		/// A list of visually detected tokens on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokens")]
		public GoogleCloudDocumentaiV1beta1DocumentPageToken[] Tokens { get; set; }
		
		/// <summary>
		/// Transformation matrices that were applied to the original document image to produce Page.image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transforms")]
		public GoogleCloudDocumentaiV1beta1DocumentPageMatrix[] Transforms { get; set; }
		
		/// <summary>
		/// A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visualElements")]
		public GoogleCloudDocumentaiV1beta1DocumentPageVisualElement[] VisualElements { get; set; }
	}
	
	/// <summary>
	/// A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageBlock
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// Detected language for a structural component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage
	{
		
		/// <summary>
		/// Confidence of detected language. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
	}
	
	/// <summary>
	/// Visual element describing a layout unit on a page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageLayout
	{
		
		/// <summary>
		/// A bounding polygon for the detected image annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingPoly")]
		public GoogleCloudDocumentaiV1beta1BoundingPoly BoundingPoly { get; set; }
		
		/// <summary>
		/// Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Detected orientation for the Layout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orientation")]
		public System.Nullable<GoogleCloudDocumentaiV1beta1DocumentPageLayoutOrientation> Orientation { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta1DocumentTextAnchor TextAnchor { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1beta1DocumentPageLayoutOrientation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORIENTATION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAGE_UP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAGE_RIGHT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAGE_DOWN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAGE_LEFT = 4,
	}
	
	/// <summary>
	/// A detected barcode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode
	{
		
		/// <summary>
		/// Encodes the detailed information of a barcode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="barcode")]
		public GoogleCloudDocumentaiV1beta1Barcode Barcode { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
	}
	
	/// <summary>
	/// Dimension for the page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageDimension
	{
		
		/// <summary>
		/// Page height.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Single> Height { get; set; }
		
		/// <summary>
		/// Dimension unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// Page width.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Single> Width { get; set; }
	}
	
	/// <summary>
	/// A form field detected on the page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageFormField
	{
		
		/// <summary>
		/// Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctedKeyText")]
		public string CorrectedKeyText { get; set; }
		
		/// <summary>
		/// Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctedValueText")]
		public string CorrectedValueText { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldName")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout FieldName { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldValue")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout FieldValue { get; set; }
		
		/// <summary>
		/// A list of detected languages for name together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nameDetectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] NameDetectedLanguages { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// A list of detected languages for value together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueDetectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] ValueDetectedLanguages { get; set; }
		
		/// <summary>
		/// If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueType")]
		public string ValueType { get; set; }
	}
	
	/// <summary>
	/// Rendered image contents for this page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageImage
	{
		
		/// <summary>
		/// Raw byte content of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// Height of the image in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Width of the image in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	/// <summary>
	/// Image quality scores for the page image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores
	{
		
		/// <summary>
		/// A list of detected defects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedDefects")]
		public GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect[] DetectedDefects { get; set; }
		
		/// <summary>
		/// The overall quality score. Range `[0, 1]` where `1` is perfect quality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualityScore")]
		public System.Nullable<System.Single> QualityScore { get; set; }
	}
	
	/// <summary>
	/// Image Quality Defects
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect
	{
		
		/// <summary>
		/// Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageLine
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// A collection of lines that a human would perceive as a paragraph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageParagraph
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// A detected symbol.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageSymbol
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
	}
	
	/// <summary>
	/// A table representation similar to HTML table structure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageTable
	{
		
		/// <summary>
		/// Body rows of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bodyRows")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow[] BodyRows { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Header rows of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headerRows")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow[] HeaderRows { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// A row of table cells.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow
	{
		
		/// <summary>
		/// Cells that make up this row.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cells")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell[] Cells { get; set; }
	}
	
	/// <summary>
	/// A cell representation inside the table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell
	{
		
		/// <summary>
		/// How many columns this cell spans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="colSpan")]
		public System.Nullable<System.Int32> ColSpan { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// How many rows this cell spans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowSpan")]
		public System.Nullable<System.Int32> RowSpan { get; set; }
	}
	
	/// <summary>
	/// A detected token.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageToken
	{
		
		/// <summary>
		/// Detected break at the end of a Token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedBreak")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak DetectedBreak { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// Font and other text style attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="styleInfo")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo StyleInfo { get; set; }
	}
	
	/// <summary>
	/// Detected break at the end of a Token.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak
	{
		
		/// <summary>
		/// Detected break type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreakType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreakType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIDE_SPACE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HYPHEN = 3,
	}
	
	/// <summary>
	/// Font and other text style attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backgroundColor")]
		public GoogleTypeColor BackgroundColor { get; set; }
		
		/// <summary>
		/// Whether the text is bold (equivalent to font_weight is at least `700`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bold")]
		public System.Nullable<System.Boolean> Bold { get; set; }
		
		/// <summary>
		/// Font size in points (`1` point is `¹⁄₇₂` inches).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontSize")]
		public System.Nullable<System.Int32> FontSize { get; set; }
		
		/// <summary>
		/// Name or style of the font.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontType")]
		public string FontType { get; set; }
		
		/// <summary>
		/// TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontWeight")]
		public System.Nullable<System.Int32> FontWeight { get; set; }
		
		/// <summary>
		/// Whether the text is handwritten.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handwritten")]
		public System.Nullable<System.Boolean> Handwritten { get; set; }
		
		/// <summary>
		/// Whether the text is italic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="italic")]
		public System.Nullable<System.Boolean> Italic { get; set; }
		
		/// <summary>
		/// Letter spacing in points.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="letterSpacing")]
		public System.Nullable<System.Double> LetterSpacing { get; set; }
		
		/// <summary>
		/// Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pixelFontSize")]
		public System.Nullable<System.Double> PixelFontSize { get; set; }
		
		/// <summary>
		/// Whether the text is in small caps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smallcaps")]
		public System.Nullable<System.Boolean> Smallcaps { get; set; }
		
		/// <summary>
		/// Whether the text is strikethrough.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strikeout")]
		public System.Nullable<System.Boolean> Strikeout { get; set; }
		
		/// <summary>
		/// Whether the text is a subscript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscript")]
		public System.Nullable<System.Boolean> Subscript { get; set; }
		
		/// <summary>
		/// Whether the text is a superscript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="superscript")]
		public System.Nullable<System.Boolean> Superscript { get; set; }
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textColor")]
		public GoogleTypeColor TextColor { get; set; }
		
		/// <summary>
		/// Whether the text is underlined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="underlined")]
		public System.Nullable<System.Boolean> Underlined { get; set; }
	}
	
	/// <summary>
	/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeColor
	{
		
		/// <summary>
		/// The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alpha")]
		public System.Nullable<System.Single> Alpha { get; set; }
		
		/// <summary>
		/// The amount of blue in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blue")]
		public System.Nullable<System.Single> Blue { get; set; }
		
		/// <summary>
		/// The amount of green in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="green")]
		public System.Nullable<System.Single> Green { get; set; }
		
		/// <summary>
		/// The amount of red in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="red")]
		public System.Nullable<System.Single> Red { get; set; }
	}
	
	/// <summary>
	/// Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageMatrix
	{
		
		/// <summary>
		/// Number of columns in the matrix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cols")]
		public System.Nullable<System.Int32> Cols { get; set; }
		
		/// <summary>
		/// The matrix data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Number of rows in the matrix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public System.Nullable<System.Int32> Rows { get; set; }
		
		/// <summary>
		/// This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<System.Int32> Type { get; set; }
	}
	
	/// <summary>
	/// Detected non-text visual elements e.g. checkbox, signature etc. on the page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentPageVisualElement
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Type of the VisualElement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Contains past or forward revisions of this document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentRevision
	{
		
		/// <summary>
		/// If the change was made by a person specify the name or id of that person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agent")]
		public string Agent { get; set; }
		
		/// <summary>
		/// The time that the revision was created, internally generated by doc proto storage at the time of create.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Human Review information of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReview")]
		public GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview HumanReview { get; set; }
		
		/// <summary>
		/// Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public int[] Parent { get; set; }
		
		/// <summary>
		/// The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentIds")]
		public string[] ParentIds { get; set; }
		
		/// <summary>
		/// If the annotation was made by processor identify the processor by its resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processor")]
		public string Processor { get; set; }
	}
	
	/// <summary>
	/// Human Review information of the document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview
	{
		
		/// <summary>
		/// Human review state. e.g. `requested`, `succeeded`, `rejected`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
	}
	
	/// <summary>
	/// For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentShardInfo
	{
		
		/// <summary>
		/// Total number of shards.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardCount")]
		public string ShardCount { get; set; }
		
		/// <summary>
		/// The 0-based index of this shard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardIndex")]
		public string ShardIndex { get; set; }
		
		/// <summary>
		/// The index of the first character in Document.text in the overall document global text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textOffset")]
		public string TextOffset { get; set; }
	}
	
	/// <summary>
	/// This message is used for text changes aka. OCR corrections.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentTextChange
	{
		
		/// <summary>
		/// The text that replaces the text identified in the `text_anchor`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changedText")]
		public string ChangedText { get; set; }
		
		/// <summary>
		/// The history of this annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenance[] Provenance { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta1DocumentTextAnchor TextAnchor { get; set; }
	}
	
	/// <summary>
	/// Annotation for common text style attributes. This adheres to CSS conventions as much as possible.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentStyle
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backgroundColor")]
		public GoogleTypeColor BackgroundColor { get; set; }
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="color")]
		public GoogleTypeColor Color { get; set; }
		
		/// <summary>
		/// Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontFamily")]
		public string FontFamily { get; set; }
		
		/// <summary>
		/// Font size with unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontSize")]
		public GoogleCloudDocumentaiV1beta1DocumentStyleFontSize FontSize { get; set; }
		
		/// <summary>
		/// [Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontWeight")]
		public string FontWeight { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta1DocumentTextAnchor TextAnchor { get; set; }
		
		/// <summary>
		/// [Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textDecoration")]
		public string TextDecoration { get; set; }
		
		/// <summary>
		/// [Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textStyle")]
		public string TextStyle { get; set; }
	}
	
	/// <summary>
	/// Font size with unit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1DocumentStyleFontSize
	{
		
		/// <summary>
		/// Font size for the text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Single> Size { get; set; }
		
		/// <summary>
		/// Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// Contains metadata for the BatchProcessDocuments operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta1OperationMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The state of the current batch processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDocumentaiV1beta1OperationMetadataState> State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1beta1OperationMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCEPTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 6,
	}
	
	/// <summary>
	/// Parameters to control AutoML model prediction behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2AutoMlParams
	{
		
		/// <summary>
		/// Resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
	}
	
	/// <summary>
	/// Encodes the detailed information of a barcode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2Barcode
	{
		
		/// <summary>
		/// Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		/// <summary>
		/// Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawValue")]
		public string RawValue { get; set; }
		
		/// <summary>
		/// Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFormat")]
		public string ValueFormat { get; set; }
	}
	
	/// <summary>
	/// Request to batch process documents as an asynchronous operation. The output is written to Cloud Storage as JSON in the [Document] format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest
	{
		
		/// <summary>
		/// Required. Individual requests for each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleCloudDocumentaiV1beta2ProcessDocumentRequest[] Requests { get; set; }
	}
	
	/// <summary>
	/// Request to process one document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2ProcessDocumentRequest
	{
		
		/// <summary>
		/// Parameters to control AutoML model prediction behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automlParams")]
		public GoogleCloudDocumentaiV1beta2AutoMlParams AutomlParams { get; set; }
		
		/// <summary>
		/// Specifies a known document type for deeper structure detection. Valid values are currently "general" and "invoice". If not provided, "general"\ is used as default. If any other value is given, the request is rejected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentType")]
		public string DocumentType { get; set; }
		
		/// <summary>
		/// Parameters to control entity extraction behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityExtractionParams")]
		public GoogleCloudDocumentaiV1beta2EntityExtractionParams EntityExtractionParams { get; set; }
		
		/// <summary>
		/// Parameters to control form extraction behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formExtractionParams")]
		public GoogleCloudDocumentaiV1beta2FormExtractionParams FormExtractionParams { get; set; }
		
		/// <summary>
		/// The desired input location and metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudDocumentaiV1beta2InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Parameters to control Optical Character Recognition (OCR) behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ocrParams")]
		public GoogleCloudDocumentaiV1beta2OcrParams OcrParams { get; set; }
		
		/// <summary>
		/// The desired output location and metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputConfig")]
		public GoogleCloudDocumentaiV1beta2OutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Parameters to control table extraction behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableExtractionParams")]
		public GoogleCloudDocumentaiV1beta2TableExtractionParams TableExtractionParams { get; set; }
	}
	
	/// <summary>
	/// Parameters to control entity extraction behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2EntityExtractionParams
	{
		
		/// <summary>
		/// Whether to enable entity extraction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Model version of the entity extraction. Default is "builtin/stable". Specify "builtin/latest" for the latest model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersion")]
		public string ModelVersion { get; set; }
	}
	
	/// <summary>
	/// Parameters to control form extraction behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2FormExtractionParams
	{
		
		/// <summary>
		/// Whether to enable form extraction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyValuePairHints")]
		public GoogleCloudDocumentaiV1beta2KeyValuePairHint[] KeyValuePairHints { get; set; }
		
		/// <summary>
		/// Model version of the form extraction system. Default is "builtin/stable". Specify "builtin/latest" for the latest model. For custom form models, specify: "custom/{model_name}". Model name format is "bucket_name/path/to/modeldir" corresponding to "gs://bucket_name/path/to/modeldir" where annotated examples are stored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersion")]
		public string ModelVersion { get; set; }
	}
	
	/// <summary>
	/// Reserved for future use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2KeyValuePairHint
	{
		
		/// <summary>
		/// The key text for the hint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Type of the value. This is case-insensitive, and could be one of: ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER, ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueTypes")]
		public string[] ValueTypes { get; set; }
	}
	
	/// <summary>
	/// The desired input location and metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2InputConfig
	{
		
		/// <summary>
		/// Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string Contents { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location where the input file will be read from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudDocumentaiV1beta2GcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// The Google Cloud Storage location where the input file will be read from.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2GcsSource
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Parameters to control Optical Character Recognition (OCR) behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2OcrParams
	{
		
		/// <summary>
		/// List of languages to use for OCR. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Document processing returns an error if one or more of the specified languages is not one of the supported languages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageHints")]
		public string[] LanguageHints { get; set; }
	}
	
	/// <summary>
	/// The desired output location and metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2OutputConfig
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the output file will be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudDocumentaiV1beta2GcsDestination GcsDestination { get; set; }
		
		/// <summary>
		/// The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pagesPerShard")]
		public System.Nullable<System.Int32> PagesPerShard { get; set; }
	}
	
	/// <summary>
	/// The Google Cloud Storage location where the output file will be written to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2GcsDestination
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Parameters to control table extraction behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2TableExtractionParams
	{
		
		/// <summary>
		/// Whether to enable table extraction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Optional. Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headerHints")]
		public string[] HeaderHints { get; set; }
		
		/// <summary>
		/// Model version of the table extraction system. Default is "builtin/stable". Specify "builtin/latest" for the latest model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersion")]
		public string ModelVersion { get; set; }
		
		/// <summary>
		/// Optional. Table bounding box hints that can be provided to complex cases which our algorithm cannot locate the table(s) in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableBoundHints")]
		public GoogleCloudDocumentaiV1beta2TableBoundHint[] TableBoundHints { get; set; }
	}
	
	/// <summary>
	/// A hint for a table bounding box on the page for table parsing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2TableBoundHint
	{
		
		/// <summary>
		/// A bounding polygon for the detected image annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBox")]
		public GoogleCloudDocumentaiV1beta2BoundingPoly BoundingBox { get; set; }
		
		/// <summary>
		/// Optional. Page number for multi-paged inputs this hint applies to. If not provided, this hint will apply to all pages by default. This value is 1-based.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageNumber")]
		public System.Nullable<System.Int32> PageNumber { get; set; }
	}
	
	/// <summary>
	/// A bounding polygon for the detected image annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2BoundingPoly
	{
		
		/// <summary>
		/// The bounding polygon normalized vertices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="normalizedVertices")]
		public GoogleCloudDocumentaiV1beta2NormalizedVertex[] NormalizedVertices { get; set; }
		
		/// <summary>
		/// The bounding polygon vertices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertices")]
		public GoogleCloudDocumentaiV1beta2Vertex[] Vertices { get; set; }
	}
	
	/// <summary>
	/// A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2NormalizedVertex
	{
		
		/// <summary>
		/// X coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		public System.Nullable<System.Single> X { get; set; }
		
		/// <summary>
		/// Y coordinate (starts from the top of the image).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		public System.Nullable<System.Single> Y { get; set; }
	}
	
	/// <summary>
	/// A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2Vertex
	{
		
		/// <summary>
		/// X coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		public System.Nullable<System.Int32> X { get; set; }
		
		/// <summary>
		/// Y coordinate (starts from the top of the image).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		public System.Nullable<System.Int32> Y { get; set; }
	}
	
	/// <summary>
	/// Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse
	{
		
		/// <summary>
		/// Responses for each individual document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responses")]
		public GoogleCloudDocumentaiV1beta2ProcessDocumentResponse[] Responses { get; set; }
	}
	
	/// <summary>
	/// Response to a single document processing request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2ProcessDocumentResponse
	{
		
		/// <summary>
		/// The desired input location and metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudDocumentaiV1beta2InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// The desired output location and metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputConfig")]
		public GoogleCloudDocumentaiV1beta2OutputConfig OutputConfig { get; set; }
	}
	
	/// <summary>
	/// Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2Document
	{
		
		/// <summary>
		/// Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public GoogleCloudDocumentaiV1beta2DocumentEntity[] Entities { get; set; }
		
		/// <summary>
		/// Placeholder. Relationship among Document.entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityRelations")]
		public GoogleCloudDocumentaiV1beta2DocumentEntityRelation[] EntityRelations { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Labels for this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public GoogleCloudDocumentaiV1beta2DocumentLabel[] Labels { get; set; }
		
		/// <summary>
		/// An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Visual page layout for the Document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pages")]
		public GoogleCloudDocumentaiV1beta2DocumentPage[] Pages { get; set; }
		
		/// <summary>
		/// Placeholder. Revision history of this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisions")]
		public GoogleCloudDocumentaiV1beta2DocumentRevision[] Revisions { get; set; }
		
		/// <summary>
		/// For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardInfo")]
		public GoogleCloudDocumentaiV1beta2DocumentShardInfo ShardInfo { get; set; }
		
		/// <summary>
		/// Optional. UTF-8 encoded text in reading order from the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textChanges")]
		public GoogleCloudDocumentaiV1beta2DocumentTextChange[] TextChanges { get; set; }
		
		/// <summary>
		/// Styles for the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textStyles")]
		public GoogleCloudDocumentaiV1beta2DocumentStyle[] TextStyles { get; set; }
		
		/// <summary>
		/// Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentEntity
	{
		
		/// <summary>
		/// Optional. Confidence of detected Schema entity. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Optional. Canonical id. This will be a unique value in the entity list for this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. Deprecated. Use `id` field instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mentionId")]
		public string MentionId { get; set; }
		
		/// <summary>
		/// Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mentionText")]
		public string MentionText { get; set; }
		
		/// <summary>
		/// Parsed and normalized entity value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="normalizedValue")]
		public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue NormalizedValue { get; set; }
		
		/// <summary>
		/// Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageAnchor")]
		public GoogleCloudDocumentaiV1beta2DocumentPageAnchor PageAnchor { get; set; }
		
		/// <summary>
		/// Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudDocumentaiV1beta2DocumentEntity[] Properties { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// Optional. Whether the entity will be redacted for de-identification purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redacted")]
		public System.Nullable<System.Boolean> Redacted { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta2DocumentTextAnchor TextAnchor { get; set; }
		
		/// <summary>
		/// Required. Entity type from a schema e.g. `Address`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Parsed and normalized entity value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue
	{
		
		/// <summary>
		/// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressValue")]
		public GoogleTypePostalAddress AddressValue { get; set; }
		
		/// <summary>
		/// Boolean value. Can be used for entities with binary values, or for checkboxes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="booleanValue")]
		public System.Nullable<System.Boolean> BooleanValue { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateValue")]
		public GoogleTypeDate DateValue { get; set; }
		
		/// <summary>
		/// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datetimeValue")]
		public GoogleTypeDateTime DatetimeValue { get; set; }
		
		/// <summary>
		/// Float value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="floatValue")]
		public System.Nullable<System.Single> FloatValue { get; set; }
		
		/// <summary>
		/// Integer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerValue")]
		public System.Nullable<System.Int32> IntegerValue { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moneyValue")]
		public GoogleTypeMoney MoneyValue { get; set; }
		
		/// <summary>
		/// Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageAnchor
	{
		
		/// <summary>
		/// One or more references to visual page elements
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageRefs")]
		public GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef[] PageRefs { get; set; }
	}
	
	/// <summary>
	/// Represents a weak reference to a page element within a document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef
	{
		
		/// <summary>
		/// A bounding polygon for the detected image annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingPoly")]
		public GoogleCloudDocumentaiV1beta2BoundingPoly BoundingPoly { get; set; }
		
		/// <summary>
		/// Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Optional. Deprecated. Use PageRef.bounding_poly instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layoutId")]
		public string LayoutId { get; set; }
		
		/// <summary>
		/// Optional. The type of the layout element that is being referenced if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layoutType")]
		public GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRefLayoutType LayoutType { get; set; }
		
		/// <summary>
		/// Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="page")]
		public string Page { get; set; }
	}
	
	/// <summary>
	/// Structure to identify provenance relationships between annotations in different revisions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentProvenance
	{
		
		/// <summary>
		/// The Id of this operation. Needs to be unique within the scope of the revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// References to the original elements that are replaced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parents")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenanceParent[] Parents { get; set; }
		
		/// <summary>
		/// The index of the revision that produced this element.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		/// <summary>
		/// The type of provenance operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudDocumentaiV1beta1DocumentProvenanceType Type { get; set; }
	}
	
	/// <summary>
	/// The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentProvenanceParent
	{
		
		/// <summary>
		/// The id of the parent provenance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
		
		/// <summary>
		/// The index of the index into current revision's parent_ids list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	/// <summary>
	/// Text reference indexing into the Document.text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentTextAnchor
	{
		
		/// <summary>
		/// Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The text segments from the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSegments")]
		public GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment[] TextSegments { get; set; }
	}
	
	/// <summary>
	/// A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment
	{
		
		/// <summary>
		/// TextSegment half open end UTF-8 char index in the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public string EndIndex { get; set; }
		
		/// <summary>
		/// TextSegment start UTF-8 char index in the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public string StartIndex { get; set; }
	}
	
	/// <summary>
	/// Relationship between Entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentEntityRelation
	{
		
		/// <summary>
		/// Object entity id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectId")]
		public string ObjectId { get; set; }
		
		/// <summary>
		/// Relationship description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relation")]
		public string Relation { get; set; }
		
		/// <summary>
		/// Subject entity id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subjectId")]
		public string SubjectId { get; set; }
	}
	
	/// <summary>
	/// Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentLabel
	{
		
		/// <summary>
		/// Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automlModel")]
		public string AutomlModel { get; set; }
		
		/// <summary>
		/// Confidence score between 0 and 1 for label assignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A page in a Document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPage
	{
		
		/// <summary>
		/// A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blocks")]
		public GoogleCloudDocumentaiV1beta2DocumentPageBlock[] Blocks { get; set; }
		
		/// <summary>
		/// A list of detected barcodes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedBarcodes")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode[] DetectedBarcodes { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Dimension for the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDimension Dimension { get; set; }
		
		/// <summary>
		/// A list of visually detected form fields on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formFields")]
		public GoogleCloudDocumentaiV1beta2DocumentPageFormField[] FormFields { get; set; }
		
		/// <summary>
		/// Rendered image contents for this page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public GoogleCloudDocumentaiV1beta2DocumentPageImage Image { get; set; }
		
		/// <summary>
		/// Image quality scores for the page image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageQualityScores")]
		public GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores ImageQualityScores { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLine[] Lines { get; set; }
		
		/// <summary>
		/// 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageNumber")]
		public System.Nullable<System.Int32> PageNumber { get; set; }
		
		/// <summary>
		/// A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paragraphs")]
		public GoogleCloudDocumentaiV1beta2DocumentPageParagraph[] Paragraphs { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// A list of visually detected symbols on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="symbols")]
		public GoogleCloudDocumentaiV1beta2DocumentPageSymbol[] Symbols { get; set; }
		
		/// <summary>
		/// A list of visually detected tables on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tables")]
		public GoogleCloudDocumentaiV1beta2DocumentPageTable[] Tables { get; set; }
		
		/// <summary>
		/// A list of visually detected tokens on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokens")]
		public GoogleCloudDocumentaiV1beta2DocumentPageToken[] Tokens { get; set; }
		
		/// <summary>
		/// Transformation matrices that were applied to the original document image to produce Page.image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transforms")]
		public GoogleCloudDocumentaiV1beta2DocumentPageMatrix[] Transforms { get; set; }
		
		/// <summary>
		/// A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visualElements")]
		public GoogleCloudDocumentaiV1beta2DocumentPageVisualElement[] VisualElements { get; set; }
	}
	
	/// <summary>
	/// A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageBlock
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// Detected language for a structural component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage
	{
		
		/// <summary>
		/// Confidence of detected language. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
	}
	
	/// <summary>
	/// Visual element describing a layout unit on a page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageLayout
	{
		
		/// <summary>
		/// A bounding polygon for the detected image annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingPoly")]
		public GoogleCloudDocumentaiV1beta2BoundingPoly BoundingPoly { get; set; }
		
		/// <summary>
		/// Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Detected orientation for the Layout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orientation")]
		public GoogleCloudDocumentaiV1beta1DocumentPageLayoutOrientation Orientation { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta2DocumentTextAnchor TextAnchor { get; set; }
	}
	
	/// <summary>
	/// A detected barcode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode
	{
		
		/// <summary>
		/// Encodes the detailed information of a barcode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="barcode")]
		public GoogleCloudDocumentaiV1beta2Barcode Barcode { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
	}
	
	/// <summary>
	/// Dimension for the page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageDimension
	{
		
		/// <summary>
		/// Page height.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Single> Height { get; set; }
		
		/// <summary>
		/// Dimension unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// Page width.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Single> Width { get; set; }
	}
	
	/// <summary>
	/// A form field detected on the page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageFormField
	{
		
		/// <summary>
		/// Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctedKeyText")]
		public string CorrectedKeyText { get; set; }
		
		/// <summary>
		/// Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctedValueText")]
		public string CorrectedValueText { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldName")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout FieldName { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldValue")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout FieldValue { get; set; }
		
		/// <summary>
		/// A list of detected languages for name together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nameDetectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] NameDetectedLanguages { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// A list of detected languages for value together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueDetectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] ValueDetectedLanguages { get; set; }
		
		/// <summary>
		/// If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueType")]
		public string ValueType { get; set; }
	}
	
	/// <summary>
	/// Rendered image contents for this page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageImage
	{
		
		/// <summary>
		/// Raw byte content of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// Height of the image in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Width of the image in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	/// <summary>
	/// Image quality scores for the page image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores
	{
		
		/// <summary>
		/// A list of detected defects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedDefects")]
		public GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect[] DetectedDefects { get; set; }
		
		/// <summary>
		/// The overall quality score. Range `[0, 1]` where `1` is perfect quality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualityScore")]
		public System.Nullable<System.Single> QualityScore { get; set; }
	}
	
	/// <summary>
	/// Image Quality Defects
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect
	{
		
		/// <summary>
		/// Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageLine
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// A collection of lines that a human would perceive as a paragraph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageParagraph
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// A detected symbol.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageSymbol
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
	}
	
	/// <summary>
	/// A table representation similar to HTML table structure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageTable
	{
		
		/// <summary>
		/// Body rows of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bodyRows")]
		public GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow[] BodyRows { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Header rows of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headerRows")]
		public GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow[] HeaderRows { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
	}
	
	/// <summary>
	/// A row of table cells.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow
	{
		
		/// <summary>
		/// Cells that make up this row.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cells")]
		public GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell[] Cells { get; set; }
	}
	
	/// <summary>
	/// A cell representation inside the table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell
	{
		
		/// <summary>
		/// How many columns this cell spans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="colSpan")]
		public System.Nullable<System.Int32> ColSpan { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// How many rows this cell spans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowSpan")]
		public System.Nullable<System.Int32> RowSpan { get; set; }
	}
	
	/// <summary>
	/// A detected token.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageToken
	{
		
		/// <summary>
		/// Detected break at the end of a Token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedBreak")]
		public GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak DetectedBreak { get; set; }
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Structure to identify provenance relationships between annotations in different revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance Provenance { get; set; }
		
		/// <summary>
		/// Font and other text style attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="styleInfo")]
		public GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo StyleInfo { get; set; }
	}
	
	/// <summary>
	/// Detected break at the end of a Token.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak
	{
		
		/// <summary>
		/// Detected break type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreakType Type { get; set; }
	}
	
	/// <summary>
	/// Font and other text style attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backgroundColor")]
		public GoogleTypeColor BackgroundColor { get; set; }
		
		/// <summary>
		/// Whether the text is bold (equivalent to font_weight is at least `700`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bold")]
		public System.Nullable<System.Boolean> Bold { get; set; }
		
		/// <summary>
		/// Font size in points (`1` point is `¹⁄₇₂` inches).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontSize")]
		public System.Nullable<System.Int32> FontSize { get; set; }
		
		/// <summary>
		/// Name or style of the font.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontType")]
		public string FontType { get; set; }
		
		/// <summary>
		/// TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontWeight")]
		public System.Nullable<System.Int32> FontWeight { get; set; }
		
		/// <summary>
		/// Whether the text is handwritten.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handwritten")]
		public System.Nullable<System.Boolean> Handwritten { get; set; }
		
		/// <summary>
		/// Whether the text is italic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="italic")]
		public System.Nullable<System.Boolean> Italic { get; set; }
		
		/// <summary>
		/// Letter spacing in points.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="letterSpacing")]
		public System.Nullable<System.Double> LetterSpacing { get; set; }
		
		/// <summary>
		/// Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pixelFontSize")]
		public System.Nullable<System.Double> PixelFontSize { get; set; }
		
		/// <summary>
		/// Whether the text is in small caps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smallcaps")]
		public System.Nullable<System.Boolean> Smallcaps { get; set; }
		
		/// <summary>
		/// Whether the text is strikethrough.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strikeout")]
		public System.Nullable<System.Boolean> Strikeout { get; set; }
		
		/// <summary>
		/// Whether the text is a subscript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscript")]
		public System.Nullable<System.Boolean> Subscript { get; set; }
		
		/// <summary>
		/// Whether the text is a superscript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="superscript")]
		public System.Nullable<System.Boolean> Superscript { get; set; }
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textColor")]
		public GoogleTypeColor TextColor { get; set; }
		
		/// <summary>
		/// Whether the text is underlined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="underlined")]
		public System.Nullable<System.Boolean> Underlined { get; set; }
	}
	
	/// <summary>
	/// Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageMatrix
	{
		
		/// <summary>
		/// Number of columns in the matrix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cols")]
		public System.Nullable<System.Int32> Cols { get; set; }
		
		/// <summary>
		/// The matrix data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Number of rows in the matrix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public System.Nullable<System.Int32> Rows { get; set; }
		
		/// <summary>
		/// This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<System.Int32> Type { get; set; }
	}
	
	/// <summary>
	/// Detected non-text visual elements e.g. checkbox, signature etc. on the page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentPageVisualElement
	{
		
		/// <summary>
		/// A list of detected languages together with confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguages")]
		public GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage[] DetectedLanguages { get; set; }
		
		/// <summary>
		/// Visual element describing a layout unit on a page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="layout")]
		public GoogleCloudDocumentaiV1beta2DocumentPageLayout Layout { get; set; }
		
		/// <summary>
		/// Type of the VisualElement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Contains past or forward revisions of this document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentRevision
	{
		
		/// <summary>
		/// If the change was made by a person specify the name or id of that person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agent")]
		public string Agent { get; set; }
		
		/// <summary>
		/// The time that the revision was created, internally generated by doc proto storage at the time of create.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Human Review information of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReview")]
		public GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview HumanReview { get; set; }
		
		/// <summary>
		/// Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public int[] Parent { get; set; }
		
		/// <summary>
		/// The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentIds")]
		public string[] ParentIds { get; set; }
		
		/// <summary>
		/// If the annotation was made by processor identify the processor by its resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processor")]
		public string Processor { get; set; }
	}
	
	/// <summary>
	/// Human Review information of the document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview
	{
		
		/// <summary>
		/// Human review state. e.g. `requested`, `succeeded`, `rejected`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
	}
	
	/// <summary>
	/// For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentShardInfo
	{
		
		/// <summary>
		/// Total number of shards.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardCount")]
		public string ShardCount { get; set; }
		
		/// <summary>
		/// The 0-based index of this shard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardIndex")]
		public string ShardIndex { get; set; }
		
		/// <summary>
		/// The index of the first character in Document.text in the overall document global text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textOffset")]
		public string TextOffset { get; set; }
	}
	
	/// <summary>
	/// This message is used for text changes aka. OCR corrections.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentTextChange
	{
		
		/// <summary>
		/// The text that replaces the text identified in the `text_anchor`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changedText")]
		public string ChangedText { get; set; }
		
		/// <summary>
		/// The history of this annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provenance")]
		public GoogleCloudDocumentaiV1beta2DocumentProvenance[] Provenance { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta2DocumentTextAnchor TextAnchor { get; set; }
	}
	
	/// <summary>
	/// Annotation for common text style attributes. This adheres to CSS conventions as much as possible.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentStyle
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backgroundColor")]
		public GoogleTypeColor BackgroundColor { get; set; }
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="color")]
		public GoogleTypeColor Color { get; set; }
		
		/// <summary>
		/// Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontFamily")]
		public string FontFamily { get; set; }
		
		/// <summary>
		/// Font size with unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontSize")]
		public GoogleCloudDocumentaiV1beta2DocumentStyleFontSize FontSize { get; set; }
		
		/// <summary>
		/// [Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fontWeight")]
		public string FontWeight { get; set; }
		
		/// <summary>
		/// Text reference indexing into the Document.text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textAnchor")]
		public GoogleCloudDocumentaiV1beta2DocumentTextAnchor TextAnchor { get; set; }
		
		/// <summary>
		/// [Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textDecoration")]
		public string TextDecoration { get; set; }
		
		/// <summary>
		/// [Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textStyle")]
		public string TextStyle { get; set; }
	}
	
	/// <summary>
	/// Font size with unit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2DocumentStyleFontSize
	{
		
		/// <summary>
		/// Font size for the text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Single> Size { get; set; }
		
		/// <summary>
		/// Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// Contains metadata for the BatchProcessDocuments operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta2OperationMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The state of the current batch processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiV1beta1OperationMetadataState State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// Total number of documents that failed to be deleted in storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorDocumentCount")]
		public System.Nullable<System.Int32> ErrorDocumentCount { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualBatchDeleteStatuses")]
		public GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus[] IndividualBatchDeleteStatuses { get; set; }
		
		/// <summary>
		/// Total number of documents deleting from dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDocumentCount")]
		public System.Nullable<System.Int32> TotalDocumentCount { get; set; }
	}
	
	/// <summary>
	/// The common metadata for long running operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3CommonOperationMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A related resource to this operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// The state of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadataState State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The status of each individual document in the batch delete process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus
	{
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public GoogleCloudDocumentaiV1beta3DocumentId DocumentId { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Document Identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DocumentId
	{
		
		/// <summary>
		/// Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsManagedDocId")]
		public GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId GcsManagedDocId { get; set; }
		
		/// <summary>
		/// The revision reference specifies which revision on the document to read.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionRef")]
		public GoogleCloudDocumentaiV1beta3RevisionRef RevisionRef { get; set; }
		
		/// <summary>
		/// Identifies a document uniquely within the scope of a dataset in unmanaged option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unmanagedDocId")]
		public GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId UnmanagedDocId { get; set; }
	}
	
	/// <summary>
	/// Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId
	{
		
		/// <summary>
		/// Id of the document (indexed) managed by Content Warehouse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cwDocId")]
		public string CwDocId { get; set; }
		
		/// <summary>
		/// Required. The Cloud Storage URI where the actual document is stored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
	}
	
	/// <summary>
	/// The revision reference specifies which revision on the document to read.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3RevisionRef
	{
		
		/// <summary>
		/// Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestProcessorVersion")]
		public string LatestProcessorVersion { get; set; }
		
		/// <summary>
		/// Reads the revision by the predefined case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCase")]
		public GoogleCloudDocumentaiUiv1beta3RevisionRefRevisionCase RevisionCase { get; set; }
		
		/// <summary>
		/// Reads the revision given by the id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Identifies a document uniquely within the scope of a dataset in unmanaged option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId
	{
		
		/// <summary>
		/// Required. The id of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="docId")]
		public string DocId { get; set; }
	}
	
	/// <summary>
	/// Response of the delete documents operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for BatchProcessDocuments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3BatchProcessMetadata
	{
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualProcessStatuses")]
		public GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus[] IndividualProcessStatuses { get; set; }
		
		/// <summary>
		/// The state of the current batch processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiV1BatchProcessMetadataState State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing. For example, the error message if the operation is failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The status of a each individual document in the batch process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus
	{
		
		/// <summary>
		/// The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by the ReviewDocument method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReviewOperation")]
		public string HumanReviewOperation { get; set; }
		
		/// <summary>
		/// The status of human review on a processed document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReviewStatus")]
		public GoogleCloudDocumentaiV1beta3HumanReviewStatus HumanReviewStatus { get; set; }
		
		/// <summary>
		/// The source of the document, same as the input_gcs_source field in the request when the batch process started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputGcsSource")]
		public string InputGcsSource { get; set; }
		
		/// <summary>
		/// The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputGcsDestination")]
		public string OutputGcsDestination { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of human review on a processed document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3HumanReviewStatus
	{
		
		/// <summary>
		/// The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="humanReviewOperation")]
		public string HumanReviewOperation { get; set; }
		
		/// <summary>
		/// The state of human review on the processing request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiV1HumanReviewStatusState State { get; set; }
		
		/// <summary>
		/// A message providing more details about the human review state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
	}
	
	/// <summary>
	/// Response message for BatchProcessDocuments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3BatchProcessResponse
	{
	}
	
	/// <summary>
	/// A singleton resource under a Processor which configures a collection of documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3Dataset
	{
		
		/// <summary>
		/// Configuration specific to the Document AI Warehouse-based implementation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentWarehouseConfig")]
		public GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig DocumentWarehouseConfig { get; set; }
		
		/// <summary>
		/// Configuration specific to the Cloud Storage-based implementation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsManagedConfig")]
		public GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig GcsManagedConfig { get; set; }
		
		/// <summary>
		/// Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configuration specific to spanner-based indexing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spannerIndexingConfig")]
		public GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig SpannerIndexingConfig { get; set; }
		
		/// <summary>
		/// Required. State of the dataset. Ignored when updating dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDocumentaiV1beta3DatasetState> State { get; set; }
		
		/// <summary>
		/// Configuration specific to an unmanaged dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unmanagedDatasetConfig")]
		public GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig UnmanagedDatasetConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration specific to the Document AI Warehouse-based implementation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig
	{
		
		/// <summary>
		/// Output only. The collection in Document AI Warehouse associated with the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="collection")]
		public string Collection { get; set; }
		
		/// <summary>
		/// Output only. The schema in Document AI Warehouse associated with the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
	}
	
	/// <summary>
	/// Configuration specific to the Cloud Storage-based implementation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig
	{
		
		/// <summary>
		/// Specifies all documents on Cloud Storage with a common prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPrefix")]
		public GoogleCloudDocumentaiV1beta3GcsPrefix GcsPrefix { get; set; }
	}
	
	/// <summary>
	/// Specifies all documents on Cloud Storage with a common prefix.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3GcsPrefix
	{
		
		/// <summary>
		/// The URI prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUriPrefix")]
		public string GcsUriPrefix { get; set; }
	}
	
	/// <summary>
	/// Configuration specific to spanner-based indexing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDocumentaiV1beta3DatasetState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNINITIALIZED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZED = 3,
	}
	
	/// <summary>
	/// Configuration specific to an unmanaged dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeleteProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeleteProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the DeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the DeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the DisableProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DisableProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3DisableProcessorResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the EnableProcessor method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3EnableProcessorMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3EnableProcessorResponse
	{
	}
	
	/// <summary>
	/// Metadata of the EvaluateProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response of the EvaluateProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse
	{
		
		/// <summary>
		/// The resource name of the created evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluation")]
		public string Evaluation { get; set; }
	}
	
	/// <summary>
	/// Metadata of the import document operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// Validation statuses of the batch documents import config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importConfigValidationResults")]
		public GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult[] ImportConfigValidationResults { get; set; }
		
		/// <summary>
		/// The list of response details of each document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualImportStatuses")]
		public GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus[] IndividualImportStatuses { get; set; }
		
		/// <summary>
		/// Total number of the documents that are qualified for importing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDocumentCount")]
		public System.Nullable<System.Int32> TotalDocumentCount { get; set; }
	}
	
	/// <summary>
	/// The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult
	{
		
		/// <summary>
		/// The source Cloud Storage URI specified in the import config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputGcsSource")]
		public string InputGcsSource { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of each individual document in the import process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus
	{
		
		/// <summary>
		/// The source Cloud Storage URI of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputGcsSource")]
		public string InputGcsSource { get; set; }
		
		/// <summary>
		/// Document Identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputDocumentId")]
		public GoogleCloudDocumentaiV1beta3DocumentId OutputDocumentId { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Response of the import document operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ImportDocumentsResponse
	{
	}
	
	/// <summary>
	/// The long-running operation metadata for the ImportProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// The response message for the ImportProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse
	{
		
		/// <summary>
		/// The destination processor version name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processorVersion")]
		public string ProcessorVersion { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the ReviewDocument method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The creation time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The Crowd Compute question ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="questionId")]
		public string QuestionId { get; set; }
		
		/// <summary>
		/// Used only when Operation.done is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiUiv1beta3CommonOperationMetadataState State { get; set; }
		
		/// <summary>
		/// A message providing more details about the current state of processing. For example, the error message if the operation is failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateMessage")]
		public string StateMessage { get; set; }
		
		/// <summary>
		/// The last update time of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for the ReviewDocument method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3ReviewDocumentResponse
	{
		
		/// <summary>
		/// The Cloud Storage uri for the human reviewed document if the review is succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public string GcsDestination { get; set; }
		
		/// <summary>
		/// The reason why the review is rejected by reviewer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rejectionReason")]
		public string RejectionReason { get; set; }
		
		/// <summary>
		/// The state of the review operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudDocumentaiV1ReviewDocumentResponseState State { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the SetDefaultProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the SetDefaultProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse
	{
	}
	
	/// <summary>
	/// The metadata that represents a processor version being created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
		
		/// <summary>
		/// The dataset validation information. This includes any and all errors with documents and the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testDatasetValidation")]
		public GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation TestDatasetValidation { get; set; }
		
		/// <summary>
		/// The dataset validation information. This includes any and all errors with documents and the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingDatasetValidation")]
		public GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation TrainingDatasetValidation { get; set; }
	}
	
	/// <summary>
	/// The dataset validation information. This includes any and all errors with documents and the dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation
	{
		
		/// <summary>
		/// The total number of dataset errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetErrorCount")]
		public System.Nullable<System.Int32> DatasetErrorCount { get; set; }
		
		/// <summary>
		/// Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetErrors")]
		public GoogleRpcStatus[] DatasetErrors { get; set; }
		
		/// <summary>
		/// The total number of document errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentErrorCount")]
		public System.Nullable<System.Int32> DocumentErrorCount { get; set; }
		
		/// <summary>
		/// Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentErrors")]
		public GoogleRpcStatus[] DocumentErrors { get; set; }
	}
	
	/// <summary>
	/// The response for TrainProcessorVersion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse
	{
		
		/// <summary>
		/// The resource name of the processor version produced by training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processorVersion")]
		public string ProcessorVersion { get; set; }
	}
	
	/// <summary>
	/// The long-running operation metadata for the UndeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for the UndeployProcessorVersion method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata
	{
		
		/// <summary>
		/// The common metadata for long running operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonMetadata")]
		public GoogleCloudDocumentaiV1beta3CommonOperationMetadata CommonMetadata { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
		/// Documentai_projects_operations_get v1beta2/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Documentai_projects_operations_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.
		/// Documentai_projects_locations_documents_batchProcess v1beta2/{parent}/documents:batchProcess
		/// </summary>
		/// <param name="parent">Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Documentai_projects_locations_documents_batchProcessAsync(string parent, GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/documents:batchProcess";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Processes a single document.
		/// Documentai_projects_locations_documents_process v1beta2/{parent}/documents:process
		/// </summary>
		/// <param name="parent">Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDocumentaiV1beta2Document> Documentai_projects_locations_documents_processAsync(string parent, GoogleCloudDocumentaiV1beta2ProcessDocumentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/documents:process";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDocumentaiV1beta2Document>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

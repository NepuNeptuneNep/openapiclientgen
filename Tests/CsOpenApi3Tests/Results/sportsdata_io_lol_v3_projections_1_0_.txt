//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DfsSlate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DfsSlateGame[] DfsSlateGames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DfsSlatePlayer[] DfsSlatePlayers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsMultiDaySlate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfGames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorDay { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorGameType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OperatorSlateID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemovedByOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SalaryCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SlateRosterSlots { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VideoGameId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DfsSlateGame
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Game Game { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OperatorGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemovedByOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DfsSlatePlayer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorPlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorPlayerName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OperatorRosterSlots { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OperatorSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorSlatePlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerGameProjectionStatID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemovedByOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlatePlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Game
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BestOf { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Day { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DrawMoneyLine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GameId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Group { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsClosed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PointSpread { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RoundId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamAId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamAKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamAMoneyLine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamAName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamAPointSpreadPayout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamAScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamBId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamBKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamBMoneyLine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamBPointSpreadPayout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamBScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Updated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedUtc { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VenueId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VenueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Week { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Winner { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlayerGameProjection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Assists { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CombatPlayerScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Day { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Deaths { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DoubleKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GameId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Games { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> GoldEarned { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> GoldSpent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InhibitorKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsClosed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KillingSpree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Kills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LargestCriticalStrike { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LargestKillingSpree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LargestMultiKill { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LongestTimeSpentLiving { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MagicDamageDealt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MagicDamageDealtToChampions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MagicDamageTaken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MatchName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Matches { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> NeutralMinionsKIlled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> NeutralMinionsKIlledTeamJungle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> NeutralMinionsKilledEnemyJungle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ObjectivePlayerScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Opponent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PentaKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PhysicalDamageDealt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PhysicalDamageDealtToChampions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PhysicalDamageTaken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Position { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuadraKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SightWardsBoughtInGame { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TenKillsOrAssists { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalDamageDealt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalDamageDealtToChampions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalDamageTaken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalHeal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalMinionsKilled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalPlayerScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalTimeCrowdControlDealt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalUnitsHealed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TripleKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TrueDamageDealt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TrueDamageDealtToChampions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TrueDamageTaken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TurretKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UnrealKills { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Updated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> VisionWardsBoughtInGame { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> WardsKilled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> WardsPlaced { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Dfs Slates By Date
		/// DfsSlatesByDate {format}/DfsSlatesByDate/{date}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="date">The date of the game(s).
		///<br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.</param>
		public async Task<DfsSlate[]> DfsSlatesByDateAsync(DfsSlatesByDateFormat format, string date, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = ""+format+"/DfsSlatesByDate/"+ (date==null? "" : System.Uri.EscapeDataString(date));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DfsSlate[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Projected Player Game Stats by Date
		/// Projected Player Game Stats by Date
		/// ProjectedPlayerGameStatsByDate {format}/PlayerGameProjectionStatsByDate/{date}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="date">The date of the game(s).
		///<br>Example: <code>2019-01-20</code></param>
		public async Task<PlayerGameProjection[]> ProjectedPlayerGameStatsByDateAsync(ProjectedPlayerGameStatsByDateFormat format, string date, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = ""+format+"/PlayerGameProjectionStatsByDate/"+ (date==null? "" : System.Uri.EscapeDataString(date));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Projected Player Game Stats by Player
		/// Projected Player Game Stats by Date
		/// ProjectedPlayerGameStatsByPlayer {format}/PlayerGameProjectionStatsByPlayer/{date}/{playerid}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="date">The date of the game(s).
		///<br>Example: <code>2019-01-20</code></param>
		/// <param name="playerid">Unique FantasyData Player ID.
		///Example:<code>100001500</code>.</param>
		public async Task<PlayerGameProjection[]> ProjectedPlayerGameStatsByPlayerAsync(ProjectedPlayerGameStatsByDateFormat format, string date, string playerid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = ""+format+"/PlayerGameProjectionStatsByPlayer/"+ (date==null? "" : System.Uri.EscapeDataString(date))+"/"+ (playerid==null? "" : System.Uri.EscapeDataString(playerid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum DfsSlatesByDateFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		json = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		xml = 1,
	}
	
	public enum ProjectedPlayerGameStatsByDateFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		json = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

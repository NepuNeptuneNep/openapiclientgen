//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Semantics controls the interpretation of the query string by the
	///server, and can be used to override the default semantics assigned
	///in the corpus definition.
	///
	///
	///
	///
	/// - DEFAULT: Use corpus-assigned semantics.  This is the most common setting.
	/// - QUERY: Use query semantics.  This is also common.
	/// - RESPONSE: Use response semantics.  Usage of this is rare.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CorpusKeySemantics
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEFAULT")]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QUERY")]
		QUERY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESPONSE")]
		RESPONSE = 2,
	}
	
	/// <summary>
	/// Configuration options to apply to the reranking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueryRequestRerankingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="rerankerId")]
		public System.Nullable<System.Int64> RerankerId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminCorpus
	{
		
		[System.Runtime.Serialization.DataMember(Name="customDimensions")]
		public AdminDimension[] CustomDimensions { get; set; }
		
		/// <summary>
		/// A description for the corpus.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The time at which the corpus was provisioned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dtProvision")]
		public string DtProvision { get; set; }
		
		/// <summary>
		/// Whether the corpus is enabled for use or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// This is an advanced setting for changing the underlying model type.  The
		///default value is "1", which is Vectara's high-performing global model.
		///Underlying models may be swapped for some paying customers by contacting
		///our support team.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encoderId")]
		public string EncoderId { get; set; }
		
		/// <summary>
		/// Encryption is on by default and cannot be turned off.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encrypted")]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterAttributes")]
		public AdminFilterAttribute[] FilterAttributes { get; set; }
		
		/// <summary>
		/// The Corpus ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		/// <summary>
		/// An optional maximum size of the metadata that each document can contain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataMaxBytes")]
		public System.Nullable<System.Int64> MetadataMaxBytes { get; set; }
		
		/// <summary>
		/// The name of the corpus.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The default query encoder is designed for normal question-answering types
		///of queries when the text contains the answer.  Swapping the index encoder
		///is generally rare, but can be used to help directly match questions to
		///questions.  This can be useful if you have a FAQ dataset and you want to
		///directly match the user question to the question in the FAQ.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="swapIenc")]
		public System.Nullable<System.Boolean> SwapIenc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="swapQenc")]
		public System.Nullable<System.Boolean> SwapQenc { get; set; }
		
		/// <summary>
		/// When a corpus is "textless", Vectara does not store the original text.
		///Instead, Vectara converts the text to vectors and only retains metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textless")]
		public System.Nullable<System.Boolean> Textless { get; set; }
	}
	
	/// <summary>
	/// A custom dimension is additional numeric metadata that you want to affect
	///Vectara's scoring.  For example, these could be "number of stars" ratings,
	///or other business metrics like a product's margins that you want to use
	///to boost where a result is in the list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminDimension
	{
		
		/// <summary>
		/// A description for the custom dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The default value to give to documents for this custom dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexingDefault")]
		public System.Nullable<System.Double> IndexingDefault { get; set; }
		
		/// <summary>
		/// The name of the custom dimension.  The maximum length of the name is
		///8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The default weight to give this dimension when running queries. A value of
		///0.0, for example, gives it no weight at all.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servingDefault")]
		public System.Nullable<System.Double> ServingDefault { get; set; }
	}
	
	/// <summary>
	/// Defines metadata fields that can be used in predicate queries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminFilterAttribute
	{
		
		/// <summary>
		/// An optional description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the field is indexed for maximum query speed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexed")]
		public System.Nullable<System.Boolean> Indexed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="level")]
		public System.Nullable<AdminFilterAttributeLevel> Level { get; set; }
		
		/// <summary>
		/// Name of the field, as seen in metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AdminFilterAttributeType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AdminFilterAttributeLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_LEVEL__UNDEFINED")]
		FILTER_ATTRIBUTE_LEVEL__UNDEFINED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_LEVEL__DOCUMENT")]
		FILTER_ATTRIBUTE_LEVEL__DOCUMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_LEVEL__DOCUMENT_PART")]
		FILTER_ATTRIBUTE_LEVEL__DOCUMENT_PART = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AdminFilterAttributeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__UNDEFINED")]
		FILTER_ATTRIBUTE_TYPE__UNDEFINED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__INTEGER")]
		FILTER_ATTRIBUTE_TYPE__INTEGER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__INTEGER_LIST")]
		FILTER_ATTRIBUTE_TYPE__INTEGER_LIST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__REAL")]
		FILTER_ATTRIBUTE_TYPE__REAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__REAL_LIST")]
		FILTER_ATTRIBUTE_TYPE__REAL_LIST = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__TEXT")]
		FILTER_ATTRIBUTE_TYPE__TEXT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_ATTRIBUTE_TYPE__TEXT_LIST")]
		FILTER_ATTRIBUTE_TYPE__TEXT_LIST = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminCreateCorpusRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="corpus")]
		public AdminCorpus Corpus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminCreateCorpusResponse
	{
		
		/// <summary>
		/// The Corpus ID that was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="corpusId")]
		public System.Nullable<System.Int64> CorpusId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ComvectaraStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<ComvectaraStatusCode> Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusDetail")]
		public string StatusDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ComvectaraStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OK")]
		OK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILURE")]
		FAILURE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNKNOWN")]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_ARGUMENT")]
		INVALID_ARGUMENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEADLINE_EXCEEDED")]
		DEADLINE_EXCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALREADY_EXISTS")]
		ALREADY_EXISTS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PERMISSION_DENIED")]
		PERMISSION_DENIED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESOURCE_EXHAUSTED")]
		RESOURCE_EXHAUSTED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILED_PRECONDITION")]
		FAILED_PRECONDITION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ABORTED")]
		ABORTED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUT_OF_RANGE")]
		OUT_OF_RANGE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIMPLEMENTED")]
		UNIMPLEMENTED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTERNAL")]
		INTERNAL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAVAILABLE")]
		UNAVAILABLE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_LOSS")]
		DATA_LOSS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAUTHENTICATED")]
		UNAUTHENTICATED = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BAD_REQUEST")]
		BAD_REQUEST = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAUTHORIZED")]
		UNAUTHORIZED = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FORBIDDEN")]
		FORBIDDEN = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_FOUND")]
		NOT_FOUND = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="METHOD_NOT_ALLOWED")]
		METHOD_NOT_ALLOWED = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFLICT")]
		CONFLICT = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNSUPPORTED_MEDIA_TYPE")]
		UNSUPPORTED_MEDIA_TYPE = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOO_MANY_REQUESTS")]
		TOO_MANY_REQUESTS = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTERNAL_SERVER_ERROR")]
		INTERNAL_SERVER_ERROR = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_IMPLEMENTED")]
		NOT_IMPLEMENTED = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVICE_UNAVAILABLE")]
		SERVICE_UNAVAILABLE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INSUFFICIENT_STORAGE")]
		INSUFFICIENT_STORAGE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNPARSEABLE_RESPONSE")]
		UNPARSEABLE_RESPONSE = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED_CUSTOMER")]
		DISABLED_CUSTOMER = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_CUSTOMER_ID")]
		INVALID_CUSTOMER_ID = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED_CORPUS")]
		DISABLED_CORPUS = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_CORPUS_ID")]
		INVALID_CORPUS_ID = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED_API_KEY")]
		DISABLED_API_KEY = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXPIRED_API_KEY")]
		EXPIRED_API_KEY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_API_KEY")]
		INVALID_API_KEY = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMK_INACCESSIBLE")]
		CMK_INACCESSIBLE = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__DISABLED_CORPUS")]
		QRY__DISABLED_CORPUS = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__DOCUMENT_DB_FAILURE")]
		QRY__DOCUMENT_DB_FAILURE = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__ENCODER_FAILURE")]
		QRY__ENCODER_FAILURE = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INTERRUPTED")]
		QRY__INTERRUPTED = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_CORPUS")]
		QRY__INVALID_CORPUS = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_START")]
		QRY__INVALID_START = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_NUM_RESULTS")]
		QRY__INVALID_NUM_RESULTS = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_CONTEXT")]
		QRY__INVALID_CONTEXT = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__MISSING_QUERY")]
		QRY__MISSING_QUERY = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__MISSING_CORPUS")]
		QRY__MISSING_CORPUS = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TIMEOUT")]
		QRY__TIMEOUT = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TOO_MANY_CORPORA")]
		QRY__TOO_MANY_CORPORA = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TOO_MANY_QUERIES")]
		QRY__TOO_MANY_QUERIES = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__VECTOR_INDEX_FAILURE")]
		QRY__VECTOR_INDEX_FAILURE = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_DIMENSION")]
		QRY__INVALID_DIMENSION = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_CLIENTKEY")]
		QRY__INVALID_CLIENTKEY = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__DECRYPTION_FAILURE")]
		QRY__DECRYPTION_FAILURE = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_RERANKER")]
		QRY__INVALID_RERANKER = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__PARTIAL_RERANK")]
		QRY__PARTIAL_RERANK = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__RERANK_FAILURE")]
		QRY__RERANK_FAILURE = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TOO_MANY_RESULT_ROWS")]
		QRY__TOO_MANY_RESULT_ROWS = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__PARTIAL_RETRIEVAL")]
		QRY__PARTIAL_RETRIEVAL = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__INVALID_JSON")]
		CX_SPECS__INVALID_JSON = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__UNREGISTERED_TYPE")]
		CX_SPECS__UNREGISTERED_TYPE = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__MISSING_SPEC")]
		CX_SPECS__MISSING_SPEC = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__MISSING_TYPE")]
		CX_SPECS__MISSING_TYPE = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__UNPARSEABLE_SPEC")]
		CX_SPECS__UNPARSEABLE_SPEC = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_CUSTOMER_ID")]
		ADM__INVALID_CUSTOMER_ID = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_CORPUS_ID")]
		ADM__INVALID_CORPUS_ID = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_ENCODER_ID")]
		ADM__INVALID_ENCODER_ID = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_ROLE_ID")]
		ADM__INVALID_ROLE_ID = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__ROLE_ALREADY_EXISTS")]
		ADM__ROLE_ALREADY_EXISTS = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__ONLY_ONE_OWNER_SUPPORTED")]
		ADM__ONLY_ONE_OWNER_SUPPORTED = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_PERMISSION")]
		ADM__INVALID_PERMISSION = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__ROLECREATION_FAILURE")]
		ADM__ROLECREATION_FAILURE = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__USER_EMAIL_NOT_AVAIALBLE")]
		ADM__USER_EMAIL_NOT_AVAIALBLE = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__USERNAME_NOT_AVAILABLE")]
		ADM__USERNAME_NOT_AVAILABLE = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_NAME")]
		ADM__SIGNUP_MISSING_NAME = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_ORG")]
		ADM__SIGNUP_MISSING_ORG = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_EMAIL")]
		ADM__SIGNUP_MISSING_EMAIL = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_PAYMENT")]
		ADM__SIGNUP_MISSING_PAYMENT = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_PLAN")]
		ADM__SIGNUP_MISSING_PLAN = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_PASSWORD")]
		ADM__SIGNUP_MISSING_PASSWORD = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_NAME")]
		ADM__SIGNUP_INVALID_NAME = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_ORG")]
		ADM__SIGNUP_INVALID_ORG = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_EMAIL")]
		ADM__SIGNUP_INVALID_EMAIL = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_PAYMENT")]
		ADM__SIGNUP_INVALID_PAYMENT = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_PLAN")]
		ADM__SIGNUP_INVALID_PLAN = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_PASSWORD")]
		ADM__SIGNUP_INVALID_PASSWORD = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_ACCOUNT_ALIAS")]
		ADM__SIGNUP_INVALID_ACCOUNT_ALIAS = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_EMAIL_VALIDATION_CODE")]
		ADM__SIGNUP_INVALID_EMAIL_VALIDATION_CODE = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_COUNTRY_CODE")]
		ADM__SIGNUP_MISSING_COUNTRY_CODE = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_ROOT_EMAIL_NOT_AVAILABLE")]
		ADM__SIGNUP_ROOT_EMAIL_NOT_AVAILABLE = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CUST_MARK_DELETE_FAILED")]
		ADM__CUST_MARK_DELETE_FAILED = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CUST_FAISS_DEALLOC_FAILED")]
		ADM__CUST_FAISS_DEALLOC_FAILED = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CORPUS_LIMIT_REACHED")]
		ADM__CORPUS_LIMIT_REACHED = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__STRIPE_CARD_DECLINED")]
		ADM__STRIPE_CARD_DECLINED = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__STRIPE_PROCESSING_ERROR")]
		ADM__STRIPE_PROCESSING_ERROR = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__EMAIL_VALIDATION_REQUEST_NOT_FOUND")]
		ADM__EMAIL_VALIDATION_REQUEST_NOT_FOUND = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__EMAIL_NOT_VALIDATED")]
		ADM__EMAIL_NOT_VALIDATED = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__NO_CURRENT_PLAN")]
		ADM__CHANGE_PLAN__NO_CURRENT_PLAN = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__REQUIRES_MANUAL_CHANGE")]
		ADM__CHANGE_PLAN__REQUIRES_MANUAL_CHANGE = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__INVALID_PLAN_ID")]
		ADM__CHANGE_PLAN__INVALID_PLAN_ID = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__NO_PAYMENT_SOURCE")]
		ADM__CHANGE_PLAN__NO_PAYMENT_SOURCE = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__INVALID_EFFECTIVE_DATE")]
		ADM__CHANGE_PLAN__INVALID_EFFECTIVE_DATE = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__CONFLICTING_CHANGE")]
		ADM__CHANGE_PLAN__CONFLICTING_CHANGE = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCM__MISCONFIGURED_CONNECTION")]
		SCM__MISCONFIGURED_CONNECTION = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATS_DB_READ_FAILURE")]
		STATS_DB_READ_FAILURE = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VDB__TEXT_READ_FAILURE")]
		VDB__TEXT_READ_FAILURE = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__LOW_RECALL")]
		REBUILD__LOW_RECALL = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__INDEX_UPLOAD_FAILURE")]
		REBUILD__INDEX_UPLOAD_FAILURE = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__UPDATE_JOURNAL_FAILURE")]
		REBUILD__UPDATE_JOURNAL_FAILURE = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__UPDATE_FAISSPARAMS_FAILURE")]
		REBUILD__UPDATE_FAISSPARAMS_FAILURE = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__NO_DATA")]
		REBUILD__NO_DATA = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__EVALUATION")]
		REBUILD__EVALUATION = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDX__TRANSIENT_PARTIAL_DELETION_FAILURE")]
		IDX__TRANSIENT_PARTIAL_DELETION_FAILURE = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDX__PERMANENT_PARTIAL_DELETION_FAILURE")]
		IDX__PERMANENT_PARTIAL_DELETION_FAILURE = 113,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminDeleteCorpusRequest
	{
		
		/// <summary>
		/// The Corpus ID to be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="corpusId")]
		public System.Nullable<System.Int64> CorpusId { get; set; }
		
		/// <summary>
		/// The Customer ID that contains the corpus to be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public System.Nullable<System.Int64> CustomerId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminDeleteCorpusResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminListCorporaRequest
	{
		
		/// <summary>
		/// A regex to match corpora against.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// The maximum results to return.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numResults")]
		public System.Nullable<System.Int64> NumResults { get; set; }
		
		/// <summary>
		/// A key that is passed in to retrieve a specific page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageKey")]
		public string PageKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminListCorporaResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="corpus")]
		public AdminCorpus[] Corpus { get; set; }
		
		/// <summary>
		/// A key that is passed into a subsequent result in order to
		///retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageKey")]
		public string PageKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminResetCorpusRequest
	{
		
		/// <summary>
		/// The Corpus ID to be reset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="corpusId")]
		public System.Nullable<System.Int64> CorpusId { get; set; }
		
		/// <summary>
		/// The Customer ID that contains the corpus to be reset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public System.Nullable<System.Int64> CustomerId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdminResetCorpusResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GooglerpcStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ProtobufAny[] Details { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// `Any` contains an arbitrary serialized protocol buffer message along with a
	///URL that describes the type of the serialized message.
	///
	///Protobuf library provides support to pack/unpack Any values in the form
	///of utility functions or additional generated methods of the Any type.
	///
	///Example 1: Pack and unpack a message in C++.
	///
	///
	///
	///
	///    Foo foo = ...;
	///    Any any;
	///    any.PackFrom(foo);
	///    ...
	///    if (any.UnpackTo(&foo)) {
	///      ...
	///    }
	///
	///Example 2: Pack and unpack a message in Java.
	///
	///
	///
	///
	///    Foo foo = ...;
	///    Any any = Any.pack(foo);
	///    ...
	///    if (any.is(Foo.class)) {
	///      foo = any.unpack(Foo.class);
	///    }
	///
	///Example 3: Pack and unpack a message in Python.
	///
	///
	///
	///
	///    foo = Foo(...)
	///    any = Any()
	///    any.Pack(foo)
	///    ...
	///    if any.Is(Foo.DESCRIPTOR):
	///      any.Unpack(foo)
	///      ...
	///
	///Example 4: Pack and unpack a message in Go
	///
	///
	///
	///
	///     foo := &pb.Foo{...}
	///     any, err := anypb.New(foo)
	///     if err != nil {
	///       ...
	///     }
	///     ...
	///     foo := &pb.Foo{}
	///     if err := any.UnmarshalTo(foo); err != nil {
	///       ...
	///     }
	///
	///The pack methods provided by protobuf library will by default use
	///'type.googleapis.com/full.type.name' as the type URL and the unpack
	///methods only use the fully qualified type name after the last '/'
	///in the type URL, for example "foo.bar.com/x/y.z" will yield type
	///name "y.z".
	///
	///
	///JSON
	///
	///The JSON representation of an `Any` value uses the regular
	///representation of the deserialized, embedded message, with an
	///additional field `@type` which contains the type URL. Example:
	///
	///
	///
	///
	///    package google.profile;
	///    message Person {
	///      string first_name = 1;
	///      string last_name = 2;
	///    }
	///
	///    {
	///      "@type": "type.googleapis.com/google.profile.Person",
	///      "firstName": <string>,
	///      "lastName": <string>
	///    }
	///
	///If the embedded message type is well-known and has a custom JSON
	///representation, that representation will be embedded adding a field
	///`value` which holds the custom JSON in addition to the `@type`
	///field. Example (for message [google.protobuf.Duration][]):
	///
	///
	///
	///
	///    {
	///      "@type": "type.googleapis.com/google.protobuf.Duration",
	///      "value": "1.212s"
	///    }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProtobufAny
	{
		
		/// <summary>
		/// A URL/resource name that uniquely identifies the type of the serialized
		///protocol buffer message. This string must contain at least
		///one "/" character. The last segment of the URL's path must represent
		///the fully qualified name of the type (as in
		///`path/google.protobuf.Duration`). The name should be in a canonical form
		///(e.g., leading "." is not accepted).
		///
		///In practice, teams usually precompile into the binary all types that they
		///expect it to use in the context of Any. However, for URLs which use the
		///scheme `http`, `https`, or no scheme, one can optionally set up a type
		///server that maps type URLs to message definitions as follows:
		///
		///* If no scheme is provided, `https` is assumed.
		///* An HTTP GET on the URL must yield a [google.protobuf.Type][]
		///
		///
		///
		///  value in binary format, or produce an error.
		///* Applications are allowed to cache lookup results based on the
		///
		///
		///
		///  URL, or have them precompiled into a binary to avoid any
		///  lookup. Therefore, binary compatibility needs to be preserved
		///  on changes to types. (Use versioned type names to manage
		///  breaking changes.)
		///
		///Note: this functionality is not currently available in the official
		///protobuf release, and it is not used for type URLs beginning with
		///type.googleapis.com.
		///
		///Schemes other than `http`, `https` (or the empty scheme) might be
		///used with implementation specific semantics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="typeUrl")]
		public string TypeUrl { get; set; }
		
		/// <summary>
		/// Must be a valid serialized protocol buffer of the above specified type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// A section within a structured document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IndexingSection
	{
		
		/// <summary>
		/// A list of custom dimension values that are included in the generated
		///representation of all subsections (i.e. sections contains by this section).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customDims")]
		public VectaraindexingCustomDimension[] CustomDims { get; set; }
		
		/// <summary>
		/// Optionally, the unique ID of this section. If set, it will be returned as
		///metadata in query results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Metadata about this section. This should be a json string. It is passed
		///through the system, without being used at indexing time. It can be
		///retrieved at query time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataJson")]
		public string MetadataJson { get; set; }
		
		/// <summary>
		/// A list of subsections.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section")]
		public IndexingSection[] Section { get; set; }
		
		/// <summary>
		/// The text of the section. This should never be empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Optionally, the title of the section. This may be empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// The value of a custom dimension. A valid list of custom dimensions is defined ahead of time for a corpus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraindexingCustomDimension
	{
		
		/// <summary>
		/// The name of the dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The value of the dimension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingAttribute
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingBatchQueryRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="query")]
		public ServingQueryRequest[] Query { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingQueryRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="corpusKey")]
		public ServingCorpusKey[] CorpusKey { get; set; }
		
		/// <summary>
		/// The number of results to return.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numResults")]
		public System.Nullable<System.Int64> NumResults { get; set; }
		
		/// <summary>
		/// The query text to use from the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// Configuration options to apply to the reranking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rerankingConfig")]
		public QueryRequestRerankingConfig RerankingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int64> Start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingCorpusKey
	{
		
		/// <summary>
		/// The Corpus ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="corpusId")]
		public System.Nullable<System.Int64> CorpusId { get; set; }
		
		/// <summary>
		/// The Customer ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public System.Nullable<System.Int64> CustomerId { get; set; }
		
		/// <summary>
		/// Weights on custom dimensions for the corpus.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dim")]
		public VectaraservingCustomDimension[] Dim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadataFilter")]
		public string MetadataFilter { get; set; }
		
		/// <summary>
		/// Semantics controls the interpretation of the query string by the
		///server, and can be used to override the default semantics assigned
		///in the corpus definition.
		///
		///
		///
		///
		/// - DEFAULT: Use corpus-assigned semantics.  This is the most common setting.
		/// - QUERY: Use query semantics.  This is also common.
		/// - RESPONSE: Use response semantics.  Usage of this is rare.
		/// </summary>
		[System.ComponentModel.DefaultValue(CorpusKeySemantics.DEFAULT)]
		[System.Runtime.Serialization.DataMember(Name="semantics")]
		public CorpusKeySemantics Semantics { get; set; } = CorpusKeySemantics.DEFAULT;
	}
	
	/// <summary>
	/// Defined the weight of a custom dimension at query time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraservingCustomDimension
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public System.Nullable<System.Double> Weight { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingBatchQueryResponse
	{
		
		/// <summary>
		/// Basic performance metrics that can be attached to a server response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public ServingPerformanceMetrics Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseSet")]
		public ServingResponseSet[] ResponseSet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus[] Status { get; set; }
	}
	
	/// <summary>
	/// Basic performance metrics that can be attached to a server response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingPerformanceMetrics
	{
		
		/// <summary>
		/// How long it took to encode the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryEncodeMs")]
		public System.Nullable<System.Int64> QueryEncodeMs { get; set; }
		
		/// <summary>
		/// How long it took to rerank the results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rerankMs")]
		public System.Nullable<System.Int64> RerankMs { get; set; }
		
		/// <summary>
		/// How long it took to retrieve relevant results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retrievalMs")]
		public System.Nullable<System.Int64> RetrievalMs { get; set; }
		
		/// <summary>
		/// How long it took to retrieve user data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userdataRetrievalMs")]
		public System.Nullable<System.Int64> UserdataRetrievalMs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingResponseSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="document")]
		public ServingResponseSetDocument[] Document { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="response")]
		public ServingResponse[] Response { get; set; }
		
		/// <summary>
		/// Potentially multiple warnings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus[] Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingResponseSetDocument
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public ServingAttribute[] Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServingResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="corpusKey")]
		public ServingCorpusKey CorpusKey { get; set; }
		
		/// <summary>
		/// Use this ID to find the document in the ResponseSet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentIndex")]
		public System.Nullable<System.Int64> DocumentIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public ServingAttribute[] Metadata { get; set; }
		
		/// <summary>
		/// The score used for ranking results.  The higher the score, the better the match.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Request to delete a document from an index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraDeleteDocumentRequest
	{
		
		/// <summary>
		/// The Corpus ID that contains the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="corpusId")]
		public string CorpusId { get; set; }
		
		/// <summary>
		/// The Customer ID to issue the request for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// The Document ID to be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public string DocumentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraDeleteDocumentResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraIndexDocumentRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="corpusId")]
		public string CorpusId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// A document to index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document")]
		public VectaraindexingDocument Document { get; set; }
	}
	
	/// <summary>
	/// A document to index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraindexingDocument
	{
		
		/// <summary>
		/// A list of custom dimension values that are included in the generated
		///representation of all sections.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customDims")]
		public VectaraindexingCustomDimension[] CustomDims { get; set; }
		
		/// <summary>
		/// An optional description for the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Client assigned document ID to this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public string DocumentId { get; set; }
		
		/// <summary>
		/// Metadata about the document. This should be a json string, and it can be
		///retrieved at query time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataJson")]
		public string MetadataJson { get; set; }
		
		/// <summary>
		/// The actual content of the document, structured as a repeating list
		///of sections.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section")]
		public IndexingSection[] Section { get; set; }
		
		/// <summary>
		/// The title of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraIndexDocumentResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="quotaConsumed")]
		public VectaraStorageQuota QuotaConsumed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ComvectaraStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VectaraStorageQuota
	{
		
		/// <summary>
		/// The number of chars from the document that consumed the storage quota.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numChars")]
		public string NumChars { get; set; }
		
		/// <summary>
		/// The number of chars in the metadata of the document that consumed the
		///storage quota.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numMetadataChars")]
		public string NumMetadataChars { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum VectaraStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OK")]
		OK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILURE")]
		FAILURE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNKNOWN")]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_ARGUMENT")]
		INVALID_ARGUMENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEADLINE_EXCEEDED")]
		DEADLINE_EXCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALREADY_EXISTS")]
		ALREADY_EXISTS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PERMISSION_DENIED")]
		PERMISSION_DENIED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESOURCE_EXHAUSTED")]
		RESOURCE_EXHAUSTED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILED_PRECONDITION")]
		FAILED_PRECONDITION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ABORTED")]
		ABORTED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUT_OF_RANGE")]
		OUT_OF_RANGE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIMPLEMENTED")]
		UNIMPLEMENTED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTERNAL")]
		INTERNAL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAVAILABLE")]
		UNAVAILABLE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_LOSS")]
		DATA_LOSS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAUTHENTICATED")]
		UNAUTHENTICATED = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BAD_REQUEST")]
		BAD_REQUEST = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAUTHORIZED")]
		UNAUTHORIZED = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FORBIDDEN")]
		FORBIDDEN = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_FOUND")]
		NOT_FOUND = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="METHOD_NOT_ALLOWED")]
		METHOD_NOT_ALLOWED = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFLICT")]
		CONFLICT = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNSUPPORTED_MEDIA_TYPE")]
		UNSUPPORTED_MEDIA_TYPE = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOO_MANY_REQUESTS")]
		TOO_MANY_REQUESTS = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTERNAL_SERVER_ERROR")]
		INTERNAL_SERVER_ERROR = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_IMPLEMENTED")]
		NOT_IMPLEMENTED = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVICE_UNAVAILABLE")]
		SERVICE_UNAVAILABLE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INSUFFICIENT_STORAGE")]
		INSUFFICIENT_STORAGE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNPARSEABLE_RESPONSE")]
		UNPARSEABLE_RESPONSE = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED_CUSTOMER")]
		DISABLED_CUSTOMER = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_CUSTOMER_ID")]
		INVALID_CUSTOMER_ID = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED_CORPUS")]
		DISABLED_CORPUS = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_CORPUS_ID")]
		INVALID_CORPUS_ID = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED_API_KEY")]
		DISABLED_API_KEY = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXPIRED_API_KEY")]
		EXPIRED_API_KEY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_API_KEY")]
		INVALID_API_KEY = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMK_INACCESSIBLE")]
		CMK_INACCESSIBLE = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__DISABLED_CORPUS")]
		QRY__DISABLED_CORPUS = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__DOCUMENT_DB_FAILURE")]
		QRY__DOCUMENT_DB_FAILURE = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__ENCODER_FAILURE")]
		QRY__ENCODER_FAILURE = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INTERRUPTED")]
		QRY__INTERRUPTED = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_CORPUS")]
		QRY__INVALID_CORPUS = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_START")]
		QRY__INVALID_START = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_NUM_RESULTS")]
		QRY__INVALID_NUM_RESULTS = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_CONTEXT")]
		QRY__INVALID_CONTEXT = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__MISSING_QUERY")]
		QRY__MISSING_QUERY = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__MISSING_CORPUS")]
		QRY__MISSING_CORPUS = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TIMEOUT")]
		QRY__TIMEOUT = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TOO_MANY_CORPORA")]
		QRY__TOO_MANY_CORPORA = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TOO_MANY_QUERIES")]
		QRY__TOO_MANY_QUERIES = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__VECTOR_INDEX_FAILURE")]
		QRY__VECTOR_INDEX_FAILURE = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_DIMENSION")]
		QRY__INVALID_DIMENSION = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_CLIENTKEY")]
		QRY__INVALID_CLIENTKEY = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__DECRYPTION_FAILURE")]
		QRY__DECRYPTION_FAILURE = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__INVALID_RERANKER")]
		QRY__INVALID_RERANKER = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__PARTIAL_RERANK")]
		QRY__PARTIAL_RERANK = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__RERANK_FAILURE")]
		QRY__RERANK_FAILURE = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__TOO_MANY_RESULT_ROWS")]
		QRY__TOO_MANY_RESULT_ROWS = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QRY__PARTIAL_RETRIEVAL")]
		QRY__PARTIAL_RETRIEVAL = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__INVALID_JSON")]
		CX_SPECS__INVALID_JSON = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__UNREGISTERED_TYPE")]
		CX_SPECS__UNREGISTERED_TYPE = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__MISSING_SPEC")]
		CX_SPECS__MISSING_SPEC = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__MISSING_TYPE")]
		CX_SPECS__MISSING_TYPE = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CX_SPECS__UNPARSEABLE_SPEC")]
		CX_SPECS__UNPARSEABLE_SPEC = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_CUSTOMER_ID")]
		ADM__INVALID_CUSTOMER_ID = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_CORPUS_ID")]
		ADM__INVALID_CORPUS_ID = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_ENCODER_ID")]
		ADM__INVALID_ENCODER_ID = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_ROLE_ID")]
		ADM__INVALID_ROLE_ID = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__ROLE_ALREADY_EXISTS")]
		ADM__ROLE_ALREADY_EXISTS = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__ONLY_ONE_OWNER_SUPPORTED")]
		ADM__ONLY_ONE_OWNER_SUPPORTED = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__INVALID_PERMISSION")]
		ADM__INVALID_PERMISSION = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__ROLECREATION_FAILURE")]
		ADM__ROLECREATION_FAILURE = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__USER_EMAIL_NOT_AVAIALBLE")]
		ADM__USER_EMAIL_NOT_AVAIALBLE = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__USERNAME_NOT_AVAILABLE")]
		ADM__USERNAME_NOT_AVAILABLE = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_NAME")]
		ADM__SIGNUP_MISSING_NAME = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_ORG")]
		ADM__SIGNUP_MISSING_ORG = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_EMAIL")]
		ADM__SIGNUP_MISSING_EMAIL = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_PAYMENT")]
		ADM__SIGNUP_MISSING_PAYMENT = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_PLAN")]
		ADM__SIGNUP_MISSING_PLAN = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_PASSWORD")]
		ADM__SIGNUP_MISSING_PASSWORD = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_NAME")]
		ADM__SIGNUP_INVALID_NAME = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_ORG")]
		ADM__SIGNUP_INVALID_ORG = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_EMAIL")]
		ADM__SIGNUP_INVALID_EMAIL = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_PAYMENT")]
		ADM__SIGNUP_INVALID_PAYMENT = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_PLAN")]
		ADM__SIGNUP_INVALID_PLAN = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_PASSWORD")]
		ADM__SIGNUP_INVALID_PASSWORD = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_ACCOUNT_ALIAS")]
		ADM__SIGNUP_INVALID_ACCOUNT_ALIAS = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_INVALID_EMAIL_VALIDATION_CODE")]
		ADM__SIGNUP_INVALID_EMAIL_VALIDATION_CODE = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_MISSING_COUNTRY_CODE")]
		ADM__SIGNUP_MISSING_COUNTRY_CODE = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__SIGNUP_ROOT_EMAIL_NOT_AVAILABLE")]
		ADM__SIGNUP_ROOT_EMAIL_NOT_AVAILABLE = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CUST_MARK_DELETE_FAILED")]
		ADM__CUST_MARK_DELETE_FAILED = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CUST_FAISS_DEALLOC_FAILED")]
		ADM__CUST_FAISS_DEALLOC_FAILED = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CORPUS_LIMIT_REACHED")]
		ADM__CORPUS_LIMIT_REACHED = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__STRIPE_CARD_DECLINED")]
		ADM__STRIPE_CARD_DECLINED = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__STRIPE_PROCESSING_ERROR")]
		ADM__STRIPE_PROCESSING_ERROR = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__EMAIL_VALIDATION_REQUEST_NOT_FOUND")]
		ADM__EMAIL_VALIDATION_REQUEST_NOT_FOUND = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__EMAIL_NOT_VALIDATED")]
		ADM__EMAIL_NOT_VALIDATED = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__NO_CURRENT_PLAN")]
		ADM__CHANGE_PLAN__NO_CURRENT_PLAN = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__REQUIRES_MANUAL_CHANGE")]
		ADM__CHANGE_PLAN__REQUIRES_MANUAL_CHANGE = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__INVALID_PLAN_ID")]
		ADM__CHANGE_PLAN__INVALID_PLAN_ID = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__NO_PAYMENT_SOURCE")]
		ADM__CHANGE_PLAN__NO_PAYMENT_SOURCE = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__INVALID_EFFECTIVE_DATE")]
		ADM__CHANGE_PLAN__INVALID_EFFECTIVE_DATE = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADM__CHANGE_PLAN__CONFLICTING_CHANGE")]
		ADM__CHANGE_PLAN__CONFLICTING_CHANGE = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCM__MISCONFIGURED_CONNECTION")]
		SCM__MISCONFIGURED_CONNECTION = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATS_DB_READ_FAILURE")]
		STATS_DB_READ_FAILURE = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VDB__TEXT_READ_FAILURE")]
		VDB__TEXT_READ_FAILURE = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__LOW_RECALL")]
		REBUILD__LOW_RECALL = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__INDEX_UPLOAD_FAILURE")]
		REBUILD__INDEX_UPLOAD_FAILURE = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__UPDATE_JOURNAL_FAILURE")]
		REBUILD__UPDATE_JOURNAL_FAILURE = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__UPDATE_FAISSPARAMS_FAILURE")]
		REBUILD__UPDATE_FAISSPARAMS_FAILURE = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__NO_DATA")]
		REBUILD__NO_DATA = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REBUILD__EVALUATION")]
		REBUILD__EVALUATION = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDX__TRANSIENT_PARTIAL_DELETION_FAILURE")]
		IDX__TRANSIENT_PARTIAL_DELETION_FAILURE = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDX__PERMANENT_PARTIAL_DELETION_FAILURE")]
		IDX__PERMANENT_PARTIAL_DELETION_FAILURE = 113,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Create Corpus
		/// CreateCorpus v1/create-corpus
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<AdminCreateCorpusResponse> CreateCorpusAsync(AdminCreateCorpusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/create-corpus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AdminCreateCorpusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Corpus
		/// DeleteCorpus v1/delete-corpus
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<AdminDeleteCorpusResponse> DeleteCorpusAsync(AdminDeleteCorpusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/delete-corpus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AdminDeleteCorpusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete
		/// Delete v1/delete-doc
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<VectaraDeleteDocumentResponse> DeleteAsync(VectaraDeleteDocumentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/delete-doc";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<VectaraDeleteDocumentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Index
		/// Index v1/index
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<VectaraIndexDocumentResponse> IndexAsync(VectaraIndexDocumentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/index";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<VectaraIndexDocumentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List Corpora
		/// ListCorpora v1/list-corpora
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<AdminListCorporaResponse> ListCorporaAsync(AdminListCorporaRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/list-corpora";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AdminListCorporaResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Query
		/// Query v1/query
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<ServingBatchQueryResponse> QueryAsync(ServingBatchQueryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/query";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ServingBatchQueryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Reset Corpus
		/// ResetCorpus v1/reset-corpus
		/// </summary>
		/// <returns>A successful response.</returns>
		public async Task<AdminResetCorpusResponse> ResetCorpusAsync(AdminResetCorpusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/reset-corpus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AdminResetCorpusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stream Query
		/// StreamQuery v1/stream-query
		/// </summary>
		/// <returns>A successful response.(streaming responses)</returns>
		public async Task<StreamQueryReturn> StreamQueryAsync(ServingBatchQueryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/stream-query";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<StreamQueryReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class StreamQueryReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GooglerpcStatus Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public ServingResponseSet Result { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Defines a policy of allowing every region by default and adding disallowed regions to a disallow list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2AllowByDefault
	{
		
		/// <summary>
		/// Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disallowedRegions")]
		public string[] DisallowedRegions { get; set; }
	}
	
	/// <summary>
	/// Defines a policy of only allowing regions by explicitly adding them to an allowlist.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2AllowlistOnly
	{
		
		/// <summary>
		/// Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedRegions")]
		public string[] AllowedRegions { get; set; }
	}
	
	/// <summary>
	/// Configuration options related to authenticating an anonymous user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Anonymous
	{
		
		/// <summary>
		/// Whether anonymous user auth is enabled for the project or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Additional config for SignInWithApple.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig
	{
		
		/// <summary>
		/// A list of Bundle ID's usable by this project
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bundleIds")]
		public string[] BundleIds { get; set; }
		
		/// <summary>
		/// Additional config for Apple for code flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="codeFlowConfig")]
		public GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig CodeFlowConfig { get; set; }
	}
	
	/// <summary>
	/// Additional config for Apple for code flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig
	{
		
		/// <summary>
		/// Key ID for the private key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyId")]
		public string KeyId { get; set; }
		
		/// <summary>
		/// Private key used for signing the client secret JWT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateKey")]
		public string PrivateKey { get; set; }
		
		/// <summary>
		/// Apple Developer Team ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="teamId")]
		public string TeamId { get; set; }
	}
	
	/// <summary>
	/// Configuration related to Blocking Functions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig
	{
		
		/// <summary>
		/// Indicates which credentials to pass to the registered Blocking Functions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardInboundCredentials")]
		public GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials ForwardInboundCredentials { get; set; }
		
		/// <summary>
		/// Map of Trigger to event type. Key should be one of the supported event types: "beforeCreate", "beforeSignIn"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggers")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudIdentitytoolkitAdminV2Trigger> Triggers { get; set; }
	}
	
	/// <summary>
	/// Indicates which credentials to pass to the registered Blocking Functions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials
	{
		
		/// <summary>
		/// Whether to pass the user's OAuth identity provider's access token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public System.Nullable<System.Boolean> AccessToken { get; set; }
		
		/// <summary>
		/// Whether to pass the user's OIDC identity provider's ID token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public System.Nullable<System.Boolean> IdToken { get; set; }
		
		/// <summary>
		/// Whether to pass the user's OAuth identity provider's refresh token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public System.Nullable<System.Boolean> RefreshToken { get; set; }
	}
	
	/// <summary>
	/// Synchronous Cloud Function with HTTP Trigger
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Trigger
	{
		
		/// <summary>
		/// HTTP URI trigger for the Cloud Function.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionUri")]
		public string FunctionUri { get; set; }
		
		/// <summary>
		/// When the trigger was changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Options related to how clients making requests on behalf of a project should be configured.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ClientConfig
	{
		
		/// <summary>
		/// Output only. API key that can be used when making requests for this project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiKey")]
		public string ApiKey { get; set; }
		
		/// <summary>
		/// Output only. Firebase subdomain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firebaseSubdomain")]
		public string FirebaseSubdomain { get; set; }
		
		/// <summary>
		/// Configuration related to restricting a user's ability to affect their account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public GoogleCloudIdentitytoolkitAdminV2Permissions Permissions { get; set; }
	}
	
	/// <summary>
	/// Configuration related to restricting a user's ability to affect their account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Permissions
	{
		
		/// <summary>
		/// When true, end users cannot delete their account on the associated project through any of our API methods
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledUserDeletion")]
		public System.Nullable<System.Boolean> DisabledUserDeletion { get; set; }
		
		/// <summary>
		/// When true, end users cannot sign up for a new account on the associated project through any of our API methods
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledUserSignup")]
		public System.Nullable<System.Boolean> DisabledUserSignup { get; set; }
	}
	
	/// <summary>
	/// Options related to how clients making requests on behalf of a tenant should be configured.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig
	{
		
		/// <summary>
		/// Configuration related to restricting a user's ability to affect their account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public GoogleCloudIdentitytoolkitAdminV2ClientPermissions Permissions { get; set; }
	}
	
	/// <summary>
	/// Configuration related to restricting a user's ability to affect their account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ClientPermissions
	{
		
		/// <summary>
		/// When true, end users cannot delete their account on the associated project through any of our API methods
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledUserDeletion")]
		public System.Nullable<System.Boolean> DisabledUserDeletion { get; set; }
		
		/// <summary>
		/// When true, end users cannot sign up for a new account on the associated project through any of our API methods
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledUserSignup")]
		public System.Nullable<System.Boolean> DisabledUserSignup { get; set; }
	}
	
	/// <summary>
	/// Represents an Identity Toolkit project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Config
	{
		
		/// <summary>
		/// List of domains authorized for OAuth redirects
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizedDomains")]
		public string[] AuthorizedDomains { get; set; }
		
		/// <summary>
		/// Whether anonymous users will be auto-deleted after a period of 30 days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autodeleteAnonymousUsers")]
		public System.Nullable<System.Boolean> AutodeleteAnonymousUsers { get; set; }
		
		/// <summary>
		/// Configuration related to Blocking Functions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockingFunctions")]
		public GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig BlockingFunctions { get; set; }
		
		/// <summary>
		/// Options related to how clients making requests on behalf of a project should be configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public GoogleCloudIdentitytoolkitAdminV2ClientConfig Client { get; set; }
		
		/// <summary>
		/// Configuration for settings related to email privacy and public visibility. Settings in this config protect against email enumeration, but may make some trade-offs in user-friendliness.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailPrivacyConfig")]
		public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig EmailPrivacyConfig { get; set; }
		
		/// <summary>
		/// Options related to MultiFactor Authentication for the project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfa")]
		public GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig Mfa { get; set; }
		
		/// <summary>
		/// Configuration related to monitoring project activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoring")]
		public GoogleCloudIdentitytoolkitAdminV2MonitoringConfig Monitoring { get; set; }
		
		/// <summary>
		/// Configuration related to multi-tenant functionality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiTenant")]
		public GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig MultiTenant { get; set; }
		
		/// <summary>
		/// Output only. The name of the Config resource. Example: "projects/my-awesome-project/config"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configuration related to sending notifications to users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notification")]
		public GoogleCloudIdentitytoolkitAdminV2NotificationConfig Notification { get; set; }
		
		/// <summary>
		/// The configuration for the password policy on the project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordPolicyConfig")]
		public GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig PasswordPolicyConfig { get; set; }
		
		/// <summary>
		/// Configuration related to quotas.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public GoogleCloudIdentitytoolkitAdminV2QuotaConfig Quota { get; set; }
		
		/// <summary>
		/// The reCAPTCHA Enterprise integration config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recaptchaConfig")]
		public GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig RecaptchaConfig { get; set; }
		
		/// <summary>
		/// Configuration related to local sign in methods.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signIn")]
		public GoogleCloudIdentitytoolkitAdminV2SignInConfig SignIn { get; set; }
		
		/// <summary>
		/// Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smsRegionConfig")]
		public GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig SmsRegionConfig { get; set; }
		
		/// <summary>
		/// Output only. The subtype of this config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2ConfigSubtype> Subtype { get; set; }
	}
	
	/// <summary>
	/// Configuration for settings related to email privacy and public visibility. Settings in this config protect against email enumeration, but may make some trade-offs in user-friendliness.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig
	{
		
		/// <summary>
		/// Migrates the project to a state of improved email privacy. For example certain error codes are more generic to avoid giving away information on whether the account exists. In addition, this disables certain features that as a side-effect allow user enumeration. Enabling this toggle disables the fetchSignInMethodsForEmail functionality and changing the user's email to an unverified email. It is recommended to remove dependence on this functionality and enable this toggle to improve user privacy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableImprovedEmailPrivacy")]
		public System.Nullable<System.Boolean> EnableImprovedEmailPrivacy { get; set; }
	}
	
	/// <summary>
	/// Options related to MultiFactor Authentication for the project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
	{
		
		/// <summary>
		/// A list of usable second factors for this project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledProviders")]
		public string[] EnabledProviders { get; set; }
		
		/// <summary>
		/// A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="providerConfigs")]
		public GoogleCloudIdentitytoolkitAdminV2ProviderConfig[] ProviderConfigs { get; set; }
		
		/// <summary>
		/// Whether MultiFactor Authentication has been enabled for this project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigState> State { get; set; }
	}
	
	/// <summary>
	/// ProviderConfig describes the supported MFA providers along with their configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ProviderConfig
	{
		
		/// <summary>
		/// Describes the state of the MultiFactor Authentication type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2ProviderConfigState> State { get; set; }
		
		/// <summary>
		/// TotpMFAProviderConfig represents the TOTP based MFA provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totpProviderConfig")]
		public GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig TotpProviderConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2ProviderConfigState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MFA_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANDATORY = 3,
	}
	
	/// <summary>
	/// TotpMFAProviderConfig represents the TOTP based MFA provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig
	{
		
		/// <summary>
		/// The allowed number of adjacent intervals that will be used for verification to avoid clock skew.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjacentIntervals")]
		public System.Nullable<System.Int32> AdjacentIntervals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANDATORY = 3,
	}
	
	/// <summary>
	/// Configuration related to monitoring project activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2MonitoringConfig
	{
		
		/// <summary>
		/// Configuration for logging requests made to this project to Stackdriver Logging
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestLogging")]
		public GoogleCloudIdentitytoolkitAdminV2RequestLogging RequestLogging { get; set; }
	}
	
	/// <summary>
	/// Configuration for logging requests made to this project to Stackdriver Logging
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2RequestLogging
	{
		
		/// <summary>
		/// Whether logging is enabled for this project or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Configuration related to multi-tenant functionality.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig
	{
		
		/// <summary>
		/// Whether this project can have tenants or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowTenants")]
		public System.Nullable<System.Boolean> AllowTenants { get; set; }
		
		/// <summary>
		/// The default cloud parent org or folder that the tenant project should be created under. The parent resource name should be in the format of "/", such as "folders/123" or "organizations/456". If the value is not set, the tenant will be created under the same organization or folder as the agent project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultTenantLocation")]
		public string DefaultTenantLocation { get; set; }
	}
	
	/// <summary>
	/// Configuration related to sending notifications to users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2NotificationConfig
	{
		
		/// <summary>
		/// Default locale used for email and SMS in IETF BCP 47 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultLocale")]
		public string DefaultLocale { get; set; }
		
		/// <summary>
		/// Options for email sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sendEmail")]
		public GoogleCloudIdentitytoolkitAdminV2SendEmail SendEmail { get; set; }
		
		/// <summary>
		/// Options for SMS sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sendSms")]
		public GoogleCloudIdentitytoolkitAdminV2SendSms SendSms { get; set; }
	}
	
	/// <summary>
	/// Options for email sending.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SendEmail
	{
		
		/// <summary>
		/// action url in email template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callbackUri")]
		public string CallbackUri { get; set; }
		
		/// <summary>
		/// Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changeEmailTemplate")]
		public GoogleCloudIdentitytoolkitAdminV2EmailTemplate ChangeEmailTemplate { get; set; }
		
		/// <summary>
		/// Information of custom domain DNS verification. By default, default_domain will be used. A custom domain can be configured using VerifyCustomDomain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dnsInfo")]
		public GoogleCloudIdentitytoolkitAdminV2DnsInfo DnsInfo { get; set; }
		
		/// <summary>
		/// Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacyResetPasswordTemplate")]
		public GoogleCloudIdentitytoolkitAdminV2EmailTemplate LegacyResetPasswordTemplate { get; set; }
		
		/// <summary>
		/// The method used for sending an email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2SendEmailMethod> Method { get; set; }
		
		/// <summary>
		/// Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resetPasswordTemplate")]
		public GoogleCloudIdentitytoolkitAdminV2EmailTemplate ResetPasswordTemplate { get; set; }
		
		/// <summary>
		/// Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revertSecondFactorAdditionTemplate")]
		public GoogleCloudIdentitytoolkitAdminV2EmailTemplate RevertSecondFactorAdditionTemplate { get; set; }
		
		/// <summary>
		/// Configuration for SMTP relay
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smtp")]
		public GoogleCloudIdentitytoolkitAdminV2Smtp Smtp { get; set; }
		
		/// <summary>
		/// Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyEmailTemplate")]
		public GoogleCloudIdentitytoolkitAdminV2EmailTemplate VerifyEmailTemplate { get; set; }
	}
	
	/// <summary>
	/// Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project's display name. %DISPLAY_NAME% - The user's display name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2EmailTemplate
	{
		
		/// <summary>
		/// Email body
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="body")]
		public string Body { get; set; }
		
		/// <summary>
		/// Email body format
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bodyFormat")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2EmailTemplateBodyFormat> BodyFormat { get; set; }
		
		/// <summary>
		/// Output only. Whether the body or subject of the email is customized.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customized")]
		public System.Nullable<System.Boolean> Customized { get; set; }
		
		/// <summary>
		/// Reply-to address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replyTo")]
		public string ReplyTo { get; set; }
		
		/// <summary>
		/// Sender display name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="senderDisplayName")]
		public string SenderDisplayName { get; set; }
		
		/// <summary>
		/// Local part of From address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="senderLocalPart")]
		public string SenderLocalPart { get; set; }
		
		/// <summary>
		/// Subject of the email
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2EmailTemplateBodyFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BODY_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAIN_TEXT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTML = 2,
	}
	
	/// <summary>
	/// Information of custom domain DNS verification. By default, default_domain will be used. A custom domain can be configured using VerifyCustomDomain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2DnsInfo
	{
		
		/// <summary>
		/// Output only. The applied verified custom domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customDomain")]
		public string CustomDomain { get; set; }
		
		/// <summary>
		/// Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customDomainState")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2DnsInfoCustomDomainState> CustomDomainState { get; set; }
		
		/// <summary>
		/// Output only. The timestamp of initial request for the current domain verification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domainVerificationRequestTime")]
		public string DomainVerificationRequestTime { get; set; }
		
		/// <summary>
		/// Output only. The custom domain that's to be verified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pendingCustomDomain")]
		public string PendingCustomDomain { get; set; }
		
		/// <summary>
		/// Whether to use custom domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useCustomDomain")]
		public System.Nullable<System.Boolean> UseCustomDomain { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2DnsInfoCustomDomainState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2SendEmailMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METHOD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_SMTP = 2,
	}
	
	/// <summary>
	/// Configuration for SMTP relay
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Smtp
	{
		
		/// <summary>
		/// SMTP relay host
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// SMTP relay password
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		/// <summary>
		/// SMTP relay port
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// SMTP security mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityMode")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2SmtpSecurityMode> SecurityMode { get; set; }
		
		/// <summary>
		/// Sender email for the SMTP relay
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="senderEmail")]
		public string SenderEmail { get; set; }
		
		/// <summary>
		/// SMTP relay username
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2SmtpSecurityMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECURITY_MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_TLS = 2,
	}
	
	/// <summary>
	/// Options for SMS sending.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SendSms
	{
		
		/// <summary>
		/// The template to use when sending an SMS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smsTemplate")]
		public GoogleCloudIdentitytoolkitAdminV2SmsTemplate SmsTemplate { get; set; }
		
		/// <summary>
		/// Whether to use the accept_language header for SMS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useDeviceLocale")]
		public System.Nullable<System.Boolean> UseDeviceLocale { get; set; }
	}
	
	/// <summary>
	/// The template to use when sending an SMS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SmsTemplate
	{
		
		/// <summary>
		/// Output only. The SMS's content. Can contain the following placeholders which will be replaced with the appropriate values: %APP_NAME% - For Android or iOS apps, the app's display name. For web apps, the domain hosting the application. %LOGIN_CODE% - The OOB code being sent in the SMS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
	}
	
	/// <summary>
	/// The configuration for the password policy on the project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig
	{
		
		/// <summary>
		/// Users must have a password compliant with the password policy to sign-in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forceUpgradeOnSignin")]
		public System.Nullable<System.Boolean> ForceUpgradeOnSignin { get; set; }
		
		/// <summary>
		/// Output only. The last time the password policy on the project was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// Which enforcement mode to use for the password policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordPolicyEnforcementState")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfigPasswordPolicyEnforcementState> PasswordPolicyEnforcementState { get; set; }
		
		/// <summary>
		/// Must be of length 1. Contains the strength attributes for the password policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordPolicyVersions")]
		public GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion[] PasswordPolicyVersions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfigPasswordPolicyEnforcementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCE = 2,
	}
	
	/// <summary>
	/// The strength attributes for the password policy on the project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion
	{
		
		/// <summary>
		/// Custom strength options to enforce on user passwords.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customStrengthOptions")]
		public GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions CustomStrengthOptions { get; set; }
		
		/// <summary>
		/// Output only. schema version number for the password policy
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaVersion")]
		public System.Nullable<System.Int32> SchemaVersion { get; set; }
	}
	
	/// <summary>
	/// Custom strength options to enforce on user passwords.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions
	{
		
		/// <summary>
		/// The password must contain a lower case character.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsLowercaseCharacter")]
		public System.Nullable<System.Boolean> ContainsLowercaseCharacter { get; set; }
		
		/// <summary>
		/// The password must contain a non alpha numeric character.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsNonAlphanumericCharacter")]
		public System.Nullable<System.Boolean> ContainsNonAlphanumericCharacter { get; set; }
		
		/// <summary>
		/// The password must contain a number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsNumericCharacter")]
		public System.Nullable<System.Boolean> ContainsNumericCharacter { get; set; }
		
		/// <summary>
		/// The password must contain an upper case character.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsUppercaseCharacter")]
		public System.Nullable<System.Boolean> ContainsUppercaseCharacter { get; set; }
		
		/// <summary>
		/// Maximum password length. No default max length
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPasswordLength")]
		public System.Nullable<System.Int32> MaxPasswordLength { get; set; }
		
		/// <summary>
		/// Minimum password length. Range from 6 to 30
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minPasswordLength")]
		public System.Nullable<System.Int32> MinPasswordLength { get; set; }
	}
	
	/// <summary>
	/// Configuration related to quotas.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2QuotaConfig
	{
		
		/// <summary>
		/// Temporary quota increase / decrease
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signUpQuotaConfig")]
		public GoogleCloudIdentitytoolkitAdminV2TemporaryQuota SignUpQuotaConfig { get; set; }
	}
	
	/// <summary>
	/// Temporary quota increase / decrease
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2TemporaryQuota
	{
		
		/// <summary>
		/// Corresponds to the 'refill_token_count' field in QuotaServer config
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public string Quota { get; set; }
		
		/// <summary>
		/// How long this quota will be active for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaDuration")]
		public string QuotaDuration { get; set; }
		
		/// <summary>
		/// When this quota will take effect
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// The reCAPTCHA Enterprise integration config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig
	{
		
		/// <summary>
		/// The reCAPTCHA config for email/password provider, containing the enforcement status. The email/password provider contains all related user flows protected by reCAPTCHA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailPasswordEnforcementState")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2RecaptchaConfigEmailPasswordEnforcementState> EmailPasswordEnforcementState { get; set; }
		
		/// <summary>
		/// The managed rules for authentication action based on reCAPTCHA scores. The rules are shared across providers for a given tenant project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managedRules")]
		public GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule[] ManagedRules { get; set; }
		
		/// <summary>
		/// Output only. The reCAPTCHA keys.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recaptchaKeys")]
		public GoogleCloudIdentitytoolkitAdminV2RecaptchaKey[] RecaptchaKeys { get; set; }
		
		/// <summary>
		/// Whether to use the account defender for reCAPTCHA assessment. Defaults to `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAccountDefender")]
		public System.Nullable<System.Boolean> UseAccountDefender { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2RecaptchaConfigEmailPasswordEnforcementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_PROVIDER_ENFORCEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUDIT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCE = 3,
	}
	
	/// <summary>
	/// The config for a reCAPTCHA managed rule. Models a single interval [start_score, end_score]. The start_score is implicit. It is either the closest smaller end_score (if one is available) or 0. Intervals in aggregate span [0, 1] without overlapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule
	{
		
		/// <summary>
		/// The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleAction> Action { get; set; }
		
		/// <summary>
		/// The end score (inclusive) of the score range for an action. Must be a value between 0.0 and 1.0, at 11 discrete values; e.g. 0, 0.1, 0.2, 0.3, ... 0.9, 1.0. A score of 0.0 indicates the riskiest request (likely a bot), whereas 1.0 indicates the safest request (likely a human). See https://cloud.google.com/recaptcha-enterprise/docs/interpret-assessment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endScore")]
		public System.Nullable<System.Single> EndScore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_ACTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCK = 1,
	}
	
	/// <summary>
	/// The reCAPTCHA key config. reCAPTCHA Enterprise offers different keys for different client platforms.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2RecaptchaKey
	{
		
		/// <summary>
		/// The reCAPTCHA Enterprise key resource name, e.g. "projects/{project}/keys/{key}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The client's platform type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANDROID = 3,
	}
	
	/// <summary>
	/// Configuration related to local sign in methods.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SignInConfig
	{
		
		/// <summary>
		/// Whether to allow more than one account to have the same email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowDuplicateEmails")]
		public System.Nullable<System.Boolean> AllowDuplicateEmails { get; set; }
		
		/// <summary>
		/// Configuration options related to authenticating an anonymous user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anonymous")]
		public GoogleCloudIdentitytoolkitAdminV2Anonymous Anonymous { get; set; }
		
		/// <summary>
		/// Configuration options related to authenticating a user by their email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public GoogleCloudIdentitytoolkitAdminV2Email Email { get; set; }
		
		/// <summary>
		/// History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hashConfig")]
		public GoogleCloudIdentitytoolkitAdminV2HashConfig HashConfig { get; set; }
		
		/// <summary>
		/// Configuration options related to authenticated a user by their phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public GoogleCloudIdentitytoolkitAdminV2PhoneNumber PhoneNumber { get; set; }
	}
	
	/// <summary>
	/// Configuration options related to authenticating a user by their email address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Email
	{
		
		/// <summary>
		/// Whether email auth is enabled for the project or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordRequired")]
		public System.Nullable<System.Boolean> PasswordRequired { get; set; }
	}
	
	/// <summary>
	/// History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2HashConfig
	{
		
		/// <summary>
		/// Output only. Different password hash algorithms used in Identity Toolkit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="algorithm")]
		public System.Nullable<GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithm> Algorithm { get; set; }
		
		/// <summary>
		/// Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memoryCost")]
		public System.Nullable<System.Int32> MemoryCost { get; set; }
		
		/// <summary>
		/// Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rounds")]
		public System.Nullable<System.Int32> Rounds { get; set; }
		
		/// <summary>
		/// Output only. Non-printable character to be inserted between the salt and plain text password in base64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saltSeparator")]
		public string SaltSeparator { get; set; }
		
		/// <summary>
		/// Output only. Signer key in base64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signerKey")]
		public string SignerKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithm
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HASH_ALGORITHM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA256 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_MD5 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCRYPT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PBKDF_SHA1 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MD5 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA512 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHA1 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BCRYPT = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PBKDF2_SHA256 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHA256 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHA512 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_SCRYPT = 13,
	}
	
	/// <summary>
	/// Configuration options related to authenticated a user by their phone number.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2PhoneNumber
	{
		
		/// <summary>
		/// Whether phone number auth is enabled for the project or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A map of that can be used for phone auth testing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testPhoneNumbers")]
		public System.Collections.Generic.Dictionary<string, string> TestPhoneNumbers { get; set; }
	}
	
	/// <summary>
	/// Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig
	{
		
		/// <summary>
		/// Defines a policy of allowing every region by default and adding disallowed regions to a disallow list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowByDefault")]
		public GoogleCloudIdentitytoolkitAdminV2AllowByDefault AllowByDefault { get; set; }
		
		/// <summary>
		/// Defines a policy of only allowing regions by explicitly adding them to an allowlist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowlistOnly")]
		public GoogleCloudIdentitytoolkitAdminV2AllowlistOnly AllowlistOnly { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitAdminV2ConfigSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBTYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDENTITY_PLATFORM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREBASE_AUTH = 2,
	}
	
	/// <summary>
	/// Standard Identity Toolkit-trusted IDPs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp
	{
		
		/// <summary>
		/// Description of the Idp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Id the of Idp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idpId")]
		public string IdpId { get; set; }
	}
	
	/// <summary>
	/// Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig
	{
		
		/// <summary>
		/// Additional config for SignInWithApple.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appleSignInConfig")]
		public GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig AppleSignInConfig { get; set; }
		
		/// <summary>
		/// OAuth client ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// OAuth client secret.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public string ClientSecret { get; set; }
		
		/// <summary>
		/// True if allows the user to sign in with the provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2IdpCertificate
	{
		
		/// <summary>
		/// The x509 certificate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x509Certificate")]
		public string X509Certificate { get; set; }
	}
	
	/// <summary>
	/// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2IdpConfig
	{
		
		/// <summary>
		/// IDP's public keys for verifying signature in the assertions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idpCertificates")]
		public GoogleCloudIdentitytoolkitAdminV2IdpCertificate[] IdpCertificates { get; set; }
		
		/// <summary>
		/// Unique identifier for all SAML entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idpEntityId")]
		public string IdpEntityId { get; set; }
		
		/// <summary>
		/// Indicates if outbounding SAMLRequest should be signed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signRequest")]
		public System.Nullable<System.Boolean> SignRequest { get; set; }
		
		/// <summary>
		/// URL to send Authentication request to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssoUrl")]
		public string SsoUrl { get; set; }
	}
	
	/// <summary>
	/// A pair of SAML RP-IDP configurations when the project acts as the relying party.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig
	{
		
		/// <summary>
		/// The config's display name set by developers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// True if allows the user to sign in with the provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idpConfig")]
		public GoogleCloudIdentitytoolkitAdminV2IdpConfig IdpConfig { get; set; }
		
		/// <summary>
		/// The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spConfig")]
		public GoogleCloudIdentitytoolkitAdminV2SpConfig SpConfig { get; set; }
	}
	
	/// <summary>
	/// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SpConfig
	{
		
		/// <summary>
		/// Callback URI where responses from IDP are handled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callbackUri")]
		public string CallbackUri { get; set; }
		
		/// <summary>
		/// Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spCertificates")]
		public GoogleCloudIdentitytoolkitAdminV2SpCertificate[] SpCertificates { get; set; }
		
		/// <summary>
		/// Unique identifier for all SAML entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spEntityId")]
		public string SpEntityId { get; set; }
	}
	
	/// <summary>
	/// The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2SpCertificate
	{
		
		/// <summary>
		/// Timestamp of the cert expiration instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
		
		/// <summary>
		/// Self-signed public certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x509Certificate")]
		public string X509Certificate { get; set; }
	}
	
	/// <summary>
	/// Settings that the tenants will inherit from project level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Inheritance
	{
		
		/// <summary>
		/// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailSendingConfig")]
		public System.Nullable<System.Boolean> EmailSendingConfig { get; set; }
	}
	
	/// <summary>
	/// Request for InitializeIdentityPlatform.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest
	{
	}
	
	/// <summary>
	/// Response for InitializeIdentityPlatform. Empty for now.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse
	{
	}
	
	/// <summary>
	/// Response for DefaultSupportedIdpConfigs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse
	{
		
		/// <summary>
		/// The set of configs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultSupportedIdpConfigs")]
		public GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig[] DefaultSupportedIdpConfigs { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListDefaultSupportedIdps
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse
	{
		
		/// <summary>
		/// The set of configs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultSupportedIdps")]
		public GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp[] DefaultSupportedIdps { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListInboundSamlConfigs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse
	{
		
		/// <summary>
		/// The set of configs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSamlConfigs")]
		public GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig[] InboundSamlConfigs { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListOAuthIdpConfigs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse
	{
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The set of configs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oauthIdpConfigs")]
		public GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig[] OauthIdpConfigs { get; set; }
	}
	
	/// <summary>
	/// Configuration options for authenticating with an OAuth IDP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig
	{
		
		/// <summary>
		/// The client id of an OAuth client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The client secret of the OAuth client, to enable OIDC code flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public string ClientSecret { get; set; }
		
		/// <summary>
		/// The config's display name set by developers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// True if allows the user to sign in with the provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// For OIDC Idps, the issuer identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuer")]
		public string Issuer { get; set; }
		
		/// <summary>
		/// The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseType")]
		public GoogleCloudIdentitytoolkitAdminV2OAuthResponseType ResponseType { get; set; }
	}
	
	/// <summary>
	/// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2OAuthResponseType
	{
		
		/// <summary>
		/// If true, authorization code is returned from IdP's authorization endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Boolean> Code { get; set; }
		
		/// <summary>
		/// If true, ID token is returned from IdP's authorization endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public System.Nullable<System.Boolean> IdToken { get; set; }
		
		/// <summary>
		/// Do not use. The `token` response type is not supported at the moment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="token")]
		public System.Nullable<System.Boolean> Token { get; set; }
	}
	
	/// <summary>
	/// Response message for ListTenants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse
	{
		
		/// <summary>
		/// The token to get the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of tenants under the given agent project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenants")]
		public GoogleCloudIdentitytoolkitAdminV2Tenant[] Tenants { get; set; }
	}
	
	/// <summary>
	/// A Tenant contains configuration for the tenant in a multi-tenant project.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitAdminV2Tenant
	{
		
		/// <summary>
		/// Whether to allow email/password user authentication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowPasswordSignup")]
		public System.Nullable<System.Boolean> AllowPasswordSignup { get; set; }
		
		/// <summary>
		/// Whether anonymous users will be auto-deleted after a period of 30 days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autodeleteAnonymousUsers")]
		public System.Nullable<System.Boolean> AutodeleteAnonymousUsers { get; set; }
		
		/// <summary>
		/// Options related to how clients making requests on behalf of a tenant should be configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig Client { get; set; }
		
		/// <summary>
		/// Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableAuth")]
		public System.Nullable<System.Boolean> DisableAuth { get; set; }
		
		/// <summary>
		/// Display name of the tenant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Configuration for settings related to email privacy and public visibility. Settings in this config protect against email enumeration, but may make some trade-offs in user-friendliness.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailPrivacyConfig")]
		public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig EmailPrivacyConfig { get; set; }
		
		/// <summary>
		/// Whether to enable anonymous user authentication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableAnonymousUser")]
		public System.Nullable<System.Boolean> EnableAnonymousUser { get; set; }
		
		/// <summary>
		/// Whether to enable email link user authentication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableEmailLinkSignin")]
		public System.Nullable<System.Boolean> EnableEmailLinkSignin { get; set; }
		
		/// <summary>
		/// History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hashConfig")]
		public GoogleCloudIdentitytoolkitAdminV2HashConfig HashConfig { get; set; }
		
		/// <summary>
		/// Settings that the tenants will inherit from project level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inheritance")]
		public GoogleCloudIdentitytoolkitAdminV2Inheritance Inheritance { get; set; }
		
		/// <summary>
		/// Options related to MultiFactor Authentication for the project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfaConfig")]
		public GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig MfaConfig { get; set; }
		
		/// <summary>
		/// Configuration related to monitoring project activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoring")]
		public GoogleCloudIdentitytoolkitAdminV2MonitoringConfig Monitoring { get; set; }
		
		/// <summary>
		/// Output only. Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The configuration for the password policy on the project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordPolicyConfig")]
		public GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig PasswordPolicyConfig { get; set; }
		
		/// <summary>
		/// The reCAPTCHA Enterprise integration config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recaptchaConfig")]
		public GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig RecaptchaConfig { get; set; }
		
		/// <summary>
		/// Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smsRegionConfig")]
		public GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig SmsRegionConfig { get; set; }
		
		/// <summary>
		/// A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testPhoneNumbers")]
		public System.Collections.Generic.Dictionary<string, string> TestPhoneNumbers { get; set; }
	}
	
	/// <summary>
	/// The information required to auto-retrieve an SMS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2AutoRetrievalInfo
	{
		
		/// <summary>
		/// The Android app's signature hash for Google Play Service's SMS Retriever API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appSignatureHash")]
		public string AppSignatureHash { get; set; }
	}
	
	/// <summary>
	/// Custom strength options to enforce on user passwords.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2CustomStrengthOptions
	{
		
		/// <summary>
		/// The password must contain a lower case character.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsLowercaseCharacter")]
		public System.Nullable<System.Boolean> ContainsLowercaseCharacter { get; set; }
		
		/// <summary>
		/// The password must contain a non alpha numeric character.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsNonAlphanumericCharacter")]
		public System.Nullable<System.Boolean> ContainsNonAlphanumericCharacter { get; set; }
		
		/// <summary>
		/// The password must contain a number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsNumericCharacter")]
		public System.Nullable<System.Boolean> ContainsNumericCharacter { get; set; }
		
		/// <summary>
		/// The password must contain an upper case character.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containsUppercaseCharacter")]
		public System.Nullable<System.Boolean> ContainsUppercaseCharacter { get; set; }
		
		/// <summary>
		/// Maximum password length. No default max length
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPasswordLength")]
		public System.Nullable<System.Int32> MaxPasswordLength { get; set; }
		
		/// <summary>
		/// Minimum password length. Range from 6 to 30
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minPasswordLength")]
		public System.Nullable<System.Int32> MinPasswordLength { get; set; }
	}
	
	/// <summary>
	/// Finishes enrolling a second factor for the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest
	{
		
		/// <summary>
		/// Display name which is entered by users to distinguish between different second factors with same type or different type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. ID token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// Phone Verification info for a FinalizeMfa request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneVerificationInfo")]
		public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo PhoneVerificationInfo { get; set; }
		
		/// <summary>
		/// The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Mfa request info specific to TOTP auth for FinalizeMfa.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totpVerificationInfo")]
		public GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo TotpVerificationInfo { get; set; }
	}
	
	/// <summary>
	/// Phone Verification info for a FinalizeMfa request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo
	{
		
		/// <summary>
		/// Android only. Uses for "instant" phone number verification though GmsCore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="androidVerificationProof")]
		public string AndroidVerificationProof { get; set; }
		
		/// <summary>
		/// User-entered verification code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Required if Android verification proof is presented.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// An opaque string that represents the enrollment session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionInfo")]
		public string SessionInfo { get; set; }
	}
	
	/// <summary>
	/// Mfa request info specific to TOTP auth for FinalizeMfa.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo
	{
		
		/// <summary>
		/// An opaque string that represents the enrollment session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionInfo")]
		public string SessionInfo { get; set; }
		
		/// <summary>
		/// User-entered verification code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verificationCode")]
		public string VerificationCode { get; set; }
	}
	
	/// <summary>
	/// FinalizeMfaEnrollment response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse
	{
		
		/// <summary>
		/// ID token updated to reflect MFA enrollment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// Phone Verification info for a FinalizeMfa response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneAuthInfo")]
		public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo PhoneAuthInfo { get; set; }
		
		/// <summary>
		/// Refresh token updated to reflect MFA enrollment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public string RefreshToken { get; set; }
		
		/// <summary>
		/// Mfa response info specific to TOTP auth for FinalizeMfa.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totpAuthInfo")]
		public GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentResponseInfo TotpAuthInfo { get; set; }
	}
	
	/// <summary>
	/// Phone Verification info for a FinalizeMfa response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo
	{
		
		/// <summary>
		/// Android only. Long-lived replacement for valid code tied to android device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="androidVerificationProof")]
		public string AndroidVerificationProof { get; set; }
		
		/// <summary>
		/// Android only. Expiration time of verification proof in seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="androidVerificationProofExpireTime")]
		public string AndroidVerificationProofExpireTime { get; set; }
		
		/// <summary>
		/// For Android verification proof.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public string PhoneNumber { get; set; }
	}
	
	/// <summary>
	/// Mfa response info specific to TOTP auth for FinalizeMfa.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentResponseInfo
	{
	}
	
	/// <summary>
	/// Finalizes sign-in by verifying MFA challenge.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest
	{
		
		/// <summary>
		/// The MFA enrollment ID from the user's list of current MFA enrollments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfaEnrollmentId")]
		public string MfaEnrollmentId { get; set; }
		
		/// <summary>
		/// Required. Pending credential from first factor sign-in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfaPendingCredential")]
		public string MfaPendingCredential { get; set; }
		
		/// <summary>
		/// Phone Verification info for a FinalizeMfa request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneVerificationInfo")]
		public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo PhoneVerificationInfo { get; set; }
		
		/// <summary>
		/// The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// TOTP verification info for FinalizeMfaSignInRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totpVerificationInfo")]
		public GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo TotpVerificationInfo { get; set; }
	}
	
	/// <summary>
	/// TOTP verification info for FinalizeMfaSignInRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo
	{
		
		/// <summary>
		/// User-entered verification code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verificationCode")]
		public string VerificationCode { get; set; }
	}
	
	/// <summary>
	/// FinalizeMfaSignIn response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse
	{
		
		/// <summary>
		/// ID token for the authenticated user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// Phone Verification info for a FinalizeMfa response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneAuthInfo")]
		public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo PhoneAuthInfo { get; set; }
		
		/// <summary>
		/// Refresh token for the authenticated user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public string RefreshToken { get; set; }
	}
	
	/// <summary>
	/// Configuration for password policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2PasswordPolicy
	{
		
		/// <summary>
		/// Output only. Allowed characters which satisfy the non_alphanumeric requirement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedNonAlphanumericCharacters")]
		public string[] AllowedNonAlphanumericCharacters { get; set; }
		
		/// <summary>
		/// Custom strength options to enforce on user passwords.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customStrengthOptions")]
		public GoogleCloudIdentitytoolkitV2CustomStrengthOptions CustomStrengthOptions { get; set; }
		
		/// <summary>
		/// Output only. Which enforcement mode to use for the password policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enforcementState")]
		public System.Nullable<GoogleCloudIdentitytoolkitV2PasswordPolicyEnforcementState> EnforcementState { get; set; }
		
		/// <summary>
		/// Users must have a password compliant with the password policy to sign-in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forceUpgradeOnSignin")]
		public System.Nullable<System.Boolean> ForceUpgradeOnSignin { get; set; }
		
		/// <summary>
		/// Output only. schema version number for the password policy
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaVersion")]
		public System.Nullable<System.Int32> SchemaVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitV2PasswordPolicyEnforcementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCE = 2,
	}
	
	/// <summary>
	/// Configuration for reCAPTCHA
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2RecaptchaConfig
	{
		
		/// <summary>
		/// The reCAPTCHA enforcement state for the providers that GCIP supports reCAPTCHA protection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recaptchaEnforcementState")]
		public GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState[] RecaptchaEnforcementState { get; set; }
		
		/// <summary>
		/// The reCAPTCHA Enterprise key resource name, e.g. "projects/{project}/keys/{key}". This will only be returned when the reCAPTCHA enforcement state is AUDIT or ENFORCE on at least one of the reCAPTCHA providers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recaptchaKey")]
		public string RecaptchaKey { get; set; }
	}
	
	/// <summary>
	/// Enforcement states for reCAPTCHA protection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState
	{
		
		/// <summary>
		/// The reCAPTCHA enforcement state for the provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enforcementState")]
		public System.Nullable<GoogleCloudIdentitytoolkitV2RecaptchaEnforcementStateEnforcementState> EnforcementState { get; set; }
		
		/// <summary>
		/// The provider that has reCAPTCHA protection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public System.Nullable<GoogleCloudIdentitytoolkitV2RecaptchaEnforcementStateProvider> Provider { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitV2RecaptchaEnforcementStateEnforcementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUDIT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitV2RecaptchaEnforcementStateProvider
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_PROVIDER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_PASSWORD_PROVIDER = 1,
	}
	
	/// <summary>
	/// Request message for RevokeToken.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2RevokeTokenRequest
	{
		
		/// <summary>
		/// Required. A valid Identity Platform ID token to link the account. If there was a successful token revocation request on the account and no tokens are generated after the revocation, the duplicate requests will be ignored and returned immediately.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// Required. The idp provider for the token. Currently only supports Apple Idp. The format should be "apple.com".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="providerId")]
		public string ProviderId { get; set; }
		
		/// <summary>
		/// The redirect URI provided in the initial authorization request made by the client to the IDP. The URI must use the HTTPS protocol, include a domain name, and can't contain an IP address or localhost. Required if token_type is CODE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirectUri")]
		public string RedirectUri { get; set; }
		
		/// <summary>
		/// The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Required. The token to be revoked. If an authorization_code is passed in, the API will first exchange the code for access token and then revoke the token exchanged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
		
		/// <summary>
		/// Required. The type of the token to be revoked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokenType")]
		public System.Nullable<GoogleCloudIdentitytoolkitV2RevokeTokenRequestTokenType> TokenType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudIdentitytoolkitV2RevokeTokenRequestTokenType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOKEN_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REFRESH_TOKEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_TOKEN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CODE = 3,
	}
	
	/// <summary>
	/// Response message for RevokeToken. Empty for now.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2RevokeTokenResponse
	{
	}
	
	/// <summary>
	/// Sends MFA enrollment verification SMS for a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest
	{
		
		/// <summary>
		/// Required. User's ID token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// App Verification info for a StartMfa request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneEnrollmentInfo")]
		public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo PhoneEnrollmentInfo { get; set; }
		
		/// <summary>
		/// The ID of the Identity Platform tenant that the user enrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Mfa request info specific to TOTP auth for StartMfa.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totpEnrollmentInfo")]
		public GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentRequestInfo TotpEnrollmentInfo { get; set; }
	}
	
	/// <summary>
	/// App Verification info for a StartMfa request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo
	{
		
		/// <summary>
		/// The information required to auto-retrieve an SMS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autoRetrievalInfo")]
		public GoogleCloudIdentitytoolkitV2AutoRetrievalInfo AutoRetrievalInfo { get; set; }
		
		/// <summary>
		/// iOS only. Receipt of successful app token validation with APNS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iosReceipt")]
		public string IosReceipt { get; set; }
		
		/// <summary>
		/// iOS only. Secret delivered to iOS app via APNS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iosSecret")]
		public string IosSecret { get; set; }
		
		/// <summary>
		/// Required for enrollment. Phone number to be enrolled as MFA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// Android only. Used to assert application identity in place of a recaptcha token (or safety net token). A Play Integrity Token can be generated via the [PlayIntegrity API] (https://developer.android.com/google/play/integrity) with applying SHA256 to the `phone_number` field as the nonce.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="playIntegrityToken")]
		public string PlayIntegrityToken { get; set; }
		
		/// <summary>
		/// Web only. Recaptcha solution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recaptchaToken")]
		public string RecaptchaToken { get; set; }
		
		/// <summary>
		/// Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyNetToken")]
		public string SafetyNetToken { get; set; }
	}
	
	/// <summary>
	/// Mfa request info specific to TOTP auth for StartMfa.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentRequestInfo
	{
	}
	
	/// <summary>
	/// StartMfaEnrollment response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse
	{
		
		/// <summary>
		/// Phone Verification info for a StartMfa response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneSessionInfo")]
		public GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo PhoneSessionInfo { get; set; }
		
		/// <summary>
		/// Mfa response info specific to TOTP auth for StartMfa.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totpSessionInfo")]
		public GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo TotpSessionInfo { get; set; }
	}
	
	/// <summary>
	/// Phone Verification info for a StartMfa response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo
	{
		
		/// <summary>
		/// An opaque string that represents the enrollment session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionInfo")]
		public string SessionInfo { get; set; }
	}
	
	/// <summary>
	/// Mfa response info specific to TOTP auth for StartMfa.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo
	{
		
		/// <summary>
		/// The time by which the enrollment must finish.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalizeEnrollmentTime")]
		public string FinalizeEnrollmentTime { get; set; }
		
		/// <summary>
		/// The hashing algorithm used to generate the verification code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hashingAlgorithm")]
		public string HashingAlgorithm { get; set; }
		
		/// <summary>
		/// Duration in seconds at which the verification code will change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="periodSec")]
		public System.Nullable<System.Int32> PeriodSec { get; set; }
		
		/// <summary>
		/// An encoded string that represents the enrollment session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionInfo")]
		public string SessionInfo { get; set; }
		
		/// <summary>
		/// A base 32 encoded string that represents the shared TOTP secret. The base 32 encoding is the one specified by [RFC4648#section-6](https://datatracker.ietf.org/doc/html/rfc4648#section-6). (This is the same as the base 32 encoding from [RFC3548#section-5](https://datatracker.ietf.org/doc/html/rfc3548#section-5).)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedSecretKey")]
		public string SharedSecretKey { get; set; }
		
		/// <summary>
		/// The length of the verification code that needs to be generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verificationCodeLength")]
		public System.Nullable<System.Int32> VerificationCodeLength { get; set; }
	}
	
	/// <summary>
	/// Starts multi-factor sign-in by sending the multi-factor auth challenge.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaSignInRequest
	{
		
		/// <summary>
		/// Required. MFA enrollment id from the user's list of current MFA enrollments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfaEnrollmentId")]
		public string MfaEnrollmentId { get; set; }
		
		/// <summary>
		/// Required. Pending credential from first factor sign-in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfaPendingCredential")]
		public string MfaPendingCredential { get; set; }
		
		/// <summary>
		/// App Verification info for a StartMfa request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneSignInInfo")]
		public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo PhoneSignInInfo { get; set; }
		
		/// <summary>
		/// The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// StartMfaSignIn response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2StartMfaSignInResponse
	{
		
		/// <summary>
		/// Phone Verification info for a StartMfa response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneResponseInfo")]
		public GoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo PhoneResponseInfo { get; set; }
	}
	
	/// <summary>
	/// Withdraws MFA.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2WithdrawMfaRequest
	{
		
		/// <summary>
		/// Required. User's ID token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// Required. MFA enrollment id from a current MFA enrollment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mfaEnrollmentId")]
		public string MfaEnrollmentId { get; set; }
		
		/// <summary>
		/// The ID of the Identity Platform tenant that the user unenrolling MFA belongs to. If not set, the user belongs to the default Identity Platform project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// Withdraws MultiFactorAuth response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudIdentitytoolkitV2WithdrawMfaResponse
	{
		
		/// <summary>
		/// ID token updated to reflect removal of the second factor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idToken")]
		public string IdToken { get; set; }
		
		/// <summary>
		/// Refresh token updated to reflect removal of the second factor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public string RefreshToken { get; set; }
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public GoogleIamV1AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<GoogleIamV1AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleIamV1AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeExpr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Request message for `GetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1GetIamPolicyRequest
	{
		
		/// <summary>
		/// Encapsulates settings provided to GetIamPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GoogleIamV1GetPolicyOptions Options { get; set; }
	}
	
	/// <summary>
	/// Encapsulates settings provided to GetIamPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1GetPolicyOptions
	{
		
		/// <summary>
		/// Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedPolicyVersion")]
		public System.Nullable<System.Int32> RequestedPolicyVersion { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public GoogleIamV1AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Finishes enrolling a second factor for the user.
		/// Identitytoolkit_accounts_mfaEnrollment_finalize v2/accounts/mfaEnrollment:finalize
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse> Identitytoolkit_accounts_mfaEnrollment_finalizeAsync(GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/accounts/mfaEnrollment:finalize";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user.
		/// Identitytoolkit_accounts_mfaEnrollment_start v2/accounts/mfaEnrollment:start
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse> Identitytoolkit_accounts_mfaEnrollment_startAsync(GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/accounts/mfaEnrollment:start";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Revokes one second factor from the enrolled second factors for an account.
		/// Identitytoolkit_accounts_mfaEnrollment_withdraw v2/accounts/mfaEnrollment:withdraw
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2WithdrawMfaResponse> Identitytoolkit_accounts_mfaEnrollment_withdrawAsync(GoogleCloudIdentitytoolkitV2WithdrawMfaRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/accounts/mfaEnrollment:withdraw";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2WithdrawMfaResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Verifies the MFA challenge and performs sign-in
		/// Identitytoolkit_accounts_mfaSignIn_finalize v2/accounts/mfaSignIn:finalize
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse> Identitytoolkit_accounts_mfaSignIn_finalizeAsync(GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/accounts/mfaSignIn:finalize";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sends the MFA challenge
		/// Identitytoolkit_accounts_mfaSignIn_start v2/accounts/mfaSignIn:start
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2StartMfaSignInResponse> Identitytoolkit_accounts_mfaSignIn_startAsync(GoogleCloudIdentitytoolkitV2StartMfaSignInRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/accounts/mfaSignIn:start";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2StartMfaSignInResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Revokes a user's token from an Identity Provider (IdP). This is done by manually providing an IdP credential, and the token types for revocation. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.
		/// Identitytoolkit_accounts_revokeToken v2/accounts:revokeToken
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2RevokeTokenResponse> Identitytoolkit_accounts_revokeTokenAsync(GoogleCloudIdentitytoolkitV2RevokeTokenRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/accounts:revokeToken";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2RevokeTokenResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List all default supported Idps.
		/// Identitytoolkit_defaultSupportedIdps_list v2/defaultSupportedIdps
		/// </summary>
		/// <param name="pageSize">The maximum number of items to return.</param>
		/// <param name="pageToken">The next_page_token value returned from a previous List request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse> Identitytoolkit_defaultSupportedIdps_listAsync(int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/defaultSupportedIdps?pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets password policy config set on the project or tenant.
		/// Identitytoolkit_getPasswordPolicy v2/passwordPolicy
		/// </summary>
		/// <param name="tenantId">The id of a tenant.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2PasswordPolicy> Identitytoolkit_getPasswordPolicyAsync(string tenantId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/passwordPolicy?tenantId=" + (tenantId==null? "" : System.Uri.EscapeDataString(tenantId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2PasswordPolicy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets parameters needed for reCAPTCHA analysis.
		/// Identitytoolkit_getRecaptchaConfig v2/recaptchaConfig
		/// </summary>
		/// <param name="clientType">reCAPTCHA Enterprise uses separate site keys for different client types. Specify the client type to get the corresponding key.</param>
		/// <param name="tenantId">The id of a tenant.</param>
		/// <param name="version">The reCAPTCHA version.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitV2RecaptchaConfig> Identitytoolkit_getRecaptchaConfigAsync(Identitytoolkit_getRecaptchaConfigClientType clientType, string tenantId, Identitytoolkit_getRecaptchaConfigVersion version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/recaptchaConfig?clientType=" + clientType+"&tenantId=" + (tenantId==null? "" : System.Uri.EscapeDataString(tenantId))+"&version=" + version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitV2RecaptchaConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete an Oidc Idp configuration for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_oauthIdpConfigs_delete v2/{name}
		/// </summary>
		/// <param name="name">The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Identitytoolkit_projects_tenants_oauthIdpConfigs_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve an Oidc Idp configuration for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_oauthIdpConfigs_get v2/{name}
		/// </summary>
		/// <param name="name">The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> Identitytoolkit_projects_tenants_oauthIdpConfigs_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update an Oidc Idp configuration for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_oauthIdpConfigs_patch v2/{name}
		/// </summary>
		/// <param name="name">The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.</param>
		/// <param name="updateMask">The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> Identitytoolkit_projects_tenants_oauthIdpConfigs_patchAsync(string name, string updateMask, GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List all default supported Idp configurations for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_defaultSupportedIdpConfigs_list v2/{parent}/defaultSupportedIdpConfigs
		/// </summary>
		/// <param name="parent">The parent resource name, for example, "projects/my-awesome-project".</param>
		/// <param name="pageSize">The maximum number of items to return.</param>
		/// <param name="pageToken">The next_page_token value returned from a previous List request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse> Identitytoolkit_projects_tenants_defaultSupportedIdpConfigs_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/defaultSupportedIdpConfigs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a default supported Idp configuration for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_defaultSupportedIdpConfigs_create v2/{parent}/defaultSupportedIdpConfigs
		/// </summary>
		/// <param name="parent">The parent resource name where the config to be created, for example: "projects/my-awesome-project"</param>
		/// <param name="idpId">The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig> Identitytoolkit_projects_tenants_defaultSupportedIdpConfigs_createAsync(string parent, string idpId, GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/defaultSupportedIdpConfigs&idpId=" + (idpId==null? "" : System.Uri.EscapeDataString(idpId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List all inbound SAML configurations for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_inboundSamlConfigs_list v2/{parent}/inboundSamlConfigs
		/// </summary>
		/// <param name="parent">The parent resource name, for example, "projects/my-awesome-project".</param>
		/// <param name="pageSize">The maximum number of items to return.</param>
		/// <param name="pageToken">The next_page_token value returned from a previous List request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse> Identitytoolkit_projects_tenants_inboundSamlConfigs_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/inboundSamlConfigs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create an inbound SAML configuration for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_inboundSamlConfigs_create v2/{parent}/inboundSamlConfigs
		/// </summary>
		/// <param name="parent">The parent resource name where the config to be created, for example: "projects/my-awesome-project"</param>
		/// <param name="inboundSamlConfigId">The id to use for this config.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig> Identitytoolkit_projects_tenants_inboundSamlConfigs_createAsync(string parent, string inboundSamlConfigId, GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/inboundSamlConfigs&inboundSamlConfigId=" + (inboundSamlConfigId==null? "" : System.Uri.EscapeDataString(inboundSamlConfigId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List all Oidc Idp configurations for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_oauthIdpConfigs_list v2/{parent}/oauthIdpConfigs
		/// </summary>
		/// <param name="parent">The parent resource name, for example, "projects/my-awesome-project".</param>
		/// <param name="pageSize">The maximum number of items to return.</param>
		/// <param name="pageToken">The next_page_token value returned from a previous List request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse> Identitytoolkit_projects_tenants_oauthIdpConfigs_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/oauthIdpConfigs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create an Oidc Idp configuration for an Identity Toolkit project.
		/// Identitytoolkit_projects_tenants_oauthIdpConfigs_create v2/{parent}/oauthIdpConfigs
		/// </summary>
		/// <param name="parent">The parent resource name where the config to be created, for example: "projects/my-awesome-project"</param>
		/// <param name="oauthIdpConfigId">The id to use for this config.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig> Identitytoolkit_projects_tenants_oauthIdpConfigs_createAsync(string parent, string oauthIdpConfigId, GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/oauthIdpConfigs&oauthIdpConfigId=" + (oauthIdpConfigId==null? "" : System.Uri.EscapeDataString(oauthIdpConfigId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List tenants under the given agent project. Requires read permission on the Agent project.
		/// Identitytoolkit_projects_tenants_list v2/{parent}/tenants
		/// </summary>
		/// <param name="parent">Required. The parent resource name to list tenants for.</param>
		/// <param name="pageSize">The maximum number of results to return, capped at 1000. If not specified, the default value is 20.</param>
		/// <param name="pageToken">The pagination token from the response of a previous request.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse> Identitytoolkit_projects_tenants_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tenants&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a tenant. Requires write permission on the Agent project.
		/// Identitytoolkit_projects_tenants_create v2/{parent}/tenants
		/// </summary>
		/// <param name="parent">The parent resource name where the tenant will be created. For example, "projects/project1".</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2Tenant> Identitytoolkit_projects_tenants_createAsync(string parent, GoogleCloudIdentitytoolkitAdminV2Tenant requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tenants";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2Tenant>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end authentication system for third-party users to access your apps and services. These could include mobile/web apps, games, APIs and beyond. This is the publicly available variant of EnableIdentityPlatform that is only available to billing-enabled projects.
		/// Identitytoolkit_projects_identityPlatform_initializeAuth v2/{project}/identityPlatform:initializeAuth
		/// </summary>
		/// <param name="project">The resource name of the target project the developer wants to enable Identity Platform for.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse> Identitytoolkit_projects_identityPlatform_initializeAuthAsync(string project, GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (project==null? "" : System.Uri.EscapeDataString(project))+"/identityPlatform:initializeAuth";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.
		/// Identitytoolkit_projects_tenants_getIamPolicy v2/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Identitytoolkit_projects_tenants_getIamPolicyAsync(string resource, GoogleIamV1GetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.
		/// Identitytoolkit_projects_tenants_setIamPolicy v2/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Identitytoolkit_projects_tenants_setIamPolicyAsync(string resource, GoogleIamV1SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.
		/// Identitytoolkit_projects_tenants_testIamPermissions v2/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1TestIamPermissionsResponse> Identitytoolkit_projects_tenants_testIamPermissionsAsync(string resource, GoogleIamV1TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum Identitytoolkit_getRecaptchaConfigClientType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_TYPE_WEB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_TYPE_ANDROID = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_TYPE_IOS = 3,
	}
	
	public enum Identitytoolkit_getRecaptchaConfigVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_VERSION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_ENTERPRISE = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Message delivery data for a given date, app, and analytics label combination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleFirebaseFcmDataV1beta1AndroidDeliveryData
	{
		
		/// <summary>
		/// The analytics label associated with the messages sent. All messages sent without an analytics label will be grouped together in a single entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsLabel")]
		public string AnalyticsLabel { get; set; }
		
		/// <summary>
		/// The app ID to which the messages were sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appId")]
		public string AppId { get; set; }
		
		/// <summary>
		/// Data detailing messaging delivery
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GoogleFirebaseFcmDataV1beta1Data Data { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public GoogleTypeDate Date { get; set; }
	}
	
	/// <summary>
	/// Data detailing messaging delivery
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleFirebaseFcmDataV1beta1Data
	{
		
		/// <summary>
		/// Count of messages accepted by FCM intended to Android devices. The targeted device must have opted in to the collection of usage and diagnostic information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="countMessagesAccepted")]
		public string CountMessagesAccepted { get; set; }
		
		/// <summary>
		/// Overview of delivery performance for messages that were successfully delivered. All percentages are calculated with countMessagesAccepted as the denominator. These categories are not mutually exclusive; a message can be delayed for multiple reasons.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryPerformancePercents")]
		public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents DeliveryPerformancePercents { get; set; }
		
		/// <summary>
		/// Additional information about message delivery. All percentages are calculated with countMessagesAccepted as the denominator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageInsightPercents")]
		public GoogleFirebaseFcmDataV1beta1MessageInsightPercents MessageInsightPercents { get; set; }
		
		/// <summary>
		/// Percentage breakdown of message delivery outcomes. These categories are mutually exclusive. All percentages are calculated with countMessagesAccepted as the denominator. These categories may not account for all message outcomes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageOutcomePercents")]
		public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents MessageOutcomePercents { get; set; }
	}
	
	/// <summary>
	/// Overview of delivery performance for messages that were successfully delivered. All percentages are calculated with countMessagesAccepted as the denominator. These categories are not mutually exclusive; a message can be delayed for multiple reasons.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents
	{
		
		/// <summary>
		/// The percentage of accepted messages that were delayed because the device was in doze mode. Only [normal priority messages](https://firebase.google.com/docs/cloud-messaging/concept-options#setting-the-priority-of-a-message) should be delayed due to doze mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delayedDeviceDoze")]
		public System.Nullable<System.Single> DelayedDeviceDoze { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were delayed because the target device was not connected at the time of sending. These messages were eventually delivered when the device reconnected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delayedDeviceOffline")]
		public System.Nullable<System.Single> DelayedDeviceOffline { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were delayed due to message throttling, such as [collapsible message throttling](https://firebase.google.com/docs/cloud-messaging/concept-options#collapsible_throttling) or [maximum message rate throttling](https://firebase.google.com/docs/cloud-messaging/concept-options#device_throttling).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delayedMessageThrottled")]
		public System.Nullable<System.Single> DelayedMessageThrottled { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were delayed because the intended device user-profile was [stopped](https://firebase.google.com/docs/cloud-messaging/android/receive#handling_messages) on the target device at the time of the send. The messages were eventually delivered when the user-profile was started again.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delayedUserStopped")]
		public System.Nullable<System.Single> DelayedUserStopped { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were delivered to the device without delay from the FCM system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveredNoDelay")]
		public System.Nullable<System.Single> DeliveredNoDelay { get; set; }
	}
	
	/// <summary>
	/// Additional information about message delivery. All percentages are calculated with countMessagesAccepted as the denominator.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleFirebaseFcmDataV1beta1MessageInsightPercents
	{
		
		/// <summary>
		/// The percentage of accepted messages that had their priority lowered from high to normal. See [documentation for setting message priority](https://firebase.google.com/docs/cloud-messaging/android/message-priority).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priorityLowered")]
		public System.Nullable<System.Single> PriorityLowered { get; set; }
	}
	
	/// <summary>
	/// Percentage breakdown of message delivery outcomes. These categories are mutually exclusive. All percentages are calculated with countMessagesAccepted as the denominator. These categories may not account for all message outcomes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleFirebaseFcmDataV1beta1MessageOutcomePercents
	{
		
		/// <summary>
		/// The percentage of all accepted messages that were successfully delivered to the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivered")]
		public System.Nullable<System.Single> Delivered { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were dropped because the application was force stopped on the device at the time of delivery and retries were unsuccessful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="droppedAppForceStopped")]
		public System.Nullable<System.Single> DroppedAppForceStopped { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were dropped because the target device is inactive. FCM will drop messages if the target device is deemed inactive by our servers. If a device does reconnect, we call [OnDeletedMessages()](https://firebase.google.com/docs/cloud-messaging/android/receive#override-ondeletedmessages) in our SDK instead of delivering the messages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="droppedDeviceInactive")]
		public System.Nullable<System.Single> DroppedDeviceInactive { get; set; }
		
		/// <summary>
		/// The percentage of accepted messages that were dropped due to [too many undelivered non-collapsible messages](https://firebase.google.com/docs/cloud-messaging/concept-options#collapsible_and_non-collapsible_messages). Specifically, each app instance can only have 100 pending messages stored on our servers for a device which is disconnected. When that device reconnects, those messages are delivered. When there are more than the maximum pending messages, we call [OnDeletedMessages()](https://firebase.google.com/docs/cloud-messaging/android/receive#override-ondeletedmessages) in our SDK instead of delivering the messages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="droppedTooManyPendingMessages")]
		public System.Nullable<System.Single> DroppedTooManyPendingMessages { get; set; }
		
		/// <summary>
		/// The percentage of messages accepted on this day that were not dropped and not delivered, due to the device being disconnected (as of the end of the America/Los_Angeles day when the message was sent to FCM). A portion of these messages will be delivered the next day when the device connects but others may be destined to devices that ultimately never reconnect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending")]
		public System.Nullable<System.Single> Pending { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Response message for ListAndroidDeliveryData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleFirebaseFcmDataV1beta1ListAndroidDeliveryDataResponse
	{
		
		/// <summary>
		/// The delivery data for the provided app. There will be one entry per combination of app, date, and analytics label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="androidDeliveryData")]
		public GoogleFirebaseFcmDataV1beta1AndroidDeliveryData[] AndroidDeliveryData { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List aggregate delivery data for the given Android application.
		/// Fcmdata_projects_androidApps_deliveryData_list v1beta1/{parent}/deliveryData
		/// </summary>
		/// <param name="parent">Required. The application for which to list delivery data. Format: `projects/{project_id}/androidApps/{app_id}`</param>
		/// <param name="pageSize">The maximum number of entries to return. The service may return fewer than this value. If unspecified, at most 1,000 entries will be returned. The maximum value is 10,000; values above 10,000 will be capped to 10,000. This default may change over time.</param>
		/// <param name="pageToken">A page token, received from a previous `ListAndroidDeliveryDataRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAndroidDeliveryDataRequest` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleFirebaseFcmDataV1beta1ListAndroidDeliveryDataResponse> Fcmdata_projects_androidApps_deliveryData_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deliveryData&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleFirebaseFcmDataV1beta1ListAndroidDeliveryDataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CallLog
	{
		
		/// <summary>
		/// Amount charged for the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="charge")]
		public System.Nullable<System.Double> Charge { get; set; }
		
		/// <summary>
		/// Name of the destination device of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_device_name")]
		public string Destination_device_name { get; set; }
		
		/// <summary>
		/// Destination extension of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_extension")]
		public System.Nullable<System.Double> Destination_extension { get; set; }
		
		/// <summary>
		/// SIP ID of the destination device of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_sip_id")]
		public string Destination_sip_id { get; set; }
		
		/// <summary>
		/// Destination user of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_user")]
		public string Destination_user { get; set; }
		
		/// <summary>
		/// Full name of the destination user of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_user_full_name")]
		public string Destination_user_full_name { get; set; }
		
		/// <summary>
		/// Direction of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public string Direction { get; set; }
		
		/// <summary>
		/// End time of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public string End { get; set; }
		
		/// <summary>
		/// Source number of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		/// <summary>
		/// Unique identifier of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Indicates if call was on/off network
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="in_network")]
		public System.Nullable<System.Boolean> In_network { get; set; }
		
		/// <summary>
		/// Indicates if call was international
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international")]
		public System.Nullable<System.Boolean> International { get; set; }
		
		/// <summary>
		/// Duration of the call in seconds
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="length")]
		public System.Nullable<System.Double> Length { get; set; }
		
		/// <summary>
		/// Rate charged for the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
		
		/// <summary>
		/// Indicates if call was recorded
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recorded")]
		public System.Nullable<System.Boolean> Recorded { get; set; }
		
		/// <summary>
		/// Result of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public string Result { get; set; }
		
		/// <summary>
		/// Name of the source device of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_device_name")]
		public string Source_device_name { get; set; }
		
		/// <summary>
		/// Source extension of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_extension")]
		public System.Nullable<System.Double> Source_extension { get; set; }
		
		/// <summary>
		/// SIP ID of the source device of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_sip_id")]
		public string Source_sip_id { get; set; }
		
		/// <summary>
		/// Source user of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_user")]
		public string Source_user { get; set; }
		
		/// <summary>
		/// Full name of the source user of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_user_full_name")]
		public string Source_user_full_name { get; set; }
		
		/// <summary>
		/// Start time of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public string Start { get; set; }
		
		/// <summary>
		/// Destination number of the call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CallLogsEmbeddedObject
	{
		
		[System.Runtime.Serialization.DataMember(Name="call_logs")]
		public CallLog[] Call_logs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CallLogsHalResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CallLogsEmbeddedObject _embedded { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Links _links { get; set; }
		
		/// <summary>
		/// Current page number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		/// <summary>
		/// Number of records per page
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		/// <summary>
		/// Total number of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Double> Total_items { get; set; }
		
		/// <summary>
		/// Total number of pages
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_page")]
		public System.Nullable<System.Double> Total_page { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Links
	{
		
		/// <summary>
		/// URL to the first page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first")]
		public FirstHref First { get; set; }
		
		/// <summary>
		/// URL to the next page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public NextHref Next { get; set; }
		
		/// <summary>
		/// URL to the previous page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prev")]
		public PrevHref Prev { get; set; }
		
		/// <summary>
		/// URL to the current page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public SelfHref Self { get; set; }
	}
	
	/// <summary>
	/// URL to the first page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class FirstHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// URL to the next page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NextHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// URL to the previous page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PrevHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// URL to the current page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SelfHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DetailedInvalidParam
	{
		
		/// <summary>
		/// Invalid property name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Invalid property reason
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ErrorResponse
	{
		
		/// <summary>
		/// Error message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="msg")]
		public string Msg { get; set; }
		
		/// <summary>
		/// Http Response Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	/// <summary>
	/// URL to the last page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LastHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ValidationErrorsResponse
	{
		
		/// <summary>
		/// Error Track ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Invalid parameters and their reason for failing
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalid_parameters")]
		public DetailedInvalidParam[] Invalid_parameters { get; set; }
		
		/// <summary>
		/// Error status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
		
		/// <summary>
		/// Error title
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve call logs for your account
		/// Retrieve call logs for your account
		/// GetCallLogs accounts/{account_id}/call-logs
		/// </summary>
		/// <param name="account_id">The Vonage Business Cloud account ID</param>
		/// <param name="start_gte">Filter records by start date (greater equal or equal to)</param>
		/// <param name="start_lte">Filter records by start date (less equal or equal to)</param>
		/// <param name="end_gte">Filter records by end date (greater equal or equal to)</param>
		/// <param name="end_lte">Filter records by end date (less equal or equal to)</param>
		/// <param name="page_size">Number of records per page</param>
		/// <param name="page">Current page number</param>
		/// <param name="to">Filter by called number</param>
		/// <param name="from">Filter by source number</param>
		/// <param name="source_user">Filter by source user</param>
		/// <param name="destination_user">Filter by destination user</param>
		/// <param name="direction">Filter by call direction.</param>
		/// <returns>Success</returns>
		public async Task<CallLogsHalResponse> GetCallLogsAsync(string account_id, string start_gte, string start_lte, string end_gte, string end_lte, double page_size, double page, string to, string from, string source_user, string destination_user, GetCallLogsDirection direction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (account_id==null? "" : System.Uri.EscapeDataString(account_id))+"/call-logs&start:gte=" + (start_gte==null? "" : System.Uri.EscapeDataString(start_gte))+"&start:lte=" + (start_lte==null? "" : System.Uri.EscapeDataString(start_lte))+"&end:gte=" + (end_gte==null? "" : System.Uri.EscapeDataString(end_gte))+"&end:lte=" + (end_lte==null? "" : System.Uri.EscapeDataString(end_lte))+"&page_size="+page_size+"&page="+page+"&to=" + (to==null? "" : System.Uri.EscapeDataString(to))+"&from=" + (from==null? "" : System.Uri.EscapeDataString(from))+"&source_user=" + (source_user==null? "" : System.Uri.EscapeDataString(source_user))+"&destination_user=" + (destination_user==null? "" : System.Uri.EscapeDataString(destination_user))+"&direction=" + direction;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CallLogsHalResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum GetCallLogsDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Inbound")]
		Inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Outbound")]
		Outbound = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

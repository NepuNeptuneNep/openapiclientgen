//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendCommandResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StartSessionResult StartSession { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartTransactionResult StartTransaction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndSessionResult EndSession { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CommitTransactionResult CommitTransaction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AbortTransactionResult AbortTransaction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExecuteStatementResult ExecuteStatement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FetchPageResult FetchPage { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the started session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartSessionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SessionToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
	}
	
	/// <summary>
	/// Contains server-side performance information for a command. Amazon QLDB captures timing information between the times when it receives the request and when it sends the corresponding response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimingInformation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProcessingTimeMilliseconds { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the started transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartTransactionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TransactionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the ended session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndSessionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the committed transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CommitTransactionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TransactionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CommitDigest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IOUsage ConsumedIOs { get; set; }
	}
	
	/// <summary>
	/// Contains I/O usage metrics for a command that was invoked.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IOUsage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReadIOs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WriteIOs { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the aborted transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AbortTransactionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the executed statement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecuteStatementResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Page FirstPage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IOUsage ConsumedIOs { get; set; }
	}
	
	/// <summary>
	/// Contains details of the fetched page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Page
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ValueHolder[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A structure that can contain a value in multiple encoding formats.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValueHolder
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IonBinary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IonText { get; set; }
	}
	
	/// <summary>
	/// Contains the page that was fetched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FetchPageResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Page Page { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimingInformation TimingInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IOUsage ConsumedIOs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendCommandRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SessionToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartSessionRequest StartSession { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartTransactionRequest StartTransaction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndSessionRequest EndSession { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CommitTransactionRequest CommitTransaction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AbortTransactionRequest AbortTransaction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExecuteStatementRequest ExecuteStatement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FetchPageRequest FetchPage { get; set; }
	}
	
	/// <summary>
	/// Specifies a request to start a new session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartSessionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LedgerName { get; set; }
	}
	
	/// <summary>
	/// Specifies a request to start a transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartTransactionRequest
	{
	}
	
	/// <summary>
	/// Specifies a request to end the session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndSessionRequest
	{
	}
	
	/// <summary>
	/// Contains the details of the transaction to commit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CommitTransactionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TransactionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CommitDigest { get; set; }
	}
	
	/// <summary>
	/// Contains the details of the transaction to abort.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AbortTransactionRequest
	{
	}
	
	/// <summary>
	/// Specifies a request to execute a statement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecuteStatementRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TransactionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Statement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ValueHolder[] Parameters { get; set; }
	}
	
	/// <summary>
	/// Specifies the details of the page to be fetched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FetchPageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TransactionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidSessionException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OccConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RateExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CapacityExceededException
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Sends a command to an Amazon QLDB ledger.</p> <note> <p>Instead of interacting directly with this API, we recommend using the QLDB driver or the QLDB shell to execute data transactions on a ledger.</p> <ul> <li> <p>If you are working with an AWS SDK, use the QLDB driver. The driver provides a high-level abstraction layer above this <i>QLDB Session</i> data plane and manages <code>SendCommand</code> API calls for you. For information and a list of supported programming languages, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/getting-started-driver.html">Getting started with the driver</a> in the <i>Amazon QLDB Developer Guide</i>.</p> </li> <li> <p>If you are working with the AWS Command Line Interface (AWS CLI), use the QLDB shell. The shell is a command line interface that uses the QLDB driver to interact with a ledger. For information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/data-shell.html">Accessing Amazon QLDB using the QLDB shell</a>.</p> </li> </ul> </note>
		/// SendCommand #X-Amz-Target=QLDBSession.SendCommand
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SendCommandResult> SendCommandAsync(SendCommandRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=QLDBSession.SendCommand";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SendCommandResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum SendCommandX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QLDBSession.SendCommand")]
		QLDBSession_SendCommand = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

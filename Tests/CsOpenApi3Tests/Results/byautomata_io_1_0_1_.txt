//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Article
	{
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pubdate")]
		public string Pubdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ContentProCompany
	{
		
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public string Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="industry")]
		public string Industry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linkedin")]
		public string Linkedin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="twitter")]
		public string Twitter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ContentProSnippets
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string[] Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string[] Text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string[] Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InputCompany
	{
		
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public string Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="industry")]
		public string Industry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linkedin")]
		public string Linkedin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="twitter")]
		public string Twitter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SimilarCompany
	{
		
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public string Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="industry")]
		public string Industry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linkedin")]
		public string Linkedin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="twitter")]
		public string Twitter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SimilarCompanySearch
	{
		
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public string Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="industry")]
		public string Industry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linkedin")]
		public string Linkedin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="snippets")]
		public Snippet[] Snippets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="twitter")]
		public string Twitter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Snippet
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string[] Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string[] Text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string[] Title { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Send search terms to receive the most relevant articles and companies.
		/// Contentpro_searchGetByTerms contentpro-search
		/// </summary>
		/// <param name="terms">We provide information about related companies and articles based on the search terms you provide. Separate search terms with commas. Ex. https://api.byautomata.io/contentpro-search?terms=cloud+computing,enterprise,security</param>
		/// <returns>A successful operation</returns>
		public async Task<Contentpro_searchGetByTermsReturn> Contentpro_searchGetByTermsAsync(Contentpro_searchGetByTermsTerms terms, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contentpro-search?terms=" + terms;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Contentpro_searchGetByTermsReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// The /contentpro-similar-text endpoint accepts and arbitrary piece of text and returns similar articles and blogs written by companies.
		/// Contentpro_similar_textPost contentpro-similar-text
		/// </summary>
		/// <param name="requestBody">We'll provide information about related companies and articles based on the text you provide.</param>
		/// <returns>A successful operation</returns>
		public async Task<Contentpro_similar_textPostReturn> Contentpro_similar_textPostAsync(Contentpro_similar_textPostPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contentpro-similar-text";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Contentpro_similar_textPostReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Send search terms to receive the most relevant companies along with text snippets.
		/// SearchGetByTermsAndPage search
		/// </summary>
		/// <param name="terms">We provide information about related companies based on the search terms you provide. Separate search terms with commas. Ex. https://api.byautomata.io/search?link=cloud+computing,enterprise,security</param>
		/// <param name="page">Page number of search results. Ex. https://api.byautomata.io/search?page=0&link=cloud+computing,enterprise,security</param>
		/// <returns>A successful operation</returns>
		public async Task<SearchGetByTermsAndPageReturn> SearchGetByTermsAndPageAsync(SearchGetByTermsAndPageTerms terms, SearchGetByTermsAndPagePage page, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search?terms=" + terms+"&page=" + page;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchGetByTermsAndPageReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Send a company website to receive a list of companies related to them.
		/// SimilarGetByLinkAndPage similar
		/// </summary>
		/// <param name="link">We'll provide information about related companies based on the site you provide. If a LinkedIn page is sent, we will try to identify the company related to the page. Ex. https://api.byautomata.io/similar?link=ibm.com</param>
		/// <param name="page">Page number of search results. Ex. https://api.byautomata.io/similar?link=ibm.com&page=1</param>
		/// <returns>A successful operation</returns>
		public async Task<SimilarGetByLinkAndPageReturn> SimilarGetByLinkAndPageAsync(SimilarGetByLinkAndPageLink link, SimilarGetByLinkAndPagePage page, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "similar?link=" + link+"&page=" + page;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SimilarGetByLinkAndPageReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class Contentpro_searchGetByTermsTerms
	{
		
		/// <summary>
		/// Comma separated list of search terms. Ex. terms=cloud+computing,enterprise,security
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
	}
	
	public class Contentpro_searchGetByTermsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="calls_per_month")]
		public string Calls_per_month { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count_remaining")]
		public string Count_remaining { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Contentpro_searchGetByTermsReturnData[] Contentpro_searchGetByTermsReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renewal_date")]
		public string Renewal_date { get; set; }
	}
	
	public class Contentpro_searchGetByTermsReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="article")]
		public Article Article { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company")]
		public ContentProCompany Company { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="snippets")]
		public ContentProSnippets Snippets { get; set; }
	}
	
	public class Contentpro_similar_textPostPostBody
	{
		
		/// <summary>
		/// Any piece of text
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class Contentpro_similar_textPostReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="calls_per_month")]
		public string Calls_per_month { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count_remaining")]
		public string Count_remaining { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Contentpro_similar_textPostReturnData[] Contentpro_similar_textPostReturnData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renewal_date")]
		public string Renewal_date { get; set; }
	}
	
	public class Contentpro_similar_textPostReturnData
	{
		
		[System.Runtime.Serialization.DataMember(Name="article")]
		public Article Article { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company")]
		public ContentProCompany Company { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="snippets")]
		public ContentProSnippets Snippets { get; set; }
	}
	
	public class SearchGetByTermsAndPageTerms
	{
		
		/// <summary>
		/// Comma separated list of search terms. Ex. terms=cloud+computing,enterprise,security
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
	}
	
	public class SearchGetByTermsAndPagePage
	{
		
		/// <summary>
		/// Results are returned in batches of approximately 15 companies. Use the page parameter to page through results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
	}
	
	public class SearchGetByTermsAndPageReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="calls_per_month")]
		public string Calls_per_month { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="companies")]
		public SimilarCompanySearch[] Companies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count_remaining")]
		public string Count_remaining { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renewal_date")]
		public string Renewal_date { get; set; }
	}
	
	public class SimilarGetByLinkAndPageLink
	{
		
		/// <summary>
		/// Any company website. Ex. apple.com
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
	}
	
	public class SimilarGetByLinkAndPagePage
	{
		
		/// <summary>
		/// Results are returned in batches of approximately 10 companies. Use the page parameter to page through results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
	}
	
	public class SimilarGetByLinkAndPageReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="calls_per_month")]
		public string Calls_per_month { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="companies")]
		public SimilarCompany[] Companies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count_remaining")]
		public string Count_remaining { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="input_company")]
		public InputCompany Input_company { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renewal_date")]
		public string Renewal_date { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateComputeEnvironmentResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentName")]
		public string ComputeEnvironmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentArn")]
		public string ComputeEnvironmentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CRType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FARGATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FARGATE_SPOT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CRAllocationStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEST_FIT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEST_FIT_PROGRESSIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT_CAPACITY_OPTIMIZED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT_PRICE_CAPACITY_OPTIMIZED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagsMap
	{
	}
	
	/// <summary>
	/// <p>An object that represents a launch template that's associated with a compute resource. You must specify either the launch template ID or launch template name in the request, but not both.</p> <p>If security groups are specified using both the <code>securityGroupIds</code> parameter of <code>CreateComputeEnvironment</code> and the launch template, the values in the <code>securityGroupIds</code> parameter of <code>CreateComputeEnvironment</code> will be used.</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LaunchTemplateSpecification
	{
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplateId")]
		public string LaunchTemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplateName")]
		public string LaunchTemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// <p>Provides information used to select Amazon Machine Images (AMIs) for instances in the compute environment. If <code>Ec2Configuration</code> isn't specified, the default is <code>ECS_AL2</code> (<a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami">Amazon Linux 2</a>).</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ec2Configuration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="imageType")]
		public string ImageType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageIdOverride")]
		public string ImageIdOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageKubernetesVersion")]
		public string ImageKubernetesVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobQueueResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueueName")]
		public string JobQueueName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueueArn")]
		public string JobQueueArn { get; set; }
	}
	
	/// <summary>
	/// <p>The order that compute environments are tried in for job placement within a queue. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>); EC2 and Fargate compute environments can't be mixed.</p> <note> <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComputeEnvironmentOrder
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="order")]
		public int Order { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironment")]
		public string ComputeEnvironment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSchedulingPolicyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Specifies the weights for the fair share identifiers for the fair share policy. Fair share identifiers that aren't included have a default weight of <code>1.0</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShareAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shareIdentifier")]
		public string ShareIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weightFactor")]
		public float WeightFactor { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteComputeEnvironmentResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJobQueueResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSchedulingPolicyResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterJobDefinitionResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeComputeEnvironmentsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironments")]
		public ComputeEnvironmentDetail[] ComputeEnvironments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object that represents an Batch compute environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComputeEnvironmentDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentName")]
		public string ComputeEnvironmentName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentArn")]
		public string ComputeEnvironmentArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unmanagedvCpus")]
		public System.Nullable<System.Int32> UnmanagedvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ecsClusterArn")]
		public string EcsClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CEType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public CEStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeResources")]
		public ComputeResource ComputeResources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceRole")]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updatePolicy")]
		public UpdatePolicy UpdatePolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksConfiguration")]
		public EksConfiguration EksConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerOrchestrationType")]
		public OrchestrationType ContainerOrchestrationType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uuid")]
		public string Uuid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagrisTagsMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CEType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNMANAGED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CEState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CEStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALID = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 5,
	}
	
	/// <summary>
	/// An object that represents an Batch compute resource. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute environments</a> in the <i>Batch User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComputeResource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CRType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allocationStrategy")]
		public CRAllocationStrategy AllocationStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minvCpus")]
		public System.Nullable<System.Int32> MinvCpus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxvCpus")]
		public int MaxvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredvCpus")]
		public System.Nullable<System.Int32> DesiredvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2KeyPair")]
		public string Ec2KeyPair { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceRole")]
		public string InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="placementGroup")]
		public string PlacementGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bidPercentage")]
		public System.Nullable<System.Int32> BidPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="spotIamFleetRole")]
		public string SpotIamFleetRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2Configuration")]
		public Ec2Configuration[] Ec2Configuration { get; set; }
	}
	
	/// <summary>
	/// Specifies the infrastructure update policy for the compute environment. For more information about infrastructure updates, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="terminateJobsOnUpdate")]
		public System.Nullable<System.Boolean> TerminateJobsOnUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobExecutionTimeoutMinutes")]
		public System.Nullable<System.Int32> JobExecutionTimeoutMinutes { get; set; }
	}
	
	/// <summary>
	/// Configuration for the Amazon EKS cluster that supports the Batch compute environment. The cluster must exist before the compute environment can be created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="eksClusterArn")]
		public string EksClusterArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kubernetesNamespace")]
		public string KubernetesNamespace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OrchestrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EKS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobDefinitionsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobDefinitions")]
		public JobDefinition[] JobDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object that represents an Batch job definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionName")]
		public string JobDefinitionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionArn")]
		public string JobDefinitionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public int Revision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPriority")]
		public System.Nullable<System.Int32> SchedulingPriority { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ParametersMap Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryStrategy")]
		public RetryStrategy RetryStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerProperties")]
		public ContainerProperties ContainerProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public JobTimeout Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeProperties")]
		public NodeProperties NodeProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propagateTags")]
		public System.Nullable<System.Boolean> PropagateTags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platformCapabilities")]
		public PlatformCapability[] PlatformCapabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksProperties")]
		public EksProperties EksProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerOrchestrationType")]
		public OrchestrationType ContainerOrchestrationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParametersMap
	{
	}
	
	/// <summary>
	/// The retry strategy that's associated with a job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html">Automated job retries</a> in the <i>Batch User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryStrategy
	{
		
		[System.Runtime.Serialization.DataMember(Name="attempts")]
		public System.Nullable<System.Int32> Attempts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluateOnExit")]
		public EvaluateOnExit[] EvaluateOnExit { get; set; }
	}
	
	/// <summary>
	/// Specifies an array of up to 5 conditions to be met, and an action to take (<code>RETRY</code> or <code>EXIT</code>) if all conditions are met. If none of the <code>EvaluateOnExit</code> conditions in a <code>RetryStrategy</code> match, then the job is retried.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluateOnExit
	{
		
		[System.Runtime.Serialization.DataMember(Name="onStatusReason")]
		public string OnStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="onReason")]
		public string OnReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="onExitCode")]
		public string OnExitCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action")]
		public RetryAction Action { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RetryAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETRY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXIT = 1,
	}
	
	/// <summary>
	/// Container properties are used for Amazon ECS based job definitions. These properties to describe the container that's launched as part of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vcpus")]
		public System.Nullable<System.Int32> Vcpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobRoleArn")]
		public string JobRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public Volume[] Volumes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public KeyValuePair[] Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mountPoints")]
		public MountPoint[] MountPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="readonlyRootFilesystem")]
		public System.Nullable<System.Boolean> ReadonlyRootFilesystem { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privileged")]
		public System.Nullable<System.Boolean> Privileged { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ulimits")]
		public Ulimit[] Ulimits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user")]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceRequirements")]
		public ResourceRequirement[] ResourceRequirements { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linuxParameters")]
		public LinuxParameters LinuxParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logConfiguration")]
		public LogConfiguration LogConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secrets")]
		public Secret[] Secrets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkConfiguration")]
		public NetworkConfiguration NetworkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fargatePlatformConfiguration")]
		public FargatePlatformConfiguration FargatePlatformConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ephemeralStorage")]
		public EphemeralStorage EphemeralStorage { get; set; }
		
		/// <summary>
		/// An object that represents the compute environment architecture for Batch jobs on Fargate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimePlatform")]
		public RuntimePlatform RuntimePlatform { get; set; }
	}
	
	/// <summary>
	/// A data volume that's used in a job's container properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Volume
	{
		
		[System.Runtime.Serialization.DataMember(Name="host")]
		public Host Host { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="efsVolumeConfiguration")]
		public EFSVolumeConfiguration EfsVolumeConfiguration { get; set; }
	}
	
	/// <summary>
	/// Determine whether your data volume persists on the host container instance and where it's stored. If this parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data isn't guaranteed to persist after the containers that are associated with it stop running.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Host
	{
		
		[System.Runtime.Serialization.DataMember(Name="sourcePath")]
		public string SourcePath { get; set; }
	}
	
	/// <summary>
	/// This is used when you're using an Amazon Elastic File System file system for job storage. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/efs-volumes.html">Amazon EFS Volumes</a> in the <i>Batch User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EFSVolumeConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileSystemId")]
		public string FileSystemId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rootDirectory")]
		public string RootDirectory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transitEncryption")]
		public CEState TransitEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transitEncryptionPort")]
		public System.Nullable<System.Int32> TransitEncryptionPort { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="authorizationConfig")]
		public EFSAuthorizationConfig AuthorizationConfig { get; set; }
	}
	
	/// <summary>
	/// The authorization configuration details for the Amazon EFS file system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EFSAuthorizationConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="accessPointId")]
		public string AccessPointId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iam")]
		public CEState Iam { get; set; }
	}
	
	/// <summary>
	/// A key-value pair object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KeyValuePair
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Details for a Docker volume mount point that's used in a job's container properties. This parameter maps to <code>Volumes</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.19/#create-a-container">Create a container</a> section of the <i>Docker Remote API</i> and the <code>--volume</code> option to docker run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MountPoint
	{
		
		[System.Runtime.Serialization.DataMember(Name="containerPath")]
		public string ContainerPath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceVolume")]
		public string SourceVolume { get; set; }
	}
	
	/// <summary>
	/// <p>The <code>ulimit</code> settings to pass to the container.</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ulimit
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hardLimit")]
		public int HardLimit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="softLimit")]
		public int SoftLimit { get; set; }
	}
	
	/// <summary>
	/// The type and amount of a resource to assign to a container. The supported resources include <code>GPU</code>, <code>MEMORY</code>, and <code>VCPU</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceRequirement
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public ResourceType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GPU = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VCPU = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMORY = 2,
	}
	
	/// <summary>
	/// Linux-specific modifications that are applied to the container, such as details for device mappings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinuxParameters
	{
		
		[System.Runtime.Serialization.DataMember(Name="devices")]
		public Device[] Devices { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="initProcessEnabled")]
		public System.Nullable<System.Boolean> InitProcessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sharedMemorySize")]
		public System.Nullable<System.Int32> SharedMemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tmpfs")]
		public Tmpfs[] Tmpfs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxSwap")]
		public System.Nullable<System.Int32> MaxSwap { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="swappiness")]
		public System.Nullable<System.Int32> Swappiness { get; set; }
	}
	
	/// <summary>
	/// <p>An object that represents a container instance host device.</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources and shouldn't be provided.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Device
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hostPath")]
		public string HostPath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerPath")]
		public string ContainerPath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public DeviceCgroupPermission[] Permissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceCgroupPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKNOD = 2,
	}
	
	/// <summary>
	/// <p>The container path, mount options, and size of the <code>tmpfs</code> mount.</p> <note> <p>This object isn't applicable to jobs that are running on Fargate resources.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tmpfs
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="containerPath")]
		public string ContainerPath { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="size")]
		public int Size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mountOptions")]
		public string[] MountOptions { get; set; }
	}
	
	/// <summary>
	/// Log configuration options to send to a custom log driver for the container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logDriver")]
		public LogDriver LogDriver { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="options")]
		public LogConfigurationOptionsMap Options { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretOptions")]
		public Secret[] SecretOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogDriver
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="json-file")]
		jsonMinusfile = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		syslog = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		journald = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gelf = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fluentd = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		awslogs = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		splunk = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogConfigurationOptionsMap
	{
	}
	
	/// <summary>
	/// <p>An object that represents the secret to expose to your container. Secrets can be exposed to a container in the following ways:</p> <ul> <li> <p>To inject sensitive data into your containers as environment variables, use the <code>secrets</code> container definition parameter.</p> </li> <li> <p>To reference sensitive information in the log configuration of a container, use the <code>secretOptions</code> container definition parameter.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying sensitive data</a> in the <i>Batch User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Secret
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="valueFrom")]
		public string ValueFrom { get; set; }
	}
	
	/// <summary>
	/// The network configuration for jobs that are running on Fargate resources. Jobs that are running on EC2 resources must not specify this parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="assignPublicIp")]
		public CEState AssignPublicIp { get; set; }
	}
	
	/// <summary>
	/// The platform configuration for jobs that are running on Fargate resources. Jobs that run on EC2 resources must not specify this parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FargatePlatformConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="platformVersion")]
		public string PlatformVersion { get; set; }
	}
	
	/// <summary>
	/// The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EphemeralStorage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sizeInGiB")]
		public int SizeInGiB { get; set; }
	}
	
	/// <summary>
	/// An object that represents the compute environment architecture for Batch jobs on Fargate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuntimePlatform
	{
		
		[System.Runtime.Serialization.DataMember(Name="operatingSystemFamily")]
		public string OperatingSystemFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cpuArchitecture")]
		public string CpuArchitecture { get; set; }
	}
	
	/// <summary>
	/// An object that represents a job timeout configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobTimeout
	{
		
		[System.Runtime.Serialization.DataMember(Name="attemptDurationSeconds")]
		public System.Nullable<System.Int32> AttemptDurationSeconds { get; set; }
	}
	
	/// <summary>
	/// <p>An object that represents the node properties of a multi-node parallel job.</p> <note> <p>Node properties can't be specified for Amazon EKS based job definitions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodeProperties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numNodes")]
		public int NumNodes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mainNode")]
		public int MainNode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nodeRangeProperties")]
		public NodeRangeProperty[] NodeRangeProperties { get; set; }
	}
	
	/// <summary>
	/// An object that represents the properties of the node range for a multi-node parallel job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodeRangeProperty
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetNodes")]
		public string TargetNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="container")]
		public ContainerProperties Container { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PlatformCapability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FARGATE = 1,
	}
	
	/// <summary>
	/// An object that contains the properties for the Kubernetes resources of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="podProperties")]
		public EksPodProperties PodProperties { get; set; }
	}
	
	/// <summary>
	/// The properties for the pod.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksPodProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceAccountName")]
		public string ServiceAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hostNetwork")]
		public System.Nullable<System.Boolean> HostNetwork { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dnsPolicy")]
		public string DnsPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public EksContainer[] Containers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public EksVolume[] Volumes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public EksMetadata Metadata { get; set; }
	}
	
	/// <summary>
	/// EKS container properties are used in job definitions for Amazon EKS based job definitions to describe the properties for a container node in the pod that's launched as part of a job. This can't be specified for Amazon ECS based job definitions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainer
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imagePullPolicy")]
		public string ImagePullPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="env")]
		public EksContainerEnvironmentVariable[] Env { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public EksContainerResourceRequirements Resources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeMounts")]
		public EksContainerVolumeMount[] VolumeMounts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityContext")]
		public EksContainerSecurityContext SecurityContext { get; set; }
	}
	
	/// <summary>
	/// An environment variable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainerEnvironmentVariable
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The type and amount of resources to assign to a container. The supported resources include <code>memory</code>, <code>cpu</code>, and <code>nvidia.com/gpu</code>. For more information, see <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">Resource management for pods and containers</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainerResourceRequirements
	{
		
		[System.Runtime.Serialization.DataMember(Name="limits")]
		public EksLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public EksRequests Requests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksLimits
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksRequests
	{
	}
	
	/// <summary>
	/// The volume mounts for a container for an Amazon EKS job. For more information about volumes and volume mounts in Kubernetes, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volumes</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainerVolumeMount
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mountPath")]
		public string MountPath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
	}
	
	/// <summary>
	/// The security context for a job. For more information, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">Configure a security context for a pod or container</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainerSecurityContext
	{
		
		[System.Runtime.Serialization.DataMember(Name="runAsUser")]
		public System.Nullable<System.Int32> RunAsUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="runAsGroup")]
		public System.Nullable<System.Int32> RunAsGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privileged")]
		public System.Nullable<System.Boolean> Privileged { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="readOnlyRootFilesystem")]
		public System.Nullable<System.Boolean> ReadOnlyRootFilesystem { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="runAsNonRoot")]
		public System.Nullable<System.Boolean> RunAsNonRoot { get; set; }
	}
	
	/// <summary>
	/// Specifies an Amazon EKS volume for a job definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksVolume
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hostPath")]
		public EksHostPath HostPath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emptyDir")]
		public EksEmptyDir EmptyDir { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public EksSecret Secret { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration of a Kubernetes <code>hostPath</code> volume. A <code>hostPath</code> volume mounts an existing file or directory from the host node's filesystem into your pod. For more information, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#hostpath">hostPath</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksHostPath
	{
		
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration of a Kubernetes <code>emptyDir</code> volume. An <code>emptyDir</code> volume is first created when a pod is assigned to a node. It exists as long as that pod is running on that node. The <code>emptyDir</code> volume is initially empty. All containers in the pod can read and write the files in the <code>emptyDir</code> volume. However, the <code>emptyDir</code> volume can be mounted at the same or different paths in each container. When a pod is removed from a node for any reason, the data in the <code>emptyDir</code> is deleted permanently. For more information, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#emptydir">emptyDir</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksEmptyDir
	{
		
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public string Medium { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sizeLimit")]
		public string SizeLimit { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration of a Kubernetes <code>secret</code> volume. For more information, see <a href="https://kubernetes.io/docs/concepts/storage/volumes/#secret">secret</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksSecret
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="optional")]
		public System.Nullable<System.Boolean> Optional { get; set; }
	}
	
	/// <summary>
	/// Describes and uniquely identifies Kubernetes resources. For example, the compute environment that a pod runs in or the <code>jobID</code> for a job running in the pod. For more information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">Understanding Kubernetes Objects</a> in the <i>Kubernetes documentation</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksMetadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public EksLabelsMap Labels { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksLabelsMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobQueuesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobQueues")]
		public JobQueueDetail[] JobQueues { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object that represents the details for an Batch job queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobQueueDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueueName")]
		public string JobQueueName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueueArn")]
		public string JobQueueArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicyArn")]
		public string SchedulingPolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public CEStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public int Priority { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentOrder")]
		public ComputeEnvironmentOrder[] ComputeEnvironmentOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public JobDetail[] Jobs { get; set; }
	}
	
	/// <summary>
	/// An object that represents an Batch job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public JobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shareIdentifier")]
		public string ShareIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPriority")]
		public System.Nullable<System.Int32> SchedulingPriority { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="attempts")]
		public AttemptDetail[] Attempts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.Nullable<System.Int32> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryStrategy")]
		public RetryStrategy RetryStrategy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startedAt")]
		public int StartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stoppedAt")]
		public System.Nullable<System.Int32> StoppedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dependsOn")]
		public JobDependency[] DependsOn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinition")]
		public string JobDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ParametersMap Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="container")]
		public ContainerDetail Container { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeDetails")]
		public NodeDetails NodeDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeProperties")]
		public NodeProperties NodeProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arrayProperties")]
		public ArrayPropertiesDetail ArrayProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public JobTimeout Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propagateTags")]
		public System.Nullable<System.Boolean> PropagateTags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platformCapabilities")]
		public PlatformCapability[] PlatformCapabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksProperties")]
		public EksPropertiesDetail EksProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksAttempts")]
		public EksAttemptDetail[] EksAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isCancelled")]
		public System.Nullable<System.Boolean> IsCancelled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isTerminated")]
		public System.Nullable<System.Boolean> IsTerminated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 6,
	}
	
	/// <summary>
	/// An object that represents a job attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttemptDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="container")]
		public AttemptContainerDetail Container { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startedAt")]
		public System.Nullable<System.Int32> StartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stoppedAt")]
		public System.Nullable<System.Int32> StoppedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
	}
	
	/// <summary>
	/// An object that represents the details of a container that's part of a job attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttemptContainerDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="containerInstanceArn")]
		public string ContainerInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="taskArn")]
		public string TaskArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exitCode")]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logStreamName")]
		public string LogStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkInterfaces")]
		public NetworkInterface[] NetworkInterfaces { get; set; }
	}
	
	/// <summary>
	/// An object that represents the elastic network interface for a multi-node parallel job node.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkInterface
	{
		
		[System.Runtime.Serialization.DataMember(Name="attachmentId")]
		public string AttachmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ipv6Address")]
		public string Ipv6Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privateIpv4Address")]
		public string PrivateIpv4Address { get; set; }
	}
	
	/// <summary>
	/// An object that represents an Batch job dependency.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobDependency
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public ArrayJobDependency Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ArrayJobDependency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		N_TO_N = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEQUENTIAL = 1,
	}
	
	/// <summary>
	/// An object that represents the details of a container that's part of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vcpus")]
		public System.Nullable<System.Int32> Vcpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobRoleArn")]
		public string JobRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public Volume[] Volumes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public KeyValuePair[] Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mountPoints")]
		public MountPoint[] MountPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="readonlyRootFilesystem")]
		public System.Nullable<System.Boolean> ReadonlyRootFilesystem { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ulimits")]
		public Ulimit[] Ulimits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privileged")]
		public System.Nullable<System.Boolean> Privileged { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user")]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exitCode")]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerInstanceArn")]
		public string ContainerInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="taskArn")]
		public string TaskArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logStreamName")]
		public string LogStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkInterfaces")]
		public NetworkInterface[] NetworkInterfaces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceRequirements")]
		public ResourceRequirement[] ResourceRequirements { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linuxParameters")]
		public LinuxParameters LinuxParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logConfiguration")]
		public LogConfiguration LogConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secrets")]
		public Secret[] Secrets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkConfiguration")]
		public NetworkConfiguration NetworkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fargatePlatformConfiguration")]
		public FargatePlatformConfiguration FargatePlatformConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ephemeralStorage")]
		public EphemeralStorage EphemeralStorage { get; set; }
		
		/// <summary>
		/// An object that represents the compute environment architecture for Batch jobs on Fargate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimePlatform")]
		public RuntimePlatform RuntimePlatform { get; set; }
	}
	
	/// <summary>
	/// An object that represents the details of a multi-node parallel job node.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodeDetails
	{
		
		[System.Runtime.Serialization.DataMember(Name="nodeIndex")]
		public System.Nullable<System.Int32> NodeIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isMainNode")]
		public System.Nullable<System.Boolean> IsMainNode { get; set; }
	}
	
	/// <summary>
	/// An object that represents the array properties of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArrayPropertiesDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="statusSummary")]
		public ArrayJobStatusSummary StatusSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArrayJobStatusSummary
	{
	}
	
	/// <summary>
	/// An object that contains the details for the Kubernetes resources of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksPropertiesDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="podProperties")]
		public EksPodPropertiesDetail PodProperties { get; set; }
	}
	
	/// <summary>
	/// The details for the pod.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksPodPropertiesDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceAccountName")]
		public string ServiceAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hostNetwork")]
		public System.Nullable<System.Boolean> HostNetwork { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dnsPolicy")]
		public string DnsPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public EksContainerDetail[] Containers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public EksVolume[] Volumes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="podName")]
		public string PodName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeName")]
		public string NodeName { get; set; }
		
		/// <summary>
		/// Describes and uniquely identifies Kubernetes resources. For example, the compute environment that a pod runs in or the <code>jobID</code> for a job running in the pod. For more information, see <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/">Understanding Kubernetes Objects</a> in the <i>Kubernetes documentation</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public EksMetadata Metadata { get; set; }
	}
	
	/// <summary>
	/// The details for container properties that are returned by <code>DescribeJobs</code> for jobs that use Amazon EKS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainerDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imagePullPolicy")]
		public string ImagePullPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="env")]
		public EksContainerEnvironmentVariable[] Env { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public EksContainerResourceRequirements Resources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exitCode")]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeMounts")]
		public EksContainerVolumeMount[] VolumeMounts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityContext")]
		public EksContainerSecurityContext SecurityContext { get; set; }
	}
	
	/// <summary>
	/// An object that represents the details of a job attempt for a job attempt by an Amazon EKS container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksAttemptDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public EksAttemptContainerDetail[] Containers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="podName")]
		public string PodName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeName")]
		public string NodeName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startedAt")]
		public System.Nullable<System.Int32> StartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stoppedAt")]
		public System.Nullable<System.Int32> StoppedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
	}
	
	/// <summary>
	/// An object that represents the details for an attempt for a job attempt that an Amazon EKS container runs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksAttemptContainerDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="exitCode")]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSchedulingPoliciesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicies")]
		public SchedulingPolicyDetail[] SchedulingPolicies { get; set; }
	}
	
	/// <summary>
	/// An object that represents a scheduling policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SchedulingPolicyDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fairsharePolicy")]
		public FairsharePolicy FairsharePolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// The fair share policy for a scheduling policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FairsharePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="shareDecaySeconds")]
		public System.Nullable<System.Int32> ShareDecaySeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeReservation")]
		public System.Nullable<System.Int32> ComputeReservation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shareDistribution")]
		public ShareAttributes[] ShareDistribution { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobSummaryList")]
		public JobSummary[] JobSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object that represents summary details of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.Nullable<System.Int32> CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public JobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startedAt")]
		public System.Nullable<System.Int32> StartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stoppedAt")]
		public System.Nullable<System.Int32> StoppedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="container")]
		public ContainerSummary Container { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arrayProperties")]
		public ArrayPropertiesSummary ArrayProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeProperties")]
		public NodePropertiesSummary NodeProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobDefinition")]
		public string JobDefinition { get; set; }
	}
	
	/// <summary>
	/// An object that represents summary details of a container within a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="exitCode")]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// An object that represents the array properties of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArrayPropertiesSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
	}
	
	/// <summary>
	/// An object that represents the properties of a node that's associated with a multi-node parallel job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodePropertiesSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="isMainNode")]
		public System.Nullable<System.Boolean> IsMainNode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numNodes")]
		public System.Nullable<System.Int32> NumNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeIndex")]
		public System.Nullable<System.Int32> NodeIndex { get; set; }
	}
	
	/// <summary>
	/// A filter name and value pair that's used to return a more specific list of results from a <code>ListJobs</code> API operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KeyValuesPair
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSchedulingPoliciesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicies")]
		public SchedulingPolicyListingDetail[] SchedulingPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object that contains the details of a scheduling policy that's returned in a <code>ListSchedulingPolicy</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SchedulingPolicyListingDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterJobDefinitionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionName")]
		public string JobDefinitionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionArn")]
		public string JobDefinitionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public int Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubmitJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// The object that represents any node overrides to a job definition that's used in a <a>SubmitJob</a> API operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodePropertyOverride
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetNodes")]
		public string TargetNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerOverrides")]
		public ContainerOverrides ContainerOverrides { get; set; }
	}
	
	/// <summary>
	/// <p>The overrides that should be sent to a container.</p> <p>For information about using Batch overrides when you connect event sources to targets, see <a href="https://docs.aws.amazon.com/eventbridge/latest/pipes-reference/API_BatchContainerOverrides.html">BatchContainerOverrides</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="vcpus")]
		public System.Nullable<System.Int32> Vcpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public KeyValuePair[] Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceRequirements")]
		public ResourceRequirement[] ResourceRequirements { get; set; }
	}
	
	/// <summary>
	/// An object that contains overrides for the Kubernetes pod properties of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksPodPropertiesOverride
	{
		
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public EksContainerOverride[] Containers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public EksMetadata Metadata { get; set; }
	}
	
	/// <summary>
	/// Object representing any Kubernetes overrides to a job definition that's used in a <a>SubmitJob</a> API operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksContainerOverride
	{
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="env")]
		public EksContainerEnvironmentVariable[] Env { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public EksContainerResourceRequirements Resources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerminateJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateComputeEnvironmentResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentName")]
		public string ComputeEnvironmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentArn")]
		public string ComputeEnvironmentArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CRUpdateAllocationStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEST_FIT_PROGRESSIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT_CAPACITY_OPTIMIZED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT_PRICE_CAPACITY_OPTIMIZED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJobQueueResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobQueueName")]
		public string JobQueueName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobQueueArn")]
		public string JobQueueArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSchedulingPolicyResponse
	{
	}
	
	/// <summary>
	/// An object that represents an Batch array job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArrayProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssignPublicIp
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Contains the parameters for <code>CancelJob</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// An object that represents the attributes of a compute environment that can be updated. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComputeResourceUpdate
	{
		
		[System.Runtime.Serialization.DataMember(Name="minvCpus")]
		public System.Nullable<System.Int32> MinvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxvCpus")]
		public System.Nullable<System.Int32> MaxvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredvCpus")]
		public System.Nullable<System.Int32> DesiredvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allocationStrategy")]
		public CRUpdateAllocationStrategy AllocationStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2KeyPair")]
		public string Ec2KeyPair { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceRole")]
		public string InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="placementGroup")]
		public string PlacementGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bidPercentage")]
		public System.Nullable<System.Int32> BidPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2Configuration")]
		public Ec2Configuration[] Ec2Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateToLatestImageVersion")]
		public System.Nullable<System.Boolean> UpdateToLatestImageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CRType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>CreateComputeEnvironment</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateComputeEnvironmentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentName")]
		public string ComputeEnvironmentName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CEType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unmanagedvCpus")]
		public System.Nullable<System.Int32> UnmanagedvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeResources")]
		public ComputeResource ComputeResources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceRole")]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksConfiguration")]
		public EksConfiguration EksConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JQState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Contains the parameters for <code>CreateJobQueue</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobQueueRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueueName")]
		public string JobQueueName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicyArn")]
		public string SchedulingPolicyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public int Priority { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentOrder")]
		public ComputeEnvironmentOrder[] ComputeEnvironmentOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>CreateSchedulingPolicy</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSchedulingPolicyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fairsharePolicy")]
		public FairsharePolicy FairsharePolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DeleteComputeEnvironment</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteComputeEnvironmentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironment")]
		public string ComputeEnvironment { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DeleteJobQueue</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJobQueueRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DeleteSchedulingPolicy</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSchedulingPolicyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterJobDefinitionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinition")]
		public string JobDefinition { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DescribeComputeEnvironments</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeComputeEnvironmentsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironments")]
		public string[] ComputeEnvironments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DescribeJobDefinitions</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobDefinitionsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobDefinitions")]
		public string[] JobDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionName")]
		public string JobDefinitionName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DescribeJobQueues</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobQueuesRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobQueues")]
		public string[] JobQueues { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DescribeJobs</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public string[] Jobs { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>DescribeSchedulingPolicies</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSchedulingPoliciesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arns")]
		public string[] Arns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EFSAuthorizationConfigIAM
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EFSTransitEncryption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// An object that contains overrides for the Kubernetes resources of a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EksPropertiesOverride
	{
		
		[System.Runtime.Serialization.DataMember(Name="podProperties")]
		public EksPodPropertiesOverride PodProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JQStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALID = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobDefinitionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		container = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multinode = 1,
	}
	
	/// <summary>
	/// Contains the parameters for <code>ListJobs</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arrayJobId")]
		public string ArrayJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="multiNodeJobId")]
		public string MultiNodeJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobStatus")]
		public JobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public KeyValuesPair[] Filters { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>ListSchedulingPolicies</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSchedulingPoliciesRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>ListTagsForResource</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	/// <summary>
	/// <p>An object that represents any node overrides to a job definition that's used in a <a>SubmitJob</a> API operation.</p> <note> <p>This parameter isn't applicable to jobs that are running on Fargate resources. Don't provide it for these jobs. Rather, use <code>containerOverrides</code> instead.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodeOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="numNodes")]
		public System.Nullable<System.Int32> NumNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodePropertyOverrides")]
		public NodePropertyOverride[] NodePropertyOverrides { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>RegisterJobDefinition</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterJobDefinitionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionName")]
		public string JobDefinitionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public JobDefinitionType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ParametersMap Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPriority")]
		public System.Nullable<System.Int32> SchedulingPriority { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerProperties")]
		public ContainerProperties ContainerProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeProperties")]
		public NodeProperties NodeProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryStrategy")]
		public RetryStrategy RetryStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propagateTags")]
		public System.Nullable<System.Boolean> PropagateTags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public JobTimeout Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platformCapabilities")]
		public PlatformCapability[] PlatformCapabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksProperties")]
		public EksProperties EksProperties { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>SubmitJob</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubmitJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shareIdentifier")]
		public string ShareIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPriorityOverride")]
		public System.Nullable<System.Int32> SchedulingPriorityOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arrayProperties")]
		public ArrayProperties ArrayProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dependsOn")]
		public JobDependency[] DependsOn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinition")]
		public string JobDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ParametersMap Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerOverrides")]
		public ContainerOverrides ContainerOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeOverrides")]
		public NodeOverrides NodeOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryStrategy")]
		public RetryStrategy RetryStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propagateTags")]
		public System.Nullable<System.Boolean> PropagateTags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public JobTimeout Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="eksPropertiesOverride")]
		public EksPropertiesOverride EksPropertiesOverride { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>TagResource</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagrisTagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>TerminateJob</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerminateJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>UntagResource</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	/// <summary>
	/// Contains the parameters for <code>UpdateComputeEnvironment</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateComputeEnvironmentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironment")]
		public string ComputeEnvironment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unmanagedvCpus")]
		public System.Nullable<System.Int32> UnmanagedvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeResources")]
		public ComputeResourceUpdate ComputeResources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceRole")]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updatePolicy")]
		public UpdatePolicy UpdatePolicy { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>UpdateJobQueue</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJobQueueRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicyArn")]
		public string SchedulingPolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentOrder")]
		public ComputeEnvironmentOrder[] ComputeEnvironmentOrder { get; set; }
	}
	
	/// <summary>
	/// Contains the parameters for <code>UpdateSchedulingPolicy</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSchedulingPolicyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fairsharePolicy")]
		public FairsharePolicy FairsharePolicy { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Cancels a job in an Batch job queue. Jobs that are in the <code>SUBMITTED</code> or <code>PENDING</code> are canceled. A job in<code>RUNNABLE</code> remains in <code>RUNNABLE</code> until it reaches the head of the job queue. Then the job status is updated to <code>FAILED</code>.</p> <note> <p>A <code>PENDING</code> job is canceled after all dependency jobs are completed. Therefore, it may take longer than expected to cancel a job in <code>PENDING</code> status.</p> <p>When you try to cancel an array parent job in <code>PENDING</code>, Batch attempts to cancel all child jobs. The array parent job is canceled when all child jobs are completed.</p> </note> <p>Jobs that progressed to the <code>STARTING</code> or <code>RUNNING</code> state aren't canceled. However, the API operation still succeeds, even if no job is canceled. These jobs must be terminated with the <a>TerminateJob</a> operation.</p>
		/// CancelJob v1/canceljob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelJobResponse> CancelJobAsync(CancelJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/canceljob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CancelJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Batch compute environment. You can create <code>MANAGED</code> or <code>UNMANAGED</code> compute environments. <code>MANAGED</code> compute environments can use Amazon EC2 or Fargate resources. <code>UNMANAGED</code> compute environments can only use EC2 resources.</p> <p>In a managed compute environment, Batch manages the capacity and instance types of the compute resources within the environment. This is based on the compute resource specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch template</a> that you specify when you create the compute environment. Either, you can choose to use EC2 On-Demand Instances and EC2 Spot Instances. Or, you can use Fargate and Fargate Spot capacity in your managed compute environment. You can optionally set a maximum price so that Spot Instances only launch when the Spot Instance price is less than a specified percentage of the On-Demand price.</p> <note> <p>Multi-node parallel jobs aren't supported on Spot Instances.</p> </note> <p>In an unmanaged compute environment, you can manage your own EC2 compute resources and have flexibility with how you configure your compute resources. For example, you can use custom AMIs. However, you must verify that each of your AMIs meet the Amazon ECS container instance AMI specification. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">container instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. After you created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a> operation to find the Amazon ECS cluster that's associated with it. Then, launch your container instances into that Amazon ECS cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching an Amazon ECS container instance</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <note> <p>To create a compute environment that uses EKS resources, the caller must have permissions to call <code>eks:DescribeCluster</code>.</p> </note> <note> <p>Batch doesn't automatically upgrade the AMIs in a compute environment after it's created. For example, it also doesn't update the AMIs in your compute environment when a newer version of the Amazon ECS optimized AMI is available. You're responsible for the management of the guest operating system. This includes any updates and security patches. You're also responsible for any additional application software or utilities that you install on the compute resources. There are two ways to use a new AMI for your Batch jobs. The original method is to complete these steps:</p> <ol> <li> <p>Create a new compute environment with the new AMI.</p> </li> <li> <p>Add the compute environment to an existing job queue.</p> </li> <li> <p>Remove the earlier compute environment from your job queue.</p> </li> <li> <p>Delete the earlier compute environment.</p> </li> </ol> <p>In April 2022, Batch added enhanced support for updating compute environments. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a>. To use the enhanced updating of compute environments to update AMIs, follow these rules:</p> <ul> <li> <p>Either don't set the service role (<code>serviceRole</code>) parameter or set it to the <b>AWSBatchServiceRole</b> service-linked role.</p> </li> <li> <p>Set the allocation strategy (<code>allocationStrategy</code>) parameter to <code>BEST_FIT_PROGRESSIVE</code>, <code>SPOT_CAPACITY_OPTIMIZED</code>, or <code>SPOT_PRICE_CAPACITY_OPTIMIZED</code>.</p> </li> <li> <p>Set the update to latest image version (<code>updateToLatestImageVersion</code>) parameter to <code>true</code>. The <code>updateToLatestImageVersion</code> parameter is used when you update a compute environment. This parameter is ignored when you create a compute environment.</p> </li> <li> <p>Don't specify an AMI ID in <code>imageId</code>, <code>imageIdOverride</code> (in <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_Ec2Configuration.html"> <code>ec2Configuration</code> </a>), or in the launch template (<code>launchTemplate</code>). In that case, Batch selects the latest Amazon ECS optimized AMI that's supported by Batch at the time the infrastructure update is initiated. Alternatively, you can specify the AMI ID in the <code>imageId</code> or <code>imageIdOverride</code> parameters, or the launch template identified by the <code>LaunchTemplate</code> properties. Changing any of these properties starts an infrastructure update. If the AMI ID is specified in the launch template, it can't be replaced by specifying an AMI ID in either the <code>imageId</code> or <code>imageIdOverride</code> parameters. It can only be replaced by specifying a different launch template, or if the launch template version is set to <code>$Default</code> or <code>$Latest</code>, by setting either a new default version for the launch template (if <code>$Default</code>) or by adding a new version to the launch template (if <code>$Latest</code>).</p> </li> </ul> <p>If these rules are followed, any update that starts an infrastructure update causes the AMI ID to be re-selected. If the <code>version</code> setting in the launch template (<code>launchTemplate</code>) is set to <code>$Latest</code> or <code>$Default</code>, the latest or default version of the launch template is evaluated up at the time of the infrastructure update, even if the <code>launchTemplate</code> wasn't updated.</p> </note>
		/// CreateComputeEnvironment v1/createcomputeenvironment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateComputeEnvironmentResponse> CreateComputeEnvironmentAsync(CreateComputeEnvironmentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/createcomputeenvironment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateComputeEnvironmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Batch job queue. When you create a job queue, you associate one or more compute environments to the queue and assign an order of preference for the compute environments.</p> <p>You also set a priority to the job queue that determines the order that the Batch scheduler places jobs onto its associated compute environments. For example, if a compute environment is associated with more than one job queue, the job queue with a higher priority is given preference for scheduling jobs to that compute environment.</p>
		/// CreateJobQueue v1/createjobqueue
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateJobQueueResponse> CreateJobQueueAsync(CreateJobQueuePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/createjobqueue";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateJobQueueResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an Batch scheduling policy.
		/// CreateSchedulingPolicy v1/createschedulingpolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSchedulingPolicyResponse> CreateSchedulingPolicyAsync(CreateSchedulingPolicyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/createschedulingpolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateSchedulingPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an Batch compute environment.</p> <p>Before you can delete a compute environment, you must set its state to <code>DISABLED</code> with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any job queues with the <a>UpdateJobQueue</a> API operation. Compute environments that use Fargate resources must terminate all active jobs on that compute environment before deleting the compute environment. If this isn't done, the compute environment enters an invalid state.</p>
		/// DeleteComputeEnvironment v1/deletecomputeenvironment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteComputeEnvironmentResponse> DeleteComputeEnvironmentAsync(DeleteComputeEnvironmentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/deletecomputeenvironment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteComputeEnvironmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified job queue. You must first disable submissions for a queue with the <a>UpdateJobQueue</a> operation. All jobs in the queue are eventually terminated when you delete a job queue. The jobs are terminated at a rate of about 16 jobs each second.</p> <p>It's not necessary to disassociate compute environments from a queue before submitting a <code>DeleteJobQueue</code> request.</p>
		/// DeleteJobQueue v1/deletejobqueue
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteJobQueueResponse> DeleteJobQueueAsync(DeleteJobQueuePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/deletejobqueue";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteJobQueueResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified scheduling policy.</p> <p>You can't delete a scheduling policy that's used in any job queues.</p>
		/// DeleteSchedulingPolicy v1/deleteschedulingpolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteSchedulingPolicyResponse> DeleteSchedulingPolicyAsync(DeleteSchedulingPolicyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/deleteschedulingpolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteSchedulingPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deregisters an Batch job definition. Job definitions are permanently deleted after 180 days.
		/// DeregisterJobDefinition v1/deregisterjobdefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeregisterJobDefinitionResponse> DeregisterJobDefinitionAsync(DeregisterJobDefinitionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/deregisterjobdefinition";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeregisterJobDefinitionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Describes one or more of your compute environments.</p> <p>If you're using an unmanaged compute environment, you can use the <code>DescribeComputeEnvironment</code> operation to determine the <code>ecsClusterArn</code> that you launch your Amazon ECS container instances into.</p>
		/// DescribeComputeEnvironments v1/describecomputeenvironments
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeComputeEnvironmentsResponse> DescribeComputeEnvironmentsAsync(string maxResults, string nextToken, DescribeComputeEnvironmentsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/describecomputeenvironments?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeComputeEnvironmentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a list of job definitions. You can specify a <code>status</code> (such as <code>ACTIVE</code>) to only return job definitions that match that status.
		/// DescribeJobDefinitions v1/describejobdefinitions
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeJobDefinitionsResponse> DescribeJobDefinitionsAsync(string maxResults, string nextToken, DescribeJobDefinitionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/describejobdefinitions?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeJobDefinitionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes one or more of your job queues.
		/// DescribeJobQueues v1/describejobqueues
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeJobQueuesResponse> DescribeJobQueuesAsync(string maxResults, string nextToken, DescribeJobQueuesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/describejobqueues?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeJobQueuesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a list of Batch jobs.
		/// DescribeJobs v1/describejobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeJobsResponse> DescribeJobsAsync(DescribeJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/describejobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes one or more of your scheduling policies.
		/// DescribeSchedulingPolicies v1/describeschedulingpolicies
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSchedulingPoliciesResponse> DescribeSchedulingPoliciesAsync(DescribeSchedulingPoliciesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/describeschedulingpolicies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeSchedulingPoliciesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of Batch jobs.</p> <p>You must specify only one of the following items:</p> <ul> <li> <p>A job queue ID to return a list of jobs in that job queue</p> </li> <li> <p>A multi-node parallel job ID to return a list of nodes for that job</p> </li> <li> <p>An array job ID to return a list of the children for that job</p> </li> </ul> <p>You can filter the results by job status with the <code>jobStatus</code> parameter. If you don't specify a status, only <code>RUNNING</code> jobs are returned.</p>
		/// ListJobs v1/listjobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListJobsResponse> ListJobsAsync(string maxResults, string nextToken, ListJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/listjobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of Batch scheduling policies.
		/// ListSchedulingPolicies v1/listschedulingpolicies
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSchedulingPoliciesResponse> ListSchedulingPoliciesAsync(string maxResults, string nextToken, ListSchedulingPoliciesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/listschedulingpolicies?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListSchedulingPoliciesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the tags for an Batch resource. Batch resources that support tags are compute environments, jobs, job definitions, job queues, and scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs aren't supported.
		/// ListTagsForResource v1/tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) that identifies the resource that tags are listed for. Batch resources that support tags are compute environments, jobs, job definitions, job queues, and scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs aren't supported.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListTagsForResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource aren't specified in the request parameters, they aren't changed. When a resource is deleted, the tags that are associated with that resource are deleted as well. Batch resources that support tags are compute environments, jobs, job definitions, job queues, and scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs aren't supported.
		/// TagResource v1/tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource that tags are added to. Batch resources that support tags are compute environments, jobs, job definitions, job queues, and scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs aren't supported.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Registers an Batch job definition.
		/// RegisterJobDefinition v1/registerjobdefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterJobDefinitionResponse> RegisterJobDefinitionAsync(RegisterJobDefinitionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/registerjobdefinition";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<RegisterJobDefinitionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Submits an Batch job from a job definition. Parameters that are specified during <a>SubmitJob</a> override parameters defined in the job definition. vCPU and memory requirements that are specified in the <code>resourceRequirements</code> objects in the job definition are the exception. They can't be overridden this way using the <code>memory</code> and <code>vcpus</code> parameters. Rather, you must specify updates to job definition parameters in a <code>resourceRequirements</code> object that's included in the <code>containerOverrides</code> parameter.</p> <note> <p>Job queues with a scheduling policy are limited to 500 active fair share identifiers at a time. </p> </note> <important> <p>Jobs that run on Fargate resources can't be guaranteed to run for more than 14 days. This is because, after 14 days, Fargate resources might become unavailable and job might be terminated.</p> </important>
		/// SubmitJob v1/submitjob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SubmitJobResponse> SubmitJobAsync(SubmitJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/submitjob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SubmitJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Terminates a job in a job queue. Jobs that are in the <code>STARTING</code> or <code>RUNNING</code> state are terminated, which causes them to transition to <code>FAILED</code>. Jobs that have not progressed to the <code>STARTING</code> state are cancelled.
		/// TerminateJob v1/terminatejob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TerminateJobResponse> TerminateJobAsync(TerminateJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/terminatejob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TerminateJobResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes specified tags from an Batch resource.
		/// UntagResource v1/tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource from which to delete tags. Batch resources that support tags are compute environments, jobs, job definitions, job queues, and scheduling policies. ARNs for child jobs of array and multi-node parallel (MNP) jobs aren't supported.</param>
		/// <param name="tagKeys">The keys of the tags to be removed.
		/// Minimum items: 1
		/// Maximum items: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UntagResourceResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an Batch compute environment.
		/// UpdateComputeEnvironment v1/updatecomputeenvironment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateComputeEnvironmentResponse> UpdateComputeEnvironmentAsync(UpdateComputeEnvironmentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/updatecomputeenvironment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateComputeEnvironmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a job queue.
		/// UpdateJobQueue v1/updatejobqueue
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateJobQueueResponse> UpdateJobQueueAsync(UpdateJobQueuePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/updatejobqueue";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateJobQueueResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a scheduling policy.
		/// UpdateSchedulingPolicy v1/updateschedulingpolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateSchedulingPolicyResponse> UpdateSchedulingPolicyAsync(UpdateSchedulingPolicyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/updateschedulingpolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateSchedulingPolicyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class CancelJobPostBody
	{
		
		/// <summary>
		/// The Batch job ID of the job to cancel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// A message to attach to the job that explains the reason for canceling it. This message is returned by future <a>DescribeJobs</a> operations on the job. This message is also recorded in the Batch activity logs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	public class CreateComputeEnvironmentPostBody
	{
		
		/// <summary>
		/// The name for your compute environment. It can be up to 128 characters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentName")]
		public string ComputeEnvironmentName { get; set; }
		
		/// <summary>
		/// The type of the compute environment: <code>MANAGED</code> or <code>UNMANAGED</code>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute Environments</a> in the <i>Batch User Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CEType Type { get; set; }
		
		/// <summary>
		/// <p>The state of the compute environment. If the state is <code>ENABLED</code>, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.</p> <p>If the state is <code>ENABLED</code>, then the Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand.</p> <p>If the state is <code>DISABLED</code>, then the Batch scheduler doesn't attempt to place jobs within the environment. Jobs in a <code>STARTING</code> or <code>RUNNING</code> state continue to progress normally. Managed compute environments in the <code>DISABLED</code> state don't scale out. </p> <note> <p>Compute environments in a <code>DISABLED</code> state may continue to incur billing charges. To prevent additional charges, turn off and then delete the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a> in the <i>Batch User Guide</i>.</p> </note> <p>When an instance is idle, the instance scales down to the <code>minvCpus</code> value. However, the instance size doesn't change. For example, consider a <code>c5.8xlarge</code> instance with a <code>minvCpus</code> value of <code>4</code> and a <code>desiredvCpus</code> value of <code>36</code>. This instance doesn't scale down to a <code>c5.large</code> instance.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		/// <summary>
		/// <p>The maximum number of vCPUs for an unmanaged compute environment. This parameter is only used for fair share scheduling to reserve vCPU capacity for new share identifiers. If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.</p> <note> <p>This parameter is only supported when the <code>type</code> parameter is set to <code>UNMANAGED</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unmanagedvCpus")]
		public System.Nullable<System.Int32> UnmanagedvCpus { get; set; }
		
		/// <summary>
		/// An object that represents an Batch compute resource. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute environments</a> in the <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeResources")]
		public CreateComputeEnvironmentPostBodyComputeResources ComputeResources { get; set; }
		
		/// <summary>
		/// <p>The full Amazon Resource Name (ARN) of the IAM role that allows Batch to make calls to other Amazon Web Services services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch service IAM role</a> in the <i>Batch User Guide</i>.</p> <important> <p>If your account already created the Batch service-linked role, that role is used by default for your compute environment unless you specify a different role here. If the Batch service-linked role doesn't exist in your account, and no role is specified here, the service attempts to create the Batch service-linked role in your account.</p> </important> <p>If your specified role has a path other than <code>/</code>, then you must specify either the full role ARN (recommended) or prefix the role name with the path. For example, if a role with the name <code>bar</code> has a path of <code>/foo/</code>, specify <code>/foo/bar</code> as the role name. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly names and paths</a> in the <i>IAM User Guide</i>.</p> <note> <p>Depending on how you created your Batch service role, its ARN might contain the <code>service-role</code> path prefix. When you only specify the name of the service role, Batch assumes that your ARN doesn't use the <code>service-role</code> path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceRole")]
		public string ServiceRole { get; set; }
		
		/// <summary>
		/// <p>The tags that you apply to the compute environment to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.</p> <p>These tags can be updated or removed using the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html">TagResource</a> and <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html">UntagResource</a> API operations. These tags don't propagate to the underlying compute resources.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Configuration for the Amazon EKS cluster that supports the Batch compute environment. The cluster must exist before the compute environment can be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eksConfiguration")]
		public CreateComputeEnvironmentPostBodyEksConfiguration EksConfiguration { get; set; }
	}
	
	public class CreateComputeEnvironmentPostBodyComputeResources
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CRType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allocationStrategy")]
		public CRAllocationStrategy AllocationStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minvCpus")]
		public System.Nullable<System.Int32> MinvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxvCpus")]
		public System.Nullable<System.Int32> MaxvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredvCpus")]
		public System.Nullable<System.Int32> DesiredvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2KeyPair")]
		public string Ec2KeyPair { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceRole")]
		public string InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="placementGroup")]
		public string PlacementGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bidPercentage")]
		public System.Nullable<System.Int32> BidPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="spotIamFleetRole")]
		public string SpotIamFleetRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2Configuration")]
		public Ec2Configuration[] Ec2Configuration { get; set; }
	}
	
	public class CreateComputeEnvironmentPostBodyEksConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="eksClusterArn")]
		public string EksClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kubernetesNamespace")]
		public string KubernetesNamespace { get; set; }
	}
	
	public class CreateJobQueuePostBody
	{
		
		/// <summary>
		/// The name of the job queue. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueueName")]
		public string JobQueueName { get; set; }
		
		/// <summary>
		/// The state of the job queue. If the job queue state is <code>ENABLED</code>, it is able to accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs already in the queue can finish.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy. The format is <code>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i> </code>. An example is <code>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicyArn")]
		public string SchedulingPolicyArn { get; set; }
		
		/// <summary>
		/// The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>); EC2 and Fargate compute environments can't be mixed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public int Priority { get; set; }
		
		/// <summary>
		/// <p>The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment runs a specific job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. You can associate up to three compute environments with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>); EC2 and Fargate compute environments can't be mixed.</p> <note> <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p> </note>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentOrder")]
		public ComputeEnvironmentOrder[] ComputeEnvironmentOrder { get; set; }
		
		/// <summary>
		/// The tags that you apply to the job queue to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging your Batch resources</a> in <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateSchedulingPolicyPostBody
	{
		
		/// <summary>
		/// The name of the scheduling policy. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The fair share policy for a scheduling policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fairsharePolicy")]
		public CreateSchedulingPolicyPostBodyFairsharePolicy FairsharePolicy { get; set; }
		
		/// <summary>
		/// <p>The tags that you apply to the scheduling policy to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.</p> <p>These tags can be updated or removed using the <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_TagResource.html">TagResource</a> and <a href="https://docs.aws.amazon.com/batch/latest/APIReference/API_UntagResource.html">UntagResource</a> API operations.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateSchedulingPolicyPostBodyFairsharePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="shareDecaySeconds")]
		public System.Nullable<System.Int32> ShareDecaySeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeReservation")]
		public System.Nullable<System.Int32> ComputeReservation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shareDistribution")]
		public ShareAttributes[] ShareDistribution { get; set; }
	}
	
	public class DeleteComputeEnvironmentPostBody
	{
		
		/// <summary>
		/// The name or Amazon Resource Name (ARN) of the compute environment to delete.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironment")]
		public string ComputeEnvironment { get; set; }
	}
	
	public class DeleteJobQueuePostBody
	{
		
		/// <summary>
		/// The short name or full Amazon Resource Name (ARN) of the queue to delete.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
	}
	
	public class DeleteSchedulingPolicyPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the scheduling policy to delete.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	public class DeregisterJobDefinitionPostBody
	{
		
		/// <summary>
		/// The name and revision (<code>name:revision</code>) or full Amazon Resource Name (ARN) of the job definition to deregister.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinition")]
		public string JobDefinition { get; set; }
	}
	
	public class DescribeComputeEnvironmentsPostBody
	{
		
		/// <summary>
		/// A list of up to 100 compute environment names or full Amazon Resource Name (ARN) entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeEnvironments")]
		public string[] ComputeEnvironments { get; set; }
		
		/// <summary>
		/// The maximum number of cluster results returned by <code>DescribeComputeEnvironments</code> in paginated output. When this parameter is used, <code>DescribeComputeEnvironments</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeComputeEnvironments</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>DescribeComputeEnvironments</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeComputeEnvironments</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class DescribeJobDefinitionsPostBody
	{
		
		/// <summary>
		/// A list of up to 100 job definitions. Each entry in the list can either be an ARN in the format <code>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</code> or a short version using the form <code>${JobDefinitionName}:${Revision}</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobDefinitions")]
		public string[] JobDefinitions { get; set; }
		
		/// <summary>
		/// The maximum number of results returned by <code>DescribeJobDefinitions</code> in paginated output. When this parameter is used, <code>DescribeJobDefinitions</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeJobDefinitions</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>DescribeJobDefinitions</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The name of the job definition to describe.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionName")]
		public string JobDefinitionName { get; set; }
		
		/// <summary>
		/// The status used to filter job definitions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobDefinitions</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class DescribeJobQueuesPostBody
	{
		
		/// <summary>
		/// A list of up to 100 queue names or full queue Amazon Resource Name (ARN) entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobQueues")]
		public string[] JobQueues { get; set; }
		
		/// <summary>
		/// The maximum number of results returned by <code>DescribeJobQueues</code> in paginated output. When this parameter is used, <code>DescribeJobQueues</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeJobQueues</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>DescribeJobQueues</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobQueues</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class DescribeJobsPostBody
	{
		
		/// <summary>
		/// A list of up to 100 job IDs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public string[] Jobs { get; set; }
	}
	
	public class DescribeSchedulingPoliciesPostBody
	{
		
		/// <summary>
		/// A list of up to 100 scheduling policy Amazon Resource Name (ARN) entries.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arns")]
		public string[] Arns { get; set; }
	}
	
	public class ListJobsPostBody
	{
		
		/// <summary>
		/// The name or full Amazon Resource Name (ARN) of the job queue used to list jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		/// <summary>
		/// The job ID for an array job. Specifying an array job ID with this parameter lists all child jobs from within the specified array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="arrayJobId")]
		public string ArrayJobId { get; set; }
		
		/// <summary>
		/// The job ID for a multi-node parallel job. Specifying a multi-node parallel job ID with this parameter lists all nodes that are associated with the specified job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiNodeJobId")]
		public string MultiNodeJobId { get; set; }
		
		/// <summary>
		/// The job status used to filter jobs in the specified queue. If the <code>filters</code> parameter is specified, the <code>jobStatus</code> parameter is ignored and jobs with any status are returned. If you don't specify a status, only <code>RUNNING</code> jobs are returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobStatus")]
		public JobStatus JobStatus { get; set; }
		
		/// <summary>
		/// The maximum number of results returned by <code>ListJobs</code> in paginated output. When this parameter is used, <code>ListJobs</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>ListJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>The <code>nextToken</code> value returned from a previous paginated <code>ListJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// <p>The filter to apply to the query. Only one filter can be used at a time. When the filter is used, <code>jobStatus</code> is ignored. The filter doesn't apply to child jobs in an array or multi-node parallel (MNP) jobs. The results are sorted by the <code>createdAt</code> field, with the most recent jobs being first.</p> <dl> <dt>JOB_NAME</dt> <dd> <p>The value of the filter is a case-insensitive match for the job name. If the value ends with an asterisk (*), the filter matches any job name that begins with the string before the '*'. This corresponds to the <code>jobName</code> value. For example, <code>test1</code> matches both <code>Test1</code> and <code>test1</code>, and <code>test1*</code> matches both <code>test1</code> and <code>Test10</code>. When the <code>JOB_NAME</code> filter is used, the results are grouped by the job name and version.</p> </dd> <dt>JOB_DEFINITION</dt> <dd> <p>The value for the filter is the name or Amazon Resource Name (ARN) of the job definition. This corresponds to the <code>jobDefinition</code> value. The value is case sensitive. When the value for the filter is the job definition name, the results include all the jobs that used any revision of that job definition name. If the value ends with an asterisk (*), the filter matches any job definition name that begins with the string before the '*'. For example, <code>jd1</code> matches only <code>jd1</code>, and <code>jd1*</code> matches both <code>jd1</code> and <code>jd1A</code>. The version of the job definition that's used doesn't affect the sort order. When the <code>JOB_DEFINITION</code> filter is used and the ARN is used (which is in the form <code>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</code>), the results include jobs that used the specified revision of the job definition. Asterisk (*) isn't supported when the ARN is used.</p> </dd> <dt>BEFORE_CREATED_AT</dt> <dd> <p>The value for the filter is the time that's before the job was created. This corresponds to the <code>createdAt</code> value. The value is a string representation of the number of milliseconds since 00:00:00 UTC (midnight) on January 1, 1970.</p> </dd> <dt>AFTER_CREATED_AT</dt> <dd> <p>The value for the filter is the time that's after the job was created. This corresponds to the <code>createdAt</code> value. The value is a string representation of the number of milliseconds since 00:00:00 UTC (midnight) on January 1, 1970.</p> </dd> </dl>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public KeyValuesPair[] Filters { get; set; }
	}
	
	public class ListSchedulingPoliciesPostBody
	{
		
		/// <summary>
		/// The maximum number of results that's returned by <code>ListSchedulingPolicies</code> in paginated output. When this parameter is used, <code>ListSchedulingPolicies</code> only returns <code>maxResults</code> results in a single page and a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListSchedulingPolicies</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, <code>ListSchedulingPolicies</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>The <code>nextToken</code> value that's returned from a previous paginated <code>ListSchedulingPolicies</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>Treat this token as an opaque identifier that's only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The tags that you apply to the resource to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class RegisterJobDefinitionPostBody
	{
		
		/// <summary>
		/// The name of the job definition to register. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinitionName")]
		public string JobDefinitionName { get; set; }
		
		/// <summary>
		/// <p>The type of job definition. For more information about multi-node parallel jobs, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html">Creating a multi-node parallel job definition</a> in the <i>Batch User Guide</i>.</p> <note> <p>If the job is run on Fargate resources, then <code>multinode</code> isn't supported.</p> </note>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public JobDefinitionType Type { get; set; }
		
		/// <summary>
		/// Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, string> Parameters { get; set; }
		
		/// <summary>
		/// <p>The scheduling priority for jobs that are submitted with this job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority.</p> <p>The minimum supported value is 0 and the maximum supported value is 9999.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedulingPriority")]
		public System.Nullable<System.Int32> SchedulingPriority { get; set; }
		
		/// <summary>
		/// Container properties are used for Amazon ECS based job definitions. These properties to describe the container that's launched as part of a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerProperties")]
		public RegisterJobDefinitionPostBodyContainerProperties ContainerProperties { get; set; }
		
		/// <summary>
		/// <p>An object that represents the node properties of a multi-node parallel job.</p> <note> <p>Node properties can't be specified for Amazon EKS based job definitions.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodeProperties")]
		public RegisterJobDefinitionPostBodyNodeProperties NodeProperties { get; set; }
		
		/// <summary>
		/// The retry strategy that's associated with a job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html">Automated job retries</a> in the <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retryStrategy")]
		public RegisterJobDefinitionPostBodyRetryStrategy RetryStrategy { get; set; }
		
		/// <summary>
		/// <p>Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags are not propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the <code>FAILED</code> state.</p> <note> <p>If the job runs on Amazon EKS resources, then you must not specify <code>propagateTags</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="propagateTags")]
		public System.Nullable<System.Boolean> PropagateTags { get; set; }
		
		/// <summary>
		/// An object that represents a job timeout configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public RegisterJobDefinitionPostBodyTimeout Timeout { get; set; }
		
		/// <summary>
		/// The tags that you apply to the job definition to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging Amazon Web Services Resources</a> in <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// <p>The platform capabilities required by the job definition. If no value is specified, it defaults to <code>EC2</code>. To run the job on Fargate resources, specify <code>FARGATE</code>.</p> <note> <p>If the job runs on Amazon EKS resources, then you must not specify <code>platformCapabilities</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platformCapabilities")]
		public PlatformCapability[] PlatformCapabilities { get; set; }
		
		/// <summary>
		/// An object that contains the properties for the Kubernetes resources of a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eksProperties")]
		public RegisterJobDefinitionPostBodyEksProperties EksProperties { get; set; }
	}
	
	public class RegisterJobDefinitionPostBodyContainerProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vcpus")]
		public System.Nullable<System.Int32> Vcpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobRoleArn")]
		public string JobRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="executionRoleArn")]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public Volume[] Volumes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public KeyValuePair[] Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mountPoints")]
		public MountPoint[] MountPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="readonlyRootFilesystem")]
		public System.Nullable<System.Boolean> ReadonlyRootFilesystem { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privileged")]
		public System.Nullable<System.Boolean> Privileged { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ulimits")]
		public Ulimit[] Ulimits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user")]
		public string User { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceRequirements")]
		public ResourceRequirement[] ResourceRequirements { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linuxParameters")]
		public LinuxParameters LinuxParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logConfiguration")]
		public LogConfiguration LogConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secrets")]
		public Secret[] Secrets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkConfiguration")]
		public NetworkConfiguration NetworkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fargatePlatformConfiguration")]
		public FargatePlatformConfiguration FargatePlatformConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ephemeralStorage")]
		public EphemeralStorage EphemeralStorage { get; set; }
		
		/// <summary>
		/// An object that represents the compute environment architecture for Batch jobs on Fargate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimePlatform")]
		public RuntimePlatform RuntimePlatform { get; set; }
	}
	
	public class RegisterJobDefinitionPostBodyNodeProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="numNodes")]
		public System.Nullable<System.Int32> NumNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mainNode")]
		public System.Nullable<System.Int32> MainNode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeRangeProperties")]
		public NodeRangeProperty[] NodeRangeProperties { get; set; }
	}
	
	public class RegisterJobDefinitionPostBodyRetryStrategy
	{
		
		[System.Runtime.Serialization.DataMember(Name="attempts")]
		public System.Nullable<System.Int32> Attempts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluateOnExit")]
		public EvaluateOnExit[] EvaluateOnExit { get; set; }
	}
	
	public class RegisterJobDefinitionPostBodyTimeout
	{
		
		[System.Runtime.Serialization.DataMember(Name="attemptDurationSeconds")]
		public System.Nullable<System.Int32> AttemptDurationSeconds { get; set; }
	}
	
	public class RegisterJobDefinitionPostBodyEksProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="podProperties")]
		public EksPodProperties PodProperties { get; set; }
	}
	
	public class SubmitJobPostBody
	{
		
		/// <summary>
		/// The name of the job. It can be up to 128 letters long. The first character must be alphanumeric, can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// The job queue where the job is submitted. You can specify either the name or the Amazon Resource Name (ARN) of the queue.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		/// <summary>
		/// <p>The share identifier for the job. Don't specify this parameter if the job queue doesn't have a scheduling policy. If the job queue has a scheduling policy, then this parameter must be specified.</p> <p>This string is limited to 255 alphanumeric characters, and can be followed by an asterisk (*).</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shareIdentifier")]
		public string ShareIdentifier { get; set; }
		
		/// <summary>
		/// <p>The scheduling priority for the job. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. This overrides any scheduling priority in the job definition.</p> <p>The minimum supported value is 0 and the maximum supported value is 9999.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedulingPriorityOverride")]
		public System.Nullable<System.Int32> SchedulingPriorityOverride { get; set; }
		
		/// <summary>
		/// An object that represents an Batch array job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="arrayProperties")]
		public SubmitJobPostBodyArrayProperties ArrayProperties { get; set; }
		
		/// <summary>
		/// A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a <code>SEQUENTIAL</code> type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an <code>N_TO_N</code> type dependency with a job ID for array jobs. In that case, each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dependsOn")]
		public JobDependency[] DependsOn { get; set; }
		
		/// <summary>
		/// <p>The job definition used by this job. This value can be one of <code>definition-name</code>, <code>definition-name:revision</code>, or the Amazon Resource Name (ARN) for the job definition, with or without the revision (<code>arn:aws:batch:<i>region</i>:<i>account</i>:job-definition/<i>definition-name</i>:<i>revision</i> </code>, or <code>arn:aws:batch:<i>region</i>:<i>account</i>:job-definition/<i>definition-name</i> </code>).</p> <p>If the revision is not specified, then the latest active revision is used.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDefinition")]
		public string JobDefinition { get; set; }
		
		/// <summary>
		/// Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, string> Parameters { get; set; }
		
		/// <summary>
		/// <p>The overrides that should be sent to a container.</p> <p>For information about using Batch overrides when you connect event sources to targets, see <a href="https://docs.aws.amazon.com/eventbridge/latest/pipes-reference/API_BatchContainerOverrides.html">BatchContainerOverrides</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerOverrides")]
		public SubmitJobPostBodyContainerOverrides ContainerOverrides { get; set; }
		
		/// <summary>
		/// <p>An object that represents any node overrides to a job definition that's used in a <a>SubmitJob</a> API operation.</p> <note> <p>This parameter isn't applicable to jobs that are running on Fargate resources. Don't provide it for these jobs. Rather, use <code>containerOverrides</code> instead.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodeOverrides")]
		public SubmitJobPostBodyNodeOverrides NodeOverrides { get; set; }
		
		/// <summary>
		/// The retry strategy that's associated with a job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html">Automated job retries</a> in the <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retryStrategy")]
		public SubmitJobPostBodyRetryStrategy RetryStrategy { get; set; }
		
		/// <summary>
		/// Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the <code>FAILED</code> state. When specified, this overrides the tag propagation setting in the job definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="propagateTags")]
		public System.Nullable<System.Boolean> PropagateTags { get; set; }
		
		/// <summary>
		/// An object that represents a job timeout configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public SubmitJobPostBodyTimeout Timeout { get; set; }
		
		/// <summary>
		/// The tags that you apply to the job request to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in <i>Amazon Web Services General Reference</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// An object that contains overrides for the Kubernetes resources of a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eksPropertiesOverride")]
		public SubmitJobPostBodyEksPropertiesOverride EksPropertiesOverride { get; set; }
	}
	
	public class SubmitJobPostBodyArrayProperties
	{
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class SubmitJobPostBodyContainerOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="vcpus")]
		public System.Nullable<System.Int32> Vcpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public KeyValuePair[] Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceRequirements")]
		public ResourceRequirement[] ResourceRequirements { get; set; }
	}
	
	public class SubmitJobPostBodyNodeOverrides
	{
		
		[System.Runtime.Serialization.DataMember(Name="numNodes")]
		public System.Nullable<System.Int32> NumNodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodePropertyOverrides")]
		public NodePropertyOverride[] NodePropertyOverrides { get; set; }
	}
	
	public class SubmitJobPostBodyRetryStrategy
	{
		
		[System.Runtime.Serialization.DataMember(Name="attempts")]
		public System.Nullable<System.Int32> Attempts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluateOnExit")]
		public EvaluateOnExit[] EvaluateOnExit { get; set; }
	}
	
	public class SubmitJobPostBodyTimeout
	{
		
		[System.Runtime.Serialization.DataMember(Name="attemptDurationSeconds")]
		public System.Nullable<System.Int32> AttemptDurationSeconds { get; set; }
	}
	
	public class SubmitJobPostBodyEksPropertiesOverride
	{
		
		[System.Runtime.Serialization.DataMember(Name="podProperties")]
		public EksPodPropertiesOverride PodProperties { get; set; }
	}
	
	public class TerminateJobPostBody
	{
		
		/// <summary>
		/// The Batch job ID of the job to terminate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// A message to attach to the job that explains the reason for canceling it. This message is returned by future <a>DescribeJobs</a> operations on the job. This message is also recorded in the Batch activity logs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	public class UpdateComputeEnvironmentPostBody
	{
		
		/// <summary>
		/// The name or full Amazon Resource Name (ARN) of the compute environment to update.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="computeEnvironment")]
		public string ComputeEnvironment { get; set; }
		
		/// <summary>
		/// <p>The state of the compute environment. Compute environments in the <code>ENABLED</code> state can accept jobs from a queue and scale in or out automatically based on the workload demand of its associated queues.</p> <p>If the state is <code>ENABLED</code>, then the Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand.</p> <p>If the state is <code>DISABLED</code>, then the Batch scheduler doesn't attempt to place jobs within the environment. Jobs in a <code>STARTING</code> or <code>RUNNING</code> state continue to progress normally. Managed compute environments in the <code>DISABLED</code> state don't scale out. </p> <note> <p>Compute environments in a <code>DISABLED</code> state may continue to incur billing charges. To prevent additional charges, turn off and then delete the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environment_parameters.html#compute_environment_state">State</a> in the <i>Batch User Guide</i>.</p> </note> <p>When an instance is idle, the instance scales down to the <code>minvCpus</code> value. However, the instance size doesn't change. For example, consider a <code>c5.8xlarge</code> instance with a <code>minvCpus</code> value of <code>4</code> and a <code>desiredvCpus</code> value of <code>36</code>. This instance doesn't scale down to a <code>c5.large</code> instance.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		/// <summary>
		/// The maximum number of vCPUs expected to be used for an unmanaged compute environment. Don't specify this parameter for a managed compute environment. This parameter is only used for fair share scheduling to reserve vCPU capacity for new share identifiers. If this parameter isn't provided for a fair share job queue, no vCPU capacity is reserved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unmanagedvCpus")]
		public System.Nullable<System.Int32> UnmanagedvCpus { get; set; }
		
		/// <summary>
		/// An object that represents the attributes of a compute environment that can be updated. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeResources")]
		public UpdateComputeEnvironmentPostBodyComputeResources ComputeResources { get; set; }
		
		/// <summary>
		/// <p>The full Amazon Resource Name (ARN) of the IAM role that allows Batch to make calls to other Amazon Web Services services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/service_IAM_role.html">Batch service IAM role</a> in the <i>Batch User Guide</i>.</p> <important> <p>If the compute environment has a service-linked role, it can't be changed to use a regular IAM role. Likewise, if the compute environment has a regular IAM role, it can't be changed to use a service-linked role. To update the parameters for the compute environment that require an infrastructure update to change, the <b>AWSServiceRoleForBatch</b> service-linked role must be used. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.</p> </important> <p>If your specified role has a path other than <code>/</code>, then you must either specify the full role ARN (recommended) or prefix the role name with the path.</p> <note> <p>Depending on how you created your Batch service role, its ARN might contain the <code>service-role</code> path prefix. When you only specify the name of the service role, Batch assumes that your ARN doesn't use the <code>service-role</code> path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceRole")]
		public string ServiceRole { get; set; }
		
		/// <summary>
		/// Specifies the infrastructure update policy for the compute environment. For more information about infrastructure updates, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html">Updating compute environments</a> in the <i>Batch User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatePolicy")]
		public UpdateComputeEnvironmentPostBodyUpdatePolicy UpdatePolicy { get; set; }
	}
	
	public class UpdateComputeEnvironmentPostBodyComputeResources
	{
		
		[System.Runtime.Serialization.DataMember(Name="minvCpus")]
		public System.Nullable<System.Int32> MinvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxvCpus")]
		public System.Nullable<System.Int32> MaxvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredvCpus")]
		public System.Nullable<System.Int32> DesiredvCpus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allocationStrategy")]
		public CRUpdateAllocationStrategy AllocationStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2KeyPair")]
		public string Ec2KeyPair { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceRole")]
		public string InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="placementGroup")]
		public string PlacementGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bidPercentage")]
		public System.Nullable<System.Int32> BidPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ec2Configuration")]
		public Ec2Configuration[] Ec2Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateToLatestImageVersion")]
		public System.Nullable<System.Boolean> UpdateToLatestImageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CRType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
	}
	
	public class UpdateComputeEnvironmentPostBodyUpdatePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="terminateJobsOnUpdate")]
		public System.Nullable<System.Boolean> TerminateJobsOnUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobExecutionTimeoutMinutes")]
		public System.Nullable<System.Int32> JobExecutionTimeoutMinutes { get; set; }
	}
	
	public class UpdateJobQueuePostBody
	{
		
		/// <summary>
		/// The name or the Amazon Resource Name (ARN) of the job queue.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobQueue")]
		public string JobQueue { get; set; }
		
		/// <summary>
		/// Describes the queue's ability to accept new jobs. If the job queue state is <code>ENABLED</code>, it can accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs already in the queue can finish.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public CEState State { get; set; }
		
		/// <summary>
		/// Amazon Resource Name (ARN) of the fair share scheduling policy. Once a job queue is created, the fair share scheduling policy can be replaced but not removed. The format is <code>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i> </code>. For example, <code>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedulingPolicyArn")]
		public string SchedulingPolicyArn { get; set; }
		
		/// <summary>
		/// The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// <p>Details the set of compute environments mapped to a job queue and their order relative to each other. This is one of the parameters used by the job scheduler to determine which compute environment runs a given job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.</p> <note> <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeEnvironmentOrder")]
		public ComputeEnvironmentOrder[] ComputeEnvironmentOrder { get; set; }
	}
	
	public class UpdateSchedulingPolicyPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the scheduling policy to update.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// The fair share policy for a scheduling policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fairsharePolicy")]
		public UpdateSchedulingPolicyPostBodyFairsharePolicy FairsharePolicy { get; set; }
	}
	
	public class UpdateSchedulingPolicyPostBodyFairsharePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="shareDecaySeconds")]
		public System.Nullable<System.Int32> ShareDecaySeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeReservation")]
		public System.Nullable<System.Int32> ComputeReservation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shareDistribution")]
		public ShareAttributes[] ShareDistribution { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

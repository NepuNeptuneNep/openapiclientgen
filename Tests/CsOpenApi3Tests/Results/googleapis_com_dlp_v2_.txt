//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Action
	{
		
		/// <summary>
		/// Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentify")]
		public GooglePrivacyDlpV2Deidentify Deidentify { get; set; }
		
		/// <summary>
		/// Sends an email when the job completes. The email goes to IAM project owners and technical [Essential Contacts](https://cloud.google.com/resource-manager/docs/managing-notification-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobNotificationEmails")]
		public GooglePrivacyDlpV2JobNotificationEmails JobNotificationEmails { get; set; }
		
		/// <summary>
		/// Publish a message into a given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pubSub")]
		public GooglePrivacyDlpV2PublishToPubSub PubSub { get; set; }
		
		/// <summary>
		/// Publish findings of a DlpJob to Data Catalog. In Data Catalog, tag templates are applied to the resource that Cloud DLP scanned. Data Catalog tag templates are stored in the same project and region where the BigQuery table exists. For Cloud DLP to create and apply the tag template, the Cloud DLP service agent must have the `roles/datacatalog.tagTemplateOwner` permission on the project. The tag template contains fields summarizing the results of the DlpJob. Any field values previously written by another DlpJob are deleted. InfoType naming patterns are strictly enforced when using this feature. Findings are persisted in Data Catalog storage and are governed by service-specific policies for Data Catalog. For more information, see [Service Specific Terms](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. This action is allowed only if all resources being scanned are BigQuery tables. Compatible with: Inspect
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishFindingsToCloudDataCatalog")]
		public GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog PublishFindingsToCloudDataCatalog { get; set; }
		
		/// <summary>
		/// Publish the result summary of a DlpJob to [Security Command Center](https://cloud.google.com/security-command-center). This action is available for only projects that belong to an organization. This action publishes the count of finding instances and their infoTypes. The summary of findings are persisted in Security Command Center and are governed by [service-specific policies for Security Command Center](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. Compatible with: Inspect
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishSummaryToCscc")]
		public GooglePrivacyDlpV2PublishSummaryToCscc PublishSummaryToCscc { get; set; }
		
		/// <summary>
		/// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishToStackdriver")]
		public GooglePrivacyDlpV2PublishToStackdriver PublishToStackdriver { get; set; }
		
		/// <summary>
		/// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saveFindings")]
		public GooglePrivacyDlpV2SaveFindings SaveFindings { get; set; }
	}
	
	/// <summary>
	/// Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Deidentify
	{
		
		/// <summary>
		/// Required. User settable Cloud Storage bucket and folders to store de-identified files. This field must be set for cloud storage deidentification. The output Cloud Storage bucket must be different from the input bucket. De-identified files will overwrite files in the output path. Form of: gs://bucket/folder/ or gs://bucket
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudStorageOutput")]
		public string CloudStorageOutput { get; set; }
		
		/// <summary>
		/// List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed. If empty, all supported files will be transformed. Supported types may be automatically added over time. If a file type is set in this field that isn't supported by the Deidentify action then the job will fail and will not be successfully created/started. Currently the only filetypes supported are: IMAGES, TEXT_FILES, CSV, TSV.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileTypesToTransform")]
		public string[] FileTypesToTransform { get; set; }
		
		/// <summary>
		/// User specified templates and configs for how to deidentify structured, unstructures, and image files. User must provide either a unstructured deidentify template or at least one redact image config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationConfig")]
		public GooglePrivacyDlpV2TransformationConfig TransformationConfig { get; set; }
		
		/// <summary>
		/// Config for storing transformation details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationDetailsStorageConfig")]
		public GooglePrivacyDlpV2TransformationDetailsStorageConfig TransformationDetailsStorageConfig { get; set; }
	}
	
	/// <summary>
	/// User specified templates and configs for how to deidentify structured, unstructures, and image files. User must provide either a unstructured deidentify template or at least one redact image config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationConfig
	{
		
		/// <summary>
		/// De-identify template. If this template is specified, it will serve as the default de-identify template. This template cannot contain `record_transformations` since it can be used for unstructured content such as free-form text files. If this template is not set, a default `ReplaceWithInfoTypeConfig` will be used to de-identify unstructured content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplate")]
		public string DeidentifyTemplate { get; set; }
		
		/// <summary>
		/// Image redact template. If this template is specified, it will serve as the de-identify template for images. If this template is not set, all findings in the image will be redacted with a black box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageRedactTemplate")]
		public string ImageRedactTemplate { get; set; }
		
		/// <summary>
		/// Structured de-identify template. If this template is specified, it will serve as the de-identify template for structured content such as delimited files and tables. If this template is not set but the `deidentify_template` is set, then `deidentify_template` will also apply to the structured content. If neither template is set, a default `ReplaceWithInfoTypeConfig` will be used to de-identify structured content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="structuredDeidentifyTemplate")]
		public string StructuredDeidentifyTemplate { get; set; }
	}
	
	/// <summary>
	/// Config for storing transformation details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationDetailsStorageConfig
	{
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public GooglePrivacyDlpV2BigQueryTable Table { get; set; }
	}
	
	/// <summary>
	/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryTable
	{
		
		/// <summary>
		/// Dataset ID of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Name of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableId")]
		public string TableId { get; set; }
	}
	
	/// <summary>
	/// Sends an email when the job completes. The email goes to IAM project owners and technical [Essential Contacts](https://cloud.google.com/resource-manager/docs/managing-notification-contacts).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2JobNotificationEmails
	{
	}
	
	/// <summary>
	/// Publish a message into a given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PublishToPubSub
	{
		
		/// <summary>
		/// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topic")]
		public string Topic { get; set; }
	}
	
	/// <summary>
	/// Publish findings of a DlpJob to Data Catalog. In Data Catalog, tag templates are applied to the resource that Cloud DLP scanned. Data Catalog tag templates are stored in the same project and region where the BigQuery table exists. For Cloud DLP to create and apply the tag template, the Cloud DLP service agent must have the `roles/datacatalog.tagTemplateOwner` permission on the project. The tag template contains fields summarizing the results of the DlpJob. Any field values previously written by another DlpJob are deleted. InfoType naming patterns are strictly enforced when using this feature. Findings are persisted in Data Catalog storage and are governed by service-specific policies for Data Catalog. For more information, see [Service Specific Terms](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. This action is allowed only if all resources being scanned are BigQuery tables. Compatible with: Inspect
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog
	{
	}
	
	/// <summary>
	/// Publish the result summary of a DlpJob to [Security Command Center](https://cloud.google.com/security-command-center). This action is available for only projects that belong to an organization. This action publishes the count of finding instances and their infoTypes. The summary of findings are persisted in Security Command Center and are governed by [service-specific policies for Security Command Center](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. Compatible with: Inspect
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PublishSummaryToCscc
	{
	}
	
	/// <summary>
	/// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PublishToStackdriver
	{
	}
	
	/// <summary>
	/// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2SaveFindings
	{
		
		/// <summary>
		/// Cloud repository for storing output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputConfig")]
		public GooglePrivacyDlpV2OutputStorageConfig OutputConfig { get; set; }
	}
	
	/// <summary>
	/// Cloud repository for storing output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2OutputStorageConfig
	{
		
		/// <summary>
		/// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputSchema")]
		public System.Nullable<GooglePrivacyDlpV2OutputStorageConfigOutputSchema> OutputSchema { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public GooglePrivacyDlpV2BigQueryTable Table { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2OutputStorageConfigOutputSchema
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTPUT_SCHEMA_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC_COLUMNS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GCS_COLUMNS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASTORE_COLUMNS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIG_QUERY_COLUMNS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_COLUMNS = 5,
	}
	
	/// <summary>
	/// The results of an Action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ActionDetails
	{
		
		/// <summary>
		/// The results of a Deidentify action from an inspect job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyDetails")]
		public GooglePrivacyDlpV2DeidentifyDataSourceDetails DeidentifyDetails { get; set; }
	}
	
	/// <summary>
	/// The results of a Deidentify action from an inspect job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeidentifyDataSourceDetails
	{
		
		/// <summary>
		/// Summary of what was modified during a transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyStats")]
		public GooglePrivacyDlpV2DeidentifyDataSourceStats DeidentifyStats { get; set; }
		
		/// <summary>
		/// De-identification options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedOptions")]
		public GooglePrivacyDlpV2RequestedDeidentifyOptions RequestedOptions { get; set; }
	}
	
	/// <summary>
	/// Summary of what was modified during a transformation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeidentifyDataSourceStats
	{
		
		/// <summary>
		/// Number of successfully applied transformations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationCount")]
		public string TransformationCount { get; set; }
		
		/// <summary>
		/// Number of errors encountered while trying to apply transformations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationErrorCount")]
		public string TransformationErrorCount { get; set; }
		
		/// <summary>
		/// Total size in bytes that were transformed in some way.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformedBytes")]
		public string TransformedBytes { get; set; }
	}
	
	/// <summary>
	/// De-identification options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RequestedDeidentifyOptions
	{
		
		/// <summary>
		/// DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotDeidentifyTemplate")]
		public GooglePrivacyDlpV2DeidentifyTemplate SnapshotDeidentifyTemplate { get; set; }
		
		/// <summary>
		/// DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotImageRedactTemplate")]
		public GooglePrivacyDlpV2DeidentifyTemplate SnapshotImageRedactTemplate { get; set; }
		
		/// <summary>
		/// DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotStructuredDeidentifyTemplate")]
		public GooglePrivacyDlpV2DeidentifyTemplate SnapshotStructuredDeidentifyTemplate { get; set; }
	}
	
	/// <summary>
	/// DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeidentifyTemplate
	{
		
		/// <summary>
		/// Output only. The creation timestamp of an inspectTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The configuration that controls how the data will change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyConfig")]
		public GooglePrivacyDlpV2DeidentifyConfig DeidentifyConfig { get; set; }
		
		/// <summary>
		/// Short description (max 256 chars).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display name (max 256 chars).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The last update timestamp of an inspectTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The configuration that controls how the data will change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeidentifyConfig
	{
		
		/// <summary>
		/// A type of transformation that is applied over images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageTransformations")]
		public GooglePrivacyDlpV2ImageTransformations ImageTransformations { get; set; }
		
		/// <summary>
		/// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypeTransformations")]
		public GooglePrivacyDlpV2InfoTypeTransformations InfoTypeTransformations { get; set; }
		
		/// <summary>
		/// A type of transformation that is applied over structured data such as a table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recordTransformations")]
		public GooglePrivacyDlpV2RecordTransformations RecordTransformations { get; set; }
		
		/// <summary>
		/// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationErrorHandling")]
		public GooglePrivacyDlpV2TransformationErrorHandling TransformationErrorHandling { get; set; }
	}
	
	/// <summary>
	/// A type of transformation that is applied over images.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ImageTransformations
	{
		
		[System.Runtime.Serialization.DataMember(Name="transforms")]
		public GooglePrivacyDlpV2ImageTransformation[] Transforms { get; set; }
	}
	
	/// <summary>
	/// Configuration for determining how redaction of images should occur.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ImageTransformation
	{
		
		/// <summary>
		/// Apply transformation to all findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allInfoTypes")]
		public GooglePrivacyDlpV2AllInfoTypes AllInfoTypes { get; set; }
		
		/// <summary>
		/// Apply to all text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allText")]
		public GooglePrivacyDlpV2AllText AllText { get; set; }
		
		/// <summary>
		/// Represents a color in the RGB color space.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionColor")]
		public GooglePrivacyDlpV2Color RedactionColor { get; set; }
		
		/// <summary>
		/// Apply transformation to the selected info_types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectedInfoTypes")]
		public GooglePrivacyDlpV2SelectedInfoTypes SelectedInfoTypes { get; set; }
	}
	
	/// <summary>
	/// Apply transformation to all findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2AllInfoTypes
	{
	}
	
	/// <summary>
	/// Apply to all text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2AllText
	{
	}
	
	/// <summary>
	/// Represents a color in the RGB color space.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Color
	{
		
		/// <summary>
		/// The amount of blue in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blue")]
		public System.Nullable<System.Single> Blue { get; set; }
		
		/// <summary>
		/// The amount of green in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="green")]
		public System.Nullable<System.Single> Green { get; set; }
		
		/// <summary>
		/// The amount of red in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="red")]
		public System.Nullable<System.Single> Red { get; set; }
	}
	
	/// <summary>
	/// Apply transformation to the selected info_types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2SelectedInfoTypes
	{
		
		/// <summary>
		/// Required. InfoTypes to apply the transformation to. Required. Provided InfoType must be unique within the ImageTransformations message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypes")]
		public GooglePrivacyDlpV2InfoType[] InfoTypes { get; set; }
	}
	
	/// <summary>
	/// Type of information detected by the API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoType
	{
		
		/// <summary>
		/// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$_-]{1,64}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitivityScore")]
		public GooglePrivacyDlpV2SensitivityScore SensitivityScore { get; set; }
		
		/// <summary>
		/// Optional version name for this InfoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2SensitivityScore
	{
		
		/// <summary>
		/// The sensitivity score applied to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<GooglePrivacyDlpV2SensitivityScoreScore> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2SensitivityScoreScore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVITY_SCORE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVITY_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVITY_MODERATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SENSITIVITY_HIGH = 3,
	}
	
	/// <summary>
	/// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeTransformations
	{
		
		/// <summary>
		/// Required. Transformation for each infoType. Cannot specify more than one for a given infoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformations")]
		public GooglePrivacyDlpV2InfoTypeTransformation[] Transformations { get; set; }
	}
	
	/// <summary>
	/// A transformation to apply to text that is identified as a specific info_type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeTransformation
	{
		
		/// <summary>
		/// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypes")]
		public GooglePrivacyDlpV2InfoType[] InfoTypes { get; set; }
		
		/// <summary>
		/// A rule for transforming a value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primitiveTransformation")]
		public GooglePrivacyDlpV2PrimitiveTransformation PrimitiveTransformation { get; set; }
	}
	
	/// <summary>
	/// A rule for transforming a value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PrimitiveTransformation
	{
		
		/// <summary>
		/// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketingConfig")]
		public GooglePrivacyDlpV2BucketingConfig BucketingConfig { get; set; }
		
		/// <summary>
		/// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="characterMaskConfig")]
		public GooglePrivacyDlpV2CharacterMaskConfig CharacterMaskConfig { get; set; }
		
		/// <summary>
		/// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoDeterministicConfig")]
		public GooglePrivacyDlpV2CryptoDeterministicConfig CryptoDeterministicConfig { get; set; }
		
		/// <summary>
		/// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoHashConfig")]
		public GooglePrivacyDlpV2CryptoHashConfig CryptoHashConfig { get; set; }
		
		/// <summary>
		/// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoReplaceFfxFpeConfig")]
		public GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig CryptoReplaceFfxFpeConfig { get; set; }
		
		/// <summary>
		/// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateShiftConfig")]
		public GooglePrivacyDlpV2DateShiftConfig DateShiftConfig { get; set; }
		
		/// <summary>
		/// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixedSizeBucketingConfig")]
		public GooglePrivacyDlpV2FixedSizeBucketingConfig FixedSizeBucketingConfig { get; set; }
		
		/// <summary>
		/// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactConfig")]
		public GooglePrivacyDlpV2RedactConfig RedactConfig { get; set; }
		
		/// <summary>
		/// Replace each input value with a given `Value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replaceConfig")]
		public GooglePrivacyDlpV2ReplaceValueConfig ReplaceConfig { get; set; }
		
		/// <summary>
		/// Replace each input value with a value randomly selected from the dictionary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replaceDictionaryConfig")]
		public GooglePrivacyDlpV2ReplaceDictionaryConfig ReplaceDictionaryConfig { get; set; }
		
		/// <summary>
		/// Replace each matching finding with the name of the info_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replaceWithInfoTypeConfig")]
		public GooglePrivacyDlpV2ReplaceWithInfoTypeConfig ReplaceWithInfoTypeConfig { get; set; }
		
		/// <summary>
		/// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timePartConfig")]
		public GooglePrivacyDlpV2TimePartConfig TimePartConfig { get; set; }
	}
	
	/// <summary>
	/// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BucketingConfig
	{
		
		/// <summary>
		/// Set of buckets. Ranges must be non-overlapping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="buckets")]
		public GooglePrivacyDlpV2Bucket[] Buckets { get; set; }
	}
	
	/// <summary>
	/// Bucket is represented as a range, along with replacement values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Bucket
	{
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max")]
		public GooglePrivacyDlpV2Value Max { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="min")]
		public GooglePrivacyDlpV2Value Min { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replacementValue")]
		public GooglePrivacyDlpV2Value ReplacementValue { get; set; }
	}
	
	/// <summary>
	/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Value
	{
		
		/// <summary>
		/// boolean
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="booleanValue")]
		public System.Nullable<System.Boolean> BooleanValue { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateValue")]
		public GoogleTypeDate DateValue { get; set; }
		
		/// <summary>
		/// day of week
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dayOfWeekValue")]
		public System.Nullable<GooglePrivacyDlpV2ValueDayOfWeekValue> DayOfWeekValue { get; set; }
		
		/// <summary>
		/// float
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="floatValue")]
		public System.Nullable<System.Double> FloatValue { get; set; }
		
		/// <summary>
		/// integer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerValue")]
		public string IntegerValue { get; set; }
		
		/// <summary>
		/// string
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
		
		/// <summary>
		/// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeValue")]
		public GoogleTypeTimeOfDay TimeValue { get; set; }
		
		/// <summary>
		/// timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampValue")]
		public string TimestampValue { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ValueDayOfWeekValue
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY_OF_WEEK_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONDAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUESDAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEDNESDAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THURSDAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRIDAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SATURDAY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUNDAY = 7,
	}
	
	/// <summary>
	/// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeTimeOfDay
	{
		
		/// <summary>
		/// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Int32> Hours { get; set; }
		
		/// <summary>
		/// Minutes of hour of day. Must be from 0 to 59.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minutes")]
		public System.Nullable<System.Int32> Minutes { get; set; }
		
		/// <summary>
		/// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="seconds")]
		public System.Nullable<System.Int32> Seconds { get; set; }
	}
	
	/// <summary>
	/// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CharacterMaskConfig
	{
		
		/// <summary>
		/// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="charactersToIgnore")]
		public GooglePrivacyDlpV2CharsToIgnore[] CharactersToIgnore { get; set; }
		
		/// <summary>
		/// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maskingCharacter")]
		public string MaskingCharacter { get; set; }
		
		/// <summary>
		/// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally. If `number_to_mask` is negative, this denotes inverse masking. Cloud DLP masks all but a number of characters. For example, suppose you have the following values: - `masking_character` is `*` - `number_to_mask` is `-4` - `reverse_order` is `false` - `CharsToIgnore` includes `-` - Input string is `1234-5678-9012-3456` The resulting de-identified string is `****-****-****-3456`. Cloud DLP masks all but the last four characters. If `reverse_order` is `true`, all but the first four characters are masked as `1234-****-****-****`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberToMask")]
		public System.Nullable<System.Int32> NumberToMask { get; set; }
		
		/// <summary>
		/// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reverseOrder")]
		public System.Nullable<System.Boolean> ReverseOrder { get; set; }
	}
	
	/// <summary>
	/// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CharsToIgnore
	{
		
		/// <summary>
		/// Characters to not transform when masking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="charactersToSkip")]
		public string CharactersToSkip { get; set; }
		
		/// <summary>
		/// Common characters to not transform when masking. Useful to avoid removing punctuation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonCharactersToIgnore")]
		public System.Nullable<GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore> CommonCharactersToIgnore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMON_CHARS_TO_IGNORE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMERIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALPHA_UPPER_CASE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALPHA_LOWER_CASE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUNCTUATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHITESPACE = 5,
	}
	
	/// <summary>
	/// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CryptoDeterministicConfig
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public GooglePrivacyDlpV2FieldId Context { get; set; }
		
		/// <summary>
		/// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoKey")]
		public GooglePrivacyDlpV2CryptoKey CryptoKey { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="surrogateInfoType")]
		public GooglePrivacyDlpV2InfoType SurrogateInfoType { get; set; }
	}
	
	/// <summary>
	/// General identifier of a data field in a storage service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2FieldId
	{
		
		/// <summary>
		/// Name describing the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CryptoKey
	{
		
		/// <summary>
		/// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsWrapped")]
		public GooglePrivacyDlpV2KmsWrappedCryptoKey KmsWrapped { get; set; }
		
		/// <summary>
		/// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transient")]
		public GooglePrivacyDlpV2TransientCryptoKey Transient { get; set; }
		
		/// <summary>
		/// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unwrapped")]
		public GooglePrivacyDlpV2UnwrappedCryptoKey Unwrapped { get; set; }
	}
	
	/// <summary>
	/// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KmsWrappedCryptoKey
	{
		
		/// <summary>
		/// Required. The resource name of the KMS CryptoKey to use for unwrapping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoKeyName")]
		public string CryptoKeyName { get; set; }
		
		/// <summary>
		/// Required. The wrapped data crypto key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wrappedKey")]
		public string WrappedKey { get; set; }
	}
	
	/// <summary>
	/// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransientCryptoKey
	{
		
		/// <summary>
		/// Required. Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2UnwrappedCryptoKey
	{
		
		/// <summary>
		/// Required. A 128/192/256 bit key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CryptoHashConfig
	{
		
		/// <summary>
		/// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoKey")]
		public GooglePrivacyDlpV2CryptoKey CryptoKey { get; set; }
	}
	
	/// <summary>
	/// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig
	{
		
		/// <summary>
		/// Common alphabets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonAlphabet")]
		public System.Nullable<GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet> CommonAlphabet { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public GooglePrivacyDlpV2FieldId Context { get; set; }
		
		/// <summary>
		/// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoKey")]
		public GooglePrivacyDlpV2CryptoKey CryptoKey { get; set; }
		
		/// <summary>
		/// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customAlphabet")]
		public string CustomAlphabet { get; set; }
		
		/// <summary>
		/// The native way to select the alphabet. Must be in the range [2, 95].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="radix")]
		public System.Nullable<System.Int32> Radix { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="surrogateInfoType")]
		public GooglePrivacyDlpV2InfoType SurrogateInfoType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMERIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEXADECIMAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPPER_CASE_ALPHA_NUMERIC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALPHA_NUMERIC = 4,
	}
	
	/// <summary>
	/// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DateShiftConfig
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public GooglePrivacyDlpV2FieldId Context { get; set; }
		
		/// <summary>
		/// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cryptoKey")]
		public GooglePrivacyDlpV2CryptoKey CryptoKey { get; set; }
		
		/// <summary>
		/// Required. For example, -5 means shift date to at most 5 days back in the past.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowerBoundDays")]
		public System.Nullable<System.Int32> LowerBoundDays { get; set; }
		
		/// <summary>
		/// Required. Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upperBoundDays")]
		public System.Nullable<System.Int32> UpperBoundDays { get; set; }
	}
	
	/// <summary>
	/// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2FixedSizeBucketingConfig
	{
		
		/// <summary>
		/// Required. Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketSize")]
		public System.Nullable<System.Double> BucketSize { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowerBound")]
		public GooglePrivacyDlpV2Value LowerBound { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upperBound")]
		public GooglePrivacyDlpV2Value UpperBound { get; set; }
	}
	
	/// <summary>
	/// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RedactConfig
	{
	}
	
	/// <summary>
	/// Replace each input value with a given `Value`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ReplaceValueConfig
	{
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newValue")]
		public GooglePrivacyDlpV2Value NewValue { get; set; }
	}
	
	/// <summary>
	/// Replace each input value with a value randomly selected from the dictionary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ReplaceDictionaryConfig
	{
		
		/// <summary>
		/// Message defining a list of words or phrases to search for in the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wordList")]
		public GooglePrivacyDlpV2WordList WordList { get; set; }
	}
	
	/// <summary>
	/// Message defining a list of words or phrases to search for in the data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2WordList
	{
		
		/// <summary>
		/// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="words")]
		public string[] Words { get; set; }
	}
	
	/// <summary>
	/// Replace each matching finding with the name of the info_type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ReplaceWithInfoTypeConfig
	{
	}
	
	/// <summary>
	/// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TimePartConfig
	{
		
		/// <summary>
		/// The part of the time to keep.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partToExtract")]
		public System.Nullable<GooglePrivacyDlpV2TimePartConfigPartToExtract> PartToExtract { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2TimePartConfigPartToExtract
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_PART_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY_OF_MONTH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY_OF_WEEK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK_OF_YEAR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOUR_OF_DAY = 6,
	}
	
	/// <summary>
	/// A type of transformation that is applied over structured data such as a table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RecordTransformations
	{
		
		/// <summary>
		/// Transform the record by applying various field transformations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldTransformations")]
		public GooglePrivacyDlpV2FieldTransformation[] FieldTransformations { get; set; }
		
		/// <summary>
		/// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recordSuppressions")]
		public GooglePrivacyDlpV2RecordSuppression[] RecordSuppressions { get; set; }
	}
	
	/// <summary>
	/// The transformation to apply to the field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2FieldTransformation
	{
		
		/// <summary>
		/// A condition for determining whether a transformation should be applied to a field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GooglePrivacyDlpV2RecordCondition Condition { get; set; }
		
		/// <summary>
		/// Required. Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public GooglePrivacyDlpV2FieldId[] Fields { get; set; }
		
		/// <summary>
		/// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypeTransformations")]
		public GooglePrivacyDlpV2InfoTypeTransformations InfoTypeTransformations { get; set; }
		
		/// <summary>
		/// A rule for transforming a value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primitiveTransformation")]
		public GooglePrivacyDlpV2PrimitiveTransformation PrimitiveTransformation { get; set; }
	}
	
	/// <summary>
	/// A condition for determining whether a transformation should be applied to a field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RecordCondition
	{
		
		/// <summary>
		/// An expression, consisting of an operator and conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expressions")]
		public GooglePrivacyDlpV2Expressions Expressions { get; set; }
	}
	
	/// <summary>
	/// An expression, consisting of an operator and conditions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Expressions
	{
		
		/// <summary>
		/// A collection of conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GooglePrivacyDlpV2Conditions Conditions { get; set; }
		
		/// <summary>
		/// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logicalOperator")]
		public System.Nullable<GooglePrivacyDlpV2ExpressionsLogicalOperator> LogicalOperator { get; set; }
	}
	
	/// <summary>
	/// A collection of conditions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Conditions
	{
		
		/// <summary>
		/// A collection of conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GooglePrivacyDlpV2Condition[] Conditions { get; set; }
	}
	
	/// <summary>
	/// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Condition
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
		
		/// <summary>
		/// Required. Operator used to compare the field or infoType to the value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public System.Nullable<GooglePrivacyDlpV2ConditionOperator> Operator { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GooglePrivacyDlpV2Value Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ConditionOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELATIONAL_OPERATOR_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL_TO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUAL_TO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN_OR_EQUALS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN_OR_EQUALS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXISTS = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ExpressionsLogicalOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOGICAL_OPERATOR_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AND = 1,
	}
	
	/// <summary>
	/// Configuration to suppress records whose suppression conditions evaluate to true.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RecordSuppression
	{
		
		/// <summary>
		/// A condition for determining whether a transformation should be applied to a field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GooglePrivacyDlpV2RecordCondition Condition { get; set; }
	}
	
	/// <summary>
	/// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationErrorHandling
	{
		
		/// <summary>
		/// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leaveUntransformed")]
		public GooglePrivacyDlpV2LeaveUntransformed LeaveUntransformed { get; set; }
		
		/// <summary>
		/// Throw an error and fail the request when a transformation error occurs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="throwError")]
		public GooglePrivacyDlpV2ThrowError ThrowError { get; set; }
	}
	
	/// <summary>
	/// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LeaveUntransformed
	{
	}
	
	/// <summary>
	/// Throw an error and fail the request when a transformation error occurs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ThrowError
	{
	}
	
	/// <summary>
	/// Request message for ActivateJobTrigger.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ActivateJobTriggerRequest
	{
	}
	
	/// <summary>
	/// Catch-all for all other tables not specified by other filters. Should always be last, except for single-table configurations, which will only have a TableReference target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2AllOtherBigQueryTables
	{
	}
	
	/// <summary>
	/// Result of a risk analysis operation request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails
	{
		
		/// <summary>
		/// Result of the categorical stats computation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoricalStatsResult")]
		public GooglePrivacyDlpV2CategoricalStatsResult CategoricalStatsResult { get; set; }
		
		/// <summary>
		/// Result of the δ-presence computation. Note that these results are an estimation, not exact values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deltaPresenceEstimationResult")]
		public GooglePrivacyDlpV2DeltaPresenceEstimationResult DeltaPresenceEstimationResult { get; set; }
		
		/// <summary>
		/// Result of the k-anonymity computation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kAnonymityResult")]
		public GooglePrivacyDlpV2KAnonymityResult KAnonymityResult { get; set; }
		
		/// <summary>
		/// Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kMapEstimationResult")]
		public GooglePrivacyDlpV2KMapEstimationResult KMapEstimationResult { get; set; }
		
		/// <summary>
		/// Result of the l-diversity computation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lDiversityResult")]
		public GooglePrivacyDlpV2LDiversityResult LDiversityResult { get; set; }
		
		/// <summary>
		/// Result of the numerical stats computation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericalStatsResult")]
		public GooglePrivacyDlpV2NumericalStatsResult NumericalStatsResult { get; set; }
		
		/// <summary>
		/// Risk analysis options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedOptions")]
		public GooglePrivacyDlpV2RequestedRiskAnalysisOptions RequestedOptions { get; set; }
		
		/// <summary>
		/// Privacy metric to compute for reidentification risk analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedPrivacyMetric")]
		public GooglePrivacyDlpV2PrivacyMetric RequestedPrivacyMetric { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedSourceTable")]
		public GooglePrivacyDlpV2BigQueryTable RequestedSourceTable { get; set; }
	}
	
	/// <summary>
	/// Result of the categorical stats computation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CategoricalStatsResult
	{
		
		/// <summary>
		/// Histogram of value frequencies in the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFrequencyHistogramBuckets")]
		public GooglePrivacyDlpV2CategoricalStatsHistogramBucket[] ValueFrequencyHistogramBuckets { get; set; }
	}
	
	/// <summary>
	/// Histogram of value frequencies in the column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CategoricalStatsHistogramBucket
	{
		
		/// <summary>
		/// Total number of values in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketSize")]
		public string BucketSize { get; set; }
		
		/// <summary>
		/// Total number of distinct values in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValueCount")]
		public string BucketValueCount { get; set; }
		
		/// <summary>
		/// Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValues")]
		public GooglePrivacyDlpV2ValueFrequency[] BucketValues { get; set; }
		
		/// <summary>
		/// Lower bound on the value frequency of the values in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFrequencyLowerBound")]
		public string ValueFrequencyLowerBound { get; set; }
		
		/// <summary>
		/// Upper bound on the value frequency of the values in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFrequencyUpperBound")]
		public string ValueFrequencyUpperBound { get; set; }
	}
	
	/// <summary>
	/// A value of a field, including its frequency.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ValueFrequency
	{
		
		/// <summary>
		/// How many times the value is contained in the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GooglePrivacyDlpV2Value Value { get; set; }
	}
	
	/// <summary>
	/// Result of the δ-presence computation. Note that these results are an estimation, not exact values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeltaPresenceEstimationResult
	{
		
		/// <summary>
		/// The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deltaPresenceEstimationHistogram")]
		public GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket[] DeltaPresenceEstimationHistogram { get; set; }
	}
	
	/// <summary>
	/// A DeltaPresenceEstimationHistogramBucket message with the following values: min_probability: 0.1 max_probability: 0.2 frequency: 42 means that there are 42 records for which δ is in [0.1, 0.2). An important particular case is when min_probability = max_probability = 1: then, every individual who shares this quasi-identifier combination is in the dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket
	{
		
		/// <summary>
		/// Number of records within these probability bounds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketSize")]
		public string BucketSize { get; set; }
		
		/// <summary>
		/// Total number of distinct quasi-identifier tuple values in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValueCount")]
		public string BucketValueCount { get; set; }
		
		/// <summary>
		/// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValues")]
		public GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues[] BucketValues { get; set; }
		
		/// <summary>
		/// Always greater than or equal to min_probability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxProbability")]
		public System.Nullable<System.Double> MaxProbability { get; set; }
		
		/// <summary>
		/// Between 0 and 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minProbability")]
		public System.Nullable<System.Double> MinProbability { get; set; }
	}
	
	/// <summary>
	/// A tuple of values for the quasi-identifier columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues
	{
		
		/// <summary>
		/// The estimated probability that a given individual sharing these quasi-identifier values is in the dataset. This value, typically called δ, is the ratio between the number of records in the dataset with these quasi-identifier values, and the total number of individuals (inside *and* outside the dataset) with these quasi-identifier values. For example, if there are 15 individuals in the dataset who share the same quasi-identifier values, and an estimated 100 people in the entire population with these values, then δ is 0.15.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimatedProbability")]
		public System.Nullable<System.Double> EstimatedProbability { get; set; }
		
		/// <summary>
		/// The quasi-identifier values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIdsValues")]
		public GooglePrivacyDlpV2Value[] QuasiIdsValues { get; set; }
	}
	
	/// <summary>
	/// Result of the k-anonymity computation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KAnonymityResult
	{
		
		/// <summary>
		/// Histogram of k-anonymity equivalence classes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="equivalenceClassHistogramBuckets")]
		public GooglePrivacyDlpV2KAnonymityHistogramBucket[] EquivalenceClassHistogramBuckets { get; set; }
	}
	
	/// <summary>
	/// Histogram of k-anonymity equivalence classes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KAnonymityHistogramBucket
	{
		
		/// <summary>
		/// Total number of equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketSize")]
		public string BucketSize { get; set; }
		
		/// <summary>
		/// Total number of distinct equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValueCount")]
		public string BucketValueCount { get; set; }
		
		/// <summary>
		/// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValues")]
		public GooglePrivacyDlpV2KAnonymityEquivalenceClass[] BucketValues { get; set; }
		
		/// <summary>
		/// Lower bound on the size of the equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="equivalenceClassSizeLowerBound")]
		public string EquivalenceClassSizeLowerBound { get; set; }
		
		/// <summary>
		/// Upper bound on the size of the equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="equivalenceClassSizeUpperBound")]
		public string EquivalenceClassSizeUpperBound { get; set; }
	}
	
	/// <summary>
	/// The set of columns' values that share the same ldiversity value
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KAnonymityEquivalenceClass
	{
		
		/// <summary>
		/// Size of the equivalence class, for example number of rows with the above set of values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="equivalenceClassSize")]
		public string EquivalenceClassSize { get; set; }
		
		/// <summary>
		/// Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIdsValues")]
		public GooglePrivacyDlpV2Value[] QuasiIdsValues { get; set; }
	}
	
	/// <summary>
	/// Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KMapEstimationResult
	{
		
		/// <summary>
		/// The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there are no record with an estimated anonymity of 4, 5, or larger than 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kMapEstimationHistogram")]
		public GooglePrivacyDlpV2KMapEstimationHistogramBucket[] KMapEstimationHistogram { get; set; }
	}
	
	/// <summary>
	/// A KMapEstimationHistogramBucket message with the following values: min_anonymity: 3 max_anonymity: 5 frequency: 42 means that there are 42 records whose quasi-identifier values correspond to 3, 4 or 5 people in the overlying population. An important particular case is when min_anonymity = max_anonymity = 1: the frequency field then corresponds to the number of uniquely identifiable records.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KMapEstimationHistogramBucket
	{
		
		/// <summary>
		/// Number of records within these anonymity bounds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketSize")]
		public string BucketSize { get; set; }
		
		/// <summary>
		/// Total number of distinct quasi-identifier tuple values in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValueCount")]
		public string BucketValueCount { get; set; }
		
		/// <summary>
		/// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValues")]
		public GooglePrivacyDlpV2KMapEstimationQuasiIdValues[] BucketValues { get; set; }
		
		/// <summary>
		/// Always greater than or equal to min_anonymity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxAnonymity")]
		public string MaxAnonymity { get; set; }
		
		/// <summary>
		/// Always positive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minAnonymity")]
		public string MinAnonymity { get; set; }
	}
	
	/// <summary>
	/// A tuple of values for the quasi-identifier columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KMapEstimationQuasiIdValues
	{
		
		/// <summary>
		/// The estimated anonymity for these quasi-identifier values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimatedAnonymity")]
		public string EstimatedAnonymity { get; set; }
		
		/// <summary>
		/// The quasi-identifier values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIdsValues")]
		public GooglePrivacyDlpV2Value[] QuasiIdsValues { get; set; }
	}
	
	/// <summary>
	/// Result of the l-diversity computation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LDiversityResult
	{
		
		/// <summary>
		/// Histogram of l-diversity equivalence class sensitive value frequencies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitiveValueFrequencyHistogramBuckets")]
		public GooglePrivacyDlpV2LDiversityHistogramBucket[] SensitiveValueFrequencyHistogramBuckets { get; set; }
	}
	
	/// <summary>
	/// Histogram of l-diversity equivalence class sensitive value frequencies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LDiversityHistogramBucket
	{
		
		/// <summary>
		/// Total number of equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketSize")]
		public string BucketSize { get; set; }
		
		/// <summary>
		/// Total number of distinct equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValueCount")]
		public string BucketValueCount { get; set; }
		
		/// <summary>
		/// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketValues")]
		public GooglePrivacyDlpV2LDiversityEquivalenceClass[] BucketValues { get; set; }
		
		/// <summary>
		/// Lower bound on the sensitive value frequencies of the equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitiveValueFrequencyLowerBound")]
		public string SensitiveValueFrequencyLowerBound { get; set; }
		
		/// <summary>
		/// Upper bound on the sensitive value frequencies of the equivalence classes in this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitiveValueFrequencyUpperBound")]
		public string SensitiveValueFrequencyUpperBound { get; set; }
	}
	
	/// <summary>
	/// The set of columns' values that share the same ldiversity value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LDiversityEquivalenceClass
	{
		
		/// <summary>
		/// Size of the k-anonymity equivalence class.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="equivalenceClassSize")]
		public string EquivalenceClassSize { get; set; }
		
		/// <summary>
		/// Number of distinct sensitive values in this equivalence class.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numDistinctSensitiveValues")]
		public string NumDistinctSensitiveValues { get; set; }
		
		/// <summary>
		/// Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as the original request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIdsValues")]
		public GooglePrivacyDlpV2Value[] QuasiIdsValues { get; set; }
		
		/// <summary>
		/// Estimated frequencies of top sensitive values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topSensitiveValues")]
		public GooglePrivacyDlpV2ValueFrequency[] TopSensitiveValues { get; set; }
	}
	
	/// <summary>
	/// Result of the numerical stats computation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2NumericalStatsResult
	{
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public GooglePrivacyDlpV2Value MaxValue { get; set; }
		
		/// <summary>
		/// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public GooglePrivacyDlpV2Value MinValue { get; set; }
		
		/// <summary>
		/// List of 99 values that partition the set of field values into 100 equal sized buckets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantileValues")]
		public GooglePrivacyDlpV2Value[] QuantileValues { get; set; }
	}
	
	/// <summary>
	/// Risk analysis options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RequestedRiskAnalysisOptions
	{
		
		/// <summary>
		/// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobConfig")]
		public GooglePrivacyDlpV2RiskAnalysisJobConfig JobConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RiskAnalysisJobConfig
	{
		
		/// <summary>
		/// Actions to execute at the completion of the job. Are executed in the order provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public GooglePrivacyDlpV2Action[] Actions { get; set; }
		
		/// <summary>
		/// Privacy metric to compute for reidentification risk analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privacyMetric")]
		public GooglePrivacyDlpV2PrivacyMetric PrivacyMetric { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceTable")]
		public GooglePrivacyDlpV2BigQueryTable SourceTable { get; set; }
	}
	
	/// <summary>
	/// Privacy metric to compute for reidentification risk analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PrivacyMetric
	{
		
		/// <summary>
		/// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoricalStatsConfig")]
		public GooglePrivacyDlpV2CategoricalStatsConfig CategoricalStatsConfig { get; set; }
		
		/// <summary>
		/// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deltaPresenceEstimationConfig")]
		public GooglePrivacyDlpV2DeltaPresenceEstimationConfig DeltaPresenceEstimationConfig { get; set; }
		
		/// <summary>
		/// k-anonymity metric, used for analysis of reidentification risk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kAnonymityConfig")]
		public GooglePrivacyDlpV2KAnonymityConfig KAnonymityConfig { get; set; }
		
		/// <summary>
		/// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kMapEstimationConfig")]
		public GooglePrivacyDlpV2KMapEstimationConfig KMapEstimationConfig { get; set; }
		
		/// <summary>
		/// l-diversity metric, used for analysis of reidentification risk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lDiversityConfig")]
		public GooglePrivacyDlpV2LDiversityConfig LDiversityConfig { get; set; }
		
		/// <summary>
		/// Compute numerical stats over an individual column, including min, max, and quantiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericalStatsConfig")]
		public GooglePrivacyDlpV2NumericalStatsConfig NumericalStatsConfig { get; set; }
	}
	
	/// <summary>
	/// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CategoricalStatsConfig
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
	}
	
	/// <summary>
	/// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeltaPresenceEstimationConfig
	{
		
		/// <summary>
		/// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auxiliaryTables")]
		public GooglePrivacyDlpV2StatisticalTable[] AuxiliaryTables { get; set; }
		
		/// <summary>
		/// Required. Fields considered to be quasi-identifiers. No two fields can have the same tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIds")]
		public GooglePrivacyDlpV2QuasiId[] QuasiIds { get; set; }
		
		/// <summary>
		/// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionCode")]
		public string RegionCode { get; set; }
	}
	
	/// <summary>
	/// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StatisticalTable
	{
		
		/// <summary>
		/// Required. Quasi-identifier columns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIds")]
		public GooglePrivacyDlpV2QuasiIdentifierField[] QuasiIds { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativeFrequency")]
		public GooglePrivacyDlpV2FieldId RelativeFrequency { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public GooglePrivacyDlpV2BigQueryTable Table { get; set; }
	}
	
	/// <summary>
	/// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2QuasiIdentifierField
	{
		
		/// <summary>
		/// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTag")]
		public string CustomTag { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
	}
	
	/// <summary>
	/// A column with a semantic tag attached.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2QuasiId
	{
		
		/// <summary>
		/// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTag")]
		public string CustomTag { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
		
		/// <summary>
		/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inferred")]
		public GoogleProtobufEmpty Inferred { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobufEmpty
	{
	}
	
	/// <summary>
	/// k-anonymity metric, used for analysis of reidentification risk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KAnonymityConfig
	{
		
		/// <summary>
		/// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityId")]
		public GooglePrivacyDlpV2EntityId EntityId { get; set; }
		
		/// <summary>
		/// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIds")]
		public GooglePrivacyDlpV2FieldId[] QuasiIds { get; set; }
	}
	
	/// <summary>
	/// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2EntityId
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
	}
	
	/// <summary>
	/// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KMapEstimationConfig
	{
		
		/// <summary>
		/// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auxiliaryTables")]
		public GooglePrivacyDlpV2AuxiliaryTable[] AuxiliaryTables { get; set; }
		
		/// <summary>
		/// Required. Fields considered to be quasi-identifiers. No two columns can have the same tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIds")]
		public GooglePrivacyDlpV2TaggedField[] QuasiIds { get; set; }
		
		/// <summary>
		/// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionCode")]
		public string RegionCode { get; set; }
	}
	
	/// <summary>
	/// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2AuxiliaryTable
	{
		
		/// <summary>
		/// Required. Quasi-identifier columns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIds")]
		public GooglePrivacyDlpV2QuasiIdField[] QuasiIds { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativeFrequency")]
		public GooglePrivacyDlpV2FieldId RelativeFrequency { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public GooglePrivacyDlpV2BigQueryTable Table { get; set; }
	}
	
	/// <summary>
	/// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2QuasiIdField
	{
		
		/// <summary>
		/// A auxiliary field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTag")]
		public string CustomTag { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
	}
	
	/// <summary>
	/// A column with a semantic tag attached.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TaggedField
	{
		
		/// <summary>
		/// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTag")]
		public string CustomTag { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
		
		/// <summary>
		/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inferred")]
		public GoogleProtobufEmpty Inferred { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
	}
	
	/// <summary>
	/// l-diversity metric, used for analysis of reidentification risk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LDiversityConfig
	{
		
		/// <summary>
		/// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quasiIds")]
		public GooglePrivacyDlpV2FieldId[] QuasiIds { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitiveAttribute")]
		public GooglePrivacyDlpV2FieldId SensitiveAttribute { get; set; }
	}
	
	/// <summary>
	/// Compute numerical stats over an individual column, including min, max, and quantiles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2NumericalStatsConfig
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
	}
	
	/// <summary>
	/// Target used to match against for discovery with BigQuery tables
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryDiscoveryTarget
	{
		
		/// <summary>
		/// What must take place for a profile to be updated and how frequently it should occur. New tables are scanned as quickly as possible depending on system capacity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cadence")]
		public GooglePrivacyDlpV2DiscoveryGenerationCadence Cadence { get; set; }
		
		/// <summary>
		/// Requirements that must be true before a table is scanned in discovery for the first time. There is an AND relationship between the top-level attributes. Additionally, minimum conditions with an OR relationship that must be met before Cloud DLP scans a table can be set (like a minimum row count or a minimum table age).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GooglePrivacyDlpV2DiscoveryBigQueryConditions Conditions { get; set; }
		
		/// <summary>
		/// Do not profile the tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabled")]
		public GooglePrivacyDlpV2Disabled Disabled { get; set; }
		
		/// <summary>
		/// Determines what tables will have profiles generated within an organization or project. Includes the ability to filter by regular expression patterns on project ID, dataset ID, and table ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public GooglePrivacyDlpV2DiscoveryBigQueryFilter Filter { get; set; }
	}
	
	/// <summary>
	/// What must take place for a profile to be updated and how frequently it should occur. New tables are scanned as quickly as possible depending on system capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryGenerationCadence
	{
		
		/// <summary>
		/// The cadence at which to update data profiles when a schema is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaModifiedCadence")]
		public GooglePrivacyDlpV2DiscoverySchemaModifiedCadence SchemaModifiedCadence { get; set; }
		
		/// <summary>
		/// The cadence at which to update data profiles when a table is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableModifiedCadence")]
		public GooglePrivacyDlpV2DiscoveryTableModifiedCadence TableModifiedCadence { get; set; }
	}
	
	/// <summary>
	/// The cadence at which to update data profiles when a schema is modified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoverySchemaModifiedCadence
	{
		
		/// <summary>
		/// How frequently profiles may be updated when schemas are modified. Defaults to monthly.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public System.Nullable<GooglePrivacyDlpV2DiscoverySchemaModifiedCadenceFrequency> Frequency { get; set; }
		
		/// <summary>
		/// The type of events to consider when deciding if the table's schema has been modified and should have the profile updated. Defaults to NEW_COLUMNS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="types")]
		public string[] Types { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2DiscoverySchemaModifiedCadenceFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FREQUENCY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FREQUENCY_NEVER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FREQUENCY_DAILY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FREQUENCY_MONTHLY = 3,
	}
	
	/// <summary>
	/// The cadence at which to update data profiles when a table is modified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryTableModifiedCadence
	{
		
		/// <summary>
		/// How frequently data profiles can be updated when tables are modified. Defaults to never.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GooglePrivacyDlpV2DiscoverySchemaModifiedCadenceFrequency Frequency { get; set; }
		
		/// <summary>
		/// The type of events to consider when deciding if the table has been modified and should have the profile updated. Defaults to MODIFIED_TIMESTAMP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="types")]
		public string[] Types { get; set; }
	}
	
	/// <summary>
	/// Requirements that must be true before a table is scanned in discovery for the first time. There is an AND relationship between the top-level attributes. Additionally, minimum conditions with an OR relationship that must be met before Cloud DLP scans a table can be set (like a minimum row count or a minimum table age).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryBigQueryConditions
	{
		
		/// <summary>
		/// BigQuery table must have been created after this date. Used to avoid backfilling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAfter")]
		public string CreatedAfter { get; set; }
		
		/// <summary>
		/// There is an OR relationship between these attributes. They are used to determine if a table should be scanned or not in Discovery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orConditions")]
		public GooglePrivacyDlpV2OrConditions OrConditions { get; set; }
		
		/// <summary>
		/// Restrict discovery to categories of table types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="typeCollection")]
		public System.Nullable<GooglePrivacyDlpV2DiscoveryBigQueryConditionsTypeCollection> TypeCollection { get; set; }
		
		/// <summary>
		/// The types of BigQuery tables supported by Cloud DLP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="types")]
		public GooglePrivacyDlpV2BigQueryTableTypes Types { get; set; }
	}
	
	/// <summary>
	/// There is an OR relationship between these attributes. They are used to determine if a table should be scanned or not in Discovery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2OrConditions
	{
		
		/// <summary>
		/// Minimum age a table must have before Cloud DLP can profile it. Value must be 1 hour or greater.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minAge")]
		public string MinAge { get; set; }
		
		/// <summary>
		/// Minimum number of rows that should be present before Cloud DLP profiles a table
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minRowCount")]
		public System.Nullable<System.Int32> MinRowCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2DiscoveryBigQueryConditionsTypeCollection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIG_QUERY_COLLECTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIG_QUERY_COLLECTION_ALL_TYPES = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIG_QUERY_COLLECTION_ONLY_SUPPORTED_TYPES = 2,
	}
	
	/// <summary>
	/// The types of BigQuery tables supported by Cloud DLP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryTableTypes
	{
		
		/// <summary>
		/// A set of BigQuery table types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="types")]
		public string[] Types { get; set; }
	}
	
	/// <summary>
	/// Do not profile the tables.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Disabled
	{
	}
	
	/// <summary>
	/// Determines what tables will have profiles generated within an organization or project. Includes the ability to filter by regular expression patterns on project ID, dataset ID, and table ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryBigQueryFilter
	{
		
		/// <summary>
		/// Catch-all for all other tables not specified by other filters. Should always be last, except for single-table configurations, which will only have a TableReference target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherTables")]
		public GooglePrivacyDlpV2AllOtherBigQueryTables OtherTables { get; set; }
		
		/// <summary>
		/// Specifies a collection of BigQuery tables. Used for Discovery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tables")]
		public GooglePrivacyDlpV2BigQueryTableCollection Tables { get; set; }
	}
	
	/// <summary>
	/// Specifies a collection of BigQuery tables. Used for Discovery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryTableCollection
	{
		
		/// <summary>
		/// A collection of regular expressions to determine what tables to match against.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeRegexes")]
		public GooglePrivacyDlpV2BigQueryRegexes IncludeRegexes { get; set; }
	}
	
	/// <summary>
	/// A collection of regular expressions to determine what tables to match against.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryRegexes
	{
		
		/// <summary>
		/// A single BigQuery regular expression pattern to match against one or more tables, datasets, or projects that contain BigQuery tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="patterns")]
		public GooglePrivacyDlpV2BigQueryRegex[] Patterns { get; set; }
	}
	
	/// <summary>
	/// A pattern to match against one or more tables, datasets, or projects that contain BigQuery tables. At least one pattern must be specified. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryRegex
	{
		
		/// <summary>
		/// If unset, this property matches all datasets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetIdRegex")]
		public string DatasetIdRegex { get; set; }
		
		/// <summary>
		/// For organizations, if unset, will match all projects. Has no effect for data profile configurations created within a project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectIdRegex")]
		public string ProjectIdRegex { get; set; }
		
		/// <summary>
		/// If unset, this property matches all tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableIdRegex")]
		public string TableIdRegex { get; set; }
	}
	
	/// <summary>
	/// Message defining a field of a BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryField
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public GooglePrivacyDlpV2BigQueryTable Table { get; set; }
	}
	
	/// <summary>
	/// Row key for identifying a record in BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryKey
	{
		
		/// <summary>
		/// Row number inferred at the time the table was scanned. This value is nondeterministic, cannot be queried, and may be null for inspection jobs. To locate findings within a table, specify `inspect_job.storage_config.big_query_options.identifying_fields` in `CreateDlpJobRequest`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowNumber")]
		public string RowNumber { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableReference")]
		public GooglePrivacyDlpV2BigQueryTable TableReference { get; set; }
	}
	
	/// <summary>
	/// Options defining BigQuery table and row identifiers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BigQueryOptions
	{
		
		/// <summary>
		/// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings. When inspecting a table, we recommend that you inspect all columns. Otherwise, findings might be affected because hints from excluded columns will not be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludedFields")]
		public GooglePrivacyDlpV2FieldId[] ExcludedFields { get; set; }
		
		/// <summary>
		/// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identifyingFields")]
		public GooglePrivacyDlpV2FieldId[] IdentifyingFields { get; set; }
		
		/// <summary>
		/// Limit scanning only to these fields. When inspecting a table, we recommend that you inspect all columns. Otherwise, findings might be affected because hints from excluded columns will not be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includedFields")]
		public GooglePrivacyDlpV2FieldId[] IncludedFields { get; set; }
		
		/// <summary>
		/// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowsLimit")]
		public string RowsLimit { get; set; }
		
		/// <summary>
		/// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig. Caution: A [known issue](https://cloud.google.com/dlp/docs/known-issues#bq-sampling) is causing the `rowsLimitPercent` field to behave unexpectedly. We recommend using `rowsLimit` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowsLimitPercent")]
		public System.Nullable<System.Int32> RowsLimitPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sampleMethod")]
		public System.Nullable<GooglePrivacyDlpV2BigQueryOptionsSampleMethod> SampleMethod { get; set; }
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableReference")]
		public GooglePrivacyDlpV2BigQueryTable TableReference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2BigQueryOptionsSampleMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAMPLE_METHOD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANDOM_START = 2,
	}
	
	/// <summary>
	/// Bounding box encompassing detected text within an image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2BoundingBox
	{
		
		/// <summary>
		/// Height of the bounding box in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Left coordinate of the bounding box. (0,0) is upper left.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="left")]
		public System.Nullable<System.Int32> Left { get; set; }
		
		/// <summary>
		/// Top coordinate of the bounding box. (0,0) is upper left.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="top")]
		public System.Nullable<System.Int32> Top { get; set; }
		
		/// <summary>
		/// Width of the bounding box in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	/// <summary>
	/// Container for bytes to inspect or redact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ByteContentItem
	{
		
		/// <summary>
		/// Content data to inspect or redact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// The type of data stored in the bytes string. Default will be TEXT_UTF8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GooglePrivacyDlpV2ByteContentItemType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ByteContentItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYTES_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE_JPEG = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE_BMP = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE_PNG = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE_SVG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT_UTF8 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORD_DOCUMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PDF = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POWERPOINT_DOCUMENT = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCEL_DOCUMENT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVRO = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TSV = 13,
	}
	
	/// <summary>
	/// The request message for canceling a DLP job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CancelDlpJobRequest
	{
	}
	
	/// <summary>
	/// Message representing a set of files in Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CloudStorageFileSet
	{
		
		/// <summary>
		/// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Options defining a file or a set of files within a Cloud Storage bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CloudStorageOptions
	{
		
		/// <summary>
		/// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of `bytes_limit_per_file` and `bytes_limit_per_file_percent` can be specified. This field can't be set if de-identification is requested. For certain file types, setting this field has no effect. For more information, see [Limits on bytes scanned per file](https://cloud.google.com/dlp/docs/supported-file-types#max-byte-size-per-file).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bytesLimitPerFile")]
		public string BytesLimitPerFile { get; set; }
		
		/// <summary>
		/// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. This field can't be set if de-identification is requested. For certain file types, setting this field has no effect. For more information, see [Limits on bytes scanned per file](https://cloud.google.com/dlp/docs/supported-file-types#max-byte-size-per-file).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bytesLimitPerFilePercent")]
		public System.Nullable<System.Int32> BytesLimitPerFilePercent { get; set; }
		
		/// <summary>
		/// Set of files to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileSet")]
		public GooglePrivacyDlpV2FileSet FileSet { get; set; }
		
		/// <summary>
		/// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileTypes")]
		public string[] FileTypes { get; set; }
		
		/// <summary>
		/// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filesLimitPercent")]
		public System.Nullable<System.Int32> FilesLimitPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sampleMethod")]
		public GooglePrivacyDlpV2BigQueryOptionsSampleMethod SampleMethod { get; set; }
	}
	
	/// <summary>
	/// Set of files to scan.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2FileSet
	{
		
		/// <summary>
		/// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regexFileSet")]
		public GooglePrivacyDlpV2CloudStorageRegexFileSet RegexFileSet { get; set; }
		
		/// <summary>
		/// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CloudStorageRegexFileSet
	{
		
		/// <summary>
		/// The name of a Cloud Storage bucket. Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketName")]
		public string BucketName { get; set; }
		
		/// <summary>
		/// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeRegex")]
		public string[] ExcludeRegex { get; set; }
		
		/// <summary>
		/// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeRegex")]
		public string[] IncludeRegex { get; set; }
	}
	
	/// <summary>
	/// Message representing a single file or path in Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CloudStoragePath
	{
		
		/// <summary>
		/// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	/// <summary>
	/// The profile for a scanned column within a table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ColumnDataProfile
	{
		
		/// <summary>
		/// The name of the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// The infoType details for this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columnInfoType")]
		public GooglePrivacyDlpV2InfoTypeSummary ColumnInfoType { get; set; }
		
		/// <summary>
		/// The data type of a given column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columnType")]
		public System.Nullable<GooglePrivacyDlpV2ColumnDataProfileColumnType> ColumnType { get; set; }
		
		/// <summary>
		/// Score is a summary of all elements in the data profile. A higher number means more risk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataRiskLevel")]
		public GooglePrivacyDlpV2DataRiskLevel DataRiskLevel { get; set; }
		
		/// <summary>
		/// The BigQuery dataset ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// The BigQuery location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetLocation")]
		public string DatasetLocation { get; set; }
		
		/// <summary>
		/// The Google Cloud project ID that owns the BigQuery dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetProjectId")]
		public string DatasetProjectId { get; set; }
		
		/// <summary>
		/// Approximate percentage of entries being null in the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimatedNullPercentage")]
		public System.Nullable<GooglePrivacyDlpV2ColumnDataProfileEstimatedNullPercentage> EstimatedNullPercentage { get; set; }
		
		/// <summary>
		/// Approximate uniqueness of the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimatedUniquenessScore")]
		public System.Nullable<GooglePrivacyDlpV2ColumnDataProfileEstimatedUniquenessScore> EstimatedUniquenessScore { get; set; }
		
		/// <summary>
		/// The likelihood that this column contains free-form text. A value close to 1 may indicate the column is likely to contain free-form or natural language text. Range in 0-1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="freeTextScore")]
		public System.Nullable<System.Double> FreeTextScore { get; set; }
		
		/// <summary>
		/// The name of the profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Other types found within this column. List will be unordered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherMatches")]
		public GooglePrivacyDlpV2OtherInfoTypeSummary[] OtherMatches { get; set; }
		
		/// <summary>
		/// Indicates if a policy tag has been applied to the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyState")]
		public System.Nullable<GooglePrivacyDlpV2ColumnDataProfilePolicyState> PolicyState { get; set; }
		
		/// <summary>
		/// The last time the profile was generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profileLastGenerated")]
		public string ProfileLastGenerated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profileStatus")]
		public GooglePrivacyDlpV2ProfileStatus ProfileStatus { get; set; }
		
		/// <summary>
		/// Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitivityScore")]
		public GooglePrivacyDlpV2SensitivityScore SensitivityScore { get; set; }
		
		/// <summary>
		/// State of a profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GooglePrivacyDlpV2ColumnDataProfileState> State { get; set; }
		
		/// <summary>
		/// The resource name of the table data profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableDataProfile")]
		public string TableDataProfile { get; set; }
		
		/// <summary>
		/// The resource name of the table this column is within.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableFullResource")]
		public string TableFullResource { get; set; }
		
		/// <summary>
		/// The BigQuery table ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableId")]
		public string TableId { get; set; }
	}
	
	/// <summary>
	/// The infoType details for this column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeSummary
	{
		
		/// <summary>
		/// Not populated for predicted infotypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimatedPrevalence")]
		public System.Nullable<System.Int32> EstimatedPrevalence { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ColumnDataProfileColumnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_DATA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_INT64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_BOOL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_FLOAT64 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_STRING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_BYTES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_TIMESTAMP = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_DATE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_TIME = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_DATETIME = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_GEOGRAPHY = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NUMERIC = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_RECORD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_BIGNUMERIC = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_JSON = 14,
	}
	
	/// <summary>
	/// Score is a summary of all elements in the data profile. A higher number means more risk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataRiskLevel
	{
		
		/// <summary>
		/// The score applied to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<GooglePrivacyDlpV2DataRiskLevelScore> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2DataRiskLevelScore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_SCORE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_MODERATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_HIGH = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ColumnDataProfileEstimatedNullPercentage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL_PERCENTAGE_LEVEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL_PERCENTAGE_VERY_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL_PERCENTAGE_LOW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL_PERCENTAGE_MEDIUM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL_PERCENTAGE_HIGH = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ColumnDataProfileEstimatedUniquenessScore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIQUENESS_SCORE_LEVEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIQUENESS_SCORE_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIQUENESS_SCORE_MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIQUENESS_SCORE_HIGH = 3,
	}
	
	/// <summary>
	/// Infotype details for other infoTypes found within a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2OtherInfoTypeSummary
	{
		
		/// <summary>
		/// Approximate percentage of non-null rows that contained data detected by this infotype.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimatedPrevalence")]
		public System.Nullable<System.Int32> EstimatedPrevalence { get; set; }
		
		/// <summary>
		/// Whether this infoType was excluded from sensitivity and risk analysis due to factors such as low prevalence (subject to change).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludedFromAnalysis")]
		public System.Nullable<System.Boolean> ExcludedFromAnalysis { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ColumnDataProfilePolicyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_POLICY_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_POLICY_TAGGED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ProfileStatus
	{
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
		
		/// <summary>
		/// Time when the profile generation status was updated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ColumnDataProfileState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DONE = 2,
	}
	
	/// <summary>
	/// Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Container
	{
		
		/// <summary>
		/// A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Cloud Storage: 'gs://Bucket/folders/filename.txt'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullPath")]
		public string FullPath { get; set; }
		
		/// <summary>
		/// Project where the finding was found. Can be different from the project that owns the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - For Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativePath")]
		public string RelativePath { get; set; }
		
		/// <summary>
		/// The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rootPath")]
		public string RootPath { get; set; }
		
		/// <summary>
		/// Container type, for example BigQuery or Cloud Storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Findings container modification timestamp, if applicable. For Cloud Storage, this field contains the last file modification timestamp. For a BigQuery table, this field contains the last_modified_time property. For Datastore, this field isn't populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Findings container version, if available ("generation" for Cloud Storage).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ContentItem
	{
		
		/// <summary>
		/// Container for bytes to inspect or redact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="byteItem")]
		public GooglePrivacyDlpV2ByteContentItem ByteItem { get; set; }
		
		/// <summary>
		/// Structured content to inspect. Up to 50,000 `Value`s per request allowed. See https://cloud.google.com/dlp/docs/inspecting-structured-text#inspecting_a_table to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public GooglePrivacyDlpV2Table Table { get; set; }
		
		/// <summary>
		/// String data to inspect or redact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Structured content to inspect. Up to 50,000 `Value`s per request allowed. See https://cloud.google.com/dlp/docs/inspecting-structured-text#inspecting_a_table to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Table
	{
		
		/// <summary>
		/// Headers of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public GooglePrivacyDlpV2FieldId[] Headers { get; set; }
		
		/// <summary>
		/// Rows of the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public GooglePrivacyDlpV2Row[] Rows { get; set; }
	}
	
	/// <summary>
	/// Values of the row.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Row
	{
		
		/// <summary>
		/// Individual cells.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GooglePrivacyDlpV2Value[] Values { get; set; }
	}
	
	/// <summary>
	/// Precise location of the finding within a document, record, image, or metadata container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ContentLocation
	{
		
		/// <summary>
		/// Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for example, an image contained within a document).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerName")]
		public string ContainerName { get; set; }
		
		/// <summary>
		/// Finding container modification timestamp, if applicable. For Cloud Storage, this field contains the last file modification timestamp. For a BigQuery table, this field contains the last_modified_time property. For Datastore, this field isn't populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerTimestamp")]
		public string ContainerTimestamp { get; set; }
		
		/// <summary>
		/// Finding container version, if available ("generation" for Cloud Storage).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersion")]
		public string ContainerVersion { get; set; }
		
		/// <summary>
		/// Location of a finding within a document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentLocation")]
		public GooglePrivacyDlpV2DocumentLocation DocumentLocation { get; set; }
		
		/// <summary>
		/// Location of the finding within an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageLocation")]
		public GooglePrivacyDlpV2ImageLocation ImageLocation { get; set; }
		
		/// <summary>
		/// Metadata Location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataLocation")]
		public GooglePrivacyDlpV2MetadataLocation MetadataLocation { get; set; }
		
		/// <summary>
		/// Location of a finding within a row or record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recordLocation")]
		public GooglePrivacyDlpV2RecordLocation RecordLocation { get; set; }
	}
	
	/// <summary>
	/// Location of a finding within a document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DocumentLocation
	{
		
		/// <summary>
		/// Offset of the line, from the beginning of the file, where the finding is located.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileOffset")]
		public string FileOffset { get; set; }
	}
	
	/// <summary>
	/// Location of the finding within an image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ImageLocation
	{
		
		/// <summary>
		/// Bounding boxes locating the pixels within the image containing the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBoxes")]
		public GooglePrivacyDlpV2BoundingBox[] BoundingBoxes { get; set; }
	}
	
	/// <summary>
	/// Metadata Location
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2MetadataLocation
	{
		
		/// <summary>
		/// Storage metadata label to indicate which metadata entry contains findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageLabel")]
		public GooglePrivacyDlpV2StorageMetadataLabel StorageLabel { get; set; }
		
		/// <summary>
		/// Type of metadata containing the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GooglePrivacyDlpV2MetadataLocationType> Type { get; set; }
	}
	
	/// <summary>
	/// Storage metadata label to indicate which metadata entry contains findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StorageMetadataLabel
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2MetadataLocationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METADATATYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORAGE_METADATA = 1,
	}
	
	/// <summary>
	/// Location of a finding within a row or record.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RecordLocation
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public GooglePrivacyDlpV2FieldId FieldId { get; set; }
		
		/// <summary>
		/// Message for a unique key indicating a record that contains a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recordKey")]
		public GooglePrivacyDlpV2RecordKey RecordKey { get; set; }
		
		/// <summary>
		/// Location of a finding within a table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableLocation")]
		public GooglePrivacyDlpV2TableLocation TableLocation { get; set; }
	}
	
	/// <summary>
	/// Message for a unique key indicating a record that contains a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RecordKey
	{
		
		/// <summary>
		/// Row key for identifying a record in BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryKey")]
		public GooglePrivacyDlpV2BigQueryKey BigQueryKey { get; set; }
		
		/// <summary>
		/// Record key for a finding in Cloud Datastore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datastoreKey")]
		public GooglePrivacyDlpV2DatastoreKey DatastoreKey { get; set; }
		
		/// <summary>
		/// Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idValues")]
		public string[] IdValues { get; set; }
	}
	
	/// <summary>
	/// Record key for a finding in Cloud Datastore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DatastoreKey
	{
		
		/// <summary>
		/// A unique identifier for a Datastore entity. If a key's partition ID or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityKey")]
		public GooglePrivacyDlpV2Key EntityKey { get; set; }
	}
	
	/// <summary>
	/// A unique identifier for a Datastore entity. If a key's partition ID or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Key
	{
		
		/// <summary>
		/// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partitionId")]
		public GooglePrivacyDlpV2PartitionId PartitionId { get; set; }
		
		/// <summary>
		/// The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public GooglePrivacyDlpV2PathElement[] Path { get; set; }
	}
	
	/// <summary>
	/// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PartitionId
	{
		
		/// <summary>
		/// If not empty, the ID of the namespace to which the entities belong.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespaceId")]
		public string NamespaceId { get; set; }
		
		/// <summary>
		/// The ID of the project to which the entities belong.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	/// <summary>
	/// A (kind, ID/name) pair used to construct a key path. If either name or ID is set, the element is complete. If neither is set, the element is incomplete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PathElement
	{
		
		/// <summary>
		/// The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and may not be supported in the future.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot be `""`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be `""`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Location of a finding within a table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TableLocation
	{
		
		/// <summary>
		/// The zero-based index of the row where the finding is located. Only populated for resources that have a natural ordering, not BigQuery. In BigQuery, to identify the row a finding came from, populate BigQueryOptions.identifying_fields with your primary key column names and when you store the findings the value of those columns will be stored inside of Finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowIndex")]
		public string RowIndex { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateDeidentifyTemplate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CreateDeidentifyTemplateRequest
	{
		
		/// <summary>
		/// DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplate")]
		public GooglePrivacyDlpV2DeidentifyTemplate DeidentifyTemplate { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateId")]
		public string TemplateId { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateDiscoveryConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CreateDiscoveryConfigRequest
	{
		
		/// <summary>
		/// The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configId")]
		public string ConfigId { get; set; }
		
		/// <summary>
		/// Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-profiles#retention).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoveryConfig")]
		public GooglePrivacyDlpV2DiscoveryConfig DiscoveryConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-profiles#retention).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryConfig
	{
		
		/// <summary>
		/// Actions to execute at the completion of scanning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public GooglePrivacyDlpV2DataProfileAction[] Actions { get; set; }
		
		/// <summary>
		/// Output only. The creation timestamp of a DiscoveryConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Display name (max 100 chars)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GooglePrivacyDlpV2Error[] Errors { get; set; }
		
		/// <summary>
		/// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplates")]
		public string[] InspectTemplates { get; set; }
		
		/// <summary>
		/// Output only. The timestamp of the last time this config was executed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastRunTime")]
		public string LastRunTime { get; set; }
		
		/// <summary>
		/// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Project and scan location information. Only set when the parent is an org.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgConfig")]
		public GooglePrivacyDlpV2OrgConfig OrgConfig { get; set; }
		
		/// <summary>
		/// Required. A status for this configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GooglePrivacyDlpV2DiscoveryConfigStatus> Status { get; set; }
		
		/// <summary>
		/// Target to match against for determining what to scan and how frequently.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public GooglePrivacyDlpV2DiscoveryTarget[] Targets { get; set; }
		
		/// <summary>
		/// Output only. The last update timestamp of a DiscoveryConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A task to execute when a data profile has been generated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfileAction
	{
		
		/// <summary>
		/// If set, the detailed data profiles will be persisted to the location of your choice whenever updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportData")]
		public GooglePrivacyDlpV2Export ExportData { get; set; }
		
		/// <summary>
		/// Send a Pub/Sub message into the given Pub/Sub topic to connect other systems to data profile generation. The message payload data will be the byte serialization of `DataProfilePubSubMessage`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pubSubNotification")]
		public GooglePrivacyDlpV2PubSubNotification PubSubNotification { get; set; }
	}
	
	/// <summary>
	/// If set, the detailed data profiles will be persisted to the location of your choice whenever updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Export
	{
		
		/// <summary>
		/// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profileTable")]
		public GooglePrivacyDlpV2BigQueryTable ProfileTable { get; set; }
	}
	
	/// <summary>
	/// Send a Pub/Sub message into the given Pub/Sub topic to connect other systems to data profile generation. The message payload data will be the byte serialization of `DataProfilePubSubMessage`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PubSubNotification
	{
		
		/// <summary>
		/// How much data to include in the Pub/Sub message. If the user wishes to limit the size of the message, they can use resource_name and fetch the profile fields they wish to. Per table profile (not per column).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detailOfMessage")]
		public System.Nullable<GooglePrivacyDlpV2PubSubNotificationDetailOfMessage> DetailOfMessage { get; set; }
		
		/// <summary>
		/// The type of event that triggers a Pub/Sub. At most one `PubSubNotification` per EventType is permitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event")]
		public System.Nullable<GooglePrivacyDlpV2PubSubNotificationEvent> Event { get; set; }
		
		/// <summary>
		/// A condition for determining whether a Pub/Sub should be triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pubsubCondition")]
		public GooglePrivacyDlpV2DataProfilePubSubCondition PubsubCondition { get; set; }
		
		/// <summary>
		/// Cloud Pub/Sub topic to send notifications to. Format is projects/{project}/topics/{topic}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topic")]
		public string Topic { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2PubSubNotificationDetailOfMessage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETAIL_LEVEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE_PROFILE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_NAME = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2PubSubNotificationEvent
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW_PROFILE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGED_PROFILE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCORE_INCREASED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR_CHANGED = 4,
	}
	
	/// <summary>
	/// A condition for determining whether a Pub/Sub should be triggered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfilePubSubCondition
	{
		
		/// <summary>
		/// An expression, consisting of an operator and conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expressions")]
		public GooglePrivacyDlpV2PubSubExpressions Expressions { get; set; }
	}
	
	/// <summary>
	/// An expression, consisting of an operator and conditions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PubSubExpressions
	{
		
		/// <summary>
		/// Conditions to apply to the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GooglePrivacyDlpV2PubSubCondition[] Conditions { get; set; }
		
		/// <summary>
		/// The operator to apply to the collection of conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logicalOperator")]
		public System.Nullable<GooglePrivacyDlpV2PubSubExpressionsLogicalOperator> LogicalOperator { get; set; }
	}
	
	/// <summary>
	/// A condition consisting of a value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2PubSubCondition
	{
		
		/// <summary>
		/// The minimum data risk score that triggers the condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimumRiskScore")]
		public System.Nullable<GooglePrivacyDlpV2PubSubConditionMinimumRiskScore> MinimumRiskScore { get; set; }
		
		/// <summary>
		/// The minimum sensitivity level that triggers the condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimumSensitivityScore")]
		public GooglePrivacyDlpV2PubSubConditionMinimumRiskScore MinimumSensitivityScore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2PubSubConditionMinimumRiskScore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROFILE_SCORE_BUCKET_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM_OR_HIGH = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2PubSubExpressionsLogicalOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOGICAL_OPERATOR_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AND = 2,
	}
	
	/// <summary>
	/// Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Error
	{
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public GoogleRpcStatus Details { get; set; }
		
		/// <summary>
		/// The times the error occurred. List includes the oldest timestamp and the last 9 timestamps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamps")]
		public string[] Timestamps { get; set; }
	}
	
	/// <summary>
	/// Project and scan location information. Only set when the parent is an org.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2OrgConfig
	{
		
		/// <summary>
		/// The location to begin a discovery scan. Denotes an organization ID or folder ID within an organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GooglePrivacyDlpV2DiscoveryStartingLocation Location { get; set; }
		
		/// <summary>
		/// The project that will run the scan. The DLP service account that exists within this project must have access to all resources that are profiled, and the Cloud DLP API must be enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	/// <summary>
	/// The location to begin a discovery scan. Denotes an organization ID or folder ID within an organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryStartingLocation
	{
		
		/// <summary>
		/// The ID of the Folder within an organization to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folderId")]
		public string FolderId { get; set; }
		
		/// <summary>
		/// The ID of an organization to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		public string OrganizationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2DiscoveryConfigStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 2,
	}
	
	/// <summary>
	/// Target used to match against for Discovery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DiscoveryTarget
	{
		
		/// <summary>
		/// Target used to match against for discovery with BigQuery tables
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryTarget")]
		public GooglePrivacyDlpV2BigQueryDiscoveryTarget BigQueryTarget { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateDlpJobRequest. Used to initiate long running jobs such as calculating risk metrics or inspecting Google Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CreateDlpJobRequest
	{
		
		/// <summary>
		/// Controls what and how to inspect for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectJob")]
		public GooglePrivacyDlpV2InspectJobConfig InspectJob { get; set; }
		
		/// <summary>
		/// The job id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="riskJob")]
		public GooglePrivacyDlpV2RiskAnalysisJobConfig RiskJob { get; set; }
	}
	
	/// <summary>
	/// Controls what and how to inspect for findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectJobConfig
	{
		
		/// <summary>
		/// Actions to execute at the completion of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public GooglePrivacyDlpV2Action[] Actions { get; set; }
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
		
		/// <summary>
		/// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplateName")]
		public string InspectTemplateName { get; set; }
		
		/// <summary>
		/// Shared message indicating Cloud storage type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageConfig")]
		public GooglePrivacyDlpV2StorageConfig StorageConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectConfig
	{
		
		/// <summary>
		/// Deprecated and unused.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentOptions")]
		public string[] ContentOptions { get; set; }
		
		/// <summary>
		/// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customInfoTypes")]
		public GooglePrivacyDlpV2CustomInfoType[] CustomInfoTypes { get; set; }
		
		/// <summary>
		/// When true, excludes type information of the findings. This is not used for data profiling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeInfoTypes")]
		public System.Nullable<System.Boolean> ExcludeInfoTypes { get; set; }
		
		/// <summary>
		/// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeQuote")]
		public System.Nullable<System.Boolean> IncludeQuote { get; set; }
		
		/// <summary>
		/// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose a default list of detectors to run, which may change over time. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypes")]
		public GooglePrivacyDlpV2InfoType[] InfoTypes { get; set; }
		
		/// <summary>
		/// Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limits")]
		public GooglePrivacyDlpV2FindingLimits Limits { get; set; }
		
		/// <summary>
		/// Only returns findings equal to or above this threshold. The default is POSSIBLE. In general, the highest likelihood setting yields the fewest findings in results and the lowest chance of a false positive. For more information, see [Match likelihood](https://cloud.google.com/dlp/docs/likelihood).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minLikelihood")]
		public GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood MinLikelihood { get; set; }
		
		/// <summary>
		/// Minimum likelihood per infotype. For each infotype, a user can specify a minimum likelihood. The system only returns a finding if its likelihood is above this threshold. If this field is not set, the system uses the InspectConfig min_likelihood.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minLikelihoodPerInfoType")]
		public GooglePrivacyDlpV2InfoTypeLikelihood[] MinLikelihoodPerInfoType { get; set; }
		
		/// <summary>
		/// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleSet")]
		public GooglePrivacyDlpV2InspectionRuleSet[] RuleSet { get; set; }
	}
	
	/// <summary>
	/// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CustomInfoType
	{
		
		/// <summary>
		/// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectionRules")]
		public GooglePrivacyDlpV2DetectionRule[] DetectionRules { get; set; }
		
		/// <summary>
		/// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dictionary")]
		public GooglePrivacyDlpV2Dictionary Dictionary { get; set; }
		
		/// <summary>
		/// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exclusionType")]
		public System.Nullable<GooglePrivacyDlpV2CustomInfoTypeExclusionType> ExclusionType { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="likelihood")]
		public GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood Likelihood { get; set; }
		
		/// <summary>
		/// Message defining a custom regular expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regex")]
		public GooglePrivacyDlpV2Regex Regex { get; set; }
		
		/// <summary>
		/// Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitivityScore")]
		public GooglePrivacyDlpV2SensitivityScore SensitivityScore { get; set; }
		
		/// <summary>
		/// A reference to a StoredInfoType to use with scanning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storedType")]
		public GooglePrivacyDlpV2StoredType StoredType { get; set; }
		
		/// <summary>
		/// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="surrogateType")]
		public GooglePrivacyDlpV2SurrogateType SurrogateType { get; set; }
	}
	
	/// <summary>
	/// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DetectionRule
	{
		
		/// <summary>
		/// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hotwordRule")]
		public GooglePrivacyDlpV2HotwordRule HotwordRule { get; set; }
	}
	
	/// <summary>
	/// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HotwordRule
	{
		
		/// <summary>
		/// Message defining a custom regular expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hotwordRegex")]
		public GooglePrivacyDlpV2Regex HotwordRegex { get; set; }
		
		/// <summary>
		/// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="likelihoodAdjustment")]
		public GooglePrivacyDlpV2LikelihoodAdjustment LikelihoodAdjustment { get; set; }
		
		/// <summary>
		/// Message for specifying a window around a finding to apply a detection rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proximity")]
		public GooglePrivacyDlpV2Proximity Proximity { get; set; }
	}
	
	/// <summary>
	/// Message defining a custom regular expression.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Regex
	{
		
		/// <summary>
		/// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupIndexes")]
		public int[] GroupIndexes { get; set; }
		
		/// <summary>
		/// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pattern")]
		public string Pattern { get; set; }
	}
	
	/// <summary>
	/// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LikelihoodAdjustment
	{
		
		/// <summary>
		/// Set the likelihood of a finding to a fixed value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixedLikelihood")]
		public System.Nullable<GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood> FixedLikelihood { get; set; }
		
		/// <summary>
		/// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativeLikelihood")]
		public System.Nullable<System.Int32> RelativeLikelihood { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIKELIHOOD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERY_UNLIKELY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNLIKELY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSSIBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIKELY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERY_LIKELY = 5,
	}
	
	/// <summary>
	/// Message for specifying a window around a finding to apply a detection rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Proximity
	{
		
		/// <summary>
		/// Number of characters after the finding to consider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowAfter")]
		public System.Nullable<System.Int32> WindowAfter { get; set; }
		
		/// <summary>
		/// Number of characters before the finding to consider. For tabular data, if you want to modify the likelihood of an entire column of findngs, set this to 1. For more information, see [Hotword example: Set the match likelihood of a table column] (https://cloud.google.com/dlp/docs/creating-custom-infotypes-likelihood#match-column-values).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowBefore")]
		public System.Nullable<System.Int32> WindowBefore { get; set; }
	}
	
	/// <summary>
	/// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Dictionary
	{
		
		/// <summary>
		/// Message representing a single file or path in Cloud Storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudStoragePath")]
		public GooglePrivacyDlpV2CloudStoragePath CloudStoragePath { get; set; }
		
		/// <summary>
		/// Message defining a list of words or phrases to search for in the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wordList")]
		public GooglePrivacyDlpV2WordList WordList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2CustomInfoTypeExclusionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUSION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUSION_TYPE_EXCLUDE = 1,
	}
	
	/// <summary>
	/// A reference to a StoredInfoType to use with scanning.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StoredType
	{
		
		/// <summary>
		/// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2SurrogateType
	{
	}
	
	/// <summary>
	/// Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2FindingLimits
	{
		
		/// <summary>
		/// Configuration of findings limit given for specified infoTypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFindingsPerInfoType")]
		public GooglePrivacyDlpV2InfoTypeLimit[] MaxFindingsPerInfoType { get; set; }
		
		/// <summary>
		/// Max number of findings that are returned for each item scanned. When set within an InspectContentRequest, this field is ignored. This value isn't a hard limit. If the number of findings for an item reaches this limit, the inspection of that item ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns for the item can be multiple times higher than this value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFindingsPerItem")]
		public System.Nullable<System.Int32> MaxFindingsPerItem { get; set; }
		
		/// <summary>
		/// Max number of findings that are returned per request or job. If you set this field in an InspectContentRequest, the resulting maximum value is the value that you set or 3,000, whichever is lower. This value isn't a hard limit. If an inspection reaches this limit, the inspection ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns can be multiple times higher than this value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFindingsPerRequest")]
		public System.Nullable<System.Int32> MaxFindingsPerRequest { get; set; }
	}
	
	/// <summary>
	/// Max findings configuration per infoType, per content item or long running DlpJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeLimit
	{
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// Max findings limit for the given infoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFindings")]
		public System.Nullable<System.Int32> MaxFindings { get; set; }
	}
	
	/// <summary>
	/// Configuration for setting a minimum likelihood per infotype. Used to customize the minimum likelihood level for specific infotypes in the request. For example, use this if you want to lower the precision for PERSON_NAME without lowering the precision for the other infotypes in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeLikelihood
	{
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// Only returns findings equal to or above this threshold. This field is required or else the configuration fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minLikelihood")]
		public GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood MinLikelihood { get; set; }
	}
	
	/// <summary>
	/// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectionRuleSet
	{
		
		/// <summary>
		/// List of infoTypes this rule set is applied to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypes")]
		public GooglePrivacyDlpV2InfoType[] InfoTypes { get; set; }
		
		/// <summary>
		/// Set of rules to be applied to infoTypes. The rules are applied in order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public GooglePrivacyDlpV2InspectionRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectionRule
	{
		
		/// <summary>
		/// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exclusionRule")]
		public GooglePrivacyDlpV2ExclusionRule ExclusionRule { get; set; }
		
		/// <summary>
		/// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hotwordRule")]
		public GooglePrivacyDlpV2HotwordRule HotwordRule { get; set; }
	}
	
	/// <summary>
	/// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ExclusionRule
	{
		
		/// <summary>
		/// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dictionary")]
		public GooglePrivacyDlpV2Dictionary Dictionary { get; set; }
		
		/// <summary>
		/// The rule to exclude findings based on a hotword. For record inspection of tables, column names are considered hotwords. An example of this is to exclude a finding if it belongs to a BigQuery column that matches a specific pattern.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeByHotword")]
		public GooglePrivacyDlpV2ExcludeByHotword ExcludeByHotword { get; set; }
		
		/// <summary>
		/// List of excluded infoTypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeInfoTypes")]
		public GooglePrivacyDlpV2ExcludeInfoTypes ExcludeInfoTypes { get; set; }
		
		/// <summary>
		/// How the rule is applied, see MatchingType documentation for details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchingType")]
		public System.Nullable<GooglePrivacyDlpV2ExclusionRuleMatchingType> MatchingType { get; set; }
		
		/// <summary>
		/// Message defining a custom regular expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regex")]
		public GooglePrivacyDlpV2Regex Regex { get; set; }
	}
	
	/// <summary>
	/// The rule to exclude findings based on a hotword. For record inspection of tables, column names are considered hotwords. An example of this is to exclude a finding if it belongs to a BigQuery column that matches a specific pattern.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ExcludeByHotword
	{
		
		/// <summary>
		/// Message defining a custom regular expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hotwordRegex")]
		public GooglePrivacyDlpV2Regex HotwordRegex { get; set; }
		
		/// <summary>
		/// Message for specifying a window around a finding to apply a detection rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proximity")]
		public GooglePrivacyDlpV2Proximity Proximity { get; set; }
	}
	
	/// <summary>
	/// List of excluded infoTypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ExcludeInfoTypes
	{
		
		/// <summary>
		/// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"` and `exclusion_rule` containing `exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypes")]
		public GooglePrivacyDlpV2InfoType[] InfoTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2ExclusionRuleMatchingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCHING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCHING_TYPE_FULL_MATCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCHING_TYPE_PARTIAL_MATCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCHING_TYPE_INVERSE_MATCH = 3,
	}
	
	/// <summary>
	/// Shared message indicating Cloud storage type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StorageConfig
	{
		
		/// <summary>
		/// Options defining BigQuery table and row identifiers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryOptions")]
		public GooglePrivacyDlpV2BigQueryOptions BigQueryOptions { get; set; }
		
		/// <summary>
		/// Options defining a file or a set of files within a Cloud Storage bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudStorageOptions")]
		public GooglePrivacyDlpV2CloudStorageOptions CloudStorageOptions { get; set; }
		
		/// <summary>
		/// Options defining a data set within Google Cloud Datastore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datastoreOptions")]
		public GooglePrivacyDlpV2DatastoreOptions DatastoreOptions { get; set; }
		
		/// <summary>
		/// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hybridOptions")]
		public GooglePrivacyDlpV2HybridOptions HybridOptions { get; set; }
		
		/// <summary>
		/// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timespanConfig")]
		public GooglePrivacyDlpV2TimespanConfig TimespanConfig { get; set; }
	}
	
	/// <summary>
	/// Options defining a data set within Google Cloud Datastore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DatastoreOptions
	{
		
		/// <summary>
		/// A representation of a Datastore kind.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public GooglePrivacyDlpV2KindExpression Kind { get; set; }
		
		/// <summary>
		/// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partitionId")]
		public GooglePrivacyDlpV2PartitionId PartitionId { get; set; }
	}
	
	/// <summary>
	/// A representation of a Datastore kind.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2KindExpression
	{
		
		/// <summary>
		/// The name of the kind.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridOptions
	{
		
		/// <summary>
		/// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requiredFindingLabelKeys")]
		public string[] RequiredFindingLabelKeys { get; set; }
		
		/// <summary>
		/// Instructions regarding the table content being inspected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableOptions")]
		public GooglePrivacyDlpV2TableOptions TableOptions { get; set; }
	}
	
	/// <summary>
	/// Instructions regarding the table content being inspected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TableOptions
	{
		
		/// <summary>
		/// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identifyingFields")]
		public GooglePrivacyDlpV2FieldId[] IdentifyingFields { get; set; }
	}
	
	/// <summary>
	/// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TimespanConfig
	{
		
		/// <summary>
		/// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableAutoPopulationOfTimespanConfig")]
		public System.Nullable<System.Boolean> EnableAutoPopulationOfTimespanConfig { get; set; }
		
		/// <summary>
		/// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampField")]
		public GooglePrivacyDlpV2FieldId TimestampField { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateInspectTemplate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CreateInspectTemplateRequest
	{
		
		/// <summary>
		/// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplate")]
		public GooglePrivacyDlpV2InspectTemplate InspectTemplate { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateId")]
		public string TemplateId { get; set; }
	}
	
	/// <summary>
	/// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectTemplate
	{
		
		/// <summary>
		/// Output only. The creation timestamp of an inspectTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Short description (max 256 chars).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display name (max 256 chars).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
		
		/// <summary>
		/// Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The last update timestamp of an inspectTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateJobTrigger.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CreateJobTriggerRequest
	{
		
		/// <summary>
		/// Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTrigger")]
		public GooglePrivacyDlpV2JobTrigger JobTrigger { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggerId")]
		public string TriggerId { get; set; }
	}
	
	/// <summary>
	/// Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2JobTrigger
	{
		
		/// <summary>
		/// Output only. The creation timestamp of a triggeredJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// User provided description (max 256 chars)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display name (max 100 chars)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GooglePrivacyDlpV2Error[] Errors { get; set; }
		
		/// <summary>
		/// Controls what and how to inspect for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectJob")]
		public GooglePrivacyDlpV2InspectJobConfig InspectJob { get; set; }
		
		/// <summary>
		/// Output only. The timestamp of the last time this trigger executed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastRunTime")]
		public string LastRunTime { get; set; }
		
		/// <summary>
		/// Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. A status for this trigger.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GooglePrivacyDlpV2JobTriggerStatus> Status { get; set; }
		
		/// <summary>
		/// A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggers")]
		public GooglePrivacyDlpV2Trigger[] Triggers { get; set; }
		
		/// <summary>
		/// Output only. The last update timestamp of a triggeredJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2JobTriggerStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTHY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 3,
	}
	
	/// <summary>
	/// What event needs to occur for a new job to be started.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Trigger
	{
		
		/// <summary>
		/// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manual")]
		public GooglePrivacyDlpV2Manual Manual { get; set; }
		
		/// <summary>
		/// Schedule for inspect job triggers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public GooglePrivacyDlpV2Schedule Schedule { get; set; }
	}
	
	/// <summary>
	/// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Manual
	{
	}
	
	/// <summary>
	/// Schedule for inspect job triggers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Schedule
	{
		
		/// <summary>
		/// With this option a job is started on a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recurrencePeriodDuration")]
		public string RecurrencePeriodDuration { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateStoredInfoType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2CreateStoredInfoTypeRequest
	{
		
		/// <summary>
		/// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public GooglePrivacyDlpV2StoredInfoTypeConfig Config { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storedInfoTypeId")]
		public string StoredInfoTypeId { get; set; }
	}
	
	/// <summary>
	/// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StoredInfoTypeConfig
	{
		
		/// <summary>
		/// Description of the StoredInfoType (max 256 characters).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dictionary")]
		public GooglePrivacyDlpV2Dictionary Dictionary { get; set; }
		
		/// <summary>
		/// Display name of the StoredInfoType (max 256 characters).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="largeCustomDictionary")]
		public GooglePrivacyDlpV2LargeCustomDictionaryConfig LargeCustomDictionary { get; set; }
		
		/// <summary>
		/// Message defining a custom regular expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regex")]
		public GooglePrivacyDlpV2Regex Regex { get; set; }
	}
	
	/// <summary>
	/// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LargeCustomDictionaryConfig
	{
		
		/// <summary>
		/// Message defining a field of a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryField")]
		public GooglePrivacyDlpV2BigQueryField BigQueryField { get; set; }
		
		/// <summary>
		/// Message representing a set of files in Cloud Storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudStorageFileSet")]
		public GooglePrivacyDlpV2CloudStorageFileSet CloudStorageFileSet { get; set; }
		
		/// <summary>
		/// Message representing a single file or path in Cloud Storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputPath")]
		public GooglePrivacyDlpV2CloudStoragePath OutputPath { get; set; }
	}
	
	/// <summary>
	/// The schema of data to be saved to the BigQuery table when the `DataProfileAction` is enabled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfileBigQueryRowSchema
	{
		
		/// <summary>
		/// The profile for a scanned column within a table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columnProfile")]
		public GooglePrivacyDlpV2ColumnDataProfile ColumnProfile { get; set; }
		
		/// <summary>
		/// The profile for a scanned table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableProfile")]
		public GooglePrivacyDlpV2TableDataProfile TableProfile { get; set; }
	}
	
	/// <summary>
	/// The profile for a scanned table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TableDataProfile
	{
		
		/// <summary>
		/// Snapshot of the configurations used to generate the profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configSnapshot")]
		public GooglePrivacyDlpV2DataProfileConfigSnapshot ConfigSnapshot { get; set; }
		
		/// <summary>
		/// The time at which the table was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Score is a summary of all elements in the data profile. A higher number means more risk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataRiskLevel")]
		public GooglePrivacyDlpV2DataRiskLevel DataRiskLevel { get; set; }
		
		/// <summary>
		/// The BigQuery dataset ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// The BigQuery location where the dataset's data is stored. See https://cloud.google.com/bigquery/docs/locations for supported locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetLocation")]
		public string DatasetLocation { get; set; }
		
		/// <summary>
		/// The Google Cloud project ID that owns the BigQuery dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetProjectId")]
		public string DatasetProjectId { get; set; }
		
		/// <summary>
		/// How the table is encrypted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionStatus")]
		public System.Nullable<GooglePrivacyDlpV2TableDataProfileEncryptionStatus> EncryptionStatus { get; set; }
		
		/// <summary>
		/// Optional. The time when this table expires.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationTime")]
		public string ExpirationTime { get; set; }
		
		/// <summary>
		/// The number of columns skipped in the table because of an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedColumnCount")]
		public string FailedColumnCount { get; set; }
		
		/// <summary>
		/// The resource name of the table. https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullResource")]
		public string FullResource { get; set; }
		
		/// <summary>
		/// The time when this table was last modified
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedTime")]
		public string LastModifiedTime { get; set; }
		
		/// <summary>
		/// The name of the profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Other infoTypes found in this table's data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherInfoTypes")]
		public GooglePrivacyDlpV2OtherInfoTypeSummary[] OtherInfoTypes { get; set; }
		
		/// <summary>
		/// The infoTypes predicted from this table's data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictedInfoTypes")]
		public GooglePrivacyDlpV2InfoTypeSummary[] PredictedInfoTypes { get; set; }
		
		/// <summary>
		/// The last time the profile was generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profileLastGenerated")]
		public string ProfileLastGenerated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profileStatus")]
		public GooglePrivacyDlpV2ProfileStatus ProfileStatus { get; set; }
		
		/// <summary>
		/// The resource name to the project data profile for this table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectDataProfile")]
		public string ProjectDataProfile { get; set; }
		
		/// <summary>
		/// The labels applied to the resource at the time the profile was generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceLabels")]
		public System.Collections.Generic.Dictionary<string, string> ResourceLabels { get; set; }
		
		/// <summary>
		/// How broadly a resource has been shared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceVisibility")]
		public System.Nullable<GooglePrivacyDlpV2TableDataProfileResourceVisibility> ResourceVisibility { get; set; }
		
		/// <summary>
		/// Number of rows in the table when the profile was generated. This will not be populated for BigLake tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowCount")]
		public string RowCount { get; set; }
		
		/// <summary>
		/// The number of columns profiled in the table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scannedColumnCount")]
		public string ScannedColumnCount { get; set; }
		
		/// <summary>
		/// Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitivityScore")]
		public GooglePrivacyDlpV2SensitivityScore SensitivityScore { get; set; }
		
		/// <summary>
		/// State of a profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GooglePrivacyDlpV2ColumnDataProfileState State { get; set; }
		
		/// <summary>
		/// The BigQuery table ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableId")]
		public string TableId { get; set; }
		
		/// <summary>
		/// The size of the table when the profile was generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSizeBytes")]
		public string TableSizeBytes { get; set; }
	}
	
	/// <summary>
	/// Snapshot of the configurations used to generate the profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfileConfigSnapshot
	{
		
		/// <summary>
		/// Configuration for setting up a job to scan resources for profile generation. Only one data profile configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-profiles#retention).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataProfileJob")]
		public GooglePrivacyDlpV2DataProfileJobConfig DataProfileJob { get; set; }
		
		/// <summary>
		/// Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-profiles#retention).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoveryConfig")]
		public GooglePrivacyDlpV2DiscoveryConfig DiscoveryConfig { get; set; }
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for setting up a job to scan resources for profile generation. Only one data profile configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-profiles#retention).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfileJobConfig
	{
		
		/// <summary>
		/// Actions to execute at the completion of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataProfileActions")]
		public GooglePrivacyDlpV2DataProfileAction[] DataProfileActions { get; set; }
		
		/// <summary>
		/// Detection logic for profile generation. Not all template features are used by profiles. FindingLimits, include_quote and exclude_info_types have no impact on data profiling. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplates")]
		public string[] InspectTemplates { get; set; }
		
		/// <summary>
		/// The data that will be profiled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GooglePrivacyDlpV2DataProfileLocation Location { get; set; }
		
		/// <summary>
		/// The project that will run the scan. The DLP service account that exists within this project must have access to all resources that are profiled, and the Cloud DLP API must be enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	/// <summary>
	/// The data that will be profiled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfileLocation
	{
		
		/// <summary>
		/// The ID of the Folder within an organization to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folderId")]
		public string FolderId { get; set; }
		
		/// <summary>
		/// The ID of an organization to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizationId")]
		public string OrganizationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2TableDataProfileEncryptionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_GOOGLE_MANAGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_CUSTOMER_MANAGED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2TableDataProfileResourceVisibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_VISIBILITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_VISIBILITY_PUBLIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_VISIBILITY_RESTRICTED = 2,
	}
	
	/// <summary>
	/// Pub/Sub topic message for a DataProfileAction.PubSubNotification event. To receive a message of protocol buffer schema type, convert the message data to an object of this proto class.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DataProfilePubSubMessage
	{
		
		/// <summary>
		/// The event that caused the Pub/Sub message to be sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event")]
		public GooglePrivacyDlpV2PubSubNotificationEvent Event { get; set; }
		
		/// <summary>
		/// The profile for a scanned table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public GooglePrivacyDlpV2TableDataProfile Profile { get; set; }
	}
	
	/// <summary>
	/// Message for a date time object. e.g. 2018-01-01, 5th August.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DateTime
	{
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public GoogleTypeDate Date { get; set; }
		
		/// <summary>
		/// Day of week
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dayOfWeek")]
		public GooglePrivacyDlpV2ValueDayOfWeekValue DayOfWeek { get; set; }
		
		/// <summary>
		/// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="time")]
		public GoogleTypeTimeOfDay Time { get; set; }
		
		/// <summary>
		/// Time zone of the date time object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public GooglePrivacyDlpV2TimeZone TimeZone { get; set; }
	}
	
	/// <summary>
	/// Time zone of the date time object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TimeZone
	{
		
		/// <summary>
		/// Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For "UTC-9", this value is -540.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offsetMinutes")]
		public System.Nullable<System.Int32> OffsetMinutes { get; set; }
	}
	
	/// <summary>
	/// Request to de-identify a ContentItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeidentifyContentRequest
	{
		
		/// <summary>
		/// The configuration that controls how the data will change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyConfig")]
		public GooglePrivacyDlpV2DeidentifyConfig DeidentifyConfig { get; set; }
		
		/// <summary>
		/// Template to use. Any configuration directly specified in deidentify_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplateName")]
		public string DeidentifyTemplateName { get; set; }
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
		
		/// <summary>
		/// Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplateName")]
		public string InspectTemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public GooglePrivacyDlpV2ContentItem Item { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
	}
	
	/// <summary>
	/// Results of de-identifying a ContentItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DeidentifyContentResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public GooglePrivacyDlpV2ContentItem Item { get; set; }
		
		/// <summary>
		/// Overview of the modifications that occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overview")]
		public GooglePrivacyDlpV2TransformationOverview Overview { get; set; }
	}
	
	/// <summary>
	/// Overview of the modifications that occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationOverview
	{
		
		/// <summary>
		/// Transformations applied to the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationSummaries")]
		public GooglePrivacyDlpV2TransformationSummary[] TransformationSummaries { get; set; }
		
		/// <summary>
		/// Total size in bytes that were transformed in some way.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformedBytes")]
		public string TransformedBytes { get; set; }
	}
	
	/// <summary>
	/// Summary of a single transformation. Only one of 'transformation', 'field_transformation', or 'record_suppress' will be set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationSummary
	{
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GooglePrivacyDlpV2FieldId Field { get; set; }
		
		/// <summary>
		/// The field transformation that was applied. If multiple field transformations are requested for a single field, this list will contain all of them; otherwise, only one is supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldTransformations")]
		public GooglePrivacyDlpV2FieldTransformation[] FieldTransformations { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// Configuration to suppress records whose suppression conditions evaluate to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recordSuppress")]
		public GooglePrivacyDlpV2RecordSuppression RecordSuppress { get; set; }
		
		/// <summary>
		/// Collection of all transformations that took place or had an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GooglePrivacyDlpV2SummaryResult[] Results { get; set; }
		
		/// <summary>
		/// A rule for transforming a value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformation")]
		public GooglePrivacyDlpV2PrimitiveTransformation Transformation { get; set; }
		
		/// <summary>
		/// Total size in bytes that were transformed in some way.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformedBytes")]
		public string TransformedBytes { get; set; }
	}
	
	/// <summary>
	/// A collection that informs the user the number of times a particular `TransformationResultCode` and error details occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2SummaryResult
	{
		
		/// <summary>
		/// Outcome of the transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<GooglePrivacyDlpV2SummaryResultCode> Code { get; set; }
		
		/// <summary>
		/// Number of transformations counted by this result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// A place for warnings or errors to show up if a transformation didn't work as expected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string Details { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2SummaryResultCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFORMATION_RESULT_CODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
	}
	
	/// <summary>
	/// Combines all of the information about a DLP job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2DlpJob
	{
		
		/// <summary>
		/// Events that should occur after the job has completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actionDetails")]
		public GooglePrivacyDlpV2ActionDetails[] ActionDetails { get; set; }
		
		/// <summary>
		/// Time when the job was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Time when the job finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// A stream of errors encountered running the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GooglePrivacyDlpV2Error[] Errors { get; set; }
		
		/// <summary>
		/// The results of an inspect DataSource job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectDetails")]
		public GooglePrivacyDlpV2InspectDataSourceDetails InspectDetails { get; set; }
		
		/// <summary>
		/// If created by a job trigger, the resource name of the trigger that instantiated the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTriggerName")]
		public string JobTriggerName { get; set; }
		
		/// <summary>
		/// Time when the job was last modified by the system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModified")]
		public string LastModified { get; set; }
		
		/// <summary>
		/// The server-assigned name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Result of a risk analysis operation request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="riskDetails")]
		public GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails RiskDetails { get; set; }
		
		/// <summary>
		/// Time when the job started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// State of a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GooglePrivacyDlpV2DlpJobState> State { get; set; }
		
		/// <summary>
		/// The type of job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GooglePrivacyDlpV2DlpJobType> Type { get; set; }
	}
	
	/// <summary>
	/// The results of an inspect DataSource job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectDataSourceDetails
	{
		
		/// <summary>
		/// Snapshot of the inspection configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedOptions")]
		public GooglePrivacyDlpV2RequestedOptions RequestedOptions { get; set; }
		
		/// <summary>
		/// All result fields mentioned below are updated while the job is processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public GooglePrivacyDlpV2Result Result { get; set; }
	}
	
	/// <summary>
	/// Snapshot of the inspection configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RequestedOptions
	{
		
		/// <summary>
		/// Controls what and how to inspect for findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobConfig")]
		public GooglePrivacyDlpV2InspectJobConfig JobConfig { get; set; }
		
		/// <summary>
		/// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotInspectTemplate")]
		public GooglePrivacyDlpV2InspectTemplate SnapshotInspectTemplate { get; set; }
	}
	
	/// <summary>
	/// All result fields mentioned below are updated while the job is processing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Result
	{
		
		/// <summary>
		/// Statistics related to processing hybrid inspect requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hybridStats")]
		public GooglePrivacyDlpV2HybridInspectStatistics HybridStats { get; set; }
		
		/// <summary>
		/// Statistics of how many instances of each info type were found during inspect job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypeStats")]
		public GooglePrivacyDlpV2InfoTypeStats[] InfoTypeStats { get; set; }
		
		/// <summary>
		/// Total size in bytes that were processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processedBytes")]
		public string ProcessedBytes { get; set; }
		
		/// <summary>
		/// Estimate of the number of bytes to process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalEstimatedBytes")]
		public string TotalEstimatedBytes { get; set; }
	}
	
	/// <summary>
	/// Statistics related to processing hybrid inspect requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridInspectStatistics
	{
		
		/// <summary>
		/// The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abortedCount")]
		public string AbortedCount { get; set; }
		
		/// <summary>
		/// The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pendingCount")]
		public string PendingCount { get; set; }
		
		/// <summary>
		/// The number of hybrid inspection requests processed within this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processedCount")]
		public string ProcessedCount { get; set; }
	}
	
	/// <summary>
	/// Statistics regarding a specific InfoType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeStats
	{
		
		/// <summary>
		/// Number of findings for this infoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2DlpJobState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOB_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DONE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2DlpJobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DLP_JOB_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSPECT_JOB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_ANALYSIS_JOB = 2,
	}
	
	/// <summary>
	/// Represents a piece of potentially sensitive content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Finding
	{
		
		/// <summary>
		/// Timestamp when finding was detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The unique finding id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findingId")]
		public string FindingId { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// Time the job started that produced this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobCreateTime")]
		public string JobCreateTime { get; set; }
		
		/// <summary>
		/// The job that stored the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Confidence of how likely it is that the `info_type` is correct.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="likelihood")]
		public GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood Likelihood { get; set; }
		
		/// <summary>
		/// Specifies the location of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GooglePrivacyDlpV2Location Location { get; set; }
		
		/// <summary>
		/// Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quote")]
		public string Quote { get; set; }
		
		/// <summary>
		/// Message for infoType-dependent details parsed from quote.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quoteInfo")]
		public GooglePrivacyDlpV2QuoteInfo QuoteInfo { get; set; }
		
		/// <summary>
		/// The job that stored the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// Job trigger name, if applicable, for this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggerName")]
		public string TriggerName { get; set; }
	}
	
	/// <summary>
	/// Specifies the location of the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Location
	{
		
		/// <summary>
		/// Generic half-open interval [start, end)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="byteRange")]
		public GooglePrivacyDlpV2Range ByteRange { get; set; }
		
		/// <summary>
		/// Generic half-open interval [start, end)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="codepointRange")]
		public GooglePrivacyDlpV2Range CodepointRange { get; set; }
		
		/// <summary>
		/// Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="container")]
		public GooglePrivacyDlpV2Container Container { get; set; }
		
		/// <summary>
		/// List of nested objects pointing to the precise location of the finding within the file or record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentLocations")]
		public GooglePrivacyDlpV2ContentLocation[] ContentLocations { get; set; }
	}
	
	/// <summary>
	/// Generic half-open interval [start, end)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2Range
	{
		
		/// <summary>
		/// Index of the last character of the range (exclusive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public string End { get; set; }
		
		/// <summary>
		/// Index of the first character of the range (inclusive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public string Start { get; set; }
	}
	
	/// <summary>
	/// Message for infoType-dependent details parsed from quote.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2QuoteInfo
	{
		
		/// <summary>
		/// Message for a date time object. e.g. 2018-01-01, 5th August.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateTime")]
		public GooglePrivacyDlpV2DateTime DateTime { get; set; }
	}
	
	/// <summary>
	/// The request message for finishing a DLP hybrid job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2FinishDlpJobRequest
	{
	}
	
	/// <summary>
	/// An individual hybrid item to inspect. Will be stored temporarily during processing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridContentItem
	{
		
		/// <summary>
		/// Populate to associate additional data with each finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findingDetails")]
		public GooglePrivacyDlpV2HybridFindingDetails FindingDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public GooglePrivacyDlpV2ContentItem Item { get; set; }
	}
	
	/// <summary>
	/// Populate to associate additional data with each finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridFindingDetails
	{
		
		/// <summary>
		/// Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerDetails")]
		public GooglePrivacyDlpV2Container ContainerDetails { get; set; }
		
		/// <summary>
		/// Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileOffset")]
		public string FileOffset { get; set; }
		
		/// <summary>
		/// Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowOffset")]
		public string RowOffset { get; set; }
		
		/// <summary>
		/// Instructions regarding the table content being inspected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableOptions")]
		public GooglePrivacyDlpV2TableOptions TableOptions { get; set; }
	}
	
	/// <summary>
	/// Request to search for potentially sensitive info in a custom location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridInspectDlpJobRequest
	{
		
		/// <summary>
		/// An individual hybrid item to inspect. Will be stored temporarily during processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hybridItem")]
		public GooglePrivacyDlpV2HybridContentItem HybridItem { get; set; }
	}
	
	/// <summary>
	/// Request to search for potentially sensitive info in a custom location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridInspectJobTriggerRequest
	{
		
		/// <summary>
		/// An individual hybrid item to inspect. Will be stored temporarily during processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hybridItem")]
		public GooglePrivacyDlpV2HybridContentItem HybridItem { get; set; }
	}
	
	/// <summary>
	/// Quota exceeded errors will be thrown once quota has been met.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2HybridInspectResponse
	{
	}
	
	/// <summary>
	/// Configuration for determining how redaction of images should occur.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ImageRedactionConfig
	{
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactAllText")]
		public System.Nullable<System.Boolean> RedactAllText { get; set; }
		
		/// <summary>
		/// Represents a color in the RGB color space.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionColor")]
		public GooglePrivacyDlpV2Color RedactionColor { get; set; }
	}
	
	/// <summary>
	/// Classification of infoTypes to organize them according to geographic location, industry, and data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeCategory
	{
		
		/// <summary>
		/// The group of relevant businesses where this infoType is commonly used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industryCategory")]
		public System.Nullable<GooglePrivacyDlpV2InfoTypeCategoryIndustryCategory> IndustryCategory { get; set; }
		
		/// <summary>
		/// The region or country that issued the ID or document represented by the infoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationCategory")]
		public System.Nullable<GooglePrivacyDlpV2InfoTypeCategoryLocationCategory> LocationCategory { get; set; }
		
		/// <summary>
		/// The class of identifiers where this infoType belongs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="typeCategory")]
		public System.Nullable<GooglePrivacyDlpV2InfoTypeCategoryTypeCategory> TypeCategory { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2InfoTypeCategoryIndustryCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDUSTRY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TELECOMMUNICATIONS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2InfoTypeCategoryLocationCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCATION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLOBAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARGENTINA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUSTRALIA = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BELGIUM = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRAZIL = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANADA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHILE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHINA = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLOMBIA = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CROATIA = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENMARK = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRANCE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINLAND = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GERMANY = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HONG_KONG = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDIA = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDONESIA = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRELAND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISRAEL = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITALY = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JAPAN = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KOREA = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEXICO = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THE_NETHERLANDS = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW_ZEALAND = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORWAY = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAGUAY = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERU = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POLAND = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTUGAL = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGAPORE = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOUTH_AFRICA = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPAIN = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SWEDEN = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SWITZERLAND = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAIWAN = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THAILAND = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TURKEY = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNITED_KINGDOM = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNITED_STATES = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URUGUAY = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VENEZUELA = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL = 43,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2InfoTypeCategoryTypeCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PII = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPII = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEMOGRAPHIC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREDENTIAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOVERNMENT_ID = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTEXTUAL_INFORMATION = 7,
	}
	
	/// <summary>
	/// InfoType description.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InfoTypeDescription
	{
		
		/// <summary>
		/// The category of the infoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public GooglePrivacyDlpV2InfoTypeCategory[] Categories { get; set; }
		
		/// <summary>
		/// Description of the infotype. Translated when language is provided in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Human readable form of the infoType name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Internal name of the infoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sensitivityScore")]
		public GooglePrivacyDlpV2SensitivityScore SensitivityScore { get; set; }
		
		/// <summary>
		/// Which parts of the API supports this InfoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedBy")]
		public string[] SupportedBy { get; set; }
		
		/// <summary>
		/// A list of available versions for the infotype.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versions")]
		public GooglePrivacyDlpV2VersionDescription[] Versions { get; set; }
	}
	
	/// <summary>
	/// Details about each available version for an infotype.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2VersionDescription
	{
		
		/// <summary>
		/// Description of the version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Name of the version
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Request to search for potentially sensitive info in a ContentItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectContentRequest
	{
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
		
		/// <summary>
		/// Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplateName")]
		public string InspectTemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public GooglePrivacyDlpV2ContentItem Item { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
	}
	
	/// <summary>
	/// Results of inspecting an item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectContentResponse
	{
		
		/// <summary>
		/// All the findings for a single scanned item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public GooglePrivacyDlpV2InspectResult Result { get; set; }
	}
	
	/// <summary>
	/// All the findings for a single scanned item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2InspectResult
	{
		
		/// <summary>
		/// List of findings for an item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findings")]
		public GooglePrivacyDlpV2Finding[] Findings { get; set; }
		
		/// <summary>
		/// If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findingsTruncated")]
		public System.Nullable<System.Boolean> FindingsTruncated { get; set; }
	}
	
	/// <summary>
	/// Summary statistics of a custom dictionary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2LargeCustomDictionaryStats
	{
		
		/// <summary>
		/// Approximate number of distinct phrases in the dictionary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approxNumPhrases")]
		public string ApproxNumPhrases { get; set; }
	}
	
	/// <summary>
	/// Response message for ListDeidentifyTemplates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListDeidentifyTemplatesResponse
	{
		
		/// <summary>
		/// List of deidentify templates, up to page_size in ListDeidentifyTemplatesRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplates")]
		public GooglePrivacyDlpV2DeidentifyTemplate[] DeidentifyTemplates { get; set; }
		
		/// <summary>
		/// If the next page is available then the next page token to be used in the following ListDeidentifyTemplates request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListDiscoveryConfigs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListDiscoveryConfigsResponse
	{
		
		/// <summary>
		/// List of configs, up to page_size in ListDiscoveryConfigsRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoveryConfigs")]
		public GooglePrivacyDlpV2DiscoveryConfig[] DiscoveryConfigs { get; set; }
		
		/// <summary>
		/// If the next page is available then this value is the next page token to be used in the following ListDiscoveryConfigs request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for listing DLP jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListDlpJobsResponse
	{
		
		/// <summary>
		/// A list of DlpJobs that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public GooglePrivacyDlpV2DlpJob[] Jobs { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response to the ListInfoTypes request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListInfoTypesResponse
	{
		
		/// <summary>
		/// Set of sensitive infoTypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypes")]
		public GooglePrivacyDlpV2InfoTypeDescription[] InfoTypes { get; set; }
	}
	
	/// <summary>
	/// Response message for ListInspectTemplates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListInspectTemplatesResponse
	{
		
		/// <summary>
		/// List of inspectTemplates, up to page_size in ListInspectTemplatesRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplates")]
		public GooglePrivacyDlpV2InspectTemplate[] InspectTemplates { get; set; }
		
		/// <summary>
		/// If the next page is available then the next page token to be used in the following ListInspectTemplates request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListJobTriggers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListJobTriggersResponse
	{
		
		/// <summary>
		/// List of triggeredJobs, up to page_size in ListJobTriggersRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTriggers")]
		public GooglePrivacyDlpV2JobTrigger[] JobTriggers { get; set; }
		
		/// <summary>
		/// If the next page is available then this value is the next page token to be used in the following ListJobTriggers request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListStoredInfoTypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ListStoredInfoTypesResponse
	{
		
		/// <summary>
		/// If the next page is available then the next page token to be used in the following ListStoredInfoTypes request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storedInfoTypes")]
		public GooglePrivacyDlpV2StoredInfoType[] StoredInfoTypes { get; set; }
	}
	
	/// <summary>
	/// StoredInfoType resource message that contains information about the current version and any pending updates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StoredInfoType
	{
		
		/// <summary>
		/// Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentVersion")]
		public GooglePrivacyDlpV2StoredInfoTypeVersion CurrentVersion { get; set; }
		
		/// <summary>
		/// Resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Pending versions of the stored info type. Empty if no versions are pending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pendingVersions")]
		public GooglePrivacyDlpV2StoredInfoTypeVersion[] PendingVersions { get; set; }
	}
	
	/// <summary>
	/// Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StoredInfoTypeVersion
	{
		
		/// <summary>
		/// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public GooglePrivacyDlpV2StoredInfoTypeConfig Config { get; set; }
		
		/// <summary>
		/// Create timestamp of the version. Read-only, determined by the system when the version is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GooglePrivacyDlpV2Error[] Errors { get; set; }
		
		/// <summary>
		/// Stored info type version state. Read-only, updated by the system during dictionary creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GooglePrivacyDlpV2StoredInfoTypeVersionState> State { get; set; }
		
		/// <summary>
		/// Statistics for a StoredInfoType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GooglePrivacyDlpV2StoredInfoTypeStats Stats { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2StoredInfoTypeVersionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORED_INFO_TYPE_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 4,
	}
	
	/// <summary>
	/// Statistics for a StoredInfoType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2StoredInfoTypeStats
	{
		
		/// <summary>
		/// Summary statistics of a custom dictionary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="largeCustomDictionary")]
		public GooglePrivacyDlpV2LargeCustomDictionaryStats LargeCustomDictionary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RecordTransformation
	{
		
		/// <summary>
		/// Findings container modification timestamp, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerTimestamp")]
		public string ContainerTimestamp { get; set; }
		
		/// <summary>
		/// Container version, if available ("generation" for Cloud Storage).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersion")]
		public string ContainerVersion { get; set; }
		
		/// <summary>
		/// General identifier of a data field in a storage service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public GooglePrivacyDlpV2FieldId FieldId { get; set; }
	}
	
	/// <summary>
	/// Request to search for potentially sensitive info in an image and redact it by covering it with a colored rectangle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RedactImageRequest
	{
		
		/// <summary>
		/// Container for bytes to inspect or redact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="byteItem")]
		public GooglePrivacyDlpV2ByteContentItem ByteItem { get; set; }
		
		/// <summary>
		/// The configuration for specifying what content to redact from images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageRedactionConfigs")]
		public GooglePrivacyDlpV2ImageRedactionConfig[] ImageRedactionConfigs { get; set; }
		
		/// <summary>
		/// Whether the response should include findings along with the redacted image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeFindings")]
		public System.Nullable<System.Boolean> IncludeFindings { get; set; }
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
	}
	
	/// <summary>
	/// Results of redacting an image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2RedactImageResponse
	{
		
		/// <summary>
		/// If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extractedText")]
		public string ExtractedText { get; set; }
		
		/// <summary>
		/// All the findings for a single scanned item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectResult")]
		public GooglePrivacyDlpV2InspectResult InspectResult { get; set; }
		
		/// <summary>
		/// The redacted image. The type will be the same as the original image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactedImage")]
		public string RedactedImage { get; set; }
	}
	
	/// <summary>
	/// Request to re-identify an item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ReidentifyContentRequest
	{
		
		/// <summary>
		/// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectConfig")]
		public GooglePrivacyDlpV2InspectConfig InspectConfig { get; set; }
		
		/// <summary>
		/// Template to use. Any configuration directly specified in `inspect_config` will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplateName")]
		public string InspectTemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public GooglePrivacyDlpV2ContentItem Item { get; set; }
		
		/// <summary>
		/// Deprecated. This field has no effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// The configuration that controls how the data will change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reidentifyConfig")]
		public GooglePrivacyDlpV2DeidentifyConfig ReidentifyConfig { get; set; }
		
		/// <summary>
		/// Template to use. References an instance of `DeidentifyTemplate`. Any configuration directly specified in `reidentify_config` or `inspect_config` will override those set in the template. The `DeidentifyTemplate` used must include only reversible transformations. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reidentifyTemplateName")]
		public string ReidentifyTemplateName { get; set; }
	}
	
	/// <summary>
	/// Results of re-identifying an item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2ReidentifyContentResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public GooglePrivacyDlpV2ContentItem Item { get; set; }
		
		/// <summary>
		/// Overview of the modifications that occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overview")]
		public GooglePrivacyDlpV2TransformationOverview Overview { get; set; }
	}
	
	/// <summary>
	/// A flattened description of a `PrimitiveTransformation` or `RecordSuppression`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationDescription
	{
		
		/// <summary>
		/// A human-readable string representation of the `RecordCondition` corresponding to this transformation. Set if a `RecordCondition` was used to determine whether or not to apply this transformation. Examples: * (age_field > 85) * (age_field <= 18) * (zip_field exists) * (zip_field == 01234) && (city_field != "Springville") * (zip_field == 01234) && (age_field <= 18) && (city_field exists)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public string Condition { get; set; }
		
		/// <summary>
		/// A description of the transformation. This is empty for a RECORD_SUPPRESSION, or is the output of calling toString() on the `PrimitiveTransformation` protocol buffer message for any other type of transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Type of information detected by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public GooglePrivacyDlpV2InfoType InfoType { get; set; }
		
		/// <summary>
		/// The transformation type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GooglePrivacyDlpV2TransformationDescriptionType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2TransformationDescriptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFORMATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECORD_SUPPRESSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACE_VALUE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACE_DICTIONARY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDACT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHARACTER_MASK = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRYPTO_REPLACE_FFX_FPE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIXED_SIZE_BUCKETING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BUCKETING = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACE_WITH_INFO_TYPE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_PART = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRYPTO_HASH = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_SHIFT = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRYPTO_DETERMINISTIC_CONFIG = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDACT_IMAGE = 14,
	}
	
	/// <summary>
	/// Details about a single transformation. This object contains a description of the transformation, information about whether the transformation was successfully applied, and the precise location where the transformation occurred. These details are stored in a user-specified BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationDetails
	{
		
		/// <summary>
		/// The top level name of the container where the transformation is located (this will be the source file name or table name).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerName")]
		public string ContainerName { get; set; }
		
		/// <summary>
		/// The name of the job that completed the transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusDetails")]
		public GooglePrivacyDlpV2TransformationResultStatus StatusDetails { get; set; }
		
		/// <summary>
		/// Description of transformation. This would only contain more than one element if there were multiple matching transformations and which one to apply was ambiguous. Not set for states that contain no transformation, currently only state that contains no transformation is TransformationResultStateType.METADATA_UNRETRIEVABLE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformation")]
		public GooglePrivacyDlpV2TransformationDescription[] Transformation { get; set; }
		
		/// <summary>
		/// Specifies the location of a transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationLocation")]
		public GooglePrivacyDlpV2TransformationLocation TransformationLocation { get; set; }
		
		/// <summary>
		/// The number of bytes that were transformed. If transformation was unsuccessful or did not take place because there was no content to transform, this will be zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformedBytes")]
		public string TransformedBytes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationResultStatus
	{
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public GoogleRpcStatus Details { get; set; }
		
		/// <summary>
		/// Transformation result status type, this will be either SUCCESS, or it will be the reason for why the transformation was not completely successful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultStatusType")]
		public System.Nullable<GooglePrivacyDlpV2TransformationResultStatusResultStatusType> ResultStatusType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2TransformationResultStatusResultStatusType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_TRANSFORM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGQUERY_MAX_ROW_SIZE_EXCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METADATA_UNRETRIEVABLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 4,
	}
	
	/// <summary>
	/// Specifies the location of a transformation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2TransformationLocation
	{
		
		/// <summary>
		/// Information about the functionality of the container where this finding occurred, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerType")]
		public System.Nullable<GooglePrivacyDlpV2TransformationLocationContainerType> ContainerType { get; set; }
		
		/// <summary>
		/// For infotype transformations, link to the corresponding findings ID so that location information does not need to be duplicated. Each findings ID correlates to an entry in the findings output table, this table only gets created when users specify to save findings (add the save findings action to the request).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findingId")]
		public string FindingId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recordTransformation")]
		public GooglePrivacyDlpV2RecordTransformation RecordTransformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GooglePrivacyDlpV2TransformationLocationContainerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFORM_UNKNOWN_CONTAINER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFORM_BODY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFORM_METADATA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFORM_TABLE = 3,
	}
	
	/// <summary>
	/// Request message for UpdateDeidentifyTemplate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest
	{
		
		/// <summary>
		/// DeidentifyTemplates contains instructions on how to de-identify content. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplate")]
		public GooglePrivacyDlpV2DeidentifyTemplate DeidentifyTemplate { get; set; }
		
		/// <summary>
		/// Mask to control which fields get updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for UpdateDiscoveryConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2UpdateDiscoveryConfigRequest
	{
		
		/// <summary>
		/// Configuration for discovery to scan resources for profile generation. Only one discovery configuration may exist per organization, folder, or project. The generated data profiles are retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-profiles#retention).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoveryConfig")]
		public GooglePrivacyDlpV2DiscoveryConfig DiscoveryConfig { get; set; }
		
		/// <summary>
		/// Mask to control which fields get updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for UpdateInspectTemplate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2UpdateInspectTemplateRequest
	{
		
		/// <summary>
		/// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplate")]
		public GooglePrivacyDlpV2InspectTemplate InspectTemplate { get; set; }
		
		/// <summary>
		/// Mask to control which fields get updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for UpdateJobTrigger.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2UpdateJobTriggerRequest
	{
		
		/// <summary>
		/// Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTrigger")]
		public GooglePrivacyDlpV2JobTrigger JobTrigger { get; set; }
		
		/// <summary>
		/// Mask to control which fields get updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for UpdateStoredInfoType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GooglePrivacyDlpV2UpdateStoredInfoTypeRequest
	{
		
		/// <summary>
		/// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public GooglePrivacyDlpV2StoredInfoTypeConfig Config { get; set; }
		
		/// <summary>
		/// Mask to control which fields get updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns a list of the sensitive information types that DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more.
		/// Dlp_infoTypes_list v2/infoTypes
		/// </summary>
		/// <param name="filter">filter to only return infoTypes supported by certain parts of the API. Defaults to supported_by=INSPECT.</param>
		/// <param name="languageCode">BCP-47 language code for localized infoType friendly names. If omitted, or if localized strings are not available, en-US strings will be returned.</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <param name="parent">The parent resource name. The format of this value is as follows: locations/ LOCATION_ID</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListInfoTypesResponse> Dlp_infoTypes_listAsync(string filter, string languageCode, string locationId, string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/infoTypes?filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId))+"&parent=" + (parent==null? "" : System.Uri.EscapeDataString(parent));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListInfoTypesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
		/// Dlp_projects_storedInfoTypes_delete v2/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of the organization and storedInfoType to be deleted, for example `organizations/433245324/storedInfoTypes/432452342` or projects/project-id/storedInfoTypes/432452342.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Dlp_projects_storedInfoTypes_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleProtobufEmpty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
		/// Dlp_projects_storedInfoTypes_get v2/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of the organization and storedInfoType to be read, for example `organizations/433245324/storedInfoTypes/432452342` or projects/project-id/storedInfoTypes/432452342.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2StoredInfoType> Dlp_projects_storedInfoTypes_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2StoredInfoType>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
		/// Dlp_projects_storedInfoTypes_patch v2/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of organization and storedInfoType to be updated, for example `organizations/433245324/storedInfoTypes/432452342` or projects/project-id/storedInfoTypes/432452342.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2StoredInfoType> Dlp_projects_storedInfoTypes_patchAsync(string name, GooglePrivacyDlpV2UpdateStoredInfoTypeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2StoredInfoType>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the trigger event to occur.
		/// Dlp_projects_locations_jobTriggers_activate v2/{name}:activate
		/// </summary>
		/// <param name="name">Required. Resource name of the trigger to activate, for example `projects/dlp-test-project/jobTriggers/53234423`.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2DlpJob> Dlp_projects_locations_jobTriggers_activateAsync(string name, GooglePrivacyDlpV2ActivateJobTriggerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":activate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2DlpJob>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to cancel the DlpJob, but success is not guaranteed. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
		/// Dlp_projects_locations_dlpJobs_cancel v2/{name}:cancel
		/// </summary>
		/// <param name="name">Required. The name of the DlpJob resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Dlp_projects_locations_dlpJobs_cancelAsync(string name, GooglePrivacyDlpV2CancelDlpJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleProtobufEmpty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Finish a running hybrid DlpJob. Triggers the finalization steps and running of any enabled actions that have not yet run.
		/// Dlp_projects_locations_dlpJobs_finish v2/{name}:finish
		/// </summary>
		/// <param name="name">Required. The name of the DlpJob resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Dlp_projects_locations_dlpJobs_finishAsync(string name, GooglePrivacyDlpV2FinishDlpJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":finish";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleProtobufEmpty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Inspect hybrid content and store findings to a trigger. The inspection will be processed asynchronously. To review the findings monitor the jobs within the trigger.
		/// Dlp_projects_locations_jobTriggers_hybridInspect v2/{name}:hybridInspect
		/// </summary>
		/// <param name="name">Required. Resource name of the trigger to execute a hybrid inspect on, for example `projects/dlp-test-project/jobTriggers/53234423`.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2HybridInspectResponse> Dlp_projects_locations_jobTriggers_hybridInspectAsync(string name, GooglePrivacyDlpV2HybridInspectJobTriggerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":hybridInspect";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2HybridInspectResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// De-identifies potentially sensitive info from a ContentItem. This method has limits on input size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
		/// Dlp_projects_locations_content_deidentify v2/{parent}/content:deidentify
		/// </summary>
		/// <param name="parent">Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2DeidentifyContentResponse> Dlp_projects_locations_content_deidentifyAsync(string parent, GooglePrivacyDlpV2DeidentifyContentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/content:deidentify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2DeidentifyContentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Finds potentially sensitive info in content. This method has limits on input size, processing time, and output size. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images and https://cloud.google.com/dlp/docs/inspecting-text,
		/// Dlp_projects_locations_content_inspect v2/{parent}/content:inspect
		/// </summary>
		/// <param name="parent">Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2InspectContentResponse> Dlp_projects_locations_content_inspectAsync(string parent, GooglePrivacyDlpV2InspectContentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/content:inspect";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2InspectContentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Re-identifies content that has been de-identified. See https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to learn more.
		/// Dlp_projects_locations_content_reidentify v2/{parent}/content:reidentify
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ReidentifyContentResponse> Dlp_projects_locations_content_reidentifyAsync(string parent, GooglePrivacyDlpV2ReidentifyContentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/content:reidentify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ReidentifyContentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
		/// Dlp_projects_locations_deidentifyTemplates_list v2/{parent}/deidentifyTemplates
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <param name="orderBy">Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case insensitive. The default sorting order is ascending. Redundant space characters are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to the time the template was created. - `update_time`: corresponds to the time the template was last updated. - `name`: corresponds to the template's name. - `display_name`: corresponds to the template's display name.</param>
		/// <param name="pageSize">Size of the page. This value can be limited by the server. If zero server returns a page of max size 100.</param>
		/// <param name="pageToken">Page token to continue retrieval. Comes from the previous call to `ListDeidentifyTemplates`.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListDeidentifyTemplatesResponse> Dlp_projects_locations_deidentifyTemplates_listAsync(string parent, string locationId, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deidentifyTemplates&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListDeidentifyTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a DeidentifyTemplate for reusing frequently used configuration for de-identifying content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
		/// Dlp_projects_locations_deidentifyTemplates_create v2/{parent}/deidentifyTemplates
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2DeidentifyTemplate> Dlp_projects_locations_deidentifyTemplates_createAsync(string parent, GooglePrivacyDlpV2CreateDeidentifyTemplateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deidentifyTemplates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2DeidentifyTemplate>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists discovery configurations.
		/// Dlp_projects_locations_discoveryConfigs_list v2/{parent}/discoveryConfigs
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value is as follows: `projects/`PROJECT_ID`/locations/`LOCATION_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <param name="orderBy">Comma separated list of config fields to order by, followed by `asc` or `desc` postfix. This list is case insensitive. The default sorting order is ascending. Redundant space characters are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `last_run_time`: corresponds to the last time the DiscoveryConfig ran. - `name`: corresponds to the DiscoveryConfig's name. - `status`: corresponds to DiscoveryConfig's status.</param>
		/// <param name="pageSize">Size of the page. This value can be limited by a server.</param>
		/// <param name="pageToken">Page token to continue retrieval. Comes from the previous call to ListDiscoveryConfigs. `order_by` field must not change for subsequent calls.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListDiscoveryConfigsResponse> Dlp_projects_locations_discoveryConfigs_listAsync(string parent, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/discoveryConfigs&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListDiscoveryConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a config for discovery to scan and profile storage.
		/// Dlp_projects_locations_discoveryConfigs_create v2/{parent}/discoveryConfigs
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value is as follows: `projects/`PROJECT_ID`/locations/`LOCATION_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2DiscoveryConfig> Dlp_projects_locations_discoveryConfigs_createAsync(string parent, GooglePrivacyDlpV2CreateDiscoveryConfigRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/discoveryConfigs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2DiscoveryConfig>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
		/// Dlp_projects_locations_dlpJobs_list v2/{parent}/dlpJobs
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <param name="filter">Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * Supported fields/values for inspect jobs: - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - `trigger_name` - The name of the trigger that created the job. - 'end_time` - Corresponds to the time the job finished. - 'start_time` - Corresponds to the time the job finished. * Supported fields for risk analysis jobs: - `state` - RUNNING|CANCELED|FINISHED|FAILED - 'end_time` - Corresponds to the time the job finished. - 'start_time` - Corresponds to the time the job finished. * The operator must be `=` or `!=`. Examples: * inspected_storage = cloud_storage AND state = done * inspected_storage = cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state = done OR state = canceled) * end_time > \"2017-12-12T00:00:00+00:00\" The length of this field should be no more than 500 characters.</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <param name="orderBy">Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case insensitive. The default sorting order is ascending. Redundant space characters are insignificant. Example: `name asc, end_time asc, create_time desc` Supported fields are: - `create_time`: corresponds to the time the job was created. - `end_time`: corresponds to the time the job ended. - `name`: corresponds to the job's name. - `state`: corresponds to `state`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="type">The type of job. Defaults to `DlpJobType.INSPECT`</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListDlpJobsResponse> Dlp_projects_locations_dlpJobs_listAsync(string parent, string filter, string locationId, string orderBy, int pageSize, string pageToken, GooglePrivacyDlpV2DlpJobType type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/dlpJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&type=" + type;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListDlpJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
		/// Dlp_projects_locations_dlpJobs_create v2/{parent}/dlpJobs
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2DlpJob> Dlp_projects_locations_dlpJobs_createAsync(string parent, GooglePrivacyDlpV2CreateDlpJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/dlpJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2DlpJob>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Redacts potentially sensitive info from an image. This method has limits on input size, processing time, and output size. See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
		/// Dlp_projects_locations_image_redact v2/{parent}/image:redact
		/// </summary>
		/// <param name="parent">Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2RedactImageResponse> Dlp_projects_locations_image_redactAsync(string parent, GooglePrivacyDlpV2RedactImageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/image:redact";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2RedactImageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the sensitive information types that DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more.
		/// Dlp_locations_infoTypes_list v2/{parent}/infoTypes
		/// </summary>
		/// <param name="parent">The parent resource name. The format of this value is as follows: locations/ LOCATION_ID</param>
		/// <param name="filter">filter to only return infoTypes supported by certain parts of the API. Defaults to supported_by=INSPECT.</param>
		/// <param name="languageCode">BCP-47 language code for localized infoType friendly names. If omitted, or if localized strings are not available, en-US strings will be returned.</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListInfoTypesResponse> Dlp_locations_infoTypes_listAsync(string parent, string filter, string languageCode, string locationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/infoTypes&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListInfoTypesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
		/// Dlp_projects_locations_inspectTemplates_list v2/{parent}/inspectTemplates
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <param name="orderBy">Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case insensitive. The default sorting order is ascending. Redundant space characters are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to the time the template was created. - `update_time`: corresponds to the time the template was last updated. - `name`: corresponds to the template's name. - `display_name`: corresponds to the template's display name.</param>
		/// <param name="pageSize">Size of the page. This value can be limited by the server. If zero server returns a page of max size 100.</param>
		/// <param name="pageToken">Page token to continue retrieval. Comes from the previous call to `ListInspectTemplates`.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListInspectTemplatesResponse> Dlp_projects_locations_inspectTemplates_listAsync(string parent, string locationId, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/inspectTemplates&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListInspectTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an InspectTemplate for reusing frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
		/// Dlp_projects_locations_inspectTemplates_create v2/{parent}/inspectTemplates
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2InspectTemplate> Dlp_projects_locations_inspectTemplates_createAsync(string parent, GooglePrivacyDlpV2CreateInspectTemplateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/inspectTemplates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2InspectTemplate>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
		/// Dlp_projects_locations_jobTriggers_list v2/{parent}/jobTriggers
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <param name="filter">Allows filtering. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * Supported fields/values for inspect triggers: - `status` - HEALTHY|PAUSED|CANCELLED - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY - 'last_run_time` - RFC 3339 formatted timestamp, surrounded by quotation marks. Nanoseconds are ignored. - 'error_count' - Number of errors that have occurred while running. * The operator must be `=` or `!=` for status and inspected_storage. Examples: * inspected_storage = cloud_storage AND status = HEALTHY * inspected_storage = cloud_storage OR inspected_storage = bigquery * inspected_storage = cloud_storage AND (state = PAUSED OR state = HEALTHY) * last_run_time > \"2017-12-12T00:00:00+00:00\" The length of this field should be no more than 500 characters.</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <param name="orderBy">Comma separated list of triggeredJob fields to order by, followed by `asc` or `desc` postfix. This list is case insensitive. The default sorting order is ascending. Redundant space characters are insignificant. Example: `name asc,update_time, create_time desc` Supported fields are: - `create_time`: corresponds to the time the JobTrigger was created. - `update_time`: corresponds to the time the JobTrigger was last updated. - `last_run_time`: corresponds to the last time the JobTrigger ran. - `name`: corresponds to the JobTrigger's name. - `display_name`: corresponds to the JobTrigger's display name. - `status`: corresponds to JobTrigger's status.</param>
		/// <param name="pageSize">Size of the page. This value can be limited by a server.</param>
		/// <param name="pageToken">Page token to continue retrieval. Comes from the previous call to ListJobTriggers. `order_by` field must not change for subsequent calls.</param>
		/// <param name="type">The type of jobs. Will use `DlpJobType.INSPECT` if not set.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListJobTriggersResponse> Dlp_projects_locations_jobTriggers_listAsync(string parent, string filter, string locationId, string orderBy, int pageSize, string pageToken, GooglePrivacyDlpV2DlpJobType type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobTriggers&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&type=" + type;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListJobTriggersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
		/// Dlp_projects_locations_jobTriggers_create v2/{parent}/jobTriggers
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2JobTrigger> Dlp_projects_locations_jobTriggers_createAsync(string parent, GooglePrivacyDlpV2CreateJobTriggerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobTriggers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2JobTrigger>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
		/// Dlp_projects_storedInfoTypes_list v2/{parent}/storedInfoTypes
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <param name="locationId">Deprecated. This field has no effect.</param>
		/// <param name="orderBy">Comma separated list of fields to order by, followed by `asc` or `desc` postfix. This list is case insensitive. The default sorting order is ascending. Redundant space characters are insignificant. Example: `name asc, display_name, create_time desc` Supported fields are: - `create_time`: corresponds to the time the most recent version of the resource was created. - `state`: corresponds to the state of the resource. - `name`: corresponds to resource name. - `display_name`: corresponds to info type's display name.</param>
		/// <param name="pageSize">Size of the page. This value can be limited by the server. If zero server returns a page of max size 100.</param>
		/// <param name="pageToken">Page token to continue retrieval. Comes from the previous call to `ListStoredInfoTypes`.</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2ListStoredInfoTypesResponse> Dlp_projects_storedInfoTypes_listAsync(string parent, string locationId, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/storedInfoTypes&locationId=" + (locationId==null? "" : System.Uri.EscapeDataString(locationId))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2ListStoredInfoTypesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
		/// Dlp_projects_storedInfoTypes_create v2/{parent}/storedInfoTypes
		/// </summary>
		/// <param name="parent">Required. Parent resource name. The format of this value varies depending on the scope of the request (project or organization) and whether you have [specified a processing location](https://cloud.google.com/dlp/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID + Organizations scope, location specified: `organizations/`ORG_ID`/locations/`LOCATION_ID + Organizations scope, no location specified (defaults to global): `organizations/`ORG_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3</param>
		/// <returns>Successful response</returns>
		public async Task<GooglePrivacyDlpV2StoredInfoType> Dlp_projects_storedInfoTypes_createAsync(string parent, GooglePrivacyDlpV2CreateStoredInfoTypeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/storedInfoTypes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GooglePrivacyDlpV2StoredInfoType>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

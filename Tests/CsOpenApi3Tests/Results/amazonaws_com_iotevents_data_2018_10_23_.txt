//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchAcknowledgeAlarmResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errorEntries")]
		public BatchAlarmActionErrorEntry[] ErrorEntries { get; set; }
	}
	
	/// <summary>
	/// <p>Contains error messages associated with one of the following requests:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchAcknowledgeAlarm.html">BatchAcknowledgeAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchDisableAlarm.html">BatchDisableAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchEnableAlarm.html">BatchEnableAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchResetAlarm.html">BatchResetAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchSnoozeAlarm.html">BatchSnoozeAlarm</a> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchAlarmActionErrorEntry
	{
		
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFoundException = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequestException = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailureException = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceUnavailableException = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThrottlingException = 4,
	}
	
	/// <summary>
	/// Information needed to acknowledge the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AcknowledgeAlarmActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalFailureException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteDetectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="batchDeleteDetectorErrorEntries")]
		public BatchDeleteDetectorErrorEntry[] BatchDeleteDetectorErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Contains error messages associated with the deletion request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteDetectorErrorEntry
	{
		
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Information used to delete the detector model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDisableAlarmResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errorEntries")]
		public BatchAlarmActionErrorEntry[] ErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Information used to disable the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisableAlarmActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchEnableAlarmResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errorEntries")]
		public BatchAlarmActionErrorEntry[] ErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Information needed to enable the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnableAlarmActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPutMessageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BatchPutMessageErrorEntry[] BatchPutMessageErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Contains information about the errors encountered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPutMessageErrorEntry
	{
		
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Information about a message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Message
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		public string InputName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public string Payload { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public TimestampValue Timestamp { get; set; }
	}
	
	/// <summary>
	/// Contains information about a timestamp.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimestampValue
	{
		
		[System.Runtime.Serialization.DataMember(Name="timeInMillis")]
		public System.Nullable<System.Int32> TimeInMillis { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchResetAlarmResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errorEntries")]
		public BatchAlarmActionErrorEntry[] ErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Information needed to reset the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResetAlarmActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchSnoozeAlarmResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errorEntries")]
		public BatchAlarmActionErrorEntry[] ErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Information needed to snooze the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnoozeAlarmActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="snoozeDuration")]
		public int SnoozeDuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchUpdateDetectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="batchUpdateDetectorErrorEntries")]
		public BatchUpdateDetectorErrorEntry[] BatchUpdateDetectorErrorEntries { get; set; }
	}
	
	/// <summary>
	/// Information about the error that occurred when attempting to update a detector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchUpdateDetectorErrorEntry
	{
		
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Information used to update the detector (instance).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public DetectorStateDefinition State { get; set; }
	}
	
	/// <summary>
	/// The new state, variable values, and timer settings of the detector (instance).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorStateDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stateName")]
		public string StateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="variables")]
		public VariableDefinition[] Variables { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timers")]
		public TimerDefinition[] Timers { get; set; }
	}
	
	/// <summary>
	/// The new value of the variable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VariableDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The new setting of a timer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimerDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="seconds")]
		public int Seconds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAlarmResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarm")]
		public Alarm Alarm { get; set; }
	}
	
	/// <summary>
	/// Contains information about an alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Alarm
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersion")]
		public string AlarmModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmState")]
		public AlarmState AlarmState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<System.Int32> Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
	}
	
	/// <summary>
	/// Contains information about the current state of the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmState
	{
		
		[System.Runtime.Serialization.DataMember(Name="stateName")]
		public AlarmStateName StateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ruleEvaluation")]
		public RuleEvaluation RuleEvaluation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customerAction")]
		public CustomerAction CustomerAction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="systemEvent")]
		public SystemEvent SystemEvent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlarmStateName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACKNOWLEDGED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNOOZE_DISABLED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LATCHED = 5,
	}
	
	/// <summary>
	/// Information needed to evaluate data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuleEvaluation
	{
		
		[System.Runtime.Serialization.DataMember(Name="simpleRuleEvaluation")]
		public SimpleRuleEvaluation SimpleRuleEvaluation { get; set; }
	}
	
	/// <summary>
	/// Information needed to compare two values with a comparison operator.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleRuleEvaluation
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputPropertyValue")]
		public string InputPropertyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public ComparisonOperator Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="thresholdValue")]
		public string ThresholdValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_OR_EQUAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_OR_EQUAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUAL = 5,
	}
	
	/// <summary>
	/// Contains information about the action that you can take to respond to the alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomerAction
	{
		
		[System.Runtime.Serialization.DataMember(Name="actionName")]
		public CustomerActionName ActionName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="snoozeActionConfiguration")]
		public SnoozeActionConfiguration SnoozeActionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enableActionConfiguration")]
		public EnableActionConfiguration EnableActionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="disableActionConfiguration")]
		public DisableActionConfiguration DisableActionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="acknowledgeActionConfiguration")]
		public AcknowledgeActionConfiguration AcknowledgeActionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resetActionConfiguration")]
		public ResetActionConfiguration ResetActionConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CustomerActionName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNOOZE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACKNOWLEDGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESET = 4,
	}
	
	/// <summary>
	/// Contains the configuration information of a snooze action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnoozeActionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="snoozeDuration")]
		public System.Nullable<System.Int32> SnoozeDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of an enable action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnableActionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of a disable action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisableActionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of an acknowledge action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AcknowledgeActionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of a reset action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResetActionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	/// <summary>
	/// Contains information about alarm state changes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SystemEvent
	{
		
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public EventType EventType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateChangeConfiguration")]
		public StateChangeConfiguration StateChangeConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_CHANGE = 0,
	}
	
	/// <summary>
	/// Contains the configuration information of alarm state changes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StateChangeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="triggerType")]
		public TriggerType TriggerType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TriggerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNOOZE_TIMEOUT = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDetectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detector")]
		public Detector Detector { get; set; }
	}
	
	/// <summary>
	/// Information about the detector (instance).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Detector
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelVersion")]
		public string DetectorModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public DetectorState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
	}
	
	/// <summary>
	/// Information about the current state of the detector instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorState
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stateName")]
		public string StateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="variables")]
		public Variable[] Variables { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timers")]
		public Timer[] Timers { get; set; }
	}
	
	/// <summary>
	/// The current state of the variable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Variable
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The current state of a timer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Timer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlarmsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmSummaries")]
		public AlarmSummary[] AlarmSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains a summary of an alarm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersion")]
		public string AlarmModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateName")]
		public AlarmStateName StateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDetectorsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorSummaries")]
		public DetectorSummary[] DetectorSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about the detector (instance).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelVersion")]
		public string DetectorModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public DetectorStateSummary State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
	}
	
	/// <summary>
	/// Information about the detector state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorStateSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="stateName")]
		public string StateName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchAcknowledgeAlarmRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="acknowledgeActionRequests")]
		public AcknowledgeAlarmActionRequest[] AcknowledgeActionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectors")]
		public DeleteDetectorRequest[] Detectors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDisableAlarmRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="disableActionRequests")]
		public DisableAlarmActionRequest[] DisableActionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchEnableAlarmRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enableActionRequests")]
		public EnableAlarmActionRequest[] EnableActionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPutMessageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public Message[] Messages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchResetAlarmRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resetActionRequests")]
		public ResetAlarmActionRequest[] ResetActionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchSnoozeAlarmRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="snoozeActionRequests")]
		public SnoozeAlarmActionRequest[] SnoozeActionRequests { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchUpdateDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectors")]
		public UpdateDetectorRequest[] Detectors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAlarmRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDetectorRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlarmsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDetectorsRequest
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Acknowledges one or more alarms. The alarms change to the <code>ACKNOWLEDGED</code> state after you acknowledge them.
		/// BatchAcknowledgeAlarm alarms/acknowledge
		/// </summary>
		public async Task BatchAcknowledgeAlarmAsync(BatchAcknowledgeAlarmPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/acknowledge";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes one or more detectors that were created. When a detector is deleted, its state will be cleared and the detector will be removed from the list of detectors. The deleted detector will no longer appear if referenced in the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_ListDetectors.html">ListDetectors</a> API call.
		/// BatchDeleteDetector detectors/delete
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDeleteDetectorResponse> BatchDeleteDetectorAsync(BatchDeleteDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detectors/delete";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchDeleteDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disables one or more alarms. The alarms change to the <code>DISABLED</code> state after you disable them.
		/// BatchDisableAlarm alarms/disable
		/// </summary>
		public async Task BatchDisableAlarmAsync(BatchDisableAlarmPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/disable";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enables one or more alarms. The alarms change to the <code>NORMAL</code> state after you enable them.
		/// BatchEnableAlarm alarms/enable
		/// </summary>
		public async Task BatchEnableAlarmAsync(BatchEnableAlarmPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/enable";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sends a set of messages to the IoT Events system. Each message payload is transformed into the input you specify (<code>"inputName"</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn't guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.
		/// BatchPutMessage inputs/messages
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchPutMessageResponse> BatchPutMessageAsync(BatchPutMessagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "inputs/messages";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchPutMessageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Resets one or more alarms. The alarms return to the <code>NORMAL</code> state after you reset them.
		/// BatchResetAlarm alarms/reset
		/// </summary>
		public async Task BatchResetAlarmAsync(BatchResetAlarmPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/reset";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Changes one or more alarms to the snooze mode. The alarms change to the <code>SNOOZE_DISABLED</code> state after you set them to the snooze mode.
		/// BatchSnoozeAlarm alarms/snooze
		/// </summary>
		public async Task BatchSnoozeAlarmAsync(BatchSnoozeAlarmPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/snooze";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.
		/// BatchUpdateDetector detectors
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchUpdateDetectorResponse> BatchUpdateDetectorAsync(BatchUpdateDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detectors";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchUpdateDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about an alarm.
		/// DescribeAlarm alarms/{alarmModelName}/keyValues/
		/// </summary>
		/// <param name="alarmModelName">The name of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="keyValue">The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAlarmResponse> DescribeAlarmAsync(string alarmModelName, string keyValue, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/"+ (alarmModelName==null? "" : System.Uri.EscapeDataString(alarmModelName))+"/keyValues/&keyValue=" + (keyValue==null? "" : System.Uri.EscapeDataString(keyValue));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAlarmResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about the specified detector (instance).
		/// DescribeDetector detectors/{detectorModelName}/keyValues/
		/// </summary>
		/// <param name="detectorModelName">The name of the detector model whose detectors (instances) you want information about.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="keyValue">A filter used to limit results to detectors (instances) created because of the given key ID.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDetectorResponse> DescribeDetectorAsync(string detectorModelName, string keyValue, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detectors/"+ (detectorModelName==null? "" : System.Uri.EscapeDataString(detectorModelName))+"/keyValues/&keyValue=" + (keyValue==null? "" : System.Uri.EscapeDataString(keyValue));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists one or more alarms. The operation returns only the metadata associated with each alarm.
		/// ListAlarms alarms/{alarmModelName}
		/// </summary>
		/// <param name="alarmModelName">The name of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListAlarmsResponse> ListAlarmsAsync(string alarmModelName, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarms/"+ (alarmModelName==null? "" : System.Uri.EscapeDataString(alarmModelName))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAlarmsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists detectors (the instances of a detector model).
		/// ListDetectors detectors/{detectorModelName}
		/// </summary>
		/// <param name="detectorModelName">The name of the detector model whose detectors (instances) are listed.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="stateName">A filter that limits results to those detectors (instances) in the given state.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListDetectorsResponse> ListDetectorsAsync(string detectorModelName, string stateName, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detectors/"+ (detectorModelName==null? "" : System.Uri.EscapeDataString(detectorModelName))+"&stateName=" + (stateName==null? "" : System.Uri.EscapeDataString(stateName))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDetectorsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class BatchAcknowledgeAlarmPostBody
	{
		
		/// <summary>
		/// The list of acknowledge action requests. You can specify up to 10 requests per operation.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="acknowledgeActionRequests")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public AcknowledgeAlarmActionRequest[] AcknowledgeActionRequests { get; set; }
	}
	
	public class BatchDeleteDetectorPostBody
	{
		
		/// <summary>
		/// The list of one or more detectors to be deleted.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectors")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public DeleteDetectorRequest[] Detectors { get; set; }
	}
	
	public class BatchDisableAlarmPostBody
	{
		
		/// <summary>
		/// The list of disable action requests. You can specify up to 10 requests per operation.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="disableActionRequests")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public DisableAlarmActionRequest[] DisableActionRequests { get; set; }
	}
	
	public class BatchEnableAlarmPostBody
	{
		
		/// <summary>
		/// The list of enable action requests. You can specify up to 10 requests per operation.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enableActionRequests")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public EnableAlarmActionRequest[] EnableActionRequests { get; set; }
	}
	
	public class BatchPutMessagePostBody
	{
		
		/// <summary>
		/// The list of messages to send. Each message has the following format: <code>'{ "messageId": "string", "inputName": "string", "payload": "string"}'</code> 
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messages")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Message[] Messages { get; set; }
	}
	
	public class BatchResetAlarmPostBody
	{
		
		/// <summary>
		/// The list of reset action requests. You can specify up to 10 requests per operation.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resetActionRequests")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public ResetAlarmActionRequest[] ResetActionRequests { get; set; }
	}
	
	public class BatchSnoozeAlarmPostBody
	{
		
		/// <summary>
		/// The list of snooze action requests. You can specify up to 10 requests per operation.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="snoozeActionRequests")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public SnoozeAlarmActionRequest[] SnoozeActionRequests { get; set; }
	}
	
	public class BatchUpdateDetectorPostBody
	{
		
		/// <summary>
		/// The list of detectors (instances) to update, along with the values to update.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectors")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public UpdateDetectorRequest[] Detectors { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

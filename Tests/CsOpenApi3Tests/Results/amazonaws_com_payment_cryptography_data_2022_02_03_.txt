//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecryptDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PlainText { get; set; }
	}
	
	/// <summary>
	/// Parameters for plaintext encryption using asymmetric keys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AsymmetricEncryptionAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PaddingType PaddingType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaddingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKCS1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAEP_SHA1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAEP_SHA256 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAEP_SHA512 = 3,
	}
	
	/// <summary>
	/// Parameters that are required to encrypt plaintext data using DUKPT.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DukptEncryptionAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptKeyDerivationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptKeyVariant DukptKeyVariant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitializationVector { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionMode Mode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DukptDerivationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TDES_2KEY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TDES_3KEY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES_128 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES_192 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES_256 = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DukptKeyVariant
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIDIRECTIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESPONSE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DukptEncryptionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECB = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CBC = 1,
	}
	
	/// <summary>
	/// Parameters requried to encrypt plaintext data using symmetric keys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SymmetricEncryptionAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InitializationVector { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionMode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaddingType PaddingType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EncryptionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ECB = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CBC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CFB = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CFB1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CFB8 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CFB64 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CFB128 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFB = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CipherText { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateCardValidationDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ValidationData { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AmexCardSecurityCodeVersion1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardExpiryDate { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AmexCardSecurityCodeVersion2
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardExpiryDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceCode { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are required to generate a cardholder verification value for the payment card.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CardHolderVerificationValue
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UnpredictableNumber { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are required to verify CVV (Card Verification Value) for the payment card.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CardVerificationValue1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardExpiryDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceCode { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are required to verify Card Verification Value (CVV2) for the payment card.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CardVerificationValue2
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardExpiryDate { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Dynamic Card Verification Value (dCVV).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamicCardVerificationCode
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TrackData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UnpredictableNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Dynamic Card Verification Value (dCVV).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamicCardVerificationValue
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardExpiryDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateMacOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Mac { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MacAlgorithm
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISO9797_ALGORITHM1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISO9797_ALGORITHM3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CMAC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA224 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA256 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA384 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HMAC_SHA512 = 6,
	}
	
	/// <summary>
	/// Parameters required for DUKPT MAC generation and verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MacAlgorithmDukpt
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptDerivationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DukptKeyVariant DukptKeyVariant { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for EMV MAC generation and verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MacAlgorithmEmv
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MajorKeyDerivationMode MajorKeyDerivationMode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyDerivationMode SessionKeyDerivationMode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyDerivationValue SessionKeyDerivationValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MajorKeyDerivationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMV_OPTION_A = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMV_OPTION_B = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SessionKeyDerivationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMV_COMMON_SESSION_KEY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMV2000 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMEX = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MASTERCARD_SESSION_KEY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VISA = 4,
	}
	
	/// <summary>
	/// Parameters to derive session key value using a MAC EMV algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyDerivationValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationCryptogram { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeneratePinDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptedPinBlock { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GenerationKeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GenerationKeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinData PinData { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate, translate, or verify PIN data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PinData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PinOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VerificationValue { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Ibm3624 natural PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ibm3624NaturalPin
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DecimalizationTable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationDataPadCharacter { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Ibm3624 PIN from offset PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ibm3624PinFromOffset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DecimalizationTable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinOffset { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationDataPadCharacter { get; set; }
	}
	
	/// <summary>
	/// Pparameters that are required to generate or verify Ibm3624 PIN offset PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ibm3624PinOffset
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DecimalizationTable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptedPinBlock { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationDataPadCharacter { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Ibm3624 random PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ibm3624RandomPin
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DecimalizationTable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationDataPadCharacter { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Visa PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisaPin
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int PinVerificationKeyIndex { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Visa PVV (PIN Verification Value).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisaPinVerificationValue
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptedPinBlock { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int PinVerificationKeyIndex { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReEncryptDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CipherText { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TranslatePinDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinBlock { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for tranlation between ISO9564 PIN format 0,3,4 tranlation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TranslationPinDataIsoFormat034
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for ISO9564 PIN format 1 tranlation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TranslationPinDataIsoFormat1
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyAuthRequestCryptogramOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AuthResponseValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for ARPC response generation using method1 after ARQC verification is successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CryptogramVerificationArpcMethod1
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AuthResponseCode { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for ARPC response generation using method2 after ARQC verification is successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CryptogramVerificationArpcMethod2
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardStatusUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProprietaryAuthenticationData { get; set; }
	}
	
	/// <summary>
	/// Parameters to derive session key for an Amex payment card.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyAmex
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters to derive session key for an Emv2000 payment card for ARQC verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyEmv2000
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters to derive session key for an Emv common payment card for ARQC verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyEmvCommon
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters to derive session key for Mastercard payment card for ARQC verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyMastercard
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UnpredictableNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters to derive session key for Visa payment card for ARQC verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyVisa
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PanSequenceNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerificationFailedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyCardValidationDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify dCVC (Dynamic Card Verification Code).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiscoverDynamicCardVerificationCode
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationTransactionCounter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CardExpiryDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UnpredictableNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyMacOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyCheckValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyPinDataOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKeyCheckValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VerificationKeyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VerificationKeyCheckValue { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Ibm3624 PIN verification PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ibm3624PinVerification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DecimalizationTable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinOffset { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PinValidationDataPadCharacter { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to generate or verify Visa PIN.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisaPinVerification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int PinVerificationKeyIndex { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VerificationValue { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are required to generate Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CardGenerationAttributes
	{
		
		/// <summary>
		/// Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion1 AmexCardSecurityCodeVersion1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion2 AmexCardSecurityCodeVersion2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardHolderVerificationValue CardHolderVerificationValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue1 CardVerificationValue1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue2 CardVerificationValue2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationCode DynamicCardVerificationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationValue DynamicCardVerificationValue { get; set; }
	}
	
	/// <summary>
	/// Card data parameters that are requried to verify Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CardVerificationAttributes
	{
		
		/// <summary>
		/// Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion1 AmexCardSecurityCodeVersion1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion2 AmexCardSecurityCodeVersion2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardHolderVerificationValue CardHolderVerificationValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue1 CardVerificationValue1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue2 CardVerificationValue2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoverDynamicCardVerificationCode DiscoverDynamicCardVerificationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationCode DynamicCardVerificationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationValue DynamicCardVerificationValue { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for Authorization Response Cryptogram (ARPC) generation after Authorization Request Cryptogram (ARQC) verification is successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CryptogramAuthResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CryptogramVerificationArpcMethod1 ArpcMethod1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CryptogramVerificationArpcMethod2 ArpcMethod2 { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to perform encryption and decryption operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptionDecryptionAttributes
	{
		
		/// <summary>
		/// Parameters for plaintext encryption using asymmetric keys.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AsymmetricEncryptionAttributes Asymmetric { get; set; }
		
		/// <summary>
		/// Parameters that are required to encrypt plaintext data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionAttributes Dukpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SymmetricEncryptionAttributes Symmetric { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecryptDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CipherText { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionDecryptionAttributes DecryptionAttributes { get; set; }
	}
	
	/// <summary>
	/// Parameters that are used for Derived Unique Key Per Transaction (DUKPT) derivation algorithm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DukptAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptDerivationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters required for encryption or decryption of data using DUKPT.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DukptDerivationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptKeyDerivationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptKeyVariant DukptKeyVariant { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionDecryptionAttributes EncryptionAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PlainText { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateCardValidationDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CardGenerationAttributes GenerationAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ValidationDataLength { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for DUKPT, HMAC, or EMV MAC generation or verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MacAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithm Algorithm { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptCmac { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptIso9797Algorithm1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptIso9797Algorithm3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmEmv EmvMac { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateMacInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MacAttributes GenerationAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MacLength { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MessageData { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for PIN data generation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PinGenerationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624NaturalPin Ibm3624NaturalPin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624PinFromOffset Ibm3624PinFromOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624PinOffset Ibm3624PinOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624RandomPin Ibm3624RandomPin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisaPin VisaPin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisaPinVerificationValue VisaPinVerificationValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PinBlockFormatForPinData
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISO_FORMAT_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISO_FORMAT_3 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeneratePinDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinGenerationAttributes GenerationAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GenerationKeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinBlockFormatForPinData PinBlockFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PinDataLength { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for PIN data verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PinVerificationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624PinVerification Ibm3624Pin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisaPinVerification VisaPin { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required to perform reencryption operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReEncryptionAttributes
	{
		
		/// <summary>
		/// Parameters that are required to encrypt plaintext data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionAttributes Dukpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SymmetricEncryptionAttributes Symmetric { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReEncryptDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CipherText { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReEncryptionAttributes IncomingEncryptionAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReEncryptionAttributes OutgoingEncryptionAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OutgoingKeyIdentifier { get; set; }
	}
	
	/// <summary>
	/// Parameters to derive a session key for Authorization Response Cryptogram (ARQC) verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionKeyDerivation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyAmex Amex { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyEmv2000 Emv2000 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyEmvCommon EmvCommon { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyMastercard Mastercard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyVisa Visa { get; set; }
	}
	
	/// <summary>
	/// Parameters that are required for translation between ISO9564 PIN block formats 0,1,3,4.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TranslationIsoFormats
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat0 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat1 IsoFormat1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat4 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TranslatePinDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptedPinBlock { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationAttributes IncomingDukptAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IncomingKeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TranslationIsoFormats IncomingTranslationAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationAttributes OutgoingDukptAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OutgoingKeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TranslationIsoFormats OutgoingTranslationAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyAuthRequestCryptogramInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AuthRequestCryptogram { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CryptogramAuthResponse AuthResponseAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MajorKeyDerivationMode MajorKeyDerivationMode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyDerivation SessionKeyDerivationAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TransactionData { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyCardValidationDataInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ValidationData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationAttributes VerificationAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyMacInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Mac { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MacLength { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MessageData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MacAttributes VerificationAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyPinDataInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptAttributes DukptAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptedPinBlock { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EncryptionKeyIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinBlockFormatForPinData PinBlockFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PinDataLength { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinVerificationAttributes VerificationAttributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VerificationKeyIdentifier { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Decrypts ciphertext data to plaintext using symmetric, asymmetric, or DUKPT data encryption key. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/decrypt-data.html">Decrypt data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>You can use an encryption key generated within Amazon Web Services Payment Cryptography, or you can import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>. For this operation, the key must have <code>KeyModesOfUse</code> set to <code>Decrypt</code>. In asymmetric decryption, Amazon Web Services Payment Cryptography decrypts the ciphertext using the private component of the asymmetric encryption key pair. For data encryption outside of Amazon Web Services Payment Cryptography, you can export the public component of the asymmetric key pair by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a>.</p> <p>For symmetric and DUKPT decryption, Amazon Web Services Payment Cryptography supports <code>TDES</code> and <code>AES</code> algorithms. For asymmetric decryption, Amazon Web Services Payment Cryptography supports <code>RSA</code>. When you use DUKPT, for <code>TDES</code> algorithm, the ciphertext data length must be a multiple of 16 bytes. For <code>AES</code> algorithm, the ciphertext data length must be a multiple of 32 bytes.</p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>EncryptData</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a> </p> </li> </ul>
		/// DecryptData keys/{KeyIdentifier}/decrypt
		/// </summary>
		/// <param name="KeyIdentifier">The <code>keyARN</code> of the encryption key that Amazon Web Services Payment Cryptography uses for ciphertext decryption.
		/// Min length: 7
		/// Max length: 322
		// </param>
		/// <returns>Success</returns>
		public async Task<DecryptDataOutput> DecryptDataAsync(string KeyIdentifier, DecryptDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "keys/"+ (KeyIdentifier==null? "" : System.Uri.EscapeDataString(KeyIdentifier))+"/decrypt";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DecryptDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Encrypts plaintext data to ciphertext using symmetric, asymmetric, or DUKPT data encryption key. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/encrypt-data.html">Encrypt data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>You can generate an encryption key within Amazon Web Services Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>. You can import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>. For this operation, the key must have <code>KeyModesOfUse</code> set to <code>Encrypt</code>. In asymmetric encryption, plaintext is encrypted using public component. You can import the public component of an asymmetric key pair created outside Amazon Web Services Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>). </p> <p>for symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports <code>TDES</code> and <code>AES</code> algorithms. For asymmetric encryption, Amazon Web Services Payment Cryptography supports <code>RSA</code>. To encrypt using DUKPT, you must already have a DUKPT key in your account with <code>KeyModesOfUse</code> set to <code>DeriveKey</code>, or you can generate a new DUKPT key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.</p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>DecryptData</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a> </p> </li> <li> <p> <a>ReEncryptData</a> </p> </li> </ul>
		/// EncryptData keys/{KeyIdentifier}/encrypt
		/// </summary>
		/// <param name="KeyIdentifier">The <code>keyARN</code> of the encryption key that Amazon Web Services Payment Cryptography uses for plaintext encryption.
		/// Min length: 7
		/// Max length: 322
		// </param>
		/// <returns>Success</returns>
		public async Task<EncryptDataOutput> EncryptDataAsync(string KeyIdentifier, EncryptDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "keys/"+ (KeyIdentifier==null? "" : System.Uri.EscapeDataString(KeyIdentifier))+"/encrypt";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<EncryptDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Generates card-related validation data using algorithms such as Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-card-data.html">Generate card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>This operation generates a CVV or CSC value that is printed on a payment credit or debit card during card production. The CVV or CSC, PAN (Primary Account Number) and expiration date of the card are required to check its validity during transaction processing. To begin this operation, a CVK (Card Verification Key) encryption key is required. You can use <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a> or <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a> to establish a CVK within Amazon Web Services Payment Cryptography. The <code>KeyModesOfUse</code> should be set to <code>Generate</code> and <code>Verify</code> for a CVK encryption key. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a> </p> </li> <li> <p> <a>VerifyCardValidationData</a> </p> </li> </ul>
		/// GenerateCardValidationData cardvalidationdata/generate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GenerateCardValidationDataOutput> GenerateCardValidationDataAsync(GenerateCardValidationDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cardvalidationdata/generate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GenerateCardValidationDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Generates a Message Authentication Code (MAC) cryptogram within Amazon Web Services Payment Cryptography. </p> <p>You can use this operation when keys won't be shared but mutual data is present on both ends for validation. In this case, known data values are used to generate a MAC on both ends for comparision without sending or receiving data in ciphertext or plaintext. You can use this operation to generate a DUPKT, HMAC or EMV MAC by setting generation attributes and algorithm to the associated values. The MAC generation encryption key must have valid values for <code>KeyUsage</code> such as <code>TR31_M7_HMAC_KEY</code> for HMAC generation, and they key must have <code>KeyModesOfUse</code> set to <code>Generate</code> and <code>Verify</code>.</p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>VerifyMac</a> </p> </li> </ul>
		/// GenerateMac mac/generate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GenerateMacOutput> GenerateMacAsync(GenerateMacPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "mac/generate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GenerateMacOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Generates pin-related data such as PIN, PIN Verification Value (PVV), PIN Block, and PIN Offset during new card issuance or reissuance. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/generate-pin-data.html">Generate PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>PIN data is never transmitted in clear to or from Amazon Web Services Payment Cryptography. This operation generates PIN, PVV, or PIN Offset and then encrypts it using Pin Encryption Key (PEK) to create an <code>EncryptedPinBlock</code> for transmission from Amazon Web Services Payment Cryptography. This operation uses a separate Pin Verification Key (PVK) for VISA PVV generation. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>GenerateCardValidationData</a> </p> </li> <li> <p> <a>TranslatePinData</a> </p> </li> <li> <p> <a>VerifyPinData</a> </p> </li> </ul>
		/// GeneratePinData pindata/generate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GeneratePinDataOutput> GeneratePinDataAsync(GeneratePinDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "pindata/generate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GeneratePinDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Re-encrypt ciphertext using DUKPT, Symmetric and Asymmetric Data Encryption Keys. </p> <p>You can either generate an encryption key within Amazon Web Services Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a> or import your own encryption key by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>. The <code>KeyArn</code> for use with this operation must be in a compatible key state with <code>KeyModesOfUse</code> set to <code>Encrypt</code>. In asymmetric encryption, ciphertext is encrypted using public component (imported by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>) of the asymmetric key pair created outside of Amazon Web Services Payment Cryptography. </p> <p>For symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography supports <code>TDES</code> and <code>AES</code> algorithms. For asymmetric encryption, Amazon Web Services Payment Cryptography supports <code>RSA</code>. To encrypt using DUKPT, a DUKPT key must already exist within your account with <code>KeyModesOfUse</code> set to <code>DeriveKey</code> or a new DUKPT can be generated by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a>.</p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>DecryptData</a> </p> </li> <li> <p> <a>EncryptData</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetPublicKeyCertificate.html">GetPublicCertificate</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a> </p> </li> </ul>
		/// ReEncryptData keys/{IncomingKeyIdentifier}/reencrypt
		/// </summary>
		/// <param name="IncomingKeyIdentifier">The <code>keyARN</code> of the encryption key of incoming ciphertext data.
		/// Min length: 7
		/// Max length: 322
		// </param>
		/// <returns>Success</returns>
		public async Task<ReEncryptDataOutput> ReEncryptDataAsync(string IncomingKeyIdentifier, ReEncryptDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "keys/"+ (IncomingKeyIdentifier==null? "" : System.Uri.EscapeDataString(IncomingKeyIdentifier))+"/reencrypt";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ReEncryptDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Translates encrypted PIN block from and to ISO 9564 formats 0,1,3,4. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/translate-pin-data.html">Translate PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>PIN block translation involves changing the encrytion of PIN block from one encryption key to another encryption key and changing PIN block format from one to another without PIN block data leaving Amazon Web Services Payment Cryptography. The encryption key transformation can be from PEK (Pin Encryption Key) to BDK (Base Derivation Key) for DUKPT or from BDK for DUKPT to PEK. Amazon Web Services Payment Cryptography supports <code>TDES</code> and <code>AES</code> key derivation type for DUKPT tranlations. You can use this operation for P2PE (Point to Point Encryption) use cases where the encryption keys should change but the processing system either does not need to, or is not permitted to, decrypt the data.</p> <p>The allowed combinations of PIN block format translations are guided by PCI. It is important to note that not all encrypted PIN block formats (example, format 1) require PAN (Primary Account Number) as input. And as such, PIN block format that requires PAN (example, formats 0,3,4) cannot be translated to a format (format 1) that does not require a PAN for generation. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <note> <p>At this time, Amazon Web Services Payment Cryptography does not support translations to PIN format 4.</p> </note> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>GeneratePinData</a> </p> </li> <li> <p> <a>VerifyPinData</a> </p> </li> </ul>
		/// TranslatePinData pindata/translate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TranslatePinDataOutput> TranslatePinDataAsync(TranslatePinDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "pindata/translate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TranslatePinDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Verifies Authorization Request Cryptogram (ARQC) for a EMV chip payment card authorization. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.verifyauthrequestcryptogram.html">Verify auth request cryptogram</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>ARQC generation is done outside of Amazon Web Services Payment Cryptography and is typically generated on a point of sale terminal for an EMV chip card to obtain payment authorization during transaction time. For ARQC verification, you must first import the ARQC generated outside of Amazon Web Services Payment Cryptography by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_ImportKey.html">ImportKey</a>. This operation uses the imported ARQC and an major encryption key (DUKPT) created by calling <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_CreateKey.html">CreateKey</a> to either provide a boolean ARQC verification result or provide an APRC (Authorization Response Cryptogram) response using Method 1 or Method 2. The <code>ARPC_METHOD_1</code> uses <code>AuthResponseCode</code> to generate ARPC and <code>ARPC_METHOD_2</code> uses <code>CardStatusUpdate</code> to generate ARPC. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>VerifyCardValidationData</a> </p> </li> <li> <p> <a>VerifyPinData</a> </p> </li> </ul>
		/// VerifyAuthRequestCryptogram cryptogram/verify
		/// </summary>
		/// <returns>Success</returns>
		public async Task<VerifyAuthRequestCryptogramOutput> VerifyAuthRequestCryptogramAsync(VerifyAuthRequestCryptogramPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cryptogram/verify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<VerifyAuthRequestCryptogramOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Verifies card-related validation data using algorithms such as Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2) and Card Security Codes (CSC). For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-card-data.html">Verify card data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>This operation validates the CVV or CSC codes that is printed on a payment credit or debit card during card payment transaction. The input values are typically provided as part of an inbound transaction to an issuer or supporting platform partner. Amazon Web Services Payment Cryptography uses CVV or CSC, PAN (Primary Account Number) and expiration date of the card to check its validity during transaction processing. In this operation, the CVK (Card Verification Key) encryption key for use with card data verification is same as the one in used for <a>GenerateCardValidationData</a>. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>GenerateCardValidationData</a> </p> </li> <li> <p> <a>VerifyAuthRequestCryptogram</a> </p> </li> <li> <p> <a>VerifyPinData</a> </p> </li> </ul>
		/// VerifyCardValidationData cardvalidationdata/verify
		/// </summary>
		/// <returns>Success</returns>
		public async Task<VerifyCardValidationDataOutput> VerifyCardValidationDataAsync(VerifyCardValidationDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cardvalidationdata/verify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<VerifyCardValidationDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Verifies a Message Authentication Code (MAC). </p> <p>You can use this operation when keys won't be shared but mutual data is present on both ends for validation. In this case, known data values are used to generate a MAC on both ends for verification without sending or receiving data in ciphertext or plaintext. You can use this operation to verify a DUPKT, HMAC or EMV MAC by setting generation attributes and algorithm to the associated values. Use the same encryption key for MAC verification as you use for <a>GenerateMac</a>. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>GenerateMac</a> </p> </li> </ul>
		/// VerifyMac mac/verify
		/// </summary>
		/// <returns>Success</returns>
		public async Task<VerifyMacOutput> VerifyMacAsync(VerifyMacPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "mac/verify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<VerifyMacOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Verifies pin-related data such as PIN and PIN Offset using algorithms including VISA PVV and IBM3624. For more information, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/verify-pin-data.html">Verify PIN data</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>.</p> <p>This operation verifies PIN data for user payment card. A card holder PIN data is never transmitted in clear to or from Amazon Web Services Payment Cryptography. This operation uses PIN Verification Key (PVK) for PIN or PIN Offset generation and then encrypts it using PIN Encryption Key (PEK) to create an <code>EncryptedPinBlock</code> for transmission from Amazon Web Services Payment Cryptography. </p> <p>For information about valid keys for this operation, see <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-validattributes.html">Understanding key attributes</a> and <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/crypto-ops-validkeys-ops.html">Key types for specific data operations</a> in the <i>Amazon Web Services Payment Cryptography User Guide</i>. </p> <p> <b>Cross-account use</b>: This operation can't be used across different Amazon Web Services accounts.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>GeneratePinData</a> </p> </li> <li> <p> <a>TranslatePinData</a> </p> </li> </ul>
		/// VerifyPinData pindata/verify
		/// </summary>
		/// <returns>Success</returns>
		public async Task<VerifyPinDataOutput> VerifyPinDataAsync(VerifyPinDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "pindata/verify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<VerifyPinDataOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class DecryptDataPostBody
	{
		
		/// <summary>
		/// The ciphertext to decrypt.
		/// Required
		/// Min length: 16
		/// Max length: 4096
		/// Pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(16)]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?:[0-9a-fA-F][0-9a-fA-F])+$")]
		public string CipherText { get; set; }
		
		/// <summary>
		/// Parameters that are required to perform encryption and decryption operations.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DecryptDataPostBodyDecryptionAttributes DecryptionAttributes { get; set; }
	}
	
	public class DecryptDataPostBodyDecryptionAttributes
	{
		
		/// <summary>
		/// Parameters for plaintext encryption using asymmetric keys.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AsymmetricEncryptionAttributes Asymmetric { get; set; }
		
		/// <summary>
		/// Parameters that are required to encrypt plaintext data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionAttributes Dukpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SymmetricEncryptionAttributes Symmetric { get; set; }
	}
	
	public class EncryptDataPostBody
	{
		
		/// <summary>
		/// Parameters that are required to perform encryption and decryption operations.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptDataPostBodyEncryptionAttributes EncryptionAttributes { get; set; }
		
		/// <summary>
		/// The plaintext to be encrypted.
		/// Required
		/// Min length: 16
		/// Max length: 4064
		/// Pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(16)]
		[System.ComponentModel.DataAnnotations.MaxLength(4064)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?:[0-9a-fA-F][0-9a-fA-F])+$")]
		public string PlainText { get; set; }
	}
	
	public class EncryptDataPostBodyEncryptionAttributes
	{
		
		/// <summary>
		/// Parameters for plaintext encryption using asymmetric keys.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AsymmetricEncryptionAttributes Asymmetric { get; set; }
		
		/// <summary>
		/// Parameters that are required to encrypt plaintext data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionAttributes Dukpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SymmetricEncryptionAttributes Symmetric { get; set; }
	}
	
	public class GenerateCardValidationDataPostBody
	{
		
		/// <summary>
		/// Card data parameters that are required to generate Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GenerateCardValidationDataPostBodyGenerationAttributes GenerationAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the CVK encryption key that Amazon Web Services Payment Cryptography uses to generate card data.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// The Primary Account Number (PAN), a unique identifier for a payment credit or debit card that associates the card with a specific account holder.
		/// Required
		/// Min length: 12
		/// Max length: 19
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(19)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// The length of the CVV or CSC to be generated. The default value is 3.
		/// Minimum: 3
		/// Maximum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(3, 5)]
		public System.Nullable<System.Int32> ValidationDataLength { get; set; }
	}
	
	public class GenerateCardValidationDataPostBodyGenerationAttributes
	{
		
		/// <summary>
		/// Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion1 AmexCardSecurityCodeVersion1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion2 AmexCardSecurityCodeVersion2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardHolderVerificationValue CardHolderVerificationValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue1 CardVerificationValue1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue2 CardVerificationValue2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationCode DynamicCardVerificationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationValue DynamicCardVerificationValue { get; set; }
	}
	
	public class GenerateMacPostBody
	{
		
		/// <summary>
		/// Parameters that are required for DUKPT, HMAC, or EMV MAC generation or verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GenerateMacPostBodyGenerationAttributes GenerationAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the MAC generation encryption key.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// The length of a MAC under generation.
		/// Minimum: 4
		/// Maximum: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(4, 16)]
		public System.Nullable<System.Int32> MacLength { get; set; }
		
		/// <summary>
		/// The data for which a MAC is under generation.
		/// Required
		/// Min length: 2
		/// Max length: 4096
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string MessageData { get; set; }
	}
	
	public class GenerateMacPostBodyGenerationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithm Algorithm { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptCmac { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptIso9797Algorithm1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptIso9797Algorithm3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmEmv EmvMac { get; set; }
	}
	
	public class GeneratePinDataPostBody
	{
		
		/// <summary>
		/// The <code>keyARN</code> of the PEK that Amazon Web Services Payment Cryptography uses to encrypt the PIN Block.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string EncryptionKeyIdentifier { get; set; }
		
		/// <summary>
		/// Parameters that are required for PIN data generation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GeneratePinDataPostBodyGenerationAttributes GenerationAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the PEK that Amazon Web Services Payment Cryptography uses for pin data generation.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string GenerationKeyIdentifier { get; set; }
		
		/// <summary>
		/// <p>The PIN encoding format for pin data generation as specified in ISO 9564. Amazon Web Services Payment Cryptography supports <code>ISO_Format_0</code> and <code>ISO_Format_3</code>.</p> <p>The <code>ISO_Format_0</code> PIN block format is equivalent to the ANSI X9.8, VISA-1, and ECI-1 PIN block formats. It is similar to a VISA-4 PIN block format. It supports a PIN from 4 to 12 digits in length.</p> <p>The <code>ISO_Format_3</code> PIN block format is the same as <code>ISO_Format_0</code> except that the fill digits are random values from 10 to 15.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinBlockFormatForPinData PinBlockFormat { get; set; }
		
		/// <summary>
		/// The length of PIN under generation.
		/// Minimum: 4
		/// Maximum: 12
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(4, 12)]
		public System.Nullable<System.Int32> PinDataLength { get; set; }
		
		/// <summary>
		/// The Primary Account Number (PAN), a unique identifier for a payment credit or debit card that associates the card with a specific account holder.
		/// Required
		/// Min length: 12
		/// Max length: 19
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(19)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string PrimaryAccountNumber { get; set; }
	}
	
	public class GeneratePinDataPostBodyGenerationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624NaturalPin Ibm3624NaturalPin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624PinFromOffset Ibm3624PinFromOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624PinOffset Ibm3624PinOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624RandomPin Ibm3624RandomPin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisaPin VisaPin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisaPinVerificationValue VisaPinVerificationValue { get; set; }
	}
	
	public class ReEncryptDataPostBody
	{
		
		/// <summary>
		/// Ciphertext to be encrypted. The minimum allowed length is 16 bytes and maximum allowed length is 4096 bytes.
		/// Required
		/// Min length: 16
		/// Max length: 4096
		/// Pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(16)]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?:[0-9a-fA-F][0-9a-fA-F])+$")]
		public string CipherText { get; set; }
		
		/// <summary>
		/// Parameters that are required to perform reencryption operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReEncryptDataPostBodyIncomingEncryptionAttributes IncomingEncryptionAttributes { get; set; }
		
		/// <summary>
		/// Parameters that are required to perform reencryption operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReEncryptDataPostBodyOutgoingEncryptionAttributes OutgoingEncryptionAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the encryption key of outgoing ciphertext data after encryption by Amazon Web Services Payment Cryptography.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string OutgoingKeyIdentifier { get; set; }
	}
	
	public class ReEncryptDataPostBodyIncomingEncryptionAttributes
	{
		
		/// <summary>
		/// Parameters that are required to encrypt plaintext data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionAttributes Dukpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SymmetricEncryptionAttributes Symmetric { get; set; }
	}
	
	public class ReEncryptDataPostBodyOutgoingEncryptionAttributes
	{
		
		/// <summary>
		/// Parameters that are required to encrypt plaintext data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DukptEncryptionAttributes Dukpt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SymmetricEncryptionAttributes Symmetric { get; set; }
	}
	
	public class TranslatePinDataPostBody
	{
		
		/// <summary>
		/// The encrypted PIN block data that Amazon Web Services Payment Cryptography translates.
		/// Required
		/// Min length: 16
		/// Max length: 32
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(16)]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string EncryptedPinBlock { get; set; }
		
		/// <summary>
		/// Parameters required for encryption or decryption of data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TranslatePinDataPostBodyIncomingDukptAttributes IncomingDukptAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the encryption key under which incoming PIN block data is encrypted. This key type can be PEK or BDK.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string IncomingKeyIdentifier { get; set; }
		
		/// <summary>
		/// Parameters that are required for translation between ISO9564 PIN block formats 0,1,3,4.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TranslatePinDataPostBodyIncomingTranslationAttributes IncomingTranslationAttributes { get; set; }
		
		/// <summary>
		/// Parameters required for encryption or decryption of data using DUKPT.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TranslatePinDataPostBodyOutgoingDukptAttributes OutgoingDukptAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the encryption key for encrypting outgoing PIN block data. This key type can be PEK or BDK.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string OutgoingKeyIdentifier { get; set; }
		
		/// <summary>
		/// Parameters that are required for translation between ISO9564 PIN block formats 0,1,3,4.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TranslatePinDataPostBodyOutgoingTranslationAttributes OutgoingTranslationAttributes { get; set; }
	}
	
	public class TranslatePinDataPostBodyIncomingDukptAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptKeyDerivationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptKeyVariant DukptKeyVariant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
	}
	
	public class TranslatePinDataPostBodyIncomingTranslationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat0 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat1 IsoFormat1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat4 { get; set; }
	}
	
	public class TranslatePinDataPostBodyOutgoingDukptAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptKeyDerivationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DukptKeyVariant DukptKeyVariant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
	}
	
	public class TranslatePinDataPostBodyOutgoingTranslationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat0 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat1 IsoFormat1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TranslationPinDataIsoFormat034 IsoFormat4 { get; set; }
	}
	
	public class VerifyAuthRequestCryptogramPostBody
	{
		
		/// <summary>
		/// The auth request cryptogram imported into Amazon Web Services Payment Cryptography for ARQC verification using a major encryption key and transaction data.
		/// Required
		/// Min length: 16
		/// Max length: 16
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(16)]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string AuthRequestCryptogram { get; set; }
		
		/// <summary>
		/// Parameters that are required for Authorization Response Cryptogram (ARPC) generation after Authorization Request Cryptogram (ARQC) verification is successful.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VerifyAuthRequestCryptogramPostBodyAuthResponseAttributes AuthResponseAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the major encryption key that Amazon Web Services Payment Cryptography uses for ARQC verification.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// The method to use when deriving the major encryption key for ARQC verification within Amazon Web Services Payment Cryptography. The same key derivation mode was used for ARQC generation outside of Amazon Web Services Payment Cryptography.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MajorKeyDerivationMode MajorKeyDerivationMode { get; set; }
		
		/// <summary>
		/// Parameters to derive a session key for Authorization Response Cryptogram (ARQC) verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerifyAuthRequestCryptogramPostBodySessionKeyDerivationAttributes SessionKeyDerivationAttributes { get; set; }
		
		/// <summary>
		/// The transaction data that Amazon Web Services Payment Cryptography uses for ARQC verification. The same transaction is used for ARQC generation outside of Amazon Web Services Payment Cryptography.
		/// Required
		/// Min length: 2
		/// Max length: 1024
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string TransactionData { get; set; }
	}
	
	public class VerifyAuthRequestCryptogramPostBodyAuthResponseAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CryptogramVerificationArpcMethod1 ArpcMethod1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CryptogramVerificationArpcMethod2 ArpcMethod2 { get; set; }
	}
	
	public class VerifyAuthRequestCryptogramPostBodySessionKeyDerivationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyAmex Amex { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyEmv2000 Emv2000 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyEmvCommon EmvCommon { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyMastercard Mastercard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionKeyVisa Visa { get; set; }
	}
	
	public class VerifyCardValidationDataPostBody
	{
		
		/// <summary>
		/// The <code>keyARN</code> of the CVK encryption key that Amazon Web Services Payment Cryptography uses to verify card data.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// The Primary Account Number (PAN), a unique identifier for a payment credit or debit card that associates the card with a specific account holder.
		/// Required
		/// Min length: 12
		/// Max length: 19
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(19)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// The CVV or CSC value for use for card data verification within Amazon Web Services Payment Cryptography.
		/// Required
		/// Min length: 3
		/// Max length: 5
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string ValidationData { get; set; }
		
		/// <summary>
		/// Card data parameters that are requried to verify Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerifyCardValidationDataPostBodyVerificationAttributes VerificationAttributes { get; set; }
	}
	
	public class VerifyCardValidationDataPostBodyVerificationAttributes
	{
		
		/// <summary>
		/// Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion1 AmexCardSecurityCodeVersion1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmexCardSecurityCodeVersion2 AmexCardSecurityCodeVersion2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardHolderVerificationValue CardHolderVerificationValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue1 CardVerificationValue1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CardVerificationValue2 CardVerificationValue2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiscoverDynamicCardVerificationCode DiscoverDynamicCardVerificationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationCode DynamicCardVerificationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicCardVerificationValue DynamicCardVerificationValue { get; set; }
	}
	
	public class VerifyMacPostBody
	{
		
		/// <summary>
		/// The <code>keyARN</code> of the encryption key that Amazon Web Services Payment Cryptography uses to verify MAC data.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string KeyIdentifier { get; set; }
		
		/// <summary>
		/// The MAC being verified.
		/// Required
		/// Min length: 4
		/// Max length: 128
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string Mac { get; set; }
		
		/// <summary>
		/// The length of the MAC.
		/// Minimum: 4
		/// Maximum: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(4, 16)]
		public System.Nullable<System.Int32> MacLength { get; set; }
		
		/// <summary>
		/// The data on for which MAC is under verification.
		/// Required
		/// Min length: 2
		/// Max length: 4096
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string MessageData { get; set; }
		
		/// <summary>
		/// Parameters that are required for DUKPT, HMAC, or EMV MAC generation or verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerifyMacPostBodyVerificationAttributes VerificationAttributes { get; set; }
	}
	
	public class VerifyMacPostBodyVerificationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithm Algorithm { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptCmac { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptIso9797Algorithm1 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmDukpt DukptIso9797Algorithm3 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MacAlgorithmEmv EmvMac { get; set; }
	}
	
	public class VerifyPinDataPostBody
	{
		
		/// <summary>
		/// Parameters that are used for Derived Unique Key Per Transaction (DUKPT) derivation algorithm.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VerifyPinDataPostBodyDukptAttributes DukptAttributes { get; set; }
		
		/// <summary>
		/// The encrypted PIN block data that Amazon Web Services Payment Cryptography verifies.
		/// Required
		/// Min length: 16
		/// Max length: 32
		/// Pattern: ^[0-9a-fA-F]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(16)]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-fA-F]+$")]
		public string EncryptedPinBlock { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the encryption key under which the PIN block data is encrypted. This key type can be PEK or BDK.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string EncryptionKeyIdentifier { get; set; }
		
		/// <summary>
		/// <p>The PIN encoding format for pin data generation as specified in ISO 9564. Amazon Web Services Payment Cryptography supports <code>ISO_Format_0</code> and <code>ISO_Format_3</code>.</p> <p>The <code>ISO_Format_0</code> PIN block format is equivalent to the ANSI X9.8, VISA-1, and ECI-1 PIN block formats. It is similar to a VISA-4 PIN block format. It supports a PIN from 4 to 12 digits in length.</p> <p>The <code>ISO_Format_3</code> PIN block format is the same as <code>ISO_Format_0</code> except that the fill digits are random values from 10 to 15.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PinBlockFormatForPinData PinBlockFormat { get; set; }
		
		/// <summary>
		/// The length of PIN being verified.
		/// Minimum: 4
		/// Maximum: 12
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(4, 12)]
		public System.Nullable<System.Int32> PinDataLength { get; set; }
		
		/// <summary>
		/// The Primary Account Number (PAN), a unique identifier for a payment credit or debit card that associates the card with a specific account holder.
		/// Required
		/// Min length: 12
		/// Max length: 19
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(19)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string PrimaryAccountNumber { get; set; }
		
		/// <summary>
		/// Parameters that are required for PIN data verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerifyPinDataPostBodyVerificationAttributes VerificationAttributes { get; set; }
		
		/// <summary>
		/// The <code>keyARN</code> of the PIN verification key.
		/// Required
		/// Min length: 7
		/// Max length: 322
		/// Pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		[System.ComponentModel.DataAnnotations.MaxLength(322)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$")]
		public string VerificationKeyIdentifier { get; set; }
	}
	
	public class VerifyPinDataPostBodyDukptAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DukptDerivationType DukptDerivationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KeySerialNumber { get; set; }
	}
	
	public class VerifyPinDataPostBodyVerificationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Ibm3624PinVerification Ibm3624Pin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisaPinVerification VisaPin { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The result of a <code>BuildSuggester</code> request. Contains a list of the fields used for suggestions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildSuggestersResponse
	{
		
		/// <summary>
		/// A list of field names.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] FieldNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	/// <summary>
	/// The result of a <code>CreateDomainRequest</code>. Contains the status of a newly created domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDomainResponse
	{
		
		/// <summary>
		/// The current status of the search domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The current status of the search domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainStatus
	{
		
		/// <summary>
		/// An internally generated unique identifier for a domain.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string DomainId { get; set; }
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the search domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceEndpoint DocService { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceEndpoint SearchService { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool RequiresIndexDocuments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Processing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SearchInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SearchPartitionCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SearchInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Limits Limits { get; set; }
	}
	
	/// <summary>
	/// The endpoint to which service requests can be submitted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceEndpoint
	{
		
		/// <summary>
		/// The endpoint to which service requests can be submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Limits
	{
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int MaximumReplicationCount { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int MaximumPartitionCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceAlreadyExistsException
	{
	}
	
	/// <summary>
	/// The result of a <code><a>DefineAnalysisScheme</a></code> request. Contains the status of the newly-configured analysis scheme.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineAnalysisSchemeResponse
	{
		
		/// <summary>
		/// The status and configuration of an <code>AnalysisScheme</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSchemeStatus AnalysisScheme { get; set; }
	}
	
	/// <summary>
	/// The status and configuration of an <code>AnalysisScheme</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSchemeStatus
	{
		
		/// <summary>
		/// Configuration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: <code>Synonyms</code>, <code>Stopwords</code>, <code>StemmingDictionary</code>, <code>JapaneseTokenizationDictionary</code> and <code>AlgorithmicStemming</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisScheme Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Configuration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: <code>Synonyms</code>, <code>Stopwords</code>, <code>StemmingDictionary</code>, <code>JapaneseTokenizationDictionary</code> and <code>AlgorithmicStemming</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisScheme
	{
		
		/// <summary>
		/// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string AnalysisSchemeName { get; set; }
		
		/// <summary>
		/// An <a href="http://tools.ietf.org/html/rfc4646" target="_blank">IETF RFC 4646</a> language code or <code>mul</code> for multiple languages.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSchemeAnalysisSchemeLanguage AnalysisSchemeLanguage { get; set; }
		
		/// <summary>
		/// Synonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisOptions AnalysisOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisSchemeAnalysisSchemeLanguage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ca = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cs = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		da = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		el = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eu = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fa = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fi = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ga = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gl = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		he = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hu = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hy = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lv = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mul = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nl = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ro = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ru = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sv = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		th = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tr = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-Hans")]
		zhMinusHans = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-Hant")]
		zhMinusHant = 34,
	}
	
	/// <summary>
	/// Synonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Synonyms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Stopwords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StemmingDictionary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JapaneseTokenizationDictionary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmicStemming AlgorithmicStemming { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlgorithmicStemming
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		minimal = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		light = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		full = 3,
	}
	
	/// <summary>
	/// The status of domain configuration option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UpdateVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PendingDeletion { get; set; }
	}
	
	/// <summary>
	/// <p>The state of processing a change to an option. One of:</p> <ul> <li>RequiresIndexDocuments: The option's latest value will not be deployed until <a>IndexDocuments</a> has been called and indexing is complete.</li> <li>Processing: The option's latest value is in the process of being activated.</li> <li>Active: The option's latest value is fully deployed. </li> <li>FailedToValidate: The option value is not compatible with the domain's data and cannot be used to index the data. You must either modify the option value or update or remove the incompatible documents.</li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OptionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequiresIndexDocuments = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailedToValidate = 3,
	}
	
	/// <summary>
	/// An <a href="http://tools.ietf.org/html/rfc4646" target="_blank">IETF RFC 4646</a> language code or <code>mul</code> for multiple languages.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisSchemeLanguage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ca = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cs = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		da = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		el = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eu = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fa = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fi = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ga = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gl = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		he = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hu = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hy = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lv = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mul = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nl = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ro = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ru = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sv = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		th = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tr = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-Hans")]
		zhMinusHans = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-Hant")]
		zhMinusHant = 34,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidTypeException
	{
	}
	
	/// <summary>
	/// The result of a <code>DefineExpression</code> request. Contains the status of the newly-configured expression.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineExpressionResponse
	{
		
		/// <summary>
		/// The value of an <code>Expression</code> and its current status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExpressionStatus Expression { get; set; }
	}
	
	/// <summary>
	/// The value of an <code>Expression</code> and its current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExpressionStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Expression Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// A named expression that can be evaluated at search time. Can be used to sort the search results, define other expressions, or return computed information in the search results. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Expression
	{
		
		/// <summary>
		/// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string ExpressionName { get; set; }
		
		/// <summary>
		/// The expression to evaluate for sorting while processing a search request. The <code>Expression</code> syntax is based on JavaScript expressions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// Required
		/// Min length: 1
		/// Max length: 10240
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10240)]
		public string ExpressionValue { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DefineIndexField</a></code> request. Contains the status of the newly-configured index field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineIndexFieldResponse
	{
		
		/// <summary>
		/// The value of an <code>IndexField</code> and its current status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexFieldStatus IndexField { get; set; }
	}
	
	/// <summary>
	/// The value of an <code>IndexField</code> and its current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndexFieldStatus
	{
		
		/// <summary>
		/// Configuration information for a field in the index, including its name, type, and options. The supported options depend on the <code><a>IndexFieldType</a></code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexField Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Configuration information for a field in the index, including its name, type, and options. The supported options depend on the <code><a>IndexFieldType</a></code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndexField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
		
		/// <summary>
		/// The type of field. The valid options for a field depend on the field type. For more information about the supported field types, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexFieldIndexFieldType IndexFieldType { get; set; }
		
		/// <summary>
		/// Options for a 64-bit signed integer field. Present if <code>IndexFieldType</code> specifies the field is of type <code>int</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntOptions IntOptions { get; set; }
		
		/// <summary>
		/// Options for a double-precision 64-bit floating point field. Present if <code>IndexFieldType</code> specifies the field is of type <code>double</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DoubleOptions DoubleOptions { get; set; }
		
		/// <summary>
		/// Options for literal field. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LiteralOptions LiteralOptions { get; set; }
		
		/// <summary>
		/// Options for text field. Present if <code>IndexFieldType</code> specifies the field is of type <code>text</code>. A <code>text</code> field is always searchable. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TextOptions TextOptions { get; set; }
		
		/// <summary>
		/// Options for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if <code>IndexFieldType</code> specifies the field is of type <code>date</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DateOptions DateOptions { get; set; }
		
		/// <summary>
		/// Options for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if <code>IndexFieldType</code> specifies the field is of type <code>latlon</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LatLonOptions LatLonOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of 64-bit signed integers. Present if <code>IndexFieldType</code> specifies the field is of type <code>int-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntArrayOptions IntArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of double-precision 64-bit floating point values. Present if <code>IndexFieldType</code> specifies the field is of type <code>double-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DoubleArrayOptions DoubleArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of literal strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LiteralArrayOptions LiteralArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of text strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>text-array</code>. A <code>text-array</code> field is always searchable. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TextArrayOptions TextArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of dates. Present if <code>IndexFieldType</code> specifies the field is of type <code>date-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DateArrayOptions DateArrayOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IndexFieldIndexFieldType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="int")]
		_int = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double")]
		_double = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		literal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		latlon = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="int-array")]
		intMinusarray = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double-array")]
		doubleMinusarray = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="literal-array")]
		literalMinusarray = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="text-array")]
		textMinusarray = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="date-array")]
		dateMinusarray = 10,
	}
	
	/// <summary>
	/// Options for a 64-bit signed integer field. Present if <code>IndexFieldType</code> specifies the field is of type <code>int</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SortEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for a double-precision 64-bit floating point field. Present if <code>IndexFieldType</code> specifies the field is of type <code>double</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DoubleOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SortEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for literal field. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiteralOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// <p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field's name defines a pattern that begins or ends with a wildcard. Any document fields that don't map to a regular index field but do match a dynamic field's pattern are configured with the dynamic field's indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document's ID, you can use the name <code>_id</code>. </p>
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SortEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for text field. Present if <code>IndexFieldType</code> specifies the field is of type <code>text</code>. A <code>text</code> field is always searchable. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// <p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field's name defines a pattern that begins or ends with a wildcard. Any document fields that don't map to a regular index field but do match a dynamic field's pattern are configured with the dynamic field's indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document's ID, you can use the name <code>_id</code>. </p>
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SortEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HighlightEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisScheme { get; set; }
	}
	
	/// <summary>
	/// Options for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if <code>IndexFieldType</code> specifies the field is of type <code>date</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// <p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field's name defines a pattern that begins or ends with a wildcard. Any document fields that don't map to a regular index field but do match a dynamic field's pattern are configured with the dynamic field's indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document's ID, you can use the name <code>_id</code>. </p>
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SortEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if <code>IndexFieldType</code> specifies the field is of type <code>latlon</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LatLonOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// <p>A string that represents the name of an index field. CloudSearch supports regular index fields as well as dynamic fields. A dynamic field's name defines a pattern that begins or ends with a wildcard. Any document fields that don't map to a regular index field but do match a dynamic field's pattern are configured with the dynamic field's indexing options. </p> <p>Regular field names begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field names must begin or end with a wildcard (*). The wildcard can also be the only character in a dynamic field name. Multiple wildcards, and wildcards embedded within a string are not supported. </p> <p>The name <code>score</code> is reserved and cannot be used as a field name. To reference a document's ID, you can use the name <code>_id</code>. </p>
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SortEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for a field that contains an array of 64-bit signed integers. Present if <code>IndexFieldType</code> specifies the field is of type <code>int-array</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntArrayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for a field that contains an array of double-precision 64-bit floating point values. Present if <code>IndexFieldType</code> specifies the field is of type <code>double-array</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DoubleArrayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for a field that contains an array of literal strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal-array</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiteralArrayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
	}
	
	/// <summary>
	/// Options for a field that contains an array of text strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>text-array</code>. A <code>text-array</code> field is always searchable. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextArrayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HighlightEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisScheme { get; set; }
	}
	
	/// <summary>
	/// Options for a field that contains an array of dates. Present if <code>IndexFieldType</code> specifies the field is of type <code>date-array</code>. All options are enabled by default.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateArrayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FacetEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SearchEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReturnEnabled { get; set; }
	}
	
	/// <summary>
	/// The type of field. The valid options for a field depend on the field type. For more information about the supported field types, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IndexFieldType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="int")]
		_int = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double")]
		_double = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		literal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		latlon = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="int-array")]
		intMinusarray = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double-array")]
		doubleMinusarray = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="literal-array")]
		literalMinusarray = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="text-array")]
		textMinusarray = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="date-array")]
		dateMinusarray = 10,
	}
	
	/// <summary>
	/// The result of a <code>DefineSuggester</code> request. Contains the status of the newly-configured suggester.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineSuggesterResponse
	{
		
		/// <summary>
		/// The value of a <code>Suggester</code> and its current status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuggesterStatus Suggester { get; set; }
	}
	
	/// <summary>
	/// The value of a <code>Suggester</code> and its current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuggesterStatus
	{
		
		/// <summary>
		/// Configuration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: <code>FuzzyMatching</code>, <code>SortExpression</code>. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Suggester Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Configuration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: <code>FuzzyMatching</code>, <code>SortExpression</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Suggester
	{
		
		/// <summary>
		/// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string SuggesterName { get; set; }
		
		/// <summary>
		/// Options for a search suggester.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DocumentSuggesterOptions DocumentSuggesterOptions { get; set; }
	}
	
	/// <summary>
	/// Options for a search suggester.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentSuggesterOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuggesterFuzzyMatching FuzzyMatching { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SortExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SuggesterFuzzyMatching
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		low = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		high = 2,
	}
	
	/// <summary>
	/// The result of a <code>DeleteAnalysisScheme</code> request. Contains the status of the deleted analysis scheme.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnalysisSchemeResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSchemeStatus AnalysisScheme { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DeleteDomain</code> request. Contains the status of a newly deleted domain, or no status if the domain has already been completely deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDomainResponse
	{
		
		/// <summary>
		/// The current status of the search domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DeleteExpression</a></code> request. Specifies the expression being deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteExpressionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExpressionStatus Expression { get; set; }
	}
	
	/// <summary>
	/// The result of a <code><a>DeleteIndexField</a></code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIndexFieldResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexFieldStatus IndexField { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DeleteSuggester</code> request. Contains the status of the deleted suggester.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSuggesterResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuggesterStatus Suggester { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeAnalysisSchemes</code> request. Contains the analysis schemes configured for the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisSchemesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSchemeStatus[] AnalysisSchemes { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeAvailabilityOptions</code> request. Indicates whether or not the Multi-AZ option is enabled for the domain specified in the request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAvailabilityOptionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityOptionsStatus AvailabilityOptions { get; set; }
	}
	
	/// <summary>
	/// The status and configuration of the domain's availability options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AvailabilityOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisabledOperationException
	{
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomainEndpointOptions</code> request. Contains the status and configuration of a search domain's endpoint options. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainEndpointOptionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptionsStatus DomainEndpointOptions { get; set; }
	}
	
	/// <summary>
	/// The configuration and status of the domain's endpoint options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainEndpointOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The domain's endpoint options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
	}
	
	/// <summary>
	/// The minimum required TLS version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TLSSecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Policy-Min-TLS-1-0-2019-07")]
		PolicyMinusMinMinusTLSMinus1Minus0Minus2019Minus07 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Policy-Min-TLS-1-2-2019-07")]
		PolicyMinusMinMinusTLSMinus1Minus2Minus2019Minus07 = 1,
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomains</code> request. Contains the status of the domains specified in the request or all domains owned by the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainsResponse
	{
		
		/// <summary>
		/// A list that contains the status of each requested domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus[] DomainStatusList { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeExpressions</code> request. Contains the expressions configured for the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeExpressionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExpressionStatus[] Expressions { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeIndexFields</code> request. Contains the index fields configured for the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIndexFieldsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexFieldStatus[] IndexFields { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeScalingParameters</code> request. Contains the scaling parameters configured for the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeScalingParametersResponse
	{
		
		/// <summary>
		/// The status and configuration of a search domain's scaling parameters. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingParametersStatus ScalingParameters { get; set; }
	}
	
	/// <summary>
	/// The status and configuration of a search domain's scaling parameters. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingParametersStatus
	{
		
		/// <summary>
		/// The desired instance type and desired number of replicas of each index partition.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingParameters Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The desired instance type and desired number of replicas of each index partition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PartitionInstanceType DesiredInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredReplicationCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredPartitionCount { get; set; }
	}
	
	/// <summary>
	/// The instance type (such as <code>search.m1.small</code>) on which an index partition is hosted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m1.small")]
		search_m1_small = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m1.large")]
		search_m1_large = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m2.xlarge")]
		search_m2_xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m2.2xlarge")]
		search_m2_2xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m3.medium")]
		search_m3_medium = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m3.large")]
		search_m3_large = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m3.xlarge")]
		search_m3_xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.m3.2xlarge")]
		search_m3_2xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.small")]
		search_small = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.medium")]
		search_medium = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.large")]
		search_large = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.xlarge")]
		search_xlarge = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.2xlarge")]
		search_2xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.previousgeneration.small")]
		search_previousgeneration_small = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.previousgeneration.large")]
		search_previousgeneration_large = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.previousgeneration.xlarge")]
		search_previousgeneration_xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="search.previousgeneration.2xlarge")]
		search_previousgeneration_2xlarge = 16,
	}
	
	/// <summary>
	/// The result of a <code>DescribeServiceAccessPolicies</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeServiceAccessPoliciesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccessPoliciesStatus AccessPolicies { get; set; }
	}
	
	/// <summary>
	/// The configured access rules for the domain's document and search endpoints, and the current status of those rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessPoliciesStatus
	{
		
		/// <summary>
		/// Access rules for a domain's document or search service endpoints. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank">Configuring Access for a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>. The maximum size of a policy document is 100 KB.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// The status of domain configuration option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeSuggesters</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSuggestersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuggesterStatus[] Suggesters { get; set; }
	}
	
	/// <summary>
	/// The result of an <code>IndexDocuments</code> request. Contains the status of the indexing operation, including the fields being indexed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndexDocumentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FieldNames { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>ListDomainNames</code> request. Contains a list of the domains owned by an account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainNamesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainNameMap DomainNames { get; set; }
	}
	
	/// <summary>
	/// A collection of domain names.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainNameMap
	{
	}
	
	/// <summary>
	/// The result of a <code>UpdateAvailabilityOptions</code> request. Contains the status of the domain's availability options. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAvailabilityOptionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityOptionsStatus AvailabilityOptions { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>UpdateDomainEndpointOptions</code> request. Contains the configuration and status of the domain's endpoint options. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDomainEndpointOptionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptionsStatus DomainEndpointOptions { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>UpdateScalingParameters</code> request. Contains the status of the newly-configured scaling parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateScalingParametersResponse
	{
		
		/// <summary>
		/// The status and configuration of a search domain's scaling parameters. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingParametersStatus ScalingParameters { get; set; }
	}
	
	/// <summary>
	/// The result of an <code>UpdateServiceAccessPolicies</code> request. Contains the new access policies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateServiceAccessPoliciesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccessPoliciesStatus AccessPolicies { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>BuildSuggester</a></code> operation. Specifies the name of the domain you want to update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildSuggestersRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>CreateDomain</a></code> operation. Specifies a name for the new search domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDomainRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DefineAnalysisScheme</a></code> operation. Specifies the name of the domain you want to update and the analysis scheme configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineAnalysisSchemeRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Configuration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: <code>Synonyms</code>, <code>Stopwords</code>, <code>StemmingDictionary</code>, <code>JapaneseTokenizationDictionary</code> and <code>AlgorithmicStemming</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisScheme AnalysisScheme { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DefineExpression</a></code> operation. Specifies the name of the domain you want to update and the expression you want to configure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineExpressionRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// A named expression that can be evaluated at search time. Can be used to sort the search results, define other expressions, or return computed information in the search results. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Expression Expression { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DefineIndexField</a></code> operation. Specifies the name of the domain you want to update and the index field configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineIndexFieldRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndexField IndexField { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DefineSuggester</a></code> operation. Specifies the name of the domain you want to update and the suggester configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefineSuggesterRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Configuration information for a search suggester. Each suggester has a unique name and specifies the text field you want to use for suggestions. The following options can be configured for a suggester: <code>FuzzyMatching</code>, <code>SortExpression</code>. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Suggester Suggester { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteAnalysisScheme</a></code> operation. Specifies the name of the domain you want to update and the analysis scheme you want to delete. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnalysisSchemeRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisSchemeName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteDomain</a></code> operation. Specifies the name of the domain you want to delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDomainRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteExpression</a></code> operation. Specifies the name of the domain you want to update and the name of the expression you want to delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteExpressionRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExpressionName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteIndexField</a></code> operation. Specifies the name of the domain you want to update and the name of the index field you want to delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIndexFieldRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DeleteSuggester</a></code> operation. Specifies the name of the domain you want to update and name of the suggester you want to delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSuggesterRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SuggesterName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeAnalysisSchemes</a></code> operation. Specifies the name of the domain you want to describe. To limit the response to particular analysis schemes, specify the names of the analysis schemes you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisSchemesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AnalysisSchemeNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeAvailabilityOptions</a></code> operation. Specifies the name of the domain you want to describe. To show the active configuration and exclude any pending changes, set the Deployed option to <code>true</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAvailabilityOptionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeDomainEndpointOptions</a></code> operation. Specify the name of the domain you want to describe. To show the active configuration and exclude any pending changes, set the Deployed option to <code>true</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainEndpointOptionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeDomains</a></code> operation. By default shows the status of all domains. To restrict the response to particular domains, specify the names of the domains you want to describe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainNames { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeDomains</a></code> operation. Specifies the name of the domain you want to describe. To restrict the response to particular expressions, specify the names of the expressions you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeExpressionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExpressionNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeIndexFields</a></code> operation. Specifies the name of the domain you want to describe. To restrict the response to particular index fields, specify the names of the index fields you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIndexFieldsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FieldNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeScalingParameters</a></code> operation. Specifies the name of the domain you want to describe. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeScalingParametersRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeServiceAccessPolicies</a></code> operation. Specifies the name of the domain you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeServiceAccessPoliciesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>DescribeSuggester</a></code> operation. Specifies the name of the domain you want to describe. To restrict the response to particular suggesters, specify the names of the suggesters you want to describe. To show the active configuration and exclude any pending changes, set the <code>Deployed</code> option to <code>true</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSuggestersRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SuggesterNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deployed { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>IndexDocuments</a></code> operation. Specifies the name of the domain you want to re-index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndexDocumentsRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>UpdateAvailabilityOptions</a></code> operation. Specifies the name of the domain you want to update and the Multi-AZ availability option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAvailabilityOptionsRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool MultiAZ { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>UpdateDomainEndpointOptions</a></code> operation. Specifies the name of the domain you want to update and the domain endpoint options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDomainEndpointOptionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>UpdateScalingParameters</a></code> operation. Specifies the name of the domain you want to update and the scaling parameters you want to configure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateScalingParametersRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The desired instance type and desired number of replicas of each index partition.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingParameters ScalingParameters { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code><a>UpdateServiceAccessPolicies</a></code> operation. Specifies the name of the domain you want to update and the access rules you want to configure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateServiceAccessPoliciesRequest
	{
		
		/// <summary>
		/// A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Indexes the search suggestions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html#configuring-suggesters">Configuring Suggesters</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_BuildSuggesters #Action=BuildSuggesters
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_BuildSuggestersAsync(string DomainName, GET_BuildSuggestersAction Action, GET_BuildSuggestersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=BuildSuggesters?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/creating-domains.html" target="_blank">Creating a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_CreateDomain #Action=CreateDomain
		/// </summary>
		/// <param name="DomainName">A name for the domain you are creating. Allowed characters are a-z (lower-case letters), 0-9, and hyphen (-). Domain names must start with a letter or number and be at least 3 and no more than 28 characters long.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_CreateDomainAsync(string DomainName, GET_CreateDomainAction Action, GET_CreateDomainVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDomain?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures an analysis scheme that can be applied to a <code>text</code> or <code>text-array</code> field to define language-specific text processing options. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DefineAnalysisScheme #Action=DefineAnalysisScheme
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DefineAnalysisSchemeAsync(string DomainName, GET_DefineAnalysisSchemeAnalysisScheme AnalysisScheme, GET_DefineAnalysisSchemeAction Action, GET_DefineAnalysisSchemeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DefineAnalysisScheme?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&AnalysisScheme=" + AnalysisScheme+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures an <code><a>Expression</a></code> for the search domain. Used to create new expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DefineExpression #Action=DefineExpression
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DefineExpressionAsync(string DomainName, GET_DefineExpressionExpression Expression, GET_DefineExpressionAction Action, GET_DefineExpressionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DefineExpression?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Expression=" + Expression+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures an <code><a>IndexField</a></code> for the search domain. Used to create new fields and modify existing ones. You must specify the name of the domain you are configuring and an index field configuration. The index field configuration specifies a unique name, the index field type, and the options you want to configure for the field. The options you can specify depend on the <code><a>IndexFieldType</a></code>. If the field exists, the new configuration replaces the old one. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DefineIndexField #Action=DefineIndexField
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="IndexField">The index field and field options you want to configure. </param>
		/// <returns>Success</returns>
		public async Task GET_DefineIndexFieldAsync(string DomainName, GET_DefineIndexFieldIndexField IndexField, GET_DefineIndexFieldAction Action, GET_DefineIndexFieldVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DefineIndexField?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&IndexField=" + IndexField+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures a suggester for a domain. A suggester enables you to display possible matches before users finish typing their queries. When you configure a suggester, you must specify the name of the text field you want to search for possible matches and a unique name for the suggester. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DefineSuggester #Action=DefineSuggester
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DefineSuggesterAsync(string DomainName, GET_DefineSuggesterSuggester Suggester, GET_DefineSuggesterAction Action, GET_DefineSuggesterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DefineSuggester?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Suggester=" + Suggester+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an analysis scheme. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DeleteAnalysisScheme #Action=DeleteAnalysisScheme
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="AnalysisSchemeName">The name of the analysis scheme you want to delete.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteAnalysisSchemeAsync(string DomainName, string AnalysisSchemeName, GET_DeleteAnalysisSchemeAction Action, GET_DeleteAnalysisSchemeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteAnalysisScheme?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&AnalysisSchemeName=" + (AnalysisSchemeName==null? "" : System.Uri.EscapeDataString(AnalysisSchemeName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Permanently deletes a search domain and all of its data. Once a domain has been deleted, it cannot be recovered. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/deleting-domains.html" target="_blank">Deleting a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DeleteDomain #Action=DeleteDomain
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to permanently delete.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDomainAsync(string DomainName, GET_DeleteDomainAction Action, GET_DeleteDomainVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDomain?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an <code><a>Expression</a></code> from the search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DeleteExpression #Action=DeleteExpression
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="ExpressionName">The name of the <code><a>Expression</a></code> to delete.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteExpressionAsync(string DomainName, string ExpressionName, GET_DeleteExpressionAction Action, GET_DeleteExpressionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteExpression?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&ExpressionName=" + (ExpressionName==null? "" : System.Uri.EscapeDataString(ExpressionName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an <code><a>IndexField</a></code> from the search domain. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DeleteIndexField #Action=DeleteIndexField
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="IndexFieldName">The name of the index field your want to remove from the domain's indexing options.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteIndexFieldAsync(string DomainName, string IndexFieldName, GET_DeleteIndexFieldAction Action, GET_DeleteIndexFieldVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteIndexField?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&IndexFieldName=" + (IndexFieldName==null? "" : System.Uri.EscapeDataString(IndexFieldName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a suggester. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DeleteSuggester #Action=DeleteSuggester
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="SuggesterName">Specifies the name of the suggester you want to delete.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteSuggesterAsync(string DomainName, string SuggesterName, GET_DeleteSuggesterAction Action, GET_DeleteSuggesterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteSuggester?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&SuggesterName=" + (SuggesterName==null? "" : System.Uri.EscapeDataString(SuggesterName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the analysis schemes configured for a domain. An analysis scheme defines language-specific text processing options for a <code>text</code> field. Can be limited to specific analysis schemes by name. By default, shows all analysis schemes and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html" target="_blank">Configuring Analysis Schemes</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeAnalysisSchemes #Action=DescribeAnalysisSchemes
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="AnalysisSchemeNames">The analysis schemes you want to describe.</param>
		/// <param name="Deployed">Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeAnalysisSchemesAsync(string DomainName, string[] AnalysisSchemeNames, bool Deployed, GET_DescribeAnalysisSchemesAction Action, GET_DescribeAnalysisSchemesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeAnalysisSchemes?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&"+string.Join("&", AnalysisSchemeNames.Select(z => $"AnalysisSchemeNames={System.Uri.EscapeDataString(z.ToString())}"))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html" target="_blank">Configuring Availability Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeAvailabilityOptions #Action=DescribeAvailabilityOptions
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="Deployed">Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeAvailabilityOptionsAsync(string DomainName, bool Deployed, GET_DescribeAvailabilityOptionsAction Action, GET_DescribeAvailabilityOptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeAvailabilityOptions?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the domain's endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-domain-endpoint-options.html" target="_blank">Configuring Domain Endpoint Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeDomainEndpointOptions #Action=DescribeDomainEndpointOptions
		/// </summary>
		/// <param name="DomainName">A string that represents the name of a domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="Deployed">Whether to retrieve the latest configuration (which might be in a Processing state) or the current, active configuration. Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDomainEndpointOptionsAsync(string DomainName, bool Deployed, GET_DescribeDomainEndpointOptionsAction Action, GET_DescribeDomainEndpointOptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDomainEndpointOptions?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default. To get the number of searchable documents in a domain, use the console or submit a <code>matchall</code> request to your domain's search endpoint: <code>q=matchall&amp;amp;q.parser=structured&amp;amp;size=0</code>. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html" target="_blank">Getting Information about a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeDomains #Action=DescribeDomains
		/// </summary>
		/// <param name="DomainNames">The names of the domains you want to include in the response.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDomainsAsync(string[] DomainNames, GET_DescribeDomainsAction Action, GET_DescribeDomainsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDomains?"+string.Join("&", DomainNames.Select(z => $"DomainNames={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the expressions configured for the search domain. Can be limited to specific expressions by name. By default, shows all expressions and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeExpressions #Action=DescribeExpressions
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="ExpressionNames">Limits the <code><a>DescribeExpressions</a></code> response to the specified expressions. If not specified, all expressions are shown.</param>
		/// <param name="Deployed">Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeExpressionsAsync(string DomainName, string[] ExpressionNames, bool Deployed, GET_DescribeExpressionsAction Action, GET_DescribeExpressionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeExpressions?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&"+string.Join("&", ExpressionNames.Select(z => $"ExpressionNames={System.Uri.EscapeDataString(z.ToString())}"))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about the index fields configured for the search domain. Can be limited to specific fields by name. By default, shows all fields and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html" target="_blank">Getting Domain Information</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeIndexFields #Action=DescribeIndexFields
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="FieldNames">A list of the index fields you want to describe. If not specified, information is returned for all configured index fields.</param>
		/// <param name="Deployed">Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeIndexFieldsAsync(string DomainName, string[] FieldNames, bool Deployed, GET_DescribeIndexFieldsAction Action, GET_DescribeIndexFieldsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeIndexFields?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&"+string.Join("&", FieldNames.Select(z => $"FieldNames={System.Uri.EscapeDataString(z.ToString())}"))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the scaling parameters configured for a domain. A domain's scaling parameters specify the desired search instance type and replication count. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html" target="_blank">Configuring Scaling Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeScalingParameters #Action=DescribeScalingParameters
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeScalingParametersAsync(string DomainName, GET_DescribeScalingParametersAction Action, GET_DescribeScalingParametersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeScalingParameters?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about the access policies that control access to the domain's document and search endpoints. By default, shows the configuration with any pending changes. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank">Configuring Access for a Search Domain</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeServiceAccessPolicies #Action=DescribeServiceAccessPolicies
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="Deployed">Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeServiceAccessPoliciesAsync(string DomainName, bool Deployed, GET_DescribeServiceAccessPoliciesAction Action, GET_DescribeServiceAccessPoliciesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeServiceAccessPolicies?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the suggesters configured for a domain. A suggester enables you to display possible matches before users finish typing their queries. Can be limited to specific suggesters by name. By default, shows all suggesters and includes any pending changes to the configuration. Set the <code>Deployed</code> option to <code>true</code> to show the active configuration and exclude pending changes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html" target="_blank">Getting Search Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_DescribeSuggesters #Action=DescribeSuggesters
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="SuggesterNames">The suggesters you want to describe.</param>
		/// <param name="Deployed">Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeSuggestersAsync(string DomainName, string[] SuggesterNames, bool Deployed, GET_DescribeSuggestersAction Action, GET_DescribeSuggestersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeSuggesters?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&"+string.Join("&", SuggesterNames.Select(z => $"SuggesterNames={System.Uri.EscapeDataString(z.ToString())}"))+"&Deployed="+Deployed+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Tells the search domain to start indexing its documents using the latest indexing options. This operation must be invoked to activate options whose <a>OptionStatus</a> is <code>RequiresIndexDocuments</code>.
		/// GET_IndexDocuments #Action=IndexDocuments
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_IndexDocumentsAsync(string DomainName, GET_IndexDocumentsAction Action, GET_IndexDocumentsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=IndexDocuments?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all search domains owned by an account.
		/// GET_ListDomainNames #Action=ListDomainNames
		/// </summary>
		/// <returns>Success</returns>
		public async Task GET_ListDomainNamesAsync(GET_ListDomainNamesAction Action, GET_ListDomainNamesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListDomainNames?Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all search domains owned by an account.
		/// POST_ListDomainNames #Action=ListDomainNames
		/// </summary>
		/// <returns>Success</returns>
		public async Task POST_ListDomainNamesAsync(GET_ListDomainNamesAction Action, POST_ListDomainNamesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListDomainNames?Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html" target="_blank">Configuring Availability Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_UpdateAvailabilityOptions #Action=UpdateAvailabilityOptions
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="MultiAZ">You expand an existing search domain to a second Availability Zone by setting the Multi-AZ option to true. Similarly, you can turn off the Multi-AZ option to downgrade the domain to a single Availability Zone by setting the Multi-AZ option to <code>false</code>. </param>
		/// <returns>Success</returns>
		public async Task GET_UpdateAvailabilityOptionsAsync(string DomainName, bool MultiAZ, GET_UpdateAvailabilityOptionsAction Action, GET_UpdateAvailabilityOptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateAvailabilityOptions?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&MultiAZ="+MultiAZ+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the domain's endpoint options, specifically whether all requests to the domain must arrive over HTTPS. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-domain-endpoint-options.html" target="_blank">Configuring Domain Endpoint Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_UpdateDomainEndpointOptions #Action=UpdateDomainEndpointOptions
		/// </summary>
		/// <param name="DomainName">A string that represents the name of a domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="DomainEndpointOptions">Whether to require that all requests to the domain arrive over HTTPS. We recommend Policy-Min-TLS-1-2-2019-07 for TLSSecurityPolicy. For compatibility with older clients, the default is Policy-Min-TLS-1-0-2019-07. </param>
		/// <returns>Success</returns>
		public async Task GET_UpdateDomainEndpointOptionsAsync(string DomainName, GET_UpdateDomainEndpointOptionsDomainEndpointOptions DomainEndpointOptions, GET_UpdateDomainEndpointOptionsAction Action, GET_UpdateDomainEndpointOptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateDomainEndpointOptions?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&DomainEndpointOptions=" + DomainEndpointOptions+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures scaling parameters for a domain. A domain's scaling parameters specify the desired search instance type and replication count. Amazon CloudSearch will still automatically scale your domain based on the volume of data and traffic, but not below the desired instance type and replication count. If the Multi-AZ option is enabled, these values control the resources used per Availability Zone. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html" target="_blank">Configuring Scaling Options</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// GET_UpdateScalingParameters #Action=UpdateScalingParameters
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task GET_UpdateScalingParametersAsync(string DomainName, GET_UpdateScalingParametersScalingParameters ScalingParameters, GET_UpdateScalingParametersAction Action, GET_UpdateScalingParametersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateScalingParameters?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&ScalingParameters=" + ScalingParameters+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Configures the access rules that control access to the domain's document and search endpoints. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html" target="_blank"> Configuring Access for an Amazon CloudSearch Domain</a>.
		/// GET_UpdateServiceAccessPolicies #Action=UpdateServiceAccessPolicies
		/// </summary>
		/// <param name="DomainName">Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="AccessPolicies">The access rules you want to configure. These rules replace any existing rules. </param>
		/// <returns>Success</returns>
		public async Task GET_UpdateServiceAccessPoliciesAsync(string DomainName, string AccessPolicies, GET_UpdateServiceAccessPoliciesAction Action, GET_UpdateServiceAccessPoliciesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateServiceAccessPolicies?DomainName=" + (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"&AccessPolicies=" + (AccessPolicies==null? "" : System.Uri.EscapeDataString(AccessPolicies))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum GET_BuildSuggestersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BuildSuggesters = 0,
	}
	
	public enum GET_BuildSuggestersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_BuildSuggestersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_CreateDomainAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDomain = 0,
	}
	
	public enum GET_CreateDomainVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_CreateDomainVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public class GET_DefineAnalysisSchemeAnalysisScheme
	{
		
		/// <summary>
		/// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string AnalysisSchemeName { get; set; }
		
		/// <summary>
		/// An <a href="http://tools.ietf.org/html/rfc4646" target="_blank">IETF RFC 4646</a> language code or <code>mul</code> for multiple languages.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GET_DefineAnalysisSchemeAnalysisSchemeAnalysisSchemeLanguage AnalysisSchemeLanguage { get; set; }
		
		/// <summary>
		/// Synonyms, stopwords, and stemming options for an analysis scheme. Includes tokenization dictionary for Japanese.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisOptions AnalysisOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GET_DefineAnalysisSchemeAnalysisSchemeAnalysisSchemeLanguage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ca = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cs = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		da = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		el = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		en = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eu = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fa = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fi = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fr = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ga = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gl = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		he = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hi = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hu = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hy = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ja = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ko = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lv = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mul = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nl = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pt = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ro = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ru = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sv = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		th = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tr = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-Hans")]
		zhMinusHans = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-Hant")]
		zhMinusHant = 34,
	}
	
	public enum GET_DefineAnalysisSchemeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefineAnalysisScheme = 0,
	}
	
	public enum GET_DefineAnalysisSchemeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DefineAnalysisSchemeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public class GET_DefineExpressionExpression
	{
		
		/// <summary>
		/// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string ExpressionName { get; set; }
		
		/// <summary>
		/// The expression to evaluate for sorting while processing a search request. The <code>Expression</code> syntax is based on JavaScript expressions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// Required
		/// Min length: 1
		/// Max length: 10240
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10240)]
		public string ExpressionValue { get; set; }
	}
	
	public enum GET_DefineExpressionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefineExpression = 0,
	}
	
	public enum GET_DefineExpressionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DefineExpressionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public class GET_DefineIndexFieldIndexField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IndexFieldName { get; set; }
		
		/// <summary>
		/// The type of field. The valid options for a field depend on the field type. For more information about the supported field types, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank">Configuring Index Fields</a> in the <i>Amazon CloudSearch Developer Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GET_DefineIndexFieldIndexFieldIndexFieldType IndexFieldType { get; set; }
		
		/// <summary>
		/// Options for a 64-bit signed integer field. Present if <code>IndexFieldType</code> specifies the field is of type <code>int</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntOptions IntOptions { get; set; }
		
		/// <summary>
		/// Options for a double-precision 64-bit floating point field. Present if <code>IndexFieldType</code> specifies the field is of type <code>double</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DoubleOptions DoubleOptions { get; set; }
		
		/// <summary>
		/// Options for literal field. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LiteralOptions LiteralOptions { get; set; }
		
		/// <summary>
		/// Options for text field. Present if <code>IndexFieldType</code> specifies the field is of type <code>text</code>. A <code>text</code> field is always searchable. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TextOptions TextOptions { get; set; }
		
		/// <summary>
		/// Options for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if <code>IndexFieldType</code> specifies the field is of type <code>date</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DateOptions DateOptions { get; set; }
		
		/// <summary>
		/// Options for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if <code>IndexFieldType</code> specifies the field is of type <code>latlon</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LatLonOptions LatLonOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of 64-bit signed integers. Present if <code>IndexFieldType</code> specifies the field is of type <code>int-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IntArrayOptions IntArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of double-precision 64-bit floating point values. Present if <code>IndexFieldType</code> specifies the field is of type <code>double-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DoubleArrayOptions DoubleArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of literal strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>literal-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LiteralArrayOptions LiteralArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of text strings. Present if <code>IndexFieldType</code> specifies the field is of type <code>text-array</code>. A <code>text-array</code> field is always searchable. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TextArrayOptions TextArrayOptions { get; set; }
		
		/// <summary>
		/// Options for a field that contains an array of dates. Present if <code>IndexFieldType</code> specifies the field is of type <code>date-array</code>. All options are enabled by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DateArrayOptions DateArrayOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GET_DefineIndexFieldIndexFieldIndexFieldType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="int")]
		_int = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double")]
		_double = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		literal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		latlon = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="int-array")]
		intMinusarray = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double-array")]
		doubleMinusarray = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="literal-array")]
		literalMinusarray = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="text-array")]
		textMinusarray = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="date-array")]
		dateMinusarray = 10,
	}
	
	public enum GET_DefineIndexFieldAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefineIndexField = 0,
	}
	
	public enum GET_DefineIndexFieldVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DefineIndexFieldVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public class GET_DefineSuggesterSuggester
	{
		
		/// <summary>
		/// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-z][a-z0-9_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9_]*")]
		public string SuggesterName { get; set; }
		
		/// <summary>
		/// Options for a search suggester.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DocumentSuggesterOptions DocumentSuggesterOptions { get; set; }
	}
	
	public enum GET_DefineSuggesterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefineSuggester = 0,
	}
	
	public enum GET_DefineSuggesterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DefineSuggesterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DeleteAnalysisSchemeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteAnalysisScheme = 0,
	}
	
	public enum GET_DeleteAnalysisSchemeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DeleteAnalysisSchemeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DeleteDomainAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDomain = 0,
	}
	
	public enum GET_DeleteDomainVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DeleteDomainVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DeleteExpressionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteExpression = 0,
	}
	
	public enum GET_DeleteExpressionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DeleteExpressionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DeleteIndexFieldAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteIndexField = 0,
	}
	
	public enum GET_DeleteIndexFieldVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DeleteIndexFieldVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DeleteSuggesterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteSuggester = 0,
	}
	
	public enum GET_DeleteSuggesterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DeleteSuggesterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeAnalysisSchemesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeAnalysisSchemes = 0,
	}
	
	public enum GET_DescribeAnalysisSchemesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeAnalysisSchemesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeAvailabilityOptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeAvailabilityOptions = 0,
	}
	
	public enum GET_DescribeAvailabilityOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeAvailabilityOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeDomainEndpointOptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDomainEndpointOptions = 0,
	}
	
	public enum GET_DescribeDomainEndpointOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeDomainEndpointOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeDomainsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDomains = 0,
	}
	
	public enum GET_DescribeDomainsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeDomainsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeExpressionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeExpressions = 0,
	}
	
	public enum GET_DescribeExpressionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeExpressionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeIndexFieldsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeIndexFields = 0,
	}
	
	public enum GET_DescribeIndexFieldsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeIndexFieldsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeScalingParametersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeScalingParameters = 0,
	}
	
	public enum GET_DescribeScalingParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeScalingParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeServiceAccessPoliciesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeServiceAccessPolicies = 0,
	}
	
	public enum GET_DescribeServiceAccessPoliciesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeServiceAccessPoliciesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_DescribeSuggestersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeSuggesters = 0,
	}
	
	public enum GET_DescribeSuggestersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_DescribeSuggestersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_IndexDocumentsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IndexDocuments = 0,
	}
	
	public enum GET_IndexDocumentsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_IndexDocumentsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_ListDomainNamesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListDomainNames = 0,
	}
	
	public enum GET_ListDomainNamesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_ListDomainNamesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_UpdateAvailabilityOptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateAvailabilityOptions = 0,
	}
	
	public enum GET_UpdateAvailabilityOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_UpdateAvailabilityOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public class GET_UpdateDomainEndpointOptionsDomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
	}
	
	public enum GET_UpdateDomainEndpointOptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateDomainEndpointOptions = 0,
	}
	
	public enum GET_UpdateDomainEndpointOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_UpdateDomainEndpointOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public class GET_UpdateScalingParametersScalingParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PartitionInstanceType DesiredInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredReplicationCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredPartitionCount { get; set; }
	}
	
	public enum GET_UpdateScalingParametersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateScalingParameters = 0,
	}
	
	public enum GET_UpdateScalingParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_UpdateScalingParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum GET_UpdateServiceAccessPoliciesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateServiceAccessPolicies = 0,
	}
	
	public enum GET_UpdateServiceAccessPoliciesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
	
	public enum POST_UpdateServiceAccessPoliciesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2013-01-01")]
		_2013Minus01Minus01 = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterRoleAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBClusterStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterRoleQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceRoleAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBInstanceStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceRoleQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddSourceIdentifierToSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	/// <summary>
	/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventSubscription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomerAwsId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustSubscriptionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionCreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SourceIdsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategoriesList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSubscriptionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubscriptionNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceNotFoundFault
	{
	}
	
	/// <summary>
	/// <p>Metadata assigned to an Amazon RDS resource consisting of a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSnapshotNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyTargetGroupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlueGreenDeploymentNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplyPendingMaintenanceActionResult
	{
		
		/// <summary>
		/// Describes the pending maintenance actions for a resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourcePendingMaintenanceActions ResourcePendingMaintenanceActions { get; set; }
	}
	
	/// <summary>
	/// Describes the pending maintenance actions for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourcePendingMaintenanceActions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PendingMaintenanceActionDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizeDBSecurityGroupIngressResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup DBSecurityGroup { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OwnerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EC2SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IPRanges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBSecurityGroupStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizationAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizationQuotaExceededFault
	{
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>DescribeDBClusterBacktracks</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterBacktrack
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BacktrackIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset BacktrackTo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset BacktrackedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset BacktrackRequestCreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of a snapshot or cluster export to Amazon S3.</p> <p>This data type is used as a response element in the <code>DescribeExportTasks</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportTask
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExportOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset TaskStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset TaskEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IamRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalExtractedDataInGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureCause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WarningMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportSourceType SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExportSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNAPSHOT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportTaskNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidExportTaskStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBClusterParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterParameterGroup DBClusterParameterGroup { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterParameterGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBClusterSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot DBClusterSnapshot { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterSnapshot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ClusterCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterSnapshotArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSystemId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterSnapshotAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterSnapshotNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBClusterSnapshotStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KMSKeyNotAccessibleFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBParameterGroup DBParameterGroup { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSnapshot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset InstanceCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset OriginalSnapshotCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotDatabaseTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSystemId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSnapshotAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBSnapshotStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomAvailabilityZoneNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyOptionGroupResult
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup OptionGroup { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowsVpcAndNonVpcInstanceMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceOptionGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CopyTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBlueGreenDeploymentResponse
	{
		
		/// <summary>
		/// <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BlueGreenDeployment BlueGreenDeployment { get; set; }
	}
	
	/// <summary>
	/// <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlueGreenDeployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BlueGreenDeploymentIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BlueGreenDeploymentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Target { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SwitchoverDetail[] SwitchoverDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BlueGreenDeploymentTask[] Tasks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DeleteTime { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SwitchoverDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceMember { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetMember { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>Details about a task for a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlueGreenDeploymentTask
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceDatabaseNotSupportedFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceClusterNotSupportedFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlueGreenDeploymentAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterParameterGroupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterQuotaExceededFault
	{
	}
	
	/// <summary>
	/// This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBEngineVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBEngineDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBEngineVersionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CharacterSet DefaultCharacterSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDBEngineVersionAMI Image { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBEngineMediaType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedCharacterSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedNcharCharacterSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValidUpgradeTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedTimezones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExportableLogTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsLogExportsToCloudwatchLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsReadReplica { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedEngineModes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedFeatureNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsParallelQuery { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsGlobalDatabases { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseInstallationFilesS3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseInstallationFilesS3Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBEngineVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsBabelfish { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomDBEngineVersionManifest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsCertificateRotationWithoutRestart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedCACertificateIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsLocalWriteForwarding { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CharacterSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetDescription { get; set; }
	}
	
	/// <summary>
	/// A value that indicates the AMI information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomDBEngineVersionAMI
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomDBEngineVersionAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomDBEngineVersionQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ec2ImagePropertiesNotSupportedFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCustomDBEngineVersionFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBCluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AutomaticRestartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PercentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EarliestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReaderEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CustomEndpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterOptionGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReplicationSourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReadReplicaIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostedZoneId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AssociatedRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CloneGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ClusterCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EarliestBacktrackTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackConsumedChangeRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnabledCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		/// <summary>
		/// <p>The scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfigurationInfo ScalingConfigurationInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HttpEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamMode ActivityStreamMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamStatus ActivityStreamStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActivityStreamKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActivityStreamKinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CrossAccountClone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainMemberships { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WriteForwardingStatus GlobalWriteForwardingStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> GlobalWriteForwardingRequested { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterPendingModifiedValues PendingModifiedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformanceInsightsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		/// <summary>
		/// <p>The scaling configuration for an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerlessV2ScalingConfigurationInfo ServerlessV2ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSystemId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserSecret MasterUserSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset IOOptimizedNextAllowedModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LocalWriteForwardingStatus LocalWriteForwardingStatus { get; set; }
	}
	
	/// <summary>
	/// <p>The scaling configuration for an Aurora DB cluster in <code>serverless</code> DB engine mode.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingConfigurationInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityStreamMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sync = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		async = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityStreamStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		starting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		started = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WriteForwardingStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disabled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disabling = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 4,
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>ModifyDBCluster</code> operation and contains changes that will be applied during the next maintenance window.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterPendingModifiedValues
	{
		
		/// <summary>
		/// A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PendingCloudwatchLogsExports PendingCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
	}
	
	/// <summary>
	/// A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PendingCloudwatchLogsExports
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LogTypesToEnable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LogTypesToDisable { get; set; }
	}
	
	/// <summary>
	/// <p>The scaling configuration for an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServerlessV2ScalingConfigurationInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the secret managed by RDS in Amazon Web Services Secrets Manager for the master user password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MasterUserSecret
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LocalWriteForwardingStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disabled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disabling = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		requested = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsufficientStorageClusterCapacityFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorageQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidVPCNetworkStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBSubnetGroupStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidSubnet
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroupDoesNotCoverEnoughAZs
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalClusterNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidGlobalClusterStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainNotFoundFault
	{
	}
	
	/// <summary>
	/// <p>This data type represents the information you need to connect to an Amazon Aurora DB cluster. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code> </p> </li> </ul> <p>For the data structure that represents Amazon RDS DB instance endpoints, see <code>Endpoint</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointResourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludedMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterEndpointQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterEndpointAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB cluster parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterParameterGroup DBClusterParameterGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot DBClusterSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AutomaticRestartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Endpoint Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset InstanceCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBParameterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup DBSubnetGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PendingModifiedValues PendingModifiedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadReplicaSourceDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReadReplicaDBInstanceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReadReplicaDBClusterIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReplicaMode ReplicaMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NcharCharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StatusInfos { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DbInstancePort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EnhancedMonitoringResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformanceInsightsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnabledCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AssociatedRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Endpoint ListenerEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBInstanceAutomatedBackupsReplications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomerOwnedIpEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsBackupRecoveryPointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamStatus ActivityStreamStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActivityStreamKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActivityStreamKinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamMode ActivityStreamMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ActivityStreamEngineNativeAuditFieldsIncluded { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutomationMode AutomationMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ResumeFullAutomationModeTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomIamInstanceProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackupTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamPolicyStatus ActivityStreamPolicyStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSystemId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserSecret MasterUserSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CertificateDetails CertificateDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReadReplicaSourceDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PercentProgress { get; set; }
	}
	
	/// <summary>
	/// <p>This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> </ul> <p>For the data structure that represents Amazon Aurora DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Endpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostedZoneId { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetGroupStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedNetworkTypes { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>ModifyDBInstance</code> operation and contains changes that will be applied during the next maintenance window.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PendingModifiedValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		/// <summary>
		/// A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PendingCloudwatchLogsExports PendingCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutomationMode AutomationMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ResumeFullAutomationModeTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutomationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		full = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="all-paused")]
		allMinuspaused = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReplicaMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="open-read-only")]
		openMinusreadMinusonly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mounted = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityStreamPolicyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		locked = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unlocked = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="locking-policy")]
		lockingMinuspolicy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unlocking-policy")]
		unlockingMinuspolicy = 3,
	}
	
	/// <summary>
	/// <p>Returns the details of the DB instance’s server certificate.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CAIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ValidTill { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the processor features of a DB instance class.</p> <p>To specify the number of CPU cores, use the <code>coreCount</code> feature name for the <code>Name</code> parameter. To specify the number of threads per core, use the <code>threadsPerCore</code> feature name for the <code>Name</code> parameter.</p> <p>You can set the processor features of the DB instance class for a DB instance when you call one of the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromS3</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul> <p>You can view the valid processor values for a particular instance class by calling the <code>DescribeOrderableDBInstanceOptions</code> action and specifying the instance class for the <code>DBInstanceClass</code> parameter.</p> <p>In addition, you can use the following actions for DB instance class processor information:</p> <ul> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribeDBSnapshots</code> </p> </li> <li> <p> <code>DescribeValidDBInstanceModifications</code> </p> </li> </ul> <p>If you call <code>DescribeDBInstances</code>, <code>ProcessorFeature</code> returns non-null values only if the following conditions are met:</p> <ul> <li> <p>You are accessing an Oracle DB instance.</p> </li> <li> <p>Your Oracle DB instance class supports configuring the number of CPU cores and threads per core.</p> </li> <li> <p>The current number CPU cores and threads is set to a non-default value.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorFeature
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsufficientDBInstanceCapacityFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProvisionedIopsNotAvailableInAZFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorageTypeNotSupportedFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizationNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BackupPolicyNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkTypeNotSupported
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBInstanceReadReplicaResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroupNotAllowedFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBSubnetGroupFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBParameterGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB parameter group.</p> <p>This data type is used as a response element in the <code>DescribeDBParameterGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBParameterGroup DBParameterGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBProxyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxy DBProxy { get; set; }
	}
	
	/// <summary>
	/// <p>The data structure representing a proxy managed by the RDS Proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfigInfo[] Auth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequireTLS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleClientTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DebugLogging { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DBProxyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		modifying = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="incompatible-network")]
		incompatibleMinusnetwork = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="insufficient-resource-limits")]
		insufficientMinusresourceMinuslimits = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		creating = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suspended = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suspending = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reactivating = 8,
	}
	
	/// <summary>
	/// Returns the details of authentication used by a proxy to log in as a specific database user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserAuthConfigInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthScheme AuthScheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IAMAuthMode IAMAuth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClientPasswordAuthType ClientPasswordAuthType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuthScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECRETS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IAMAuthMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUIRED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClientPasswordAuthType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYSQL_NATIVE_PASSWORD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRES_SCRAM_SHA_256 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRES_MD5 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL_SERVER_AUTHENTICATION = 3,
	}
	
	/// <summary>
	/// Specifies the details of authentication used by a proxy to log in as a specific database user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserAuthConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthScheme AuthScheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IAMAuthMode IAMAuth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClientPasswordAuthType ClientPasswordAuthType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBProxyEndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpoint DBProxyEndpoint { get; set; }
	}
	
	/// <summary>
	/// <p>The data structure representing an endpoint associated with a DB proxy. RDS automatically creates one endpoint for each DB proxy. For Aurora DB clusters, you can associate additional endpoints with the same DB proxy. These endpoints can be read/write or read-only. They can also reside in different VPCs than the associated DB proxy.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyEndpoints</code> operation.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyEndpointName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyEndpointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpointStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpointTargetRole TargetRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DBProxyEndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		modifying = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="incompatible-network")]
		incompatibleMinusnetwork = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="insufficient-resource-limits")]
		insufficientMinusresourceMinuslimits = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		creating = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleting = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DBProxyEndpointTargetRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_WRITE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_ONLY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyEndpointAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyEndpointQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBProxyStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBSecurityGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup DBSecurityGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroupAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroupQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroupNotSupportedFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBSubnetGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup DBSubnetGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroupAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroupQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEventSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventSubscriptionQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubscriptionAlreadyExistFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SNSInvalidTopicFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SNSNoAuthorizationFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SNSTopicArnNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubscriptionCategoryNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	/// <summary>
	/// A data type representing an Aurora global database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalCluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] GlobalClusterMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FailoverState FailoverState { get; set; }
	}
	
	/// <summary>
	/// Contains the state of scheduled or in-process failover operations on an Aurora global database (<a>GlobalCluster</a>). This Data type is empty unless a failover operation is scheduled or is currently underway on the Aurora global database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailoverState
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FailoverStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromDbClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ToDbClusterArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FailoverStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failing-over")]
		failingMinusover = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelling = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalClusterAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalClusterQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateOptionGroupResult
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup OptionGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBlueGreenDeploymentResponse
	{
		
		/// <summary>
		/// <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BlueGreenDeployment BlueGreenDeployment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidBlueGreenDeploymentStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomDBEngineVersionNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidCustomDBEngineVersionStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterAutomatedBackupQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterAutomatedBackupResult
	{
		
		/// <summary>
		/// An automated backup of a DB cluster. It consists of system backups, transaction logs, and the database cluster properties that existed at the time you deleted the source cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterAutomatedBackup DBClusterAutomatedBackup { get; set; }
	}
	
	/// <summary>
	/// An automated backup of a DB cluster. It consists of system backups, transaction logs, and the database cluster properties that existed at the time you deleted the source cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterAutomatedBackup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterAutomatedBackupsArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Earliest and latest time an instance can be restored to:
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RestoreWindow RestoreWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ClusterCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
	}
	
	/// <summary>
	/// Earliest and latest time an instance can be restored to:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreWindow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EarliestTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LatestTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBClusterAutomatedBackupStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterAutomatedBackupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBClusterEndpointStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterEndpointNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBParameterGroupStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB cluster snapshot</p> <p>This data type is used as a response element in the <code>DescribeDBClusterSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshot DBClusterSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceAutomatedBackupQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBInstanceAutomatedBackupResult
	{
		
		/// <summary>
		/// An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; set; }
	}
	
	/// <summary>
	/// An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceAutomatedBackup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RestoreWindow RestoreWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset InstanceCreateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMDatabaseAuthenticationEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceAutomatedBackupsArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBInstanceAutomatedBackupsReplications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackupTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBInstanceAutomatedBackupStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceAutomatedBackupNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBProxyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxy DBProxy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBProxyEndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpoint DBProxyEndpoint { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyEndpointNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBProxyEndpointStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBSubnetStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidEventSubscriptionStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidOptionGroupStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterDBProxyTargetsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyTargetNotFoundFault
	{
	}
	
	/// <summary>
	/// Data returned by the <b>DescribeAccountAttributes</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountAttributesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountQuotas { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBlueGreenDeploymentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BlueGreenDeployment[] BlueGreenDeployments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as IDs. The filters supported by a describe operation are documented with the describe operation.</p> <note> <p>Currently, wildcards are not supported in filters.</p> </note> <p>The following actions can be filtered:</p> <ul> <li> <p> <code>DescribeDBClusterBacktracks</code> </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li> <p> <code>DescribeDBClusters</code> </p> </li> <li> <p> <code>DescribeDBInstances</code> </p> </li> <li> <p> <code>DescribePendingMaintenanceActions</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Data returned by the <b>DescribeCertificates</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Certificates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterAutomatedBackupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterAutomatedBackups { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBClusterBacktracks</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterBacktrackMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterBacktracks { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterBacktrackNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterEndpointMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterEndpoints { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterParameterGroups { get; set; }
	}
	
	/// <summary>
	/// Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterParameterGroupDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterSnapshotAttributesResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshotAttributesResult DBClusterSnapshotAttributesResult { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterSnapshotAttributesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterSnapshotAttributes { get; set; }
	}
	
	/// <summary>
	/// Provides a list of DB cluster snapshots for the user as the result of a call to the <code>DescribeDBClusterSnapshots</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterSnapshotMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterSnapshots { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBClusters</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusters { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBEngineVersions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBEngineVersionMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBEngineVersions { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBInstanceAutomatedBackups</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceAutomatedBackupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBInstanceAutomatedBackups { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBInstances</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBInstances { get; set; }
	}
	
	/// <summary>
	/// The response from a call to <code>DescribeDBLogFiles</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBLogFilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DescribeDBLogFiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBParameterGroups</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBParameterGroups { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBParameters</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxy[] DBProxies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxyEndpointsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpoint[] DBProxyEndpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxyTargetGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTargetGroup[] TargetGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p>Represents a set of RDS DB instances, Aurora DB clusters, or both that a proxy can connect to. Currently, each target group is associated with exactly one RDS DB instance or Aurora DB cluster.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargetGroups</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyTargetGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionPoolConfigurationInfo ConnectionPoolConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdatedDate { get; set; }
	}
	
	/// <summary>
	/// Displays the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTarget</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectionPoolConfigurationInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIdleConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionBorrowTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SessionPinningFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxyTargetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTarget[] Targets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the details for an RDS Proxy target. It represents an RDS DB instance or Aurora DB cluster that the proxy can connect to. One or more targets are associated with an RDS Proxy target group.</p> <p>This data type is used as a response element in the <code>DescribeDBProxyTargets</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyTarget
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TrackedClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RdsResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TargetType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TargetRole Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TargetHealth TargetHealth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_INSTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RDS_SERVERLESS_ENDPOINT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRACKED_CLUSTER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_WRITE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_ONLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
	}
	
	/// <summary>
	/// Information about the connection health of an RDS Proxy target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TargetState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TargetHealthReason Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTERING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetHealthReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNREACHABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_PROXY_CAPACITY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_REPLICATION_STATE = 4,
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBSecurityGroups</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBSnapshotAttributesResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshotAttributesResult DBSnapshotAttributesResult { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSnapshotAttributesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSnapshotAttributes { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBSnapshots</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSnapshotMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSnapshots { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeDBSubnetGroups</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSubnetGroupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSubnetGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEngineDefaultClusterParametersResult
	{
		
		/// <summary>
		/// Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EngineDefaults EngineDefaults { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EngineDefaults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEngineDefaultParametersResult
	{
		
		/// <summary>
		/// Contains the result of a successful invocation of the <code>DescribeEngineDefaultParameters</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EngineDefaults EngineDefaults { get; set; }
	}
	
	/// <summary>
	/// Data returned from the <code>DescribeEventCategories</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventCategoriesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategoriesMapList { get; set; }
	}
	
	/// <summary>
	/// Data returned by the <b>DescribeEventSubscriptions</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventSubscriptionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventSubscriptionsList { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeEvents</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Events { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportTasksMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExportTasks { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalClustersMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] GlobalClusters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupOptionsMessage
	{
		
		/// <summary>
		/// List of available option group options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionGroupOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// List of option groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroups
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionGroupsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeOrderableDBInstanceOptions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OrderableDBInstanceOptionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrderableDBInstanceOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Data returned from the <b>DescribePendingMaintenanceActions</b> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PendingMaintenanceActionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PendingMaintenanceActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeReservedDBInstances</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstanceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReservedDBInstances { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstanceNotFoundFault
	{
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeReservedDBInstancesOfferings</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstancesOfferingMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReservedDBInstancesOfferings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstancesOfferingNotFoundFault
	{
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>DescribeSourceRegions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceRegionMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SourceRegions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeValidDBInstanceModificationsResult
	{
		
		/// <summary>
		/// Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ValidDBInstanceModificationsMessage ValidDBInstanceModificationsMessage { get; set; }
	}
	
	/// <summary>
	/// Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidDBInstanceModificationsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Storage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValidProcessorFeatures { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element to <code>DownloadDBLogFilePortion</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DownloadDBLogFilePortionDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogFileData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AdditionalDataPending { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBLogFileNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailoverDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailoverGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagListMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TagList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyActivityStreamResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamMode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EngineNativeAuditFieldsIncluded { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamPolicyStatus PolicyStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyCertificatesResult
	{
		
		/// <summary>
		/// <p>A CA certificate for an Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Certificate Certificate { get; set; }
	}
	
	/// <summary>
	/// <p>A CA certificate for an Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Certificate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Thumbprint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ValidFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ValidTill { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomerOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CustomerOverrideValidTill { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterCapacityInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PendingCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidDBClusterCapacityFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorageTypeNotAvailableFault
	{
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterParameterGroupNameMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
	}
	
	/// <summary>
	/// <p>This data type is used as a request parameter in the <code>ModifyDBParameterGroup</code> and <code>ResetDBParameterGroup</code> actions.</p> <p>This data type is used as a response element in the <code>DescribeEngineDefaultParameters</code> and <code>DescribeDBParameters</code> actions.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsModifiable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplyMethod ApplyMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedEngineModes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplyMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		immediate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pending-reboot")]
		pendingMinusreboot = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBClusterSnapshotAttributeResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBClusterSnapshotAttributesResult DBClusterSnapshotAttributesResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SharedSnapshotQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBUpgradeDependencyFailureFault
	{
	}
	
	/// <summary>
	/// Contains the result of a successful invocation of the <code>ModifyDBParameterGroup</code> or <code>ResetDBParameterGroup</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupNameMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBProxyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxy DBProxy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBProxyEndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpoint DBProxyEndpoint { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBProxyTargetGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTargetGroup DBProxyTargetGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB snapshot.</p> <p>This data type is used as a response element in the <code>DescribeDBSnapshots</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshot DBSnapshot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBSnapshotAttributeResult
	{
		
		/// <summary>
		/// <p>Contains the results of a successful call to the <code>DescribeDBSnapshotAttributes</code> API action.</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSnapshotAttributesResult DBSnapshotAttributesResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBSubnetGroupResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB subnet group.</p> <p>This data type is used as a response element in the <code>DescribeDBSubnetGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSubnetGroup DBSubnetGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubnetAlreadyInUse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyEventSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyOptionGroupResult
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OptionGroup OptionGroup { get; set; }
	}
	
	/// <summary>
	/// A list of all available options
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionSettings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromoteReadReplicaResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromoteReadReplicaDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PurchaseReservedDBInstancesOfferingResult
	{
		
		/// <summary>
		/// This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ReservedDBInstance ReservedDBInstance { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>PurchaseReservedDBInstancesOffering</code> actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DBInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RecurringCharges { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LeaseId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstanceAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstanceQuotaExceededFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RebootDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RebootDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterDBProxyTargetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyTarget[] DBProxyTargets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBProxyTargetAlreadyRegisteredFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsufficientAvailableIPsInSubnetFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveFromGlobalClusterResult
	{
		
		/// <summary>
		/// A data type representing an Aurora global database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GlobalCluster GlobalCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterRoleNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceRoleNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveSourceIdentifierFromSubscriptionResult
	{
		
		/// <summary>
		/// Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSubscription EventSubscription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBClusterFromS3Result
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidS3BucketFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBClusterFromSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsufficientDBClusterCapacityFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRestoreFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBClusterToPointInTimeResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBInstanceFromDBSnapshotResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBInstanceFromS3Result
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBInstanceToPointInTimeResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PointInTimeRestoreNotEnabledFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevokeDBSecurityGroupIngressResult
	{
		
		/// <summary>
		/// <p>Contains the details for an Amazon RDS DB security group.</p> <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBSecurityGroup DBSecurityGroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartActivityStreamResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamMode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EngineNativeAuditFieldsIncluded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDBInstanceAutomatedBackupsReplicationResult
	{
		
		/// <summary>
		/// An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportTaskAlreadyExistsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IamRoleNotFoundFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IamRoleMissingPermissionsFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidExportOnlyFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidExportSourceStateFault
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopActivityStreamResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KinesisStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDBClusterResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBCluster DBCluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDBInstanceResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDBInstanceAutomatedBackupsReplicationResult
	{
		
		/// <summary>
		/// An automated backup of a DB instance. It consists of system backups, transaction logs, and the database instance properties that existed at the time you deleted the source instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstanceAutomatedBackup DBInstanceAutomatedBackup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SwitchoverBlueGreenDeploymentResponse
	{
		
		/// <summary>
		/// <p>Details about a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BlueGreenDeployment BlueGreenDeployment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SwitchoverReadReplicaResult
	{
		
		/// <summary>
		/// <p>Contains the details of an Amazon RDS DB instance.</p> <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DBInstance DBInstance { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a quota for an Amazon Web Services account.</p> <p>The following are account quotas:</p> <ul> <li> <p> <code>AllocatedStorage</code> - The total allocated storage per account, in GiB. The used value is the total allocated storage in the account, in GiB.</p> </li> <li> <p> <code>AuthorizationsPerDBSecurityGroup</code> - The number of ingress rules per DB security group. The used value is the highest number of ingress rules in a DB security group in the account. Other DB security groups in the account might have a lower number of ingress rules.</p> </li> <li> <p> <code>CustomEndpointsPerDBCluster</code> - The number of custom endpoints per DB cluster. The used value is the highest number of custom endpoints in a DB clusters in the account. Other DB clusters in the account might have a lower number of custom endpoints.</p> </li> <li> <p> <code>DBClusterParameterGroups</code> - The number of DB cluster parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB cluster parameter groups in the account.</p> </li> <li> <p> <code>DBClusterRoles</code> - The number of associated Amazon Web Services Identity and Access Management (IAM) roles per DB cluster. The used value is the highest number of associated IAM roles for a DB cluster in the account. Other DB clusters in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBClusters</code> - The number of DB clusters per account. The used value is the count of DB clusters in the account.</p> </li> <li> <p> <code>DBInstanceRoles</code> - The number of associated IAM roles per DB instance. The used value is the highest number of associated IAM roles for a DB instance in the account. Other DB instances in the account might have a lower number of associated IAM roles.</p> </li> <li> <p> <code>DBInstances</code> - The number of DB instances per account. The used value is the count of the DB instances in the account.</p> <p>Amazon RDS DB instances, Amazon Aurora DB instances, Amazon Neptune instances, and Amazon DocumentDB instances apply to this quota.</p> </li> <li> <p> <code>DBParameterGroups</code> - The number of DB parameter groups per account, excluding default parameter groups. The used value is the count of nondefault DB parameter groups in the account.</p> </li> <li> <p> <code>DBSecurityGroups</code> - The number of DB security groups (not VPC security groups) per account, excluding the default security group. The used value is the count of nondefault DB security groups in the account.</p> </li> <li> <p> <code>DBSubnetGroups</code> - The number of DB subnet groups per account. The used value is the count of the DB subnet groups in the account.</p> </li> <li> <p> <code>EventSubscriptions</code> - The number of event subscriptions per account. The used value is the count of the event subscriptions in the account.</p> </li> <li> <p> <code>ManualClusterSnapshots</code> - The number of manual DB cluster snapshots per account. The used value is the count of the manual DB cluster snapshots in the account.</p> </li> <li> <p> <code>ManualSnapshots</code> - The number of manual DB instance snapshots per account. The used value is the count of the manual DB instance snapshots in the account.</p> </li> <li> <p> <code>OptionGroups</code> - The number of DB option groups per account, excluding default option groups. The used value is the count of nondefault DB option groups in the account.</p> </li> <li> <p> <code>ReadReplicasPerMaster</code> - The number of read replicas per DB instance. The used value is the highest number of read replicas for a DB instance in the account. Other DB instances in the account might have a lower number of read replicas.</p> </li> <li> <p> <code>ReservedDBInstances</code> - The number of reserved DB instances per account. The used value is the count of the active reserved DB instances in the account.</p> </li> <li> <p> <code>SubnetsPerDBSubnetGroup</code> - The number of subnets per DB subnet group. The used value is highest number of subnets for a DB subnet group in the account. Other DB subnet groups in the account might have a lower number of subnets.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html">Quotas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_Limits.html">Quotas for Amazon Aurora</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountQuota
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountQuotaName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Used { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Max { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddRoleToDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddRoleToDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddSourceIdentifierToSubscriptionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddTagsToResourceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplyPendingMaintenanceActionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplyAction { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptInType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuditPolicyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		locked = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unlocked = 1,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizeDBSecurityGroupIngressMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CIDRIP { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupOwnerId { get; set; }
	}
	
	/// <summary>
	/// <p>Contains Availability Zone information.</p> <p>This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AvailabilityZone
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the available processor feature information for the DB instance class of a DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor">Configuring the Processor of the DB Instance Class</a> in the <i>Amazon RDS User Guide. </i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AvailableProcessorFeature
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BacktrackDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset BacktrackTo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Force { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseEarliestTimeOnPointInTimeUnavailable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelExportTaskMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS DB instances, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudwatchLogsExportConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableLogTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DisableLogTypes { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings that control the size and behavior of the connection pool associated with a <code>DBProxyTargetGroup</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectionPoolConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIdleConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionBorrowTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SessionPinningFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBClusterParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterParameterGroupIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterParameterGroupIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterParameterGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBClusterSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterSnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTags { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBParameterGroupIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBParameterGroupIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBParameterGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyDBSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBSnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetCustomAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyOptionGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CopyOptionGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceOptionGroupIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetOptionGroupIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetOptionGroupDescription { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBlueGreenDeploymentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BlueGreenDeploymentName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCustomDBEngineVersionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseInstallationFilesS3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseInstallationFilesS3Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Manifest { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterEndpointMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludedMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the scaling configuration of an Aurora Serverless v1 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServerlessV2ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReplicationSourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableHttpEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableGlobalWriteForwarding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSystemId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserSecretKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableLocalWriteForwarding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBClusterSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBInstanceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NcharCharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainFqdn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainOu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainAuthSecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainDnsIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableCustomerOwnedIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomIamInstanceProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackupTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserSecretKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSystemId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBInstanceReadReplicaMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainFqdn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainOu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainAuthSecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainDnsIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReplicaMode ReplicaMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomIamInstanceProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableCustomerOwnedIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRegion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBProxyEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyEndpointName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DBProxyEndpointTargetRole TargetRole { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EngineFamily
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYSQL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRESQL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQLSERVER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBProxyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EngineFamily EngineFamily { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfig[] Auth { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequireTLS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleClientTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DebugLogging { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBSecurityGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDBSubnetGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEventSubscriptionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateGlobalClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateOptionGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CustomEngineVersionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inactive-except-restore")]
		inactiveMinusexceptMinusrestore = 2,
	}
	
	/// <summary>
	/// Contains information about an instance that is part of a DB cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterMember
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsClusterWriter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
	}
	
	/// <summary>
	/// Contains status information for a DB cluster option group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterOptionGroupStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterOptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon Web Services Identity and Access Management (IAM) role that is associated with a DB cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterRole
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBClusterSnapshotAttribute
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AttributeValues { get; set; }
	}
	
	/// <summary>
	/// Automated backups of a DB instance replicated to another Amazon Web Services Region. They consist of system backups, transaction logs, and database instance properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceAutomatedBackupsReplication
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceAutomatedBackupsArn { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon Web Services Identity and Access Management (IAM) role that is associated with a DB instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceRole
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Provides a list of status information for a DB instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBInstanceStatusInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Normal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// <p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>CreateDBInstance</code> </p> </li> <li> <p> <code>CreateDBInstanceReadReplica</code> </p> </li> <li> <p> <code>DeleteDBInstance</code> </p> </li> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBParameterGroupStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterApplyStatus { get; set; }
	}
	
	/// <summary>
	/// <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>ModifyDBInstance</code> </p> </li> <li> <p> <code>RebootDBInstance</code> </p> </li> <li> <p> <code>RestoreDBInstanceFromDBSnapshot</code> </p> </li> <li> <p> <code>RestoreDBInstanceToPointInTime</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSecurityGroupMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the name and values of a manual DB snapshot attribute</p> <p>Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB snapshot. For more information, see the <code>ModifyDBSnapshotAttribute</code> API.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DBSnapshotAttribute
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AttributeValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBlueGreenDeploymentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BlueGreenDeploymentIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteTarget { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCustomDBEngineVersionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterAutomatedBackupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterEndpointMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SkipFinalSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FinalDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteAutomatedBackups { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBClusterSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// Parameter input for the <code>DeleteDBInstanceAutomatedBackup</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBInstanceAutomatedBackupMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceAutomatedBackupsArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SkipFinalSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FinalDBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteAutomatedBackups { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBProxyEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyEndpointName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBProxyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBSecurityGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDBSubnetGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventSubscriptionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGlobalClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteOptionGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterDBProxyTargetsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBInstanceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterIdentifiers { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountAttributesMessage
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBlueGreenDeploymentsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BlueGreenDeploymentIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeCertificatesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterAutomatedBackupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterBacktracksMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BacktrackIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterEndpointsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterParametersMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterSnapshotAttributesMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClusterSnapshotsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeShared { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludePublic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBClustersMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeShared { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBEngineVersionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DefaultOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ListSupportedCharacterSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ListSupportedTimezones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAll { get; set; }
	}
	
	/// <summary>
	/// Parameter input for DescribeDBInstanceAutomatedBackups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBInstanceAutomatedBackupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceAutomatedBackupsArn { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBInstancesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element to <code>DescribeDBLogFiles</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBLogFilesDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogFileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastWritten { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBLogFilesMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FilenameContains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FileLastWritten { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBParameterGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBParametersMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxiesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxyEndpointsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyEndpointName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxyTargetGroupsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBProxyTargetsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBSecurityGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBSnapshotAttributesMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBSnapshotsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeShared { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludePublic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbiResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDBSubnetGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEngineDefaultClusterParametersMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEngineDefaultParametersMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEventCategoriesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEventSubscriptionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-instance")]
		dbMinusinstance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-parameter-group")]
		dbMinusparameterMinusgroup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-security-group")]
		dbMinussecurityMinusgroup = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-snapshot")]
		dbMinussnapshot = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-cluster")]
		dbMinuscluster = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-cluster-snapshot")]
		dbMinusclusterMinussnapshot = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="custom-engine-version")]
		customMinusengineMinusversion = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-proxy")]
		dbMinusproxy = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="blue-green-deployment")]
		blueMinusgreenMinusdeployment = 8,
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEventsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeExportTasksMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportSourceType SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeGlobalClustersMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOptionGroupOptionsMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOptionGroupsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOrderableDBInstanceOptionsMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZoneGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Vpc { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePendingMaintenanceActionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReservedDBInstancesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LeaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReservedDBInstancesOfferingsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSourceRegionsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RegionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeValidDBInstanceModificationsMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
	}
	
	/// <summary>
	/// An Active Directory Domain membership record associated with the DB instance or cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FQDN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OU { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AuthSecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DnsIps { get; set; }
	}
	
	/// <summary>
	/// A range of double values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DoubleRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> From { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> To { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DownloadDBLogFilePortionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogFileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfLines { get; set; }
	}
	
	/// <summary>
	/// <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <code>AuthorizeDBSecurityGroupIngress</code> </p> </li> <li> <p> <code>DescribeDBSecurityGroups</code> </p> </li> <li> <p> <code>RevokeDBSecurityGroupIngress</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2SecurityGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupOwnerId { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Event
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
	}
	
	/// <summary>
	/// Contains the results of a successful invocation of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeEventCategories.html">DescribeEventCategories</a> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventCategoriesMap
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategories { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailoverDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBInstanceIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailoverGlobalClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDbClusterIdentifier { get; set; }
	}
	
	/// <summary>
	/// A data structure with information about any primary and secondary clusters associated with an Aurora global database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalClusterMember
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Readers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsWriter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WriteForwardingStatus GlobalWriteForwardingStatus { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IPRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CIDRIP { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Filters { get; set; }
	}
	
	/// <summary>
	/// The minimum DB engine version required for each corresponding allowed value for an option setting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MinimumEngineVersionPerAllowedValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumEngineVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyActivityStreamRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuditPolicyState AuditPolicyState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyCertificatesMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemoveCustomerOverride { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyCurrentDBClusterCapacityMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyCustomDBEngineVersionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomEngineVersionStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBClusterEndpointMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterEndpointIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticMembers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExcludedMembers { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowMajorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableHttpEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableGlobalWriteForwarding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RotateMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserSecretKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowEngineModeChange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableLocalWriteForwarding { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBClusterParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBClusterSnapshotAttributeMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValuesToAdd { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValuesToRemove { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowMajorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CACertificateIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainFqdn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainOu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainAuthSecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainDnsIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DBPortNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableDomain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CertificateRotationRestart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReplicaMode ReplicaMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableCustomerOwnedIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsBackupRecoveryPointArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutomationMode AutomationMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ResumeFullAutomationModeMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RotateMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserSecretKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBProxyEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyEndpointName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBProxyEndpointName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBProxyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewDBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserAuthConfig[] Auth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequireTLS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleClientTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DebugLogging { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBProxyTargetGroupRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionPoolConfiguration ConnectionPoolConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBSnapshotAttributeMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AttributeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValuesToAdd { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValuesToRemove { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyDBSubnetGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyEventSubscriptionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EventCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyGlobalClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewGlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowMajorVersionUpgrade { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyOptionGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionsToInclude { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionsToRemove { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
	}
	
	/// <summary>
	/// Option details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Option
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Persistent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Permanent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroupMemberships { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupMemberships { get; set; }
	}
	
	/// <summary>
	/// Provides information on the option groups the DB instance is a member of.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Available option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MajorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumRequiredMinorEngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PortRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionsDependedOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionsConflictsWith { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Persistent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Permanent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RequiresAutoMinorEngineVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VpcOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsOptionVersionDowngrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionGroupOptionSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OptionGroupOptionVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyableCrossAccount { get; set; }
	}
	
	/// <summary>
	/// Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionGroupOptionSetting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SettingName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SettingDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsModifiable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MinimumEngineVersionPerAllowedValue { get; set; }
	}
	
	/// <summary>
	/// The version for an option. Option group option versions are returned by the <code>DescribeOptionGroupOptions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
	}
	
	/// <summary>
	/// Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionSetting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AllowedValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsModifiable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsCollection { get; set; }
	}
	
	/// <summary>
	/// <p>Contains a list of available options for a DB instance.</p> <p>This data type is used as a response element in the <code>DescribeOrderableDBInstanceOptions</code> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OrderableDBInstanceOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZoneGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZCapable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReadReplicaCapable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Vpc { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsIops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsEnhancedMonitoring { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsPerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinStorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxStorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinIopsPerDbInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIopsPerDbInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinIopsPerGib { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxIopsPerGib { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailableProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedEngineModes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageAutoscaling { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsKerberosAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OutpostCapable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedActivityStreamModes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsGlobalDatabases { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsClusters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedNetworkTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinStorageThroughputPerDbInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxStorageThroughputPerDbInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinStorageThroughputPerIops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxStorageThroughputPerIops { get; set; }
	}
	
	/// <summary>
	/// <p>A data type that represents an Outpost.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide.</i> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Outpost
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Provides information about a pending maintenance action for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PendingMaintenanceAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AutoAppliedAfterDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ForcedApplyDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptInStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CurrentApplyDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromoteReadReplicaDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromoteReadReplicaMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PurchaseReservedDBInstancesOfferingMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DBInstanceCount { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// A range of integer values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Range
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> From { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> To { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Step { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RebootDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RebootDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ForceFailover { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>DescribeReservedDBInstances</code> and <code>DescribeReservedDBInstancesOfferings</code> actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringCharge
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RecurringChargeAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecurringChargeFrequency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterDBProxyTargetsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBProxyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBInstanceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBClusterIdentifiers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveFromGlobalClusterMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GlobalClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveRoleFromDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveRoleFromDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FeatureName { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveSourceIdentifierFromSubscriptionMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceIdentifier { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveTagsFromResourceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element in the <code>DescribeReservedDBInstancesOfferings</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedDBInstancesOffering
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedDBInstancesOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RecurringCharges { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResetDBClusterParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResetAllParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResetDBParameterGroupMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResetAllParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBClusterFromS3Message
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CharacterSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngine { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngineVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3IngestionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserSecretKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBClusterFromSnapshotMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBClusterToPointInTimeMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RestoreType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RestoreToTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseLatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BacktrackWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfiguration ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		/// <summary>
		/// <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDbClusterResourceId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBInstanceFromDBSnapshotMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainFqdn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainOu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainAuthSecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainDnsIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableCustomerOwnedIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomIamInstanceProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackupTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterSnapshotIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBInstanceFromS3Message
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DBSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredMaintenanceWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredBackupWindow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> StorageEncrypted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoringRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngine { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceEngineVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3IngestionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePerformanceInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PerformanceInsightsKMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PerformanceInsightsRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageMasterUserPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserSecretKmsKeyId { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreDBInstanceToPointInTimeMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetDBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RestoreTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseLatestRestorableTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSubnetGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZ { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PubliclyAccessible { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoMinorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptionGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CopyTagsToSnapshot { get; set; }
		
		/// <summary>
		/// A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TdeCredentialPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainIAMRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainFqdn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainOu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainAuthSecretArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainDnsIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableIAMDatabaseAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableCloudwatchLogsExports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultProcessorFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBParameterGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeletionProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDbiResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAllocatedStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceAutomatedBackupsArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableCustomerOwnedIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomIamInstanceProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackupTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedStorage { get; set; }
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevokeDBSecurityGroupIngressMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBSecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CIDRIP { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2SecurityGroupOwnerId { get; set; }
	}
	
	/// <summary>
	/// Contains an Amazon Web Services Region name as the result of a successful call to the <code>DescribeSourceRegions</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceRegion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RegionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsDBInstanceAutomatedBackupsReplication { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartActivityStreamRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActivityStreamMode Mode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EngineNativeAuditFieldsIncluded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDBInstanceAutomatedBackupsReplicationMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BackupRetentionPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreSignedUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartExportTaskMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExportTaskIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExportOnly { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopActivityStreamRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ApplyImmediately { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDBClusterMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBClusterIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDBInstanceAutomatedBackupsReplicationMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceDBInstanceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopDBInstanceMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DBSnapshotIdentifier { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element for the <code>DescribeDBSubnetGroups</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Subnet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetIdentifier { get; set; }
		
		/// <summary>
		/// <p>Contains Availability Zone information.</p> <p>This data type is used as an element in the <code>OrderableDBInstanceOption</code> data type.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityZone SubnetAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Outpost SubnetOutpost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetStatus { get; set; }
	}
	
	/// <summary>
	/// A time zone associated with a <code>DBInstance</code> or a <code>DBSnapshot</code>. This data type is an element in the response to the <code>DescribeDBInstances</code>, the <code>DescribeDBSnapshots</code>, and the <code>DescribeDBEngineVersions</code> actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Timezone
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TimezoneName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SwitchoverBlueGreenDeploymentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BlueGreenDeploymentIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SwitchoverTimeout { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SwitchoverReadReplicaMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
	}
	
	/// <summary>
	/// The version of the database engine that a DB instance can be upgraded to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpgradeTarget
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsMajorVersionUpgrade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedEngineModes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsParallelQuery { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsGlobalDatabases { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsBabelfish { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsLocalWriteForwarding { get; set; }
	}
	
	/// <summary>
	/// Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidStorageOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StorageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProvisionedIops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IopsToStorageRatio { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsStorageAutoscaling { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProvisionedStorageThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StorageThroughputToIopsRatio { get; set; }
	}
	
	/// <summary>
	/// This data type is used as a response element for queries on VPC security group membership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcSecurityGroupMembership
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Associates an Identity and Access Management (IAM) role with a DB cluster.
		/// GET_AddRoleToDBCluster #Action=AddRoleToDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The name of the DB cluster to associate the IAM role with.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB cluster that the IAM role is to be associated with. For information about supported feature names, see <a>DBEngineVersion</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_AddRoleToDBClusterAsync(string DBClusterIdentifier, string RoleArn, string FeatureName, GET_AddRoleToDBClusterAction Action, GET_AddRoleToDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=AddRoleToDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&RoleArn=" + (RoleArn==null? "" : System.Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : System.Uri.EscapeDataString(FeatureName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note> <p>This command doesn't apply to RDS Custom.</p>
		/// GET_AddRoleToDBInstance #Action=AddRoleToDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier">The name of the DB instance to associate the IAM role with.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to associate with the DB instance, for example <code>arn:aws:iam::123456789012:role/AccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB instance that the IAM role is to be associated with. For information about supported feature names, see <a>DBEngineVersion</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_AddRoleToDBInstanceAsync(string DBInstanceIdentifier, string RoleArn, string FeatureName, GET_AddRoleToDBInstanceAction Action, GET_AddRoleToDBInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=AddRoleToDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&RoleArn=" + (RoleArn==null? "" : System.Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : System.Uri.EscapeDataString(FeatureName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a source identifier to an existing RDS event notification subscription.
		/// GET_AddSourceIdentifierToSubscription #Action=AddSourceIdentifierToSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to add a source identifier to.</param>
		/// <param name="SourceIdentifier"><p>The identifier of the event source to be added.</p> <p>Constraints:</p> <ul> <li> <p>If the source type is a DB instance, a <code>DBInstanceIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster, a <code>DBClusterIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster snapshot, a <code>DBClusterSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is an RDS Proxy, a <code>DBProxyName</code> value must be supplied.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_AddSourceIdentifierToSubscriptionAsync(string SubscriptionName, string SourceIdentifier, GET_AddSourceIdentifierToSubscriptionAction Action, GET_AddSourceIdentifierToSubscriptionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=AddSourceIdentifierToSubscription?SubscriptionName=" + (SubscriptionName==null? "" : System.Uri.EscapeDataString(SubscriptionName))+"&SourceIdentifier=" + (SourceIdentifier==null? "" : System.Uri.EscapeDataString(SourceIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a>.</p>
		/// GET_AddTagsToResource #Action=AddTagsToResource
		/// </summary>
		/// <param name="ResourceName">The Amazon RDS resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.</param>
		/// <param name="Tags">The tags to be assigned to the Amazon RDS resource.</param>
		/// <returns>Success</returns>
		public async Task GET_AddTagsToResourceAsync(string ResourceName, string[] Tags, GET_AddTagsToResourceAction Action, GET_AddTagsToResourceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=AddTagsToResource?ResourceName=" + (ResourceName==null? "" : System.Uri.EscapeDataString(ResourceName))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Applies a pending maintenance action to a resource (for example, to a DB instance).
		/// GET_ApplyPendingMaintenanceAction #Action=ApplyPendingMaintenanceAction
		/// </summary>
		/// <param name="ResourceIdentifier">The RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.</param>
		/// <param name="ApplyAction"><p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>, <code>hardware-maintenance</code>, <code>ca-certificate-rotation</code> </p></param>
		/// <param name="OptInType"><p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ApplyPendingMaintenanceActionAsync(string ResourceIdentifier, string ApplyAction, string OptInType, GET_ApplyPendingMaintenanceActionAction Action, GET_ApplyPendingMaintenanceActionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ApplyPendingMaintenanceAction?ResourceIdentifier=" + (ResourceIdentifier==null? "" : System.Uri.EscapeDataString(ResourceIdentifier))+"&ApplyAction=" + (ApplyAction==null? "" : System.Uri.EscapeDataString(ApplyAction))+"&OptInType=" + (OptInType==null? "" : System.Uri.EscapeDataString(OptInType))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <p>You can't authorize ingress from an EC2 security group in one Amazon Web Services Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		/// GET_AuthorizeDBSecurityGroupIngress #Action=AuthorizeDBSecurityGroupIngress
		/// </summary>
		/// <param name="DBSecurityGroupName">The name of the DB security group to add authorization to.</param>
		/// <param name="CIDRIP">The IP range to authorize.</param>
		/// <param name="EC2SecurityGroupName">Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</param>
		/// <param name="EC2SecurityGroupId">Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</param>
		/// <param name="EC2SecurityGroupOwnerId">Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</param>
		/// <returns>Success</returns>
		public async Task GET_AuthorizeDBSecurityGroupIngressAsync(string DBSecurityGroupName, string CIDRIP, string EC2SecurityGroupName, string EC2SecurityGroupId, string EC2SecurityGroupOwnerId, GET_AuthorizeDBSecurityGroupIngressAction Action, GET_AuthorizeDBSecurityGroupIngressVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=AuthorizeDBSecurityGroupIngress?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : System.Uri.EscapeDataString(DBSecurityGroupName))+"&CIDRIP=" + (CIDRIP==null? "" : System.Uri.EscapeDataString(CIDRIP))+"&EC2SecurityGroupName=" + (EC2SecurityGroupName==null? "" : System.Uri.EscapeDataString(EC2SecurityGroupName))+"&EC2SecurityGroupId=" + (EC2SecurityGroupId==null? "" : System.Uri.EscapeDataString(EC2SecurityGroupId))+"&EC2SecurityGroupOwnerId=" + (EC2SecurityGroupOwnerId==null? "" : System.Uri.EscapeDataString(EC2SecurityGroupOwnerId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action applies only to Aurora MySQL DB clusters.</p> </note>
		/// GET_BacktrackDBCluster #Action=BacktrackDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier of the DB cluster to be backtracked. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="BacktrackTo"><p>The timestamp of the time to backtrack the DB cluster to, specified in ISO 8601 format. For more information about ISO 8601, see the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <note> <p>If the specified time isn't a consistent time for the DB cluster, Aurora automatically chooses the nearest possible consistent time for the DB cluster.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must contain a valid ISO 8601 timestamp.</p> </li> <li> <p>Can't contain a timestamp set in the future.</p> </li> </ul> <p>Example: <code>2017-07-08T18:00Z</code> </p></param>
		/// <param name="Force">A value that indicates whether to force the DB cluster to backtrack when binary logging is enabled. Otherwise, an error occurs when binary logging is enabled.</param>
		/// <param name="UseEarliestTimeOnPointInTimeUnavailable">A value that indicates whether to backtrack the DB cluster to the earliest possible backtrack time when <i>BacktrackTo</i> is set to a timestamp earlier than the earliest backtrack time. When this parameter is disabled and <i>BacktrackTo</i> is set to a timestamp earlier than the earliest backtrack time, an error occurs.</param>
		/// <returns>Success</returns>
		public async Task GET_BacktrackDBClusterAsync(string DBClusterIdentifier, System.DateTimeOffset BacktrackTo, bool Force, bool UseEarliestTimeOnPointInTimeUnavailable, GET_BacktrackDBClusterAction Action, GET_BacktrackDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=BacktrackDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&BacktrackTo=" + BacktrackTo.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&Force="+Force+"&UseEarliestTimeOnPointInTimeUnavailable="+UseEarliestTimeOnPointInTimeUnavailable+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels an export task in progress that is exporting a snapshot or cluster to Amazon S3. Any data that has already been written to the S3 bucket isn't removed.
		/// GET_CancelExportTask #Action=CancelExportTask
		/// </summary>
		/// <param name="ExportTaskIdentifier">The identifier of the snapshot or cluster export task to cancel.</param>
		/// <returns>Success</returns>
		public async Task GET_CancelExportTaskAsync(string ExportTaskIdentifier, GET_CancelExportTaskAction Action, GET_CancelExportTaskVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CancelExportTask?ExportTaskIdentifier=" + (ExportTaskIdentifier==null? "" : System.Uri.EscapeDataString(ExportTaskIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copies the specified DB cluster parameter group.
		/// GET_CopyDBClusterParameterGroup #Action=CopyDBClusterParameterGroup
		/// </summary>
		/// <param name="SourceDBClusterParameterGroupIdentifier"><p>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li> </ul></param>
		/// <param name="TargetDBClusterParameterGroupIdentifier"><p>The identifier for the copied DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code> </p></param>
		/// <param name="TargetDBClusterParameterGroupDescription">A description for the copied DB cluster parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBClusterParameterGroupAsync(string SourceDBClusterParameterGroupIdentifier, string TargetDBClusterParameterGroupIdentifier, string TargetDBClusterParameterGroupDescription, string[] Tags, GET_CopyDBClusterParameterGroupAction Action, GET_CopyDBClusterParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CopyDBClusterParameterGroup?SourceDBClusterParameterGroupIdentifier=" + (SourceDBClusterParameterGroupIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBClusterParameterGroupIdentifier))+"&TargetDBClusterParameterGroupIdentifier=" + (TargetDBClusterParameterGroupIdentifier==null? "" : System.Uri.EscapeDataString(TargetDBClusterParameterGroupIdentifier))+"&TargetDBClusterParameterGroupDescription=" + (TargetDBClusterParameterGroupDescription==null? "" : System.Uri.EscapeDataString(TargetDBClusterParameterGroupDescription))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another Amazon Web Services Region. In that case, the Amazon Web Services Region where you call the <code>CopyDBClusterSnapshot</code> operation is the destination Amazon Web Services Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another Amazon Web Services Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source Amazon Web Services Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the presigned URL.</p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in "copying" status.</p> <p>For more information on copying encrypted Amazon Aurora DB cluster snapshots from one Amazon Web Services Region to another, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_CopyDBClusterSnapshot #Action=CopyDBClusterSnapshot
		/// </summary>
		/// <param name="SourceDBClusterSnapshotIdentifier"><p>The identifier of the DB cluster snapshot to copy. This parameter isn't case-sensitive.</p> <p>You can't copy an encrypted, shared DB cluster snapshot from one Amazon Web Services Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the "available" state.</p> </li> <li> <p>If the source snapshot is in the same Amazon Web Services Region as the copy, specify a valid DB snapshot identifier.</p> </li> <li> <p>If the source snapshot is in a different Amazon Web Services Region than the copy, specify a valid DB cluster snapshot ARN. For more information, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html#USER_CopySnapshot.AcrossRegions"> Copying Snapshots Across Amazon Web Services Regions</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p></param>
		/// <param name="TargetDBClusterSnapshotIdentifier"><p>The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted DB cluster snapshot. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the Amazon Web Services KMS key.</p> <p>If you copy an encrypted DB cluster snapshot from your Amazon Web Services account, you can specify a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot.</p> <p>If you copy an encrypted DB cluster snapshot that is shared from another Amazon Web Services account, then you must specify a value for <code>KmsKeyId</code>.</p> <p>To copy an encrypted DB cluster snapshot to another Amazon Web Services Region, you must set <code>KmsKeyId</code> to the Amazon Web Services KMS key identifier you want to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. KMS keys are specific to the Amazon Web Services Region that they are created in, and you can't use KMS keys from one Amazon Web Services Region in another Amazon Web Services Region.</p> <p>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code> parameter, an error is returned.</p></param>
		/// <param name="PreSignedUrl"><p>When you are copying a DB cluster snapshot from one Amazon Web Services GovCloud (US) Region to another, the URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> API operation in the Amazon Web Services Region that contains the source DB cluster snapshot to copy. Use the <code>PreSignedUrl</code> parameter when copying an encrypted DB cluster snapshot from another Amazon Web Services Region. Don't specify <code>PreSignedUrl</code> when copying an encrypted DB cluster snapshot in the same Amazon Web Services Region.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions. It's ignored in other Amazon Web Services Regions.</p> <p>The presigned URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to copy. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="CopyTags">A value that indicates whether to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot. By default, tags are not copied.</param>
		/// <param name="SourceRegion">The ID of the region that contains the snapshot to be copied.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBClusterSnapshotAsync(string SourceDBClusterSnapshotIdentifier, string TargetDBClusterSnapshotIdentifier, string KmsKeyId, string PreSignedUrl, bool CopyTags, string[] Tags, string SourceRegion, GET_CopyDBClusterSnapshotAction Action, GET_CopyDBClusterSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CopyDBClusterSnapshot?SourceDBClusterSnapshotIdentifier=" + (SourceDBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBClusterSnapshotIdentifier))+"&TargetDBClusterSnapshotIdentifier=" + (TargetDBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(TargetDBClusterSnapshotIdentifier))+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : System.Uri.EscapeDataString(PreSignedUrl))+"&CopyTags="+CopyTags+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&SourceRegion=" + (SourceRegion==null? "" : System.Uri.EscapeDataString(SourceRegion))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copies the specified DB parameter group.
		/// GET_CopyDBParameterGroup #Action=CopyDBParameterGroup
		/// </summary>
		/// <param name="SourceDBParameterGroupIdentifier"><p>The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> </ul></param>
		/// <param name="TargetDBParameterGroupIdentifier"><p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code> </p></param>
		/// <param name="TargetDBParameterGroupDescription">A description for the copied DB parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBParameterGroupAsync(string SourceDBParameterGroupIdentifier, string TargetDBParameterGroupIdentifier, string TargetDBParameterGroupDescription, string[] Tags, GET_CopyDBParameterGroupAction Action, GET_CopyDBParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CopyDBParameterGroup?SourceDBParameterGroupIdentifier=" + (SourceDBParameterGroupIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBParameterGroupIdentifier))+"&TargetDBParameterGroupIdentifier=" + (TargetDBParameterGroupIdentifier==null? "" : System.Uri.EscapeDataString(TargetDBParameterGroupIdentifier))+"&TargetDBParameterGroupDescription=" + (TargetDBParameterGroupDescription==null? "" : System.Uri.EscapeDataString(TargetDBParameterGroupDescription))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Copies the specified DB snapshot. The source DB snapshot must be in the <code>available</code> state.</p> <p>You can copy a snapshot from one Amazon Web Services Region to another. In that case, the Amazon Web Services Region where you call the <code>CopyDBSnapshot</code> operation is the destination Amazon Web Services Region for the DB snapshot copy.</p> <p>This command doesn't apply to RDS Custom.</p> <p>For more information about copying snapshots, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_CopyDBSnapshot #Action=CopyDBSnapshot
		/// </summary>
		/// <param name="SourceDBSnapshotIdentifier"><p>The identifier for the source DB snapshot.</p> <p>If the source snapshot is in the same Amazon Web Services Region as the copy, specify a valid DB snapshot identifier. For example, you might specify <code>rds:mysql-instance1-snapshot-20130805</code>.</p> <p>If the source snapshot is in a different Amazon Web Services Region than the copy, specify a valid DB snapshot ARN. For example, you might specify <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code>.</p> <p>If you are copying from a shared manual DB snapshot, this parameter must be the Amazon Resource Name (ARN) of the shared DB snapshot.</p> <p>If you are copying an encrypted snapshot this parameter must be in the ARN format for the source Amazon Web Services Region.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the "available" state.</p> </li> </ul> <p>Example: <code>rds:mydb-2012-04-02-00-01</code> </p> <p>Example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code> </p></param>
		/// <param name="TargetDBSnapshotIdentifier"><p>The identifier for the copy of the snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-snapshot</code> </p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted DB snapshot. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you copy an encrypted DB snapshot from your Amazon Web Services account, you can specify a value for this parameter to encrypt the copy with a new KMS key. If you don't specify a value for this parameter, then the copy of the DB snapshot is encrypted with the same Amazon Web Services KMS key as the source DB snapshot.</p> <p>If you copy an encrypted DB snapshot that is shared from another Amazon Web Services account, then you must specify a value for this parameter.</p> <p>If you specify this parameter when you copy an unencrypted snapshot, the copy is encrypted.</p> <p>If you copy an encrypted snapshot to a different Amazon Web Services Region, then you must specify an Amazon Web Services KMS key identifier for the destination Amazon Web Services Region. KMS keys are specific to the Amazon Web Services Region that they are created in, and you can't use KMS keys from one Amazon Web Services Region in another Amazon Web Services Region.</p></param>
		/// <param name="CopyTags">A value that indicates whether to copy all tags from the source DB snapshot to the target DB snapshot. By default, tags aren't copied.</param>
		/// <param name="PreSignedUrl"><p>When you are copying a snapshot from one Amazon Web Services GovCloud (US) Region to another, the URL that contains a Signature Version 4 signed request for the <code>CopyDBSnapshot</code> API operation in the source Amazon Web Services Region that contains the source DB snapshot to copy.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions. It's ignored in other Amazon Web Services Regions.</p> <p>You must specify this parameter when you copy an encrypted DB snapshot from another Amazon Web Services Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when you are copying an encrypted DB snapshot in the same Amazon Web Services Region.</p> <p>The presigned URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to copy. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>DestinationRegion</code> - The Amazon Web Services Region that the encrypted DB snapshot is copied to. This Amazon Web Services Region is the same one where the <code>CopyDBSnapshot</code> operation is called that contains this presigned URL.</p> <p>For example, if you copy an encrypted DB snapshot from the us-west-2 Amazon Web Services Region to the us-east-1 Amazon Web Services Region, then you call the <code>CopyDBSnapshot</code> operation in the us-east-1 Amazon Web Services Region and provide a presigned URL that contains a call to the <code>CopyDBSnapshot</code> operation in the us-west-2 Amazon Web Services Region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 Amazon Web Services Region.</p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBSnapshot</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>SourceDBSnapshotIdentifier</code> - The DB snapshot identifier for the encrypted snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="OptionGroupName"><p>The name of an option group to associate with the copy of the snapshot.</p> <p>Specify this option if you are copying a snapshot from one Amazon Web Services Region to another, and your DB instance uses a nondefault option group. If your source DB instance uses Transparent Data Encryption for Oracle or Microsoft SQL Server, you must specify this option when copying across Amazon Web Services Regions. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopySnapshot.Options">Option group considerations</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="TargetCustomAvailabilityZone"><p>The external custom Availability Zone (CAZ) identifier for the target CAZ.</p> <p>Example: <code>rds-caz-aiqhTgQv</code>.</p></param>
		/// <param name="CopyOptionGroup">A value that indicates whether to copy the DB option group associated with the source DB snapshot to the target Amazon Web Services account and associate with the target DB snapshot. The associated option group can be copied only with cross-account snapshot copy calls.</param>
		/// <param name="SourceRegion">The ID of the region that contains the snapshot to be copied.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyDBSnapshotAsync(string SourceDBSnapshotIdentifier, string TargetDBSnapshotIdentifier, string KmsKeyId, string[] Tags, bool CopyTags, string PreSignedUrl, string OptionGroupName, string TargetCustomAvailabilityZone, bool CopyOptionGroup, string SourceRegion, GET_CopyDBSnapshotAction Action, GET_CopyDBSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CopyDBSnapshot?SourceDBSnapshotIdentifier=" + (SourceDBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBSnapshotIdentifier))+"&TargetDBSnapshotIdentifier=" + (TargetDBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(TargetDBSnapshotIdentifier))+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&CopyTags="+CopyTags+"&PreSignedUrl=" + (PreSignedUrl==null? "" : System.Uri.EscapeDataString(PreSignedUrl))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&TargetCustomAvailabilityZone=" + (TargetCustomAvailabilityZone==null? "" : System.Uri.EscapeDataString(TargetCustomAvailabilityZone))+"&CopyOptionGroup="+CopyOptionGroup+"&SourceRegion=" + (SourceRegion==null? "" : System.Uri.EscapeDataString(SourceRegion))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copies the specified option group.
		/// GET_CopyOptionGroup #Action=CopyOptionGroup
		/// </summary>
		/// <param name="SourceOptionGroupIdentifier"><p>The identifier for the source option group.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid option group.</p> </li> </ul></param>
		/// <param name="TargetOptionGroupIdentifier"><p>The identifier for the copied option group.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-option-group</code> </p></param>
		/// <param name="TargetOptionGroupDescription">The description for the copied option group.</param>
		/// <returns>Success</returns>
		public async Task GET_CopyOptionGroupAsync(string SourceOptionGroupIdentifier, string TargetOptionGroupIdentifier, string TargetOptionGroupDescription, string[] Tags, GET_CopyOptionGroupAction Action, GET_CopyOptionGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CopyOptionGroup?SourceOptionGroupIdentifier=" + (SourceOptionGroupIdentifier==null? "" : System.Uri.EscapeDataString(SourceOptionGroupIdentifier))+"&TargetOptionGroupIdentifier=" + (TargetOptionGroupIdentifier==null? "" : System.Uri.EscapeDataString(TargetOptionGroupIdentifier))+"&TargetOptionGroupDescription=" + (TargetOptionGroupDescription==null? "" : System.Uri.EscapeDataString(TargetOptionGroupDescription))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a blue/green deployment.</p> <p>A blue/green deployment creates a staging environment that copies the production environment. In a blue/green deployment, the blue environment is the current production environment. The green environment is the staging environment. The staging environment stays in sync with the current production environment using logical replication.</p> <p>You can make changes to the databases in the green environment without affecting production workloads. For example, you can upgrade the major or minor DB engine version, change database parameters, or make schema changes in the staging environment. You can thoroughly test changes in the green environment. When ready, you can switch over the environments to promote the green environment to be the new production environment. The switchover typically takes under a minute.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_CreateBlueGreenDeployment #Action=CreateBlueGreenDeployment
		/// </summary>
		/// <param name="BlueGreenDeploymentName"><p>The name of the blue/green deployment.</p> <p>Constraints:</p> <ul> <li> <p>Can't be the same as an existing blue/green deployment name in the same account and Amazon Web Services Region.</p> </li> </ul>
		/// Min length: 1
		/// Max length: 60
		// </param>
		/// <param name="Source"><p>The Amazon Resource Name (ARN) of the source production database.</p> <p>Specify the database that you want to clone. The blue/green deployment creates this database in the green environment. You can make updates to the database in the green environment, such as an engine version upgrade. When you are ready, you can switch the database in the green environment to be the production database.</p>
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="TargetEngineVersion"><p>The engine version of the database in the green environment.</p> <p>Specify the engine version to upgrade to in the green environment.</p>
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="TargetDBParameterGroupName"><p>The DB parameter group associated with the DB instance in the green environment.</p> <p>To test parameter changes, specify a DB parameter group that is different from the one associated with the source DB instance.</p>
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="TargetDBClusterParameterGroupName"><p>The DB cluster parameter group associated with the Aurora DB cluster in the green environment.</p> <p>To test parameter changes, specify a DB cluster parameter group that is different from the one associated with the source DB cluster.</p>
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="Tags">Tags to assign to the blue/green deployment.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateBlueGreenDeploymentAsync(string BlueGreenDeploymentName, string Source, string TargetEngineVersion, string TargetDBParameterGroupName, string TargetDBClusterParameterGroupName, string[] Tags, GET_CreateBlueGreenDeploymentAction Action, GET_CreateBlueGreenDeploymentVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateBlueGreenDeployment?BlueGreenDeploymentName=" + (BlueGreenDeploymentName==null? "" : System.Uri.EscapeDataString(BlueGreenDeploymentName))+"&Source=" + (Source==null? "" : System.Uri.EscapeDataString(Source))+"&TargetEngineVersion=" + (TargetEngineVersion==null? "" : System.Uri.EscapeDataString(TargetEngineVersion))+"&TargetDBParameterGroupName=" + (TargetDBParameterGroupName==null? "" : System.Uri.EscapeDataString(TargetDBParameterGroupName))+"&TargetDBClusterParameterGroupName=" + (TargetDBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(TargetDBClusterParameterGroupName))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a custom DB engine version (CEV).
		/// GET_CreateCustomDBEngineVersion #Action=CreateCustomDBEngineVersion
		/// </summary>
		/// <param name="Engine">The database engine to use for your custom engine version (CEV). The only supported value is <code>custom-oracle-ee</code>.
		/// Min length: 1
		/// Max length: 35
		// </param>
		/// <param name="EngineVersion">The name of your CEV. The name format is 19.<i>customized_string</i>. For example, a valid CEV name is <code>19.my_cev1</code>. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Region.
		/// Min length: 1
		/// Max length: 60
		// </param>
		/// <param name="DatabaseInstallationFilesS3BucketName">The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is <code>my-custom-installation-files</code>.
		/// Min length: 3
		/// Max length: 63
		// </param>
		/// <param name="DatabaseInstallationFilesS3Prefix">The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is <code>123456789012/cev1</code>. If this setting isn't specified, no prefix is assumed.
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="ImageId">The ID of the Amazon Machine Image (AMI). For RDS Custom for SQL Server, an AMI ID is required to create a CEV. For RDS Custom for Oracle, the default is the most recent AMI available, but you can specify an AMI ID that was used in a different Oracle CEV. Find the AMIs used by your CEVs by calling the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBEngineVersions.html">DescribeDBEngineVersions</a> operation.
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="KMSKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.</p> <p>If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk"> Creating a symmetric encryption KMS key</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p> <p>You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.</p>
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="Description">An optional description of your CEV.
		/// Min length: 1
		/// Max length: 1000
		// </param>
		/// <param name="Manifest"><p>The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.</p> <p>The following JSON fields are valid:</p> <dl> <dt>MediaImportTemplateVersion</dt> <dd> <p>Version of the CEV manifest. The date is in the format <code>YYYY-MM-DD</code>.</p> </dd> <dt>databaseInstallationFileNames</dt> <dd> <p>Ordered list of installation files for the CEV.</p> </dd> <dt>opatchFileNames</dt> <dd> <p>Ordered list of OPatch installers used for the Oracle DB engine.</p> </dd> <dt>psuRuPatchFileNames</dt> <dd> <p>The PSU and RU patches for this CEV.</p> </dd> <dt>OtherPatchFileNames</dt> <dd> <p>The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.</p> </dd> </dl> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest"> Creating the CEV manifest</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// Min length: 1
		/// Max length: 51000
		// </param>
		/// <returns>Success</returns>
		public async Task GET_CreateCustomDBEngineVersionAsync(string Engine, string EngineVersion, string DatabaseInstallationFilesS3BucketName, string DatabaseInstallationFilesS3Prefix, string ImageId, string KMSKeyId, string Description, string Manifest, string[] Tags, GET_CreateCustomDBEngineVersionAction Action, GET_CreateCustomDBEngineVersionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateCustomDBEngineVersion?Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&DatabaseInstallationFilesS3BucketName=" + (DatabaseInstallationFilesS3BucketName==null? "" : System.Uri.EscapeDataString(DatabaseInstallationFilesS3BucketName))+"&DatabaseInstallationFilesS3Prefix=" + (DatabaseInstallationFilesS3Prefix==null? "" : System.Uri.EscapeDataString(DatabaseInstallationFilesS3Prefix))+"&ImageId=" + (ImageId==null? "" : System.Uri.EscapeDataString(ImageId))+"&KMSKeyId=" + (KMSKeyId==null? "" : System.Uri.EscapeDataString(KMSKeyId))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&Manifest=" + (Manifest==null? "" : System.Uri.EscapeDataString(Manifest))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>If you create an Aurora DB cluster, the request creates an empty cluster. You must explicitly create the writer instance for your DB cluster using the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html">CreateDBInstance</a> operation. If you create a Multi-AZ DB cluster, the request creates a writer and two reader DB instances for you, each in a different Availability Zone.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create an Amazon Aurora DB cluster as a read replica of another DB cluster or Amazon RDS for MySQL or PostgreSQL DB instance. For more information about Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html">What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>You can also use the <code>ReplicationSourceIdentifier</code> parameter to create a Multi-AZ DB cluster read replica with an RDS for MySQL or PostgreSQL DB instance as the source. For more information about Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html">Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_CreateDBCluster #Action=CreateDBCluster
		/// </summary>
		/// <param name="AvailabilityZones"><p>A list of Availability Zones (AZs) where DB instances in the DB cluster can be created.</p> <p>For information on Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html">Choosing the Regions and Availability Zones</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Default: <code>1</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul></param>
		/// <param name="CharacterSetName"><p>The name of the character set (<code>CharacterSet</code>) to associate the DB cluster with.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DatabaseName"><p>The name for your database of up to 64 alphanumeric characters. If you don't provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DBClusterIdentifier"><p>The identifier for this DB cluster. This parameter is stored as a lowercase string.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with this DB cluster. If you don't specify a value, then the default DB cluster parameter group for the specified DB engine and version is used.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li> </ul></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of EC2 VPC security groups to associate with this DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with this DB cluster.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB subnet group.</p> </li> <li> <p>Must not be <code>default</code>.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="Engine"><p>The database engine to use for this DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values: <code>aurora-mysql | aurora-postgresql | mysql | postgres</code> </p></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>To list all of the available engine versions for Aurora MySQL version 2 (5.7-compatible) and version 3 (MySQL 8.0-compatible), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>You can supply either <code>5.7</code> or <code>8.0</code> to use the default engine version for Aurora MySQL version 2 or version 3, respectively.</p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p> <p>For information about a specific engine, see the following topics:</p> <ul> <li> <p>Aurora MySQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html">Database engine updates for Amazon Aurora MySQL</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> <li> <p>Aurora PostgreSQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">Amazon Aurora PostgreSQL releases and engine versions</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> <li> <p>RDS for MySQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">Amazon RDS for MySQL</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>RDS for PostgreSQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> </li> </ul> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Port"><p>The port number on which the instances in the DB cluster accept connections.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default:</p> <ul> <li> <p>RDS for MySQL and Aurora MySQL - <code>3306</code> </p> </li> <li> <p>RDS for PostgreSQL and Aurora PostgreSQL - <code>5432</code> </p> </li> </ul></param>
		/// <param name="MasterUsername"><p>The name of the master user for the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master database user.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 8 to 41 characters.</p> </li> <li> <p>Can contain any printable ASCII character except "/", """, or "@".</p> </li> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> </ul></param>
		/// <param name="OptionGroupName"><p>The option group to associate the DB cluster with.</p> <p>DB clusters are associated with a default option group that can't be modified.</p></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Days must be one of <code>Mon | Tue | Wed | Thu | Fri | Sat | Sun</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="ReplicationSourceIdentifier"><p>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Tags"><p>Tags to assign to the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="StorageEncrypted"><p>Specifies whether the DB cluster is encrypted.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>When a KMS key isn't specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon RDS uses the KMS key used to encrypt the source. Otherwise, Amazon RDS uses your default KMS key.</p> </li> <li> <p>If the <code>StorageEncrypted</code> parameter is enabled and <code>ReplicationSourceIdentifier</code> isn't specified, then Amazon RDS uses your default KMS key.</p> </li> </ul> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>If you create a read replica of an encrypted DB cluster in another Amazon Web Services Region, make sure to set <code>KmsKeyId</code> to a KMS key identifier that is valid in the destination Amazon Web Services Region. This KMS key is used to encrypt the read replica in that Amazon Web Services Region.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="PreSignedUrl"><p>When you are replicating a DB cluster from one Amazon Web Services GovCloud (US) Region to another, an URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> operation to be called in the source Amazon Web Services Region where the DB cluster is replicated from. Specify <code>PreSignedUrl</code> only when you are performing cross-Region replication from an encrypted DB cluster.</p> <p>The presigned URL must be a valid request for the <code>CreateDBCluster</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster to copy.</p> <p>The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB cluster in the destination Amazon Web Services Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that Aurora read replica will be created in.</p> </li> <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster from the us-west-2 Amazon Web Services Region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note> <p>Valid for Cluster Type: Aurora DB clusters only</p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to <code>0</code>.</p> <p>Valid for Cluster Type: Aurora MySQL DB clusters only</p> <p>Default: <code>0</code> </p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of log types that need to be enabled for exporting to CloudWatch Logs.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The following values are valid for each DB engine:</p> <ul> <li> <p>Aurora MySQL - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>Aurora PostgreSQL - <code>postgresql</code> </p> </li> <li> <p>RDS for MySQL - <code>error | general | slowquery</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li> </ul> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="EngineMode"><p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <p>The <code>serverless</code> engine mode only applies for Aurora Serverless v1 DB clusters.</p> <p>For information about limitations and requirements for Serverless DB clusters, see the following sections in the <i>Amazon Aurora User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations">Limitations of Aurora Serverless v1</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html">Requirements for Aurora Serverless v2</a> </p> </li> </ul> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="ScalingConfiguration"><p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DeletionProtection"><p>Specifies whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="GlobalClusterIdentifier"><p>The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="EnableHttpEndpoint"><p>Specifies whether to enable the HTTP endpoint for an Aurora Serverless v1 DB cluster. By default, the HTTP endpoint is disabled.</p> <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless v1 DB cluster. You can also query your database from inside the RDS console with the query editor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="CopyTagsToSnapshot"><p>Specifies whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Domain"><p>The Active Directory directory ID to create the DB cluster in.</p> <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="EnableGlobalWriteForwarding"><p>Specifies whether to enable this DB cluster to forward write operations to the primary cluster of a global cluster (Aurora global database). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.</p> <p>You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster, and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by a global cluster API operation, but it does nothing until then.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DBClusterInstanceClass"><p>The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example <code>db.m6gd.xlarge</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>This setting is required to create a Multi-AZ DB cluster.</p></param>
		/// <param name="StorageType"><p>The storage type to associate with the DB cluster.</p> <p>For information on storage types for Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type">Storage configurations for Amazon Aurora DB clusters</a>. For information on storage types for Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings">Settings for creating Multi-AZ DB clusters</a>.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora | aurora-iopt1</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul> <p>Default:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required to create a Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>Must be a multiple between .5 and 50 of the storage amount for the DB cluster.</p> </li> </ul></param>
		/// <param name="PubliclyAccessible"><p>Specifies whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul></param>
		/// <param name="AutoMinorVersionUpgrade"><p>Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, also set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting up and enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="EnablePerformanceInsights"><p>Specifies whether to turn on Performance Insights for the DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod"><p>The number of days to retain Performance Insights data.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS issues an error.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB cluster.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Valid Values: <code>IPV4 | DUAL</code> </p></param>
		/// <param name="DBSystemId">Reserved for future use.</param>
		/// <param name="ManageMasterUserPassword"><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul></param>
		/// <param name="MasterUserSecretKmsKeyId"><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EnableLocalWriteForwarding"><p>Specifies whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="SourceRegion">The ID of the region that contains the source for the read replica.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterAsync(
					string[] AvailabilityZones, 
					int BackupRetentionPeriod, 
					string CharacterSetName, 
					string DatabaseName, 
					string DBClusterIdentifier, 
					string DBClusterParameterGroupName, 
					string[] VpcSecurityGroupIds, 
					string DBSubnetGroupName, 
					string Engine, 
					string EngineVersion, 
					int Port, 
					string MasterUsername, 
					string MasterUserPassword, 
					string OptionGroupName, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					string ReplicationSourceIdentifier, 
					string[] Tags, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					string PreSignedUrl, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					string[] EnableCloudwatchLogsExports, 
					string EngineMode, 
					GET_CreateDBClusterScalingConfiguration ScalingConfiguration, 
					bool DeletionProtection, 
					string GlobalClusterIdentifier, 
					bool EnableHttpEndpoint, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					bool EnableGlobalWriteForwarding, 
					string DBClusterInstanceClass, 
					int AllocatedStorage, 
					string StorageType, 
					int Iops, 
					bool PubliclyAccessible, 
					bool AutoMinorVersionUpgrade, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					GET_CreateDBClusterServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration, 
					string NetworkType, 
					string DBSystemId, 
					bool ManageMasterUserPassword, 
					string MasterUserSecretKmsKeyId, 
					bool EnableLocalWriteForwarding, 
					string SourceRegion, 
					GET_CreateDBClusterAction Action, 
					GET_CreateDBClusterVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBCluster?"+string.Join("&", AvailabilityZones.Select(z => $"AvailabilityZones={System.Uri.EscapeDataString(z.ToString())}"))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&CharacterSetName=" + (CharacterSetName==null? "" : System.Uri.EscapeDataString(CharacterSetName))+"&DatabaseName=" + (DatabaseName==null? "" : System.Uri.EscapeDataString(DatabaseName))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&Port="+Port+"&MasterUsername=" + (MasterUsername==null? "" : System.Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : System.Uri.EscapeDataString(MasterUserPassword))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : System.Uri.EscapeDataString(PreferredMaintenanceWindow))+"&ReplicationSourceIdentifier=" + (ReplicationSourceIdentifier==null? "" : System.Uri.EscapeDataString(ReplicationSourceIdentifier))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : System.Uri.EscapeDataString(PreSignedUrl))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&EngineMode=" + (EngineMode==null? "" : System.Uri.EscapeDataString(EngineMode))+"&ScalingConfiguration=" + ScalingConfiguration+"&DeletionProtection="+DeletionProtection+"&GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&EnableHttpEndpoint="+EnableHttpEndpoint+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&EnableGlobalWriteForwarding="+EnableGlobalWriteForwarding+"&DBClusterInstanceClass=" + (DBClusterInstanceClass==null? "" : System.Uri.EscapeDataString(DBClusterInstanceClass))+"&AllocatedStorage="+AllocatedStorage+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&Iops="+Iops+"&PubliclyAccessible="+PubliclyAccessible+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : System.Uri.EscapeDataString(MonitoringRoleArn))+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : System.Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&ServerlessV2ScalingConfiguration=" + ServerlessV2ScalingConfiguration+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&DBSystemId=" + (DBSystemId==null? "" : System.Uri.EscapeDataString(DBSystemId))+"&ManageMasterUserPassword="+ManageMasterUserPassword+"&MasterUserSecretKmsKeyId=" + (MasterUserSecretKmsKeyId==null? "" : System.Uri.EscapeDataString(MasterUserSecretKmsKeyId))+"&EnableLocalWriteForwarding="+EnableLocalWriteForwarding+"&SourceRegion=" + (SourceRegion==null? "" : System.Uri.EscapeDataString(SourceRegion))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action applies only to Aurora DB clusters.</p> </note>
		/// GET_CreateDBClusterEndpoint #Action=CreateDBClusterEndpoint
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.</param>
		/// <param name="DBClusterEndpointIdentifier">The identifier to use for the new endpoint. This parameter is stored as a lowercase string.</param>
		/// <param name="EndpointType">The type of the endpoint, one of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</param>
		/// <param name="StaticMembers">List of DB instance identifiers that are part of the custom endpoint group.</param>
		/// <param name="ExcludedMembers">List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. This parameter is relevant only if the list of static members is empty.</param>
		/// <param name="Tags">The tags to be assigned to the Amazon RDS resource.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterEndpointAsync(string DBClusterIdentifier, string DBClusterEndpointIdentifier, string EndpointType, string[] StaticMembers, string[] ExcludedMembers, string[] Tags, GET_CreateDBClusterEndpointAction Action, GET_CreateDBClusterEndpointVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBClusterEndpoint?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&EndpointType=" + (EndpointType==null? "" : System.Uri.EscapeDataString(EndpointType))+"&"+string.Join("&", StaticMembers.Select(z => $"StaticMembers={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ExcludedMembers.Select(z => $"ExcludedMembers={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p>A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>.</p> <p>When you associate a new DB cluster parameter group with a running Aurora DB cluster, reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.</p> <p>When you associate a new DB cluster parameter group with a running Multi-AZ DB cluster, reboot the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.</p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> operation to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_CreateDBClusterParameterGroup #Action=CreateDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must not match the name of an existing DB cluster parameter group.</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note></param>
		/// <param name="DBParameterGroupFamily"><p>The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.</p> <p> <b>Aurora MySQL</b> </p> <p>Example: <code>aurora-mysql5.7</code>, <code>aurora-mysql8.0</code> </p> <p> <b>Aurora PostgreSQL</b> </p> <p>Example: <code>aurora-postgresql14</code> </p> <p> <b>RDS for MySQL</b> </p> <p>Example: <code>mysql8.0</code> </p> <p> <b>RDS for PostgreSQL</b> </p> <p>Example: <code>postgres12</code> </p> <p>To list all of the available parameter group families for a DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine &lt;engine&gt;</code> </p> <p>For example, to list all of the available parameter group families for the Aurora PostgreSQL DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine aurora-postgresql</code> </p> <note> <p>The output contains duplicates.</p> </note> <p>The following are the valid DB engine values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> </ul></param>
		/// <param name="Description">The description for the DB cluster parameter group.</param>
		/// <param name="Tags">Tags to assign to the DB cluster parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterParameterGroupAsync(string DBClusterParameterGroupName, string DBParameterGroupFamily, string Description, string[] Tags, GET_CreateDBClusterParameterGroupAction Action, GET_CreateDBClusterParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : System.Uri.EscapeDataString(DBParameterGroupFamily))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a snapshot of a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_CreateDBClusterSnapshot #Action=CreateDBClusterSnapshot
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier"><p>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p></param>
		/// <param name="DBClusterIdentifier"><p>The identifier of the DB cluster to create a snapshot for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="Tags">The tags to be assigned to the DB cluster snapshot.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBClusterSnapshotAsync(string DBClusterSnapshotIdentifier, string DBClusterIdentifier, string[] Tags, GET_CreateDBClusterSnapshotAction Action, GET_CreateDBClusterSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBClusterSnapshot?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB instance.</p> <p>The new DB instance can be an RDS DB instance, or it can be a DB instance in an Aurora DB cluster. For an Aurora DB cluster, you can call this operation multiple times to add more than one DB instance to the cluster.</p> <p>For more information about creating an RDS DB instance, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CreateDBInstance.html"> Creating an Amazon RDS DB instance</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about creating a DB instance in an Aurora DB cluster, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.CreateInstance.html"> Creating an Amazon Aurora DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_CreateDBInstance #Action=CreateDBInstance
		/// </summary>
		/// <param name="DBName"><p>The meaning of this parameter differs according to the database engine you use.</p> <p> <b>MySQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>MariaDB</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 letters or numbers.</p> </li> <li> <p>Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter isn't specified, a database named <code>postgres</code> is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 63 letters, numbers, or underscores.</p> </li> <li> <p>Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Can't be a word reserved by the specified database engine</p> </li> </ul> <p> <b>Oracle</b> </p> <p>The Oracle System ID (SID) of the created DB instance. If you don't specify a value, the default value is <code>ORCL</code>. You can't specify the string <code>null</code>, or any other reserved word, for <code>DBName</code>.</p> <p>Default: <code>ORCL</code> </p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 8 characters</p> </li> </ul> <p> <b>Amazon RDS Custom for Oracle</b> </p> <p>The Oracle System ID (SID) of the created RDS Custom DB instance. If you don't specify a value, the default value is <code>ORCL</code> for non-CDBs and <code>RDSCDB</code> for CDBs.</p> <p>Default: <code>ORCL</code> </p> <p>Constraints:</p> <ul> <li> <p>It must contain 1 to 8 alphanumeric characters.</p> </li> <li> <p>It must contain a letter.</p> </li> <li> <p>It can't be a word reserved by the database engine.</p> </li> </ul> <p> <b>Amazon RDS Custom for SQL Server</b> </p> <p>Not applicable. Must be null.</p> <p> <b>SQL Server</b> </p> <p>Not applicable. Must be null.</p> <p> <b>Amazon Aurora MySQL</b> </p> <p>The name of the database to create when the primary DB instance of the Aurora MySQL DB cluster is created. If this parameter isn't specified for an Aurora MySQL DB cluster, no database is created in the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>It must contain 1 to 64 alphanumeric characters.</p> </li> <li> <p>It can't be a word reserved by the database engine.</p> </li> </ul> <p> <b>Amazon Aurora PostgreSQL</b> </p> <p>The name of the database to create when the primary DB instance of the Aurora PostgreSQL DB cluster is created. If this parameter isn't specified for an Aurora PostgreSQL DB cluster, a database named <code>postgres</code> is created in the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>It must contain 1 to 63 alphanumeric characters.</p> </li> <li> <p>It must begin with a letter. Subsequent characters can be letters, underscores, or digits (0 to 9).</p> </li> <li> <p>It can't be a word reserved by the database engine.</p> </li> </ul></param>
		/// <param name="DBInstanceIdentifier"><p>The identifier for this DB instance. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage in gibibytes (GiB) to allocate for the DB instance.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume.</p> <dl> <dt>Amazon RDS Custom</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 40 to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 40 to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.</p> </li> </ul> </dd> <dt>RDS for MariaDB</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> </dd> <dt>RDS for MySQL</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> </dd> <dt>RDS for Oracle</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 10 to 3072.</p> </li> </ul> </dd> <dt>RDS for PostgreSQL</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20 to 65536.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> </dd> <dt>RDS for SQL Server</dt> <dd> <p>Constraints to the amount of storage for each storage type are the following:</p> <ul> <li> <p>General Purpose (SSD) storage (gp2, gp3):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 20 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 16384.</p> </li> </ul> </li> <li> <p>Provisioned IOPS storage (io1):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 100 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 100 to 16384.</p> </li> </ul> </li> <li> <p>Magnetic storage (standard):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 20 to 1024.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 1024.</p> </li> </ul> </li> </ul> </dd> </dl></param>
		/// <param name="DBInstanceClass">The compute and memory capacity of the DB instance, for example <code>db.m5.large</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance classes</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">Aurora DB instance classes</a> in the <i>Amazon Aurora User Guide</i>.</param>
		/// <param name="Engine"><p>The database engine to use for this DB instance.</p> <p>Not every database engine is available in every Amazon Web Services Region.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql</code> (for Aurora MySQL DB instances)</p> </li> <li> <p> <code>aurora-postgresql</code> (for Aurora PostgreSQL DB instances)</p> </li> <li> <p> <code>custom-oracle-ee</code> (for RDS Custom for Oracle DB instances)</p> </li> <li> <p> <code>custom-oracle-ee-cdb</code> (for RDS Custom for Oracle DB instances)</p> </li> <li> <p> <code>custom-sqlserver-ee</code> (for RDS Custom for SQL Server DB instances)</p> </li> <li> <p> <code>custom-sqlserver-se</code> (for RDS Custom for SQL Server DB instances)</p> </li> <li> <p> <code>custom-sqlserver-web</code> (for RDS Custom for SQL Server DB instances)</p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="MasterUsername"><p>The name for the master user.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The name for the master user is managed by the DB cluster.</p> <p>This setting is required for RDS DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters, numbers, or underscores.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master user.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The password for the master user is managed by the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> <li> <p>Can include any printable ASCII character except "/", """, or "@".</p> </li> </ul> <p>Length Constraints:</p> <ul> <li> <p>RDS for MariaDB - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.</p> </li> <li> <p>RDS for MySQL - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Oracle - Must contain from 8 to 30 characters.</p> </li> <li> <p>RDS for PostgreSQL - Must contain from 8 to 128 characters.</p> </li> </ul></param>
		/// <param name="DBSecurityGroups"><p>A list of DB security groups to associate with this DB instance.</p> <p>This setting applies to the legacy EC2-Classic platform, which is no longer used to create new DB instances. Use the <code>VpcSecurityGroupIds</code> setting instead.</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of Amazon EC2 VPC security groups to associate with this DB instance.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The associated list of EC2 VPC security groups is managed by the DB cluster.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the database will be created. For information on Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a>.</p> <p>For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in three separate Availability Zones. Specify one of these Availability Zones. Aurora automatically chooses an appropriate Availability Zone if you don't specify one.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p> <p>Constraints:</p> <ul> <li> <p>The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment.</p> </li> <li> <p>The specified Availability Zone must be in the same Amazon Web Services Region as the current endpoint.</p> </li> </ul> <p>Example: <code>us-east-1d</code> </p></param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with this DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB subnet group.</p> </li> <li> <p>Must not be <code>default</code>.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="PreferredMaintenanceWindow"><p>The time range each week during which system maintenance can occur. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>The day values must be <code>mon | tue | wed | thu | fri | sat | sun</code>. </p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance. If you don't specify a value, then Amazon RDS uses the default DB parameter group for the specified DB engine and version.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to <code>0</code> disables automated backups.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The retention period for automated backups is managed by the DB cluster.</p> <p>Default: <code>1</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> <li> <p>Can't be set to 0 for an RDS Custom for Oracle DB instance.</p> </li> </ul></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The daily time range for creating automated backups is managed by the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p>This setting doesn't apply to Aurora DB instances. The port number is managed by the cluster.</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default:</p> <ul> <li> <p>RDS for MariaDB - <code>3306</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>1433</code> </p> </li> <li> <p>RDS for MySQL - <code>3306</code> </p> </li> <li> <p>RDS for Oracle - <code>1521</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>5432</code> </p> </li> </ul> <p>Constraints:</p> <ul> <li> <p>For RDS for Microsoft SQL Server, the value can't be <code>1234</code>, <code>1434</code>, <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, or <code>49152-49156</code>.</p> </li> </ul></param>
		/// <param name="MultiAZ"><p>Specifies whether the DB instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (DB instance Availability Zones (AZs) are managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The version number of the database engine the DB instance uses is managed by the DB cluster.</p> <p>For a list of valid engine versions, use the <code>DescribeDBEngineVersions</code> operation.</p> <p>The following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every Amazon Web Services Region.</p> <dl> <dt>Amazon RDS Custom for Oracle</dt> <dd> <p>A custom engine version (CEV) that you have previously created. This setting is required for RDS Custom for Oracle. The CEV name has the following format: 19.<i>customized_string</i>. A valid CEV name is <code>19.my_cev1</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-creating.html#custom-creating.create"> Creating an RDS Custom for Oracle DB instance</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>Amazon RDS Custom for SQL Server</dt> <dd> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html">RDS Custom for SQL Server general requirements</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for MariaDB</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt">MariaDB on Amazon RDS versions</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for Microsoft SQL Server</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport">Microsoft SQL Server versions on Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for MySQL</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">MySQL on Amazon RDS versions</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for Oracle</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html">Oracle Database Engine release notes</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> <dt>RDS for PostgreSQL</dt> <dd> <p>For information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL versions and extensions</a> in the <i>Amazon RDS User Guide</i>.</p> </dd> </dl></param>
		/// <param name="AutoMinorVersionUpgrade"><p>Specifies whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.</p> <p>If you create an RDS Custom DB instance, you must set <code>AutoMinorVersionUpgrade</code> to <code>false</code>.</p></param>
		/// <param name="LicenseModel"><p>The license model information for this DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p>RDS for MariaDB - <code>general-public-license</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>license-included</code> </p> </li> <li> <p>RDS for MySQL - <code>general-public-license</code> </p> </li> <li> <p>RDS for Oracle - <code>bring-your-own-license | license-included</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql-license</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to initially allocate for the DB instance. For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html">Amazon RDS DB instance storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Storage is managed by the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>For RDS for MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> </li> <li> <p>For RDS for SQL Server - Must be a multiple between 1 and 50 of the storage amount for the DB instance.</p> </li> </ul></param>
		/// <param name="OptionGroupName"><p>The option group to associate the DB instance with.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group can't be removed from a DB instance after it is associated with a DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p></param>
		/// <param name="CharacterSetName"><p>For supported engines, the character set (<code>CharacterSet</code>) to associate the DB instance with.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora - The character set is managed by the DB cluster. For more information, see <code>CreateDBCluster</code>.</p> </li> <li> <p>RDS Custom - However, if you need to change the character set, you can change it on the database itself.</p> </li> </ul></param>
		/// <param name="NcharCharacterSetName"><p>The name of the NCHAR character set for the Oracle DB instance.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="PubliclyAccessible"><p>Specifies whether the DB instance is publicly accessible.</p> <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB instance is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB instance is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB instance is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB instance is public.</p> </li> </ul></param>
		/// <param name="Tags">Tags to assign to the DB instance.</param>
		/// <param name="DBClusterIdentifier"><p>The identifier of the DB cluster that this DB instance will belong to.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="StorageType"><p>The storage type to associate with the DB instance.</p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Storage is managed by the DB cluster.</p> <p>Valid Values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>Default: <code>io1</code>, if the <code>Iops</code> parameter is specified. Otherwise, <code>gp2</code>.</p></param>
		/// <param name="TdeCredentialArn"><p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p></param>
		/// <param name="TdeCredentialPassword"><p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="StorageEncrypted"><p>Specifes whether the DB instance is encrypted. By default, it isn't encrypted.</p> <p>For RDS Custom DB instances, either enable this setting or leave it unset. Otherwise, Amazon RDS reports an error.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The encryption for DB instances is managed by the DB cluster.</p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The Amazon Web Services KMS key identifier is managed by the DB cluster. For more information, see <code>CreateDBCluster</code>.</p> <p>If <code>StorageEncrypted</code> is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>For Amazon RDS Custom, a KMS key is required for DB instances. For most RDS engines, if you leave this parameter empty while enabling <code>StorageEncrypted</code>, the engine uses the default KMS key. However, RDS Custom doesn't use the default key when this parameter is empty. You must explicitly specify a key.</p></param>
		/// <param name="Domain"><p>The Active Directory directory ID to create the DB instance in. Currently, only Microsoft SQL Server, MySQL, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The domain is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul></param>
		/// <param name="DomainFqdn"><p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p></param>
		/// <param name="DomainOu"><p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p></param>
		/// <param name="DomainAuthSecretArn"><p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p></param>
		/// <param name="DomainDnsIps"><p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p></param>
		/// <param name="CopyTagsToSnapshot"><p>Specifies whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting.</p></param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, then you must supply a <code>MonitoringRoleArn</code> value.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The domain is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul></param>
		/// <param name="PromotionTier"><p>The order of priority in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance"> Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Default: <code>1</code> </p> <p>Valid Values: <code>0 - 15</code> </p></param>
		/// <param name="Timezone">The time zone of the DB instance. The time zone parameter is currently supported only by <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone">Microsoft SQL Server</a>.</param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (Mapping Amazon Web Services IAM accounts to database accounts is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul></param>
		/// <param name="EnablePerformanceInsights"><p>Specifies whether to enable Performance Insights for the DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod"><p>The number of days to retain Performance Insights data.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS returns an error.</p></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of log types that need to be enabled for exporting to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch"> Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (CloudWatch Logs exports are managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul> <p>The following values are valid for each DB engine:</p> <ul> <li> <p>RDS for MariaDB - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>agent | error</code> </p> </li> <li> <p>RDS for MySQL - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>RDS for Oracle - <code>alert | audit | listener | trace | oemagent</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li> </ul></param>
		/// <param name="ProcessorFeatures"><p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p></param>
		/// <param name="DeletionProtection"><p>Specifies whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. You can enable or disable deletion protection for the DB cluster. For more information, see <code>CreateDBCluster</code>. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster.</p></param>
		/// <param name="MaxAllocatedStorage"><p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (Storage is managed by the DB cluster.)</p> </li> <li> <p>RDS Custom</p> </li> </ul></param>
		/// <param name="EnableCustomerOwnedIp"><p>Specifies whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p></param>
		/// <param name="CustomIamInstanceProfile"><p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.</p> <p>This setting is required for RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="BackupTarget"><p>The location for storing automated backups and manual snapshots.</p> <p>Valie Values:</p> <ul> <li> <p> <code>outposts</code> (Amazon Web Services Outposts)</p> </li> <li> <p> <code>region</code> (Amazon Web Services Region)</p> </li> </ul> <p>Default: <code>region</code> </p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB instance.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Values: <code>IPV4 | DUAL</code> </p></param>
		/// <param name="StorageThroughput"><p>The storage throughput value for the DB instance.</p> <p>This setting applies only to the <code>gp3</code> storage type.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p></param>
		/// <param name="ManageMasterUserPassword"><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul></param>
		/// <param name="MasterUserSecretKmsKeyId"><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <param name="CACertificateIdentifier"><p>The CA certificate identifier to use for the DB instance's server certificate.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="DBSystemId">The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files. In this context, the term "Oracle database instance" refers exclusively to the system global area (SGA) and Oracle background processes. If you don't specify a SID, the value defaults to <code>RDSCDB</code>. The Oracle SID is also the name of your CDB.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBInstanceAsync(
					string DBName, 
					string DBInstanceIdentifier, 
					int AllocatedStorage, 
					string DBInstanceClass, 
					string Engine, 
					string MasterUsername, 
					string MasterUserPassword, 
					string[] DBSecurityGroups, 
					string[] VpcSecurityGroupIds, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					string PreferredMaintenanceWindow, 
					string DBParameterGroupName, 
					int BackupRetentionPeriod, 
					string PreferredBackupWindow, 
					int Port, 
					bool MultiAZ, 
					string EngineVersion, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					int Iops, 
					string OptionGroupName, 
					string CharacterSetName, 
					string NcharCharacterSetName, 
					bool PubliclyAccessible, 
					string[] Tags, 
					string DBClusterIdentifier, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					string Domain, 
					string DomainFqdn, 
					string DomainOu, 
					string DomainAuthSecretArn, 
					string[] DomainDnsIps, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					string DomainIAMRoleName, 
					int PromotionTier, 
					string Timezone, 
					bool EnableIAMDatabaseAuthentication, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					string[] EnableCloudwatchLogsExports, 
					string[] ProcessorFeatures, 
					bool DeletionProtection, 
					int MaxAllocatedStorage, 
					bool EnableCustomerOwnedIp, 
					string CustomIamInstanceProfile, 
					string BackupTarget, 
					string NetworkType, 
					int StorageThroughput, 
					bool ManageMasterUserPassword, 
					string MasterUserSecretKmsKeyId, 
					string CACertificateIdentifier, 
					string DBSystemId, 
					GET_CreateDBInstanceAction Action, 
					GET_CreateDBInstanceVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBInstance?DBName=" + (DBName==null? "" : System.Uri.EscapeDataString(DBName))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&MasterUsername=" + (MasterUsername==null? "" : System.Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : System.Uri.EscapeDataString(MasterUserPassword))+"&"+string.Join("&", DBSecurityGroups.Select(z => $"DBSecurityGroups={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&AvailabilityZone=" + (AvailabilityZone==null? "" : System.Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : System.Uri.EscapeDataString(PreferredMaintenanceWindow))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&Port="+Port+"&MultiAZ="+MultiAZ+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : System.Uri.EscapeDataString(LicenseModel))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&CharacterSetName=" + (CharacterSetName==null? "" : System.Uri.EscapeDataString(CharacterSetName))+"&NcharCharacterSetName=" + (NcharCharacterSetName==null? "" : System.Uri.EscapeDataString(NcharCharacterSetName))+"&PubliclyAccessible="+PubliclyAccessible+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : System.Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : System.Uri.EscapeDataString(TdeCredentialPassword))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainFqdn=" + (DomainFqdn==null? "" : System.Uri.EscapeDataString(DomainFqdn))+"&DomainOu=" + (DomainOu==null? "" : System.Uri.EscapeDataString(DomainOu))+"&DomainAuthSecretArn=" + (DomainAuthSecretArn==null? "" : System.Uri.EscapeDataString(DomainAuthSecretArn))+"&"+string.Join("&", DomainDnsIps.Select(z => $"DomainDnsIps={System.Uri.EscapeDataString(z.ToString())}"))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : System.Uri.EscapeDataString(MonitoringRoleArn))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&PromotionTier="+PromotionTier+"&Timezone=" + (Timezone==null? "" : System.Uri.EscapeDataString(Timezone))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : System.Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={System.Uri.EscapeDataString(z.ToString())}"))+"&DeletionProtection="+DeletionProtection+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&EnableCustomerOwnedIp="+EnableCustomerOwnedIp+"&CustomIamInstanceProfile=" + (CustomIamInstanceProfile==null? "" : System.Uri.EscapeDataString(CustomIamInstanceProfile))+"&BackupTarget=" + (BackupTarget==null? "" : System.Uri.EscapeDataString(BackupTarget))+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&StorageThroughput="+StorageThroughput+"&ManageMasterUserPassword="+ManageMasterUserPassword+"&MasterUserSecretKmsKeyId=" + (MasterUserSecretKmsKeyId==null? "" : System.Uri.EscapeDataString(MasterUserSecretKmsKeyId))+"&CACertificateIdentifier=" + (CACertificateIdentifier==null? "" : System.Uri.EscapeDataString(CACertificateIdentifier))+"&DBSystemId=" + (DBSystemId==null? "" : System.Uri.EscapeDataString(DBSystemId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB instance that acts as a read replica for an existing source DB instance or Multi-AZ DB cluster. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. You can create a read replica for a Multi-AZ DB cluster running MySQL or PostgreSQL. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html">Working with read replicas</a> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html#multi-az-db-clusters-migrating-to-instance-with-read-replica">Migrating from a Multi-AZ DB cluster to a DB instance using a read replica</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Amazon Aurora doesn't support this operation. Call the <code>CreateDBInstance</code> operation to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance or cluster, except as specified.</p> <important> <p>Your source DB instance or cluster must have backup retention enabled.</p> </important>
		/// GET_CreateDBInstanceReadReplica #Action=CreateDBInstanceReadReplica
		/// </summary>
		/// <param name="DBInstanceIdentifier">The DB instance identifier of the read replica. This identifier is the unique key that identifies a DB instance. This parameter is stored as a lowercase string.</param>
		/// <param name="SourceDBInstanceIdentifier"><p>The identifier of the DB instance that will act as the source for the read replica. Each DB instance can have up to 15 read replicas, with the exception of Oracle and SQL Server, which can have up to five.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server DB instance.</p> </li> <li> <p>Can't be specified if the <code>SourceDBClusterIdentifier</code> parameter is also specified.</p> </li> <li> <p>For the limitations of Oracle read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.limitations.html#oracle-read-replicas.limitations.versions-and-licenses">Version and licensing considerations for RDS for Oracle replicas</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>For the limitations of SQL Server read replicas, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.html#SQLServer.ReadReplicas.Limitations">Read replica limitations with SQL Server</a> in the <i>Amazon RDS User Guide</i>.</p> </li> <li> <p>The specified DB instance must have automatic backups enabled, that is, its backup retention period must be greater than 0.</p> </li> <li> <p>If the source DB instance is in the same Amazon Web Services Region as the read replica, specify a valid DB instance identifier.</p> </li> <li> <p>If the source DB instance is in a different Amazon Web Services Region from the read replica, specify a valid DB instance ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing">Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>. This doesn't apply to SQL Server or RDS Custom, which don't support cross-Region replicas.</p> </li> </ul></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the read replica, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Default: Inherits from the source DB instance.</p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the read replica will be created.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p> <p>Example: <code>us-east-1d</code> </p></param>
		/// <param name="Port"><p>The port number that the DB instance uses for connections.</p> <p>Default: Inherits from the source DB instance</p> <p>Valid Values: <code>1150-65535</code> </p></param>
		/// <param name="MultiAZ"><p>A value that indicates whether the read replica is in a Multi-AZ deployment.</p> <p>You can create a read replica as a Multi-AZ DB instance. RDS creates a standby of your replica in another Availability Zone for failover support for the replica. Creating your read replica as a Multi-AZ DB instance is independent of whether the source is a Multi-AZ DB instance or a Multi-AZ DB cluster.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="AutoMinorVersionUpgrade"><p>A value that indicates whether minor engine upgrades are applied automatically to the read replica during the maintenance window.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: Inherits from the source DB instance</p></param>
		/// <param name="Iops">The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</param>
		/// <param name="OptionGroupName"><p>The option group the DB instance is associated with. If omitted, the option group associated with the source instance or cluster is used.</p> <note> <p>For SQL Server, you must use the option group associated with the source.</p> </note> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then Amazon RDS uses the <code>DBParameterGroup</code> of source DB instance for a same Region read replica, or the default <code>DBParameterGroup</code> for the specified DB engine for a cross-Region read replica.</p> <p>Specifying a parameter group for this operation is only supported for MySQL and Oracle DB instances. It isn't supported for RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p></param>
		/// <param name="DBSubnetGroupName"><p>Specifies a DB subnet group for the DB instance. The new DB instance is created in the VPC associated with the DB subnet group. If no DB subnet group is specified, then the new DB instance isn't created in a VPC.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBSubnetGroup.</p> </li> <li> <p>The specified DB subnet group must be in the same Amazon Web Services Region in which the operation is running.</p> </li> <li> <p>All read replicas in one Amazon Web Services Region that are created from the same source DB instance must either:&gt;</p> <ul> <li> <p>Specify DB subnet groups from the same VPC. All these read replicas are created in the same VPC.</p> </li> <li> <p>Not specify a DB subnet group. All these read replicas are created outside of any VPC.</p> </li> </ul> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of Amazon EC2 VPC security groups to associate with the read replica.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the read replica.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the read replica to snapshots of the read replica. By default, tags are not copied.</param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the read replica. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted read replica.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you create an encrypted read replica in the same Amazon Web Services Region as the source DB instance or Multi-AZ DB cluster, don't specify a value for this parameter. A read replica in the same Amazon Web Services Region is always encrypted with the same KMS key as the source DB instance or cluster.</p> <p>If you create an encrypted read replica in a different Amazon Web Services Region, then you must specify a KMS key identifier for the destination Amazon Web Services Region. KMS keys are specific to the Amazon Web Services Region that they are created in, and you can't use KMS keys from one Amazon Web Services Region in another Amazon Web Services Region.</p> <p>You can't create an encrypted read replica from an unencrypted DB instance or Multi-AZ DB cluster.</p> <p>This setting doesn't apply to RDS Custom, which uses the same KMS key as the primary replica.</p></param>
		/// <param name="PreSignedUrl"><p>When you are creating a read replica from one Amazon Web Services GovCloud (US) Region to another or from one China Amazon Web Services Region to another, the URL that contains a Signature Version 4 signed request for the <code>CreateDBInstanceReadReplica</code> API operation in the source Amazon Web Services Region that contains the source DB instance.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions and China Amazon Web Services Regions. It's ignored in other Amazon Web Services Regions.</p> <p>This setting applies only when replicating from a source DB <i>instance</i>. Source DB clusters aren't supported in Amazon Web Services GovCloud (US) Regions and China Amazon Web Services Regions.</p> <p>You must specify this parameter when you create an encrypted read replica from another Amazon Web Services Region by using the Amazon RDS API. Don't specify <code>PreSignedUrl</code> when you are creating an encrypted read replica in the same Amazon Web Services Region.</p> <p>The presigned URL must be a valid request for the <code>CreateDBInstanceReadReplica</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted source DB instance. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>DestinationRegion</code> - The Amazon Web Services Region that the encrypted read replica is created in. This Amazon Web Services Region is the same one where the <code>CreateDBInstanceReadReplica</code> operation is called that contains this presigned URL.</p> <p>For example, if you create an encrypted DB instance in the us-west-1 Amazon Web Services Region, from a source DB instance in the us-east-2 Amazon Web Services Region, then you call the <code>CreateDBInstanceReadReplica</code> operation in the us-east-1 Amazon Web Services Region and provide a presigned URL that contains a call to the <code>CreateDBInstanceReadReplica</code> operation in the us-west-2 Amazon Web Services Region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 Amazon Web Services Region.</p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the read replica in the destination Amazon Web Services Region. This is the same identifier for both the <code>CreateDBInstanceReadReplica</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li> <li> <p> <code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted DB instance to be replicated. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are creating an encrypted read replica from a DB instance in the us-west-2 Amazon Web Services Region, then your <code>SourceDBInstanceIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> <p> <code>SourceRegion</code> isn't supported for SQL Server, because Amazon RDS for SQL Server doesn't support cross-Region read replicas.</p> </note> <p>This setting doesn't apply to RDS Custom.</p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="EnablePerformanceInsights"><p>A value that indicates whether to enable Performance Insights for the read replica.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod"><p>The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:</p> <ul> <li> <p>7</p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23</p> </li> <li> <p>731</p> </li> </ul> <p>For example, the following values are valid:</p> <ul> <li> <p>93 (3 months * 31)</p> </li> <li> <p>341 (11 months * 31)</p> </li> <li> <p>589 (19 months * 31)</p> </li> <li> <p>731</p> </li> </ul> <p>If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of logs that the new DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="ProcessorFeatures"><p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="UseDefaultProcessorFeatures"><p>A value that indicates whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</param>
		/// <param name="Domain"><p>The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to be used when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DomainFqdn"><p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p></param>
		/// <param name="DomainOu"><p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p></param>
		/// <param name="DomainAuthSecretArn"><p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p></param>
		/// <param name="DomainDnsIps"><p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p></param>
		/// <param name="ReplicaMode"><p>The open mode of the replica database: mounted or read-only.</p> <note> <p>This parameter is only supported for Oracle DB instances.</p> </note> <p>Mounted DB replicas are included in Oracle Database Enterprise Edition. The main use case for mounted replicas is cross-Region disaster recovery. The primary database doesn't use Active Data Guard to transmit information to the mounted replica. Because it doesn't accept user connections, a mounted replica can't serve a read-only workload.</p> <p>You can create a combination of mounted and read-only DB replicas for the same primary DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html">Working with Oracle Read Replicas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For RDS Custom, you must specify this parameter and set it to <code>mounted</code>. The value won't be set by default. After replica creation, you can manage the open mode manually.</p></param>
		/// <param name="MaxAllocatedStorage"><p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="CustomIamInstanceProfile"><p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required for RDS Custom.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for read replica. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="StorageThroughput"><p>Specifies the storage throughput value for the read replica.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p></param>
		/// <param name="EnableCustomerOwnedIp"><p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts read replica.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the read replica from outside of its virtual private cloud (VPC) on your local network.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage (in gibibytes) to allocate initially for the read replica. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note> <p>Be sure to allocate enough storage for your read replica so that the create operation can succeed. You can also allocate additional storage for future growth.</p> </note></param>
		/// <param name="SourceDBClusterIdentifier"><p>The identifier of the Multi-AZ DB cluster that will act as the source for the read replica. Each DB cluster can have up to 15 read replicas.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing Multi-AZ DB cluster.</p> </li> <li> <p>Can't be specified if the <code>SourceDBInstanceIdentifier</code> parameter is also specified.</p> </li> <li> <p>The specified DB cluster must have automatic backups enabled, that is, its backup retention period must be greater than 0.</p> </li> <li> <p>The source DB cluster must be in the same Amazon Web Services Region as the read replica. Cross-Region replication isn't supported.</p> </li> </ul></param>
		/// <param name="SourceRegion">The ID of the region that contains the source for the read replica.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBInstanceReadReplicaAsync(
					string DBInstanceIdentifier, 
					string SourceDBInstanceIdentifier, 
					string DBInstanceClass, 
					string AvailabilityZone, 
					int Port, 
					bool MultiAZ, 
					bool AutoMinorVersionUpgrade, 
					int Iops, 
					string OptionGroupName, 
					string DBParameterGroupName, 
					bool PubliclyAccessible, 
					string[] Tags, 
					string DBSubnetGroupName, 
					string[] VpcSecurityGroupIds, 
					string StorageType, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					string KmsKeyId, 
					string PreSignedUrl, 
					bool EnableIAMDatabaseAuthentication, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					string[] EnableCloudwatchLogsExports, 
					string[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					bool DeletionProtection, 
					string Domain, 
					string DomainIAMRoleName, 
					string DomainFqdn, 
					string DomainOu, 
					string DomainAuthSecretArn, 
					string[] DomainDnsIps, 
					GET_CreateDBInstanceReadReplicaReplicaMode ReplicaMode, 
					int MaxAllocatedStorage, 
					string CustomIamInstanceProfile, 
					string NetworkType, 
					int StorageThroughput, 
					bool EnableCustomerOwnedIp, 
					int AllocatedStorage, 
					string SourceDBClusterIdentifier, 
					string SourceRegion, 
					GET_CreateDBInstanceReadReplicaAction Action, 
					GET_CreateDBInstanceReadReplicaVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBInstanceReadReplica?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&SourceDBInstanceIdentifier=" + (SourceDBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBInstanceIdentifier))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&AvailabilityZone=" + (AvailabilityZone==null? "" : System.Uri.EscapeDataString(AvailabilityZone))+"&Port="+Port+"&MultiAZ="+MultiAZ+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&PubliclyAccessible="+PubliclyAccessible+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : System.Uri.EscapeDataString(MonitoringRoleArn))+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : System.Uri.EscapeDataString(PreSignedUrl))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : System.Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={System.Uri.EscapeDataString(z.ToString())}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DeletionProtection="+DeletionProtection+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&DomainFqdn=" + (DomainFqdn==null? "" : System.Uri.EscapeDataString(DomainFqdn))+"&DomainOu=" + (DomainOu==null? "" : System.Uri.EscapeDataString(DomainOu))+"&DomainAuthSecretArn=" + (DomainAuthSecretArn==null? "" : System.Uri.EscapeDataString(DomainAuthSecretArn))+"&"+string.Join("&", DomainDnsIps.Select(z => $"DomainDnsIps={System.Uri.EscapeDataString(z.ToString())}"))+"&ReplicaMode=" + ReplicaMode+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&CustomIamInstanceProfile=" + (CustomIamInstanceProfile==null? "" : System.Uri.EscapeDataString(CustomIamInstanceProfile))+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&StorageThroughput="+StorageThroughput+"&EnableCustomerOwnedIp="+EnableCustomerOwnedIp+"&AllocatedStorage="+AllocatedStorage+"&SourceDBClusterIdentifier=" + (SourceDBClusterIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBClusterIdentifier))+"&SourceRegion=" + (SourceRegion==null? "" : System.Uri.EscapeDataString(SourceRegion))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB parameter group.</p> <p>A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBParameterGroup</code>. Once you've created a DB parameter group, you need to associate it with your DB instance using <code>ModifyDBInstance</code>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect.</p> <p>This command doesn't apply to RDS Custom.</p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>
		/// GET_CreateDBParameterGroup #Action=CreateDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note></param>
		/// <param name="DBParameterGroupFamily"><p>The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.</p> <p>To list all of the available parameter group families for a DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine &lt;engine&gt;</code> </p> <p>For example, to list all of the available parameter group families for the MySQL DB engine, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine mysql</code> </p> <note> <p>The output contains duplicates.</p> </note> <p>The following are the valid DB engine values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="Description">The description for the DB parameter group.</param>
		/// <param name="Tags">Tags to assign to the DB parameter group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBParameterGroupAsync(string DBParameterGroupName, string DBParameterGroupFamily, string Description, string[] Tags, GET_CreateDBParameterGroupAction Action, GET_CreateDBParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : System.Uri.EscapeDataString(DBParameterGroupFamily))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new DB proxy.
		/// GET_CreateDBProxy #Action=CreateDBProxy
		/// </summary>
		/// <param name="DBProxyName">The identifier for the proxy. This name must be unique for all proxies owned by your Amazon Web Services account in the specified Amazon Web Services Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</param>
		/// <param name="EngineFamily">The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify <code>MYSQL</code>. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify <code>POSTGRESQL</code>. For RDS for Microsoft SQL Server, specify <code>SQLSERVER</code>.</param>
		/// <param name="Auth">The authorization mechanism that the proxy uses.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager.</param>
		/// <param name="VpcSubnetIds">One or more VPC subnet IDs to associate with the new proxy.</param>
		/// <param name="VpcSecurityGroupIds">One or more VPC security group IDs to associate with the new proxy.</param>
		/// <param name="RequireTLS">A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.</param>
		/// <param name="IdleClientTimeout">The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.</param>
		/// <param name="DebugLogging">Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.</param>
		/// <param name="Tags">An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBProxyAsync(string DBProxyName, EngineFamily EngineFamily, UserAuthConfig[] Auth, string RoleArn, string[] VpcSubnetIds, string[] VpcSecurityGroupIds, bool RequireTLS, int IdleClientTimeout, bool DebugLogging, string[] Tags, GET_CreateDBProxyAction Action, GET_CreateDBProxyVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBProxy?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&EngineFamily=" + EngineFamily+"&"+string.Join("&", Auth.Select(z => $"Auth={z}"))+"&RoleArn=" + (RoleArn==null? "" : System.Uri.EscapeDataString(RoleArn))+"&"+string.Join("&", VpcSubnetIds.Select(z => $"VpcSubnetIds={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&RequireTLS="+RequireTLS+"&IdleClientTimeout="+IdleClientTimeout+"&DebugLogging="+DebugLogging+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a <code>DBProxyEndpoint</code>. Only applies to proxies that are associated with Aurora DB clusters. You can use DB proxy endpoints to specify read/write or read-only access to the DB cluster. You can also use DB proxy endpoints to access a DB proxy through a different VPC than the proxy's default VPC.
		/// GET_CreateDBProxyEndpoint #Action=CreateDBProxyEndpoint
		/// </summary>
		/// <param name="DBProxyName">The name of the DB proxy associated with the DB proxy endpoint that you create.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="DBProxyEndpointName">The name of the DB proxy endpoint to create.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="VpcSubnetIds">The VPC subnet IDs for the DB proxy endpoint that you create. You can specify a different set of subnet IDs than for the original DB proxy.</param>
		/// <param name="VpcSecurityGroupIds">The VPC security group IDs for the DB proxy endpoint that you create. You can specify a different set of security group IDs than for the original DB proxy. The default is the default security group for the VPC.</param>
		/// <param name="TargetRole">A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is <code>READ_WRITE</code>. The only role that proxies for RDS for Microsoft SQL Server support is <code>READ_WRITE</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBProxyEndpointAsync(string DBProxyName, string DBProxyEndpointName, string[] VpcSubnetIds, string[] VpcSecurityGroupIds, DBProxyEndpointTargetRole TargetRole, string[] Tags, GET_CreateDBProxyEndpointAction Action, GET_CreateDBProxyEndpointVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBProxyEndpoint?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&DBProxyEndpointName=" + (DBProxyEndpointName==null? "" : System.Uri.EscapeDataString(DBProxyEndpointName))+"&"+string.Join("&", VpcSubnetIds.Select(z => $"VpcSubnetIds={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&TargetRole=" + TargetRole+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		/// GET_CreateDBSecurityGroup #Action=CreateDBSecurityGroup
		/// </summary>
		/// <param name="DBSecurityGroupName"><p>The name for the DB security group. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be "Default"</p> </li> </ul> <p>Example: <code>mysecuritygroup</code> </p></param>
		/// <param name="DBSecurityGroupDescription">The description for the DB security group.</param>
		/// <param name="Tags">Tags to assign to the DB security group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBSecurityGroupAsync(string DBSecurityGroupName, string DBSecurityGroupDescription, string[] Tags, GET_CreateDBSecurityGroupAction Action, GET_CreateDBSecurityGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBSecurityGroup?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : System.Uri.EscapeDataString(DBSecurityGroupName))+"&DBSecurityGroupDescription=" + (DBSecurityGroupDescription==null? "" : System.Uri.EscapeDataString(DBSecurityGroupDescription))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a snapshot of a DB instance. The source DB instance must be in the <code>available</code> or <code>storage-optimization</code> state.
		/// GET_CreateDBSnapshot #Action=CreateDBSnapshot
		/// </summary>
		/// <param name="DBSnapshotIdentifier"><p>The identifier for the DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Can't be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p></param>
		/// <param name="DBInstanceIdentifier"><p>The identifier of the DB instance that you want to create the snapshot of.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBSnapshotAsync(string DBSnapshotIdentifier, string DBInstanceIdentifier, string[] Tags, GET_CreateDBSnapshotAction Action, GET_CreateDBSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBSnapshot?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.
		/// GET_CreateDBSubnetGroup #Action=CreateDBSubnetGroup
		/// </summary>
		/// <param name="DBSubnetGroupName"><p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens.</p> </li> <li> <p>Must not be default.</p> </li> <li> <p>First character must be a letter.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="DBSubnetGroupDescription">The description for the DB subnet group.</param>
		/// <param name="SubnetIds">The EC2 Subnet IDs for the DB subnet group.</param>
		/// <param name="Tags">Tags to assign to the DB subnet group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateDBSubnetGroupAsync(string DBSubnetGroupName, string DBSubnetGroupDescription, string[] SubnetIds, string[] Tags, GET_CreateDBSubnetGroupAction Action, GET_CreateDBSubnetGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateDBSubnetGroup?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&DBSubnetGroupDescription=" + (DBSubnetGroupDescription==null? "" : System.Uri.EscapeDataString(DBSubnetGroupDescription))+"&"+string.Join("&", SubnetIds.Select(z => $"SubnetIds={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an RDS event notification subscription. This operation requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (<code>SourceType</code>) that you want to be notified of and provide a list of RDS sources (<code>SourceIds</code>) that triggers the events. You can also provide a list of event categories (<code>EventCategories</code>) for events that you want to be notified of. For example, you can specify <code>SourceType</code> = <code>db-instance</code>, <code>SourceIds</code> = <code>mydbinstance1</code>, <code>mydbinstance2</code> and <code>EventCategories</code> = <code>Availability</code>, <code>Backup</code>.</p> <p>If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType</code> = <code>db-instance</code> and <code>SourceIds</code> = <code>myDBInstance1</code>, you are notified of all the <code>db-instance</code> events for the specified source. If you specify a <code>SourceType</code> but do not specify <code>SourceIds</code>, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the <code>SourceIds</code>, you are notified of events generated from all RDS sources belonging to your customer account.</p> <p>For more information about subscribing to an event for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Subscribing.html"> Subscribing to Amazon RDS event notification</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about subscribing to an event for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Subscribing.html"> Subscribing to Amazon RDS event notification</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_CreateEventSubscription #Action=CreateEventSubscription
		/// </summary>
		/// <param name="SubscriptionName"><p>The name of the subscription.</p> <p>Constraints: The name must be less than 255 characters.</p></param>
		/// <param name="SnsTopicArn">The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.</param>
		/// <param name="SourceType"><p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you set this parameter to <code>db-instance</code>. For RDS Proxy events, specify <code>db-proxy</code>. If this value isn't specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> | <code>db-proxy</code> </p></param>
		/// <param name="EventCategories">A list of event categories for a particular source type (<code>SourceType</code>) that you want to subscribe to. You can see a list of the categories for a given source type in the "Amazon RDS event categories and event messages" section of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Messages.html"> <i>Amazon RDS User Guide</i> </a> or the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Messages.html"> <i>Amazon Aurora User Guide</i> </a>. You can also see this list by using the <code>DescribeEventCategories</code> operation.</param>
		/// <param name="SourceIds"><p>The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can't end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If <code>SourceIds</code> are supplied, <code>SourceType</code> must also be provided.</p> </li> <li> <p>If the source type is a DB instance, a <code>DBInstanceIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster, a <code>DBClusterIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster snapshot, a <code>DBClusterSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is an RDS Proxy, a <code>DBProxyName</code> value must be supplied.</p> </li> </ul></param>
		/// <param name="Enabled">A value that indicates whether to activate the subscription. If the event notification subscription isn't activated, the subscription is created but not active.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateEventSubscriptionAsync(string SubscriptionName, string SnsTopicArn, string SourceType, string[] EventCategories, string[] SourceIds, bool Enabled, string[] Tags, GET_CreateEventSubscriptionAction Action, GET_CreateEventSubscriptionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateEventSubscription?SubscriptionName=" + (SubscriptionName==null? "" : System.Uri.EscapeDataString(SubscriptionName))+"&SnsTopicArn=" + (SnsTopicArn==null? "" : System.Uri.EscapeDataString(SnsTopicArn))+"&SourceType=" + (SourceType==null? "" : System.Uri.EscapeDataString(SourceType))+"&"+string.Join("&", EventCategories.Select(z => $"EventCategories={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", SourceIds.Select(z => $"SourceIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Enabled="+Enabled+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Aurora global database spread across multiple Amazon Web Services Regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem.</p> <p>You can create a global database that is initially empty, and then create the primary and secondary DB clusters in the global database. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database.</p> <note> <p>This operation applies only to Aurora DB clusters.</p> </note>
		/// GET_CreateGlobalCluster #Action=CreateGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier">The cluster identifier for this global database cluster. This parameter is stored as a lowercase string.</param>
		/// <param name="SourceDBClusterIdentifier"><p>The Amazon Resource Name (ARN) to use as the primary cluster of the global database.</p> <p>If you provide a value for this parameter, don't specify values for the following settings because Amazon Aurora uses the values from the specified source DB cluster:</p> <ul> <li> <p> <code>DatabaseName</code> </p> </li> <li> <p> <code>Engine</code> </p> </li> <li> <p> <code>EngineVersion</code> </p> </li> <li> <p> <code>StorageEncrypted</code> </p> </li> </ul></param>
		/// <param name="Engine"><p>The database engine to use for this global database cluster.</p> <p>Valid Values: <code>aurora-mysql | aurora-postgresql</code> </p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the engine of the source DB cluster.</p> </li> </ul></param>
		/// <param name="EngineVersion"><p>The engine version to use for this global database cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the engine version of the source DB cluster.</p> </li> </ul></param>
		/// <param name="DeletionProtection">Specifies whether to enable deletion protection for the new global database cluster. The global database can't be deleted when deletion protection is enabled.</param>
		/// <param name="DatabaseName"><p>The name for your database of up to 64 alphanumeric characters. If you don't specify a name, Amazon Aurora doesn't create a database in the global database cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the database name from the source DB cluster.</p> </li> </ul></param>
		/// <param name="StorageEncrypted"><p>Specifies whether to enable storage encryption for the new global database cluster.</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the setting from the source DB cluster.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_CreateGlobalClusterAsync(string GlobalClusterIdentifier, string SourceDBClusterIdentifier, string Engine, string EngineVersion, bool DeletionProtection, string DatabaseName, bool StorageEncrypted, GET_CreateGlobalClusterAction Action, GET_CreateGlobalClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&SourceDBClusterIdentifier=" + (SourceDBClusterIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBClusterIdentifier))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&DeletionProtection="+DeletionProtection+"&DatabaseName=" + (DatabaseName==null? "" : System.Uri.EscapeDataString(DatabaseName))+"&StorageEncrypted="+StorageEncrypted+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new option group. You can create up to 20 option groups.</p> <p>This command doesn't apply to RDS Custom.</p>
		/// GET_CreateOptionGroup #Action=CreateOptionGroup
		/// </summary>
		/// <param name="OptionGroupName"><p>Specifies the name of the option group to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>myoptiongroup</code> </p></param>
		/// <param name="EngineName"><p>Specifies the name of the engine that this option group should be associated with.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="MajorEngineVersion">Specifies the major version of the engine that this option group should be associated with.</param>
		/// <param name="OptionGroupDescription">The description of the option group.</param>
		/// <param name="Tags">Tags to assign to the option group.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateOptionGroupAsync(string OptionGroupName, string EngineName, string MajorEngineVersion, string OptionGroupDescription, string[] Tags, GET_CreateOptionGroupAction Action, GET_CreateOptionGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateOptionGroup?OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&EngineName=" + (EngineName==null? "" : System.Uri.EscapeDataString(EngineName))+"&MajorEngineVersion=" + (MajorEngineVersion==null? "" : System.Uri.EscapeDataString(MajorEngineVersion))+"&OptionGroupDescription=" + (OptionGroupDescription==null? "" : System.Uri.EscapeDataString(OptionGroupDescription))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a blue/green deployment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_DeleteBlueGreenDeployment #Action=DeleteBlueGreenDeployment
		/// </summary>
		/// <param name="BlueGreenDeploymentIdentifier"><p>The unique identifier of the blue/green deployment to delete. This parameter isn't case-sensitive.</p> <p>Constraints: </p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="DeleteTarget">Specifies whether to delete the resources in the green environment. You can't specify this option if the blue/green deployment <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_BlueGreenDeployment.html">status</a> is <code>SWITCHOVER_COMPLETED</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteBlueGreenDeploymentAsync(string BlueGreenDeploymentIdentifier, bool DeleteTarget, GET_DeleteBlueGreenDeploymentAction Action, GET_DeleteBlueGreenDeploymentVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteBlueGreenDeployment?BlueGreenDeploymentIdentifier=" + (BlueGreenDeploymentIdentifier==null? "" : System.Uri.EscapeDataString(BlueGreenDeploymentIdentifier))+"&DeleteTarget="+DeleteTarget+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a custom engine version. To run this command, make sure you meet the following prerequisites:</p> <ul> <li> <p>The CEV must not be the default for RDS Custom. If it is, change the default before running this command.</p> </li> <li> <p>The CEV must not be associated with an RDS Custom DB instance, RDS Custom instance snapshot, or automated backup of your RDS Custom instance.</p> </li> </ul> <p>Typically, deletion takes a few minutes.</p> <note> <p>The MediaImport service that imports files from Amazon S3 to create CEVs isn't integrated with Amazon Web Services CloudTrail. If you turn on data logging for Amazon RDS in CloudTrail, calls to the <code>DeleteCustomDbEngineVersion</code> event aren't logged. However, you might see calls from the API gateway that accesses your Amazon S3 bucket. These calls originate from the MediaImport service for the <code>DeleteCustomDbEngineVersion</code> event.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.delete">Deleting a CEV</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DeleteCustomDBEngineVersion #Action=DeleteCustomDBEngineVersion
		/// </summary>
		/// <param name="Engine">The database engine. The only supported engines are <code>custom-oracle-ee</code> and <code>custom-oracle-ee-cdb</code>.
		/// Min length: 1
		/// Max length: 35
		// </param>
		/// <param name="EngineVersion">The custom engine version (CEV) for your DB instance. This option is required for RDS Custom, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Amazon Web Services Region.
		/// Min length: 1
		/// Max length: 60
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteCustomDBEngineVersionAsync(string Engine, string EngineVersion, GET_DeleteCustomDBEngineVersionAction Action, GET_DeleteCustomDBEngineVersionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteCustomDBEngineVersion?Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p>If you're deleting a Multi-AZ DB cluster with read replicas, all cluster members are terminated and read replicas are promoted to standalone instances.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DeleteDBCluster #Action=DeleteDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing DBClusterIdentifier.</p> </li> </ul></param>
		/// <param name="SkipFinalSnapshot"><p>A value that indicates whether to skip the creation of a final DB cluster snapshot before the DB cluster is deleted. If skip is specified, no DB cluster snapshot is created. If skip isn't specified, a DB cluster snapshot is created before the DB cluster is deleted. By default, skip isn't specified, and the DB cluster snapshot is created. By default, this parameter is disabled.</p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is disabled.</p> </note></param>
		/// <param name="FinalDBSnapshotIdentifier"><p>The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is disabled.</p> <note> <p>Specifying this parameter and also skipping the creation of a final DB cluster snapshot with the <code>SkipFinalShapshot</code> parameter results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="DeleteAutomatedBackups">A value that indicates whether to remove automated backups immediately after the DB cluster is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB cluster is deleted.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterAsync(string DBClusterIdentifier, bool SkipFinalSnapshot, string FinalDBSnapshotIdentifier, bool DeleteAutomatedBackups, GET_DeleteDBClusterAction Action, GET_DeleteDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&SkipFinalSnapshot="+SkipFinalSnapshot+"&FinalDBSnapshotIdentifier=" + (FinalDBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(FinalDBSnapshotIdentifier))+"&DeleteAutomatedBackups="+DeleteAutomatedBackups+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes automated backups using the <code>DbClusterResourceId</code> value of the source DB cluster or the Amazon Resource Name (ARN) of the automated backups.
		/// GET_DeleteDBClusterAutomatedBackup #Action=DeleteDBClusterAutomatedBackup
		/// </summary>
		/// <param name="DbClusterResourceId">The identifier for the source DB cluster, which can't be changed and which is unique to an Amazon Web Services Region.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterAutomatedBackupAsync(string DbClusterResourceId, GET_DeleteDBClusterAutomatedBackupAction Action, GET_DeleteDBClusterAutomatedBackupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBClusterAutomatedBackup?DbClusterResourceId=" + (DbClusterResourceId==null? "" : System.Uri.EscapeDataString(DbClusterResourceId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteDBClusterEndpoint #Action=DeleteDBClusterEndpoint
		/// </summary>
		/// <param name="DBClusterEndpointIdentifier">The identifier associated with the custom endpoint. This parameter is stored as a lowercase string.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterEndpointAsync(string DBClusterEndpointIdentifier, GET_DeleteDBClusterEndpointAction Action, GET_DeleteDBClusterEndpointVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBClusterEndpoint?DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DeleteDBClusterParameterGroup #Action=DeleteDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p> </li> <li> <p>You can't delete a default DB cluster parameter group.</p> </li> <li> <p>Can't be associated with any DB clusters.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterParameterGroupAsync(string DBClusterParameterGroupName, GET_DeleteDBClusterParameterGroupAction Action, GET_DeleteDBClusterParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DeleteDBClusterSnapshot #Action=DeleteDBClusterSnapshot
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier"><p>The identifier of the DB cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code> state.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBClusterSnapshotAsync(string DBClusterSnapshotIdentifier, GET_DeleteDBClusterSnapshotAction Action, GET_DeleteDBClusterSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBClusterSnapshot?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p>If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted.</p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>
		/// GET_DeleteDBInstance #Action=DeleteDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB instance.</p> </li> </ul></param>
		/// <param name="SkipFinalSnapshot"><p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note> <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p> </note> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p> <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p> <p>This setting is required for RDS Custom.</p></param>
		/// <param name="FinalDBSnapshotIdentifier"><p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note> <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p> </note> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Can't be specified when deleting a read replica.</p> </li> </ul></param>
		/// <param name="DeleteAutomatedBackups">A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBInstanceAsync(string DBInstanceIdentifier, bool SkipFinalSnapshot, string FinalDBSnapshotIdentifier, bool DeleteAutomatedBackups, GET_DeleteDBInstanceAction Action, GET_DeleteDBInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&SkipFinalSnapshot="+SkipFinalSnapshot+"&FinalDBSnapshotIdentifier=" + (FinalDBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(FinalDBSnapshotIdentifier))+"&DeleteAutomatedBackups="+DeleteAutomatedBackups+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes automated backups using the <code>DbiResourceId</code> value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups.
		/// GET_DeleteDBInstanceAutomatedBackup #Action=DeleteDBInstanceAutomatedBackup
		/// </summary>
		/// <param name="DbiResourceId">The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.</param>
		/// <param name="DBInstanceAutomatedBackupsArn"><p>The Amazon Resource Name (ARN) of the automated backups to delete, for example, <code>arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE</code>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBInstanceAutomatedBackupAsync(string DbiResourceId, string DBInstanceAutomatedBackupsArn, GET_DeleteDBInstanceAutomatedBackupAction Action, GET_DeleteDBInstanceAutomatedBackupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBInstanceAutomatedBackup?DbiResourceId=" + (DbiResourceId==null? "" : System.Uri.EscapeDataString(DbiResourceId))+"&DBInstanceAutomatedBackupsArn=" + (DBInstanceAutomatedBackupsArn==null? "" : System.Uri.EscapeDataString(DBInstanceAutomatedBackupsArn))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.
		/// GET_DeleteDBParameterGroup #Action=DeleteDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>You can't delete a default DB parameter group</p> </li> <li> <p>Can't be associated with any DB instances</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBParameterGroupAsync(string DBParameterGroupName, GET_DeleteDBParameterGroupAction Action, GET_DeleteDBParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing DB proxy.
		/// GET_DeleteDBProxy #Action=DeleteDBProxy
		/// </summary>
		/// <param name="DBProxyName">The name of the DB proxy to delete.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBProxyAsync(string DBProxyName, GET_DeleteDBProxyAction Action, GET_DeleteDBProxyVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBProxy?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a <code>DBProxyEndpoint</code>. Doing so removes the ability to access the DB proxy using the endpoint that you defined. The endpoint that you delete might have provided capabilities such as read/write or read-only operations, or using a different VPC than the DB proxy's default VPC.
		/// GET_DeleteDBProxyEndpoint #Action=DeleteDBProxyEndpoint
		/// </summary>
		/// <param name="DBProxyEndpointName">The name of the DB proxy endpoint to delete.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBProxyEndpointAsync(string DBProxyEndpointName, GET_DeleteDBProxyEndpointAction Action, GET_DeleteDBProxyEndpointVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBProxyEndpoint?DBProxyEndpointName=" + (DBProxyEndpointName==null? "" : System.Uri.EscapeDataString(DBProxyEndpointName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB security group.</p> <p>The specified DB security group must not be associated with any DB instances.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		/// GET_DeleteDBSecurityGroup #Action=DeleteDBSecurityGroup
		/// </summary>
		/// <param name="DBSecurityGroupName"><p>The name of the DB security group to delete.</p> <note> <p>You can't delete the default DB security group.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be "Default"</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBSecurityGroupAsync(string DBSecurityGroupName, GET_DeleteDBSecurityGroupAction Action, GET_DeleteDBSecurityGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBSecurityGroup?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : System.Uri.EscapeDataString(DBSecurityGroupName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>
		/// GET_DeleteDBSnapshot #Action=DeleteDBSnapshot
		/// </summary>
		/// <param name="DBSnapshotIdentifier"><p>The DB snapshot identifier.</p> <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBSnapshotAsync(string DBSnapshotIdentifier, GET_DeleteDBSnapshotAction Action, GET_DeleteDBSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBSnapshot?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>
		/// GET_DeleteDBSubnetGroup #Action=DeleteDBSubnetGroup
		/// </summary>
		/// <param name="DBSubnetGroupName"><p>The name of the database subnet group to delete.</p> <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteDBSubnetGroupAsync(string DBSubnetGroupName, GET_DeleteDBSubnetGroupAction Action, GET_DeleteDBSubnetGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteDBSubnetGroup?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an RDS event notification subscription.
		/// GET_DeleteEventSubscription #Action=DeleteEventSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to delete.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteEventSubscriptionAsync(string SubscriptionName, GET_DeleteEventSubscriptionAction Action, GET_DeleteEventSubscriptionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteEventSubscription?SubscriptionName=" + (SubscriptionName==null? "" : System.Uri.EscapeDataString(SubscriptionName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DeleteGlobalCluster #Action=DeleteGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier">The cluster identifier of the global database cluster being deleted.</param>
		/// <returns>Success</returns>
		public async Task GET_DeleteGlobalClusterAsync(string GlobalClusterIdentifier, GET_DeleteGlobalClusterAction Action, GET_DeleteGlobalClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing option group.
		/// GET_DeleteOptionGroup #Action=DeleteOptionGroup
		/// </summary>
		/// <param name="OptionGroupName"><p>The name of the option group to be deleted.</p> <note> <p>You can't delete default option groups.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteOptionGroupAsync(string OptionGroupName, GET_DeleteOptionGroupAction Action, GET_DeleteOptionGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteOptionGroup?OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.
		/// GET_DeregisterDBProxyTargets #Action=DeregisterDBProxyTargets
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="DBInstanceIdentifiers">One or more DB instance identifiers.</param>
		/// <param name="DBClusterIdentifiers">One or more DB cluster identifiers.</param>
		/// <returns>Success</returns>
		public async Task GET_DeregisterDBProxyTargetsAsync(string DBProxyName, string TargetGroupName, string[] DBInstanceIdentifiers, string[] DBClusterIdentifiers, GET_DeregisterDBProxyTargetsAction Action, GET_DeregisterDBProxyTargetsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeregisterDBProxyTargets?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : System.Uri.EscapeDataString(TargetGroupName))+"&"+string.Join("&", DBInstanceIdentifiers.Select(z => $"DBInstanceIdentifiers={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", DBClusterIdentifiers.Select(z => $"DBClusterIdentifiers={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>
		/// GET_DescribeAccountAttributes #Action=DescribeAccountAttributes
		/// </summary>
		/// <returns>Success</returns>
		public async Task GET_DescribeAccountAttributesAsync(GET_DescribeAccountAttributesAction Action, GET_DescribeAccountAttributesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeAccountAttributes?Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes one or more blue/green deployments.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_DescribeBlueGreenDeployments #Action=DescribeBlueGreenDeployments
		/// </summary>
		/// <param name="BlueGreenDeploymentIdentifier"><p>The blue/green deployment identifier. If you specify this parameter, the response only includes information about the specific blue/green deployment. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="Filters"><p>A filter that specifies one or more blue/green deployments to describe.</p> <p>Valid Values:</p> <ul> <li> <p> <code>blue-green-deployment-identifier</code> - Accepts system-generated identifiers for blue/green deployments. The results list only includes information about the blue/green deployments with the specified identifiers.</p> </li> <li> <p> <code>blue-green-deployment-name</code> - Accepts user-supplied names for blue/green deployments. The results list only includes information about the blue/green deployments with the specified names.</p> </li> <li> <p> <code>source</code> - Accepts source databases for a blue/green deployment. The results list only includes information about the blue/green deployments with the specified source databases.</p> </li> <li> <p> <code>target</code> - Accepts target databases for a blue/green deployment. The results list only includes information about the blue/green deployments with the specified target databases.</p> </li> </ul></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeBlueGreenDeployments</code> request. If you specify this parameter, the response only includes records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints:</p> <ul> <li> <p>Must be a minimum of 20.</p> </li> <li> <p>Can't exceed 100.</p> </li> </ul>
		/// Minimum: 20
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeBlueGreenDeploymentsAsync(string BlueGreenDeploymentIdentifier, string[] Filters, string Marker, int MaxRecords, GET_DescribeBlueGreenDeploymentsAction Action, GET_DescribeBlueGreenDeploymentsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeBlueGreenDeployments?BlueGreenDeploymentIdentifier=" + (BlueGreenDeploymentIdentifier==null? "" : System.Uri.EscapeDataString(BlueGreenDeploymentIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the set of CA certificates provided by Amazon RDS for this Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_DescribeCertificates #Action=DescribeCertificates
		/// </summary>
		/// <param name="CertificateIdentifier"><p>The user-supplied certificate identifier. If this parameter is specified, information for only the identified certificate is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing CertificateIdentifier.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeCertificates</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeCertificatesAsync(string CertificateIdentifier, string[] Filters, int MaxRecords, string Marker, GET_DescribeCertificatesAction Action, GET_DescribeCertificatesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeCertificates?CertificateIdentifier=" + (CertificateIdentifier==null? "" : System.Uri.EscapeDataString(CertificateIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Displays backups for both current and deleted DB clusters. For example, use this operation to find details about automated backups for previously deleted clusters. Current clusters are returned for both the <code>DescribeDBClusterAutomatedBackups</code> and <code>DescribeDBClusters</code> operations.</p> <p>All parameters are optional.</p>
		/// GET_DescribeDBClusterAutomatedBackups #Action=DescribeDBClusterAutomatedBackups
		/// </summary>
		/// <param name="DbClusterResourceId">The resource ID of the DB cluster that is the source of the automated backup. This parameter isn't case-sensitive.</param>
		/// <param name="DBClusterIdentifier">(Optional) The user-supplied DB cluster identifier. If this parameter is specified, it must match the identifier of an existing DB cluster. It returns information from the specific DB cluster's automated backup. This parameter isn't case-sensitive.</param>
		/// <param name="Filters"><p>A filter that specifies which resources to return based on status.</p> <p>Supported filters are the following:</p> <ul> <li> <p> <code>status</code> </p> <ul> <li> <p> <code>retained</code> - Automated backups for deleted clusters and after backup replication is stopped.</p> </li> </ul> </li> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB cluster automated backups identified by these ARNs.</p> </li> <li> <p> <code>db-cluster-resource-id</code> - Accepts DB resource identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB cluster resources identified by these ARNs.</p> </li> </ul> <p>Returns all resources by default. The status for each resource is specified in the response.</p></param>
		/// <param name="MaxRecords">The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</param>
		/// <param name="Marker">The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterAutomatedBackupsAsync(string DbClusterResourceId, string DBClusterIdentifier, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBClusterAutomatedBackupsAction Action, GET_DescribeDBClusterAutomatedBackupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterAutomatedBackups?DbClusterResourceId=" + (DbClusterResourceId==null? "" : System.Uri.EscapeDataString(DbClusterResourceId))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>
		/// GET_DescribeDBClusterBacktracks #Action=DescribeDBClusterBacktracks
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier of the DB cluster to be described. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="BacktrackIdentifier"><p>If specified, this value is the backtrack identifier of the backtrack to be described.</p> <p>Constraints:</p> <ul> <li> <p>Must contain a valid universally unique identifier (UUID). For more information about UUIDs, see <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Universally unique identifier</a>.</p> </li> </ul> <p>Example: <code>123e4567-e89b-12d3-a456-426655440000</code> </p></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB clusters to describe. Supported filters include the following:</p> <ul> <li> <p> <code>db-cluster-backtrack-id</code> - Accepts backtrack identifiers. The results list includes information about only the backtracks identified by these identifiers.</p> </li> <li> <p> <code>db-cluster-backtrack-status</code> - Accepts any of the following backtrack status values:</p> <ul> <li> <p> <code>applying</code> </p> </li> <li> <p> <code>completed</code> </p> </li> <li> <p> <code>failed</code> </p> </li> <li> <p> <code>pending</code> </p> </li> </ul> <p>The results list includes information about only the backtracks identified by these values.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusterBacktracks</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterBacktracksAsync(string DBClusterIdentifier, string BacktrackIdentifier, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBClusterBacktracksAction Action, GET_DescribeDBClusterBacktracksVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterBacktracks?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&BacktrackIdentifier=" + (BacktrackIdentifier==null? "" : System.Uri.EscapeDataString(BacktrackIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeDBClusterEndpoints #Action=DescribeDBClusterEndpoints
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.</param>
		/// <param name="DBClusterEndpointIdentifier">The identifier of the endpoint to describe. This parameter is stored as a lowercase string.</param>
		/// <param name="Filters">A set of name-value pairs that define which endpoints to include in the output. The filters are specified as name-value pairs, in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>. <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>. <code>Values</code> for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>, <code>writer</code>, <code>custom</code>. <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code> filter can be one or more of: <code>reader</code>, <code>any</code>. <code>Values</code> for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>, <code>creating</code>, <code>deleting</code>, <code>inactive</code>, <code>modifying</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterEndpointsAsync(string DBClusterIdentifier, string DBClusterEndpointIdentifier, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBClusterEndpointsAction Action, GET_DescribeDBClusterEndpointsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterEndpoints?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DescribeDBClusterParameterGroups #Action=DescribeDBClusterParameterGroups
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of a specific DB cluster parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterParameterGroupsAsync(string DBClusterParameterGroupName, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBClusterParameterGroupsAction Action, GET_DescribeDBClusterParameterGroupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterParameterGroups?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DescribeDBClusterParameters #Action=DescribeDBClusterParameters
		/// </summary>
		/// <param name="DBClusterParameterGroupName"><p>The name of a specific DB cluster parameter group to return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="Source">A value that indicates to return only parameters for a specific source. Parameter sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterParametersAsync(string DBClusterParameterGroupName, string Source, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBClusterParametersAction Action, GET_DescribeDBClusterParametersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterParameters?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&Source=" + (Source==null? "" : System.Uri.EscapeDataString(Source))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
		/// GET_DescribeDBClusterSnapshotAttributes #Action=DescribeDBClusterSnapshotAttributes
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier">The identifier for the DB cluster snapshot to describe the attributes for.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterSnapshotAttributesAsync(string DBClusterSnapshotIdentifier, GET_DescribeDBClusterSnapshotAttributesAction Action, GET_DescribeDBClusterSnapshotAttributesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterSnapshotAttributes?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_DescribeDBClusterSnapshots #Action=DescribeDBClusterSnapshots
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBCluster.</p> </li> </ul></param>
		/// <param name="DBClusterSnapshotIdentifier"><p>A specific DB cluster snapshot identifier to describe. This parameter can't be used in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul></param>
		/// <param name="SnapshotType"><p>The type of DB cluster snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB cluster snapshots that have been automatically taken by Amazon RDS for my Amazon Web Services account.</p> </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots that have been taken by my Amazon Web Services account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots that have been shared to my Amazon Web Services account.</p> </li> <li> <p> <code>public</code> - Return all DB cluster snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public DB cluster snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB cluster snapshots to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs).</p> </li> <li> <p> <code>db-cluster-snapshot-id</code> - Accepts DB cluster snapshot identifiers.</p> </li> <li> <p> <code>snapshot-type</code> - Accepts types of DB cluster snapshots.</p> </li> <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="IncludeShared"><p>A value that indicates whether to include shared manual DB cluster snapshots from other Amazon Web Services accounts that this Amazon Web Services account has been given permission to copy or restore. By default, these snapshots are not included.</p> <p>You can give an Amazon Web Services account permission to restore a manual DB cluster snapshot from another Amazon Web Services account by the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p></param>
		/// <param name="IncludePublic"><p>A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any Amazon Web Services account. By default, the public snapshots are not included.</p> <p>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p></param>
		/// <param name="DbClusterResourceId">A specific DB cluster resource ID to describe.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClusterSnapshotsAsync(string DBClusterIdentifier, string DBClusterSnapshotIdentifier, string SnapshotType, string[] Filters, int MaxRecords, string Marker, bool IncludeShared, bool IncludePublic, string DbClusterResourceId, GET_DescribeDBClusterSnapshotsAction Action, GET_DescribeDBClusterSnapshotsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusterSnapshots?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&SnapshotType=" + (SnapshotType==null? "" : System.Uri.EscapeDataString(SnapshotType))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&IncludeShared="+IncludeShared+"&IncludePublic="+IncludePublic+"&DbClusterResourceId=" + (DbClusterResourceId==null? "" : System.Uri.EscapeDataString(DbClusterResourceId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes existing Amazon Aurora DB clusters and Multi-AZ DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p>
		/// GET_DescribeDBClusters #Action=DescribeDBClusters
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The user-supplied DB cluster identifier or the Amazon Resource Name (ARN) of the DB cluster. If this parameter is specified, information for only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DB cluster identifier.</p> </li> </ul></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB clusters to describe.</p> <p>Supported Filters:</p> <ul> <li> <p> <code>clone-group-id</code> - Accepts clone group identifiers. The results list only includes information about the DB clusters associated with these clone groups.</p> </li> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list only includes information about the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-cluster-resource-id</code> - Accepts DB cluster resource identifiers. The results list will only include information about the DB clusters identified by these DB cluster resource identifiers.</p> </li> <li> <p> <code>domain</code> - Accepts Active Directory directory IDs. The results list only includes information about the DB clusters associated with these domains.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list only includes information about the DB clusters for these engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBClusters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="IncludeShared">Specifies whether the output includes information about clusters shared from other Amazon Web Services accounts.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBClustersAsync(string DBClusterIdentifier, string[] Filters, int MaxRecords, string Marker, bool IncludeShared, GET_DescribeDBClustersAction Action, GET_DescribeDBClustersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBClusters?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&IncludeShared="+IncludeShared+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the available DB engines.
		/// GET_DescribeDBEngineVersions #Action=DescribeDBEngineVersions
		/// </summary>
		/// <param name="Engine"><p>The database engine to return.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>custom-oracle-ee</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="EngineVersion"><p>The database engine version to return.</p> <p>Example: <code>5.1.49</code> </p></param>
		/// <param name="DBParameterGroupFamily"><p>The name of a specific DB parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBParameterGroupFamily.</p> </li> </ul></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB engine versions to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-parameter-group-family</code> - Accepts parameter groups family names. The results list only includes information about the DB engine versions for these parameter group families.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list only includes information about the DB engine versions for these engines.</p> </li> <li> <p> <code>engine-mode</code> - Accepts DB engine modes. The results list only includes information about the DB engine versions for these engine modes. Valid DB engine modes are the following:</p> <ul> <li> <p> <code>global</code> </p> </li> <li> <p> <code>multimaster</code> </p> </li> <li> <p> <code>parallelquery</code> </p> </li> <li> <p> <code>provisioned</code> </p> </li> <li> <p> <code>serverless</code> </p> </li> </ul> </li> <li> <p> <code>engine-version</code> - Accepts engine versions. The results list only includes information about the DB engine versions for these engine versions.</p> </li> <li> <p> <code>status</code> - Accepts engine version statuses. The results list only includes information about the DB engine versions for these statuses. Valid statuses are the following:</p> <ul> <li> <p> <code>available</code> </p> </li> <li> <p> <code>deprecated</code> </p> </li> </ul> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="DefaultOnly">A value that indicates whether only the default version of the specified engine or engine and major version combination is returned.</param>
		/// <param name="ListSupportedCharacterSets"><p>A value that indicates whether to list the supported character sets for each engine version.</p> <p>If this parameter is enabled and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version.</p> <p>For RDS Custom, the default is not to list supported character sets. If you set <code>ListSupportedCharacterSets</code> to <code>true</code>, RDS Custom returns no results.</p></param>
		/// <param name="ListSupportedTimezones"><p>A value that indicates whether to list the supported time zones for each engine version.</p> <p>If this parameter is enabled and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version.</p> <p>For RDS Custom, the default is not to list supported time zones. If you set <code>ListSupportedTimezones</code> to <code>true</code>, RDS Custom returns no results.</p></param>
		/// <param name="IncludeAll">A value that indicates whether to include engine versions that aren't available in the list. The default is to list only available engine versions.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBEngineVersionsAsync(string Engine, string EngineVersion, string DBParameterGroupFamily, string[] Filters, int MaxRecords, string Marker, bool DefaultOnly, bool ListSupportedCharacterSets, bool ListSupportedTimezones, bool IncludeAll, GET_DescribeDBEngineVersionsAction Action, GET_DescribeDBEngineVersionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBEngineVersions?Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : System.Uri.EscapeDataString(DBParameterGroupFamily))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&DefaultOnly="+DefaultOnly+"&ListSupportedCharacterSets="+ListSupportedCharacterSets+"&ListSupportedTimezones="+ListSupportedTimezones+"&IncludeAll="+IncludeAll+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>
		/// GET_DescribeDBInstanceAutomatedBackups #Action=DescribeDBInstanceAutomatedBackups
		/// </summary>
		/// <param name="DbiResourceId">The resource ID of the DB instance that is the source of the automated backup. This parameter isn't case-sensitive.</param>
		/// <param name="DBInstanceIdentifier">(Optional) The user-supplied instance identifier. If this parameter is specified, it must match the identifier of an existing DB instance. It returns information from the specific DB instance's automated backup. This parameter isn't case-sensitive.</param>
		/// <param name="Filters"><p>A filter that specifies which resources to return based on status.</p> <p>Supported filters are the following:</p> <ul> <li> <p> <code>status</code> </p> <ul> <li> <p> <code>active</code> - Automated backups for current instances.</p> </li> <li> <p> <code>creating</code> - Automated backups that are waiting for the first automated snapshot to be available.</p> </li> <li> <p> <code>retained</code> - Automated backups for deleted instances and after backup replication is stopped.</p> </li> </ul> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB instance automated backups identified by these ARNs.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts DB resource identifiers and Amazon Resource Names (ARNs). The results list includes only information about the DB instance resources identified by these ARNs.</p> </li> </ul> <p>Returns all resources by default. The status for each resource is specified in the response.</p></param>
		/// <param name="MaxRecords">The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</param>
		/// <param name="Marker">The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to <code>MaxRecords</code>.</param>
		/// <param name="DBInstanceAutomatedBackupsArn"><p>The Amazon Resource Name (ARN) of the replicated automated backups, for example, <code>arn:aws:rds:us-east-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE</code>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBInstanceAutomatedBackupsAsync(string DbiResourceId, string DBInstanceIdentifier, string[] Filters, int MaxRecords, string Marker, string DBInstanceAutomatedBackupsArn, GET_DescribeDBInstanceAutomatedBackupsAction Action, GET_DescribeDBInstanceAutomatedBackupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBInstanceAutomatedBackups?DbiResourceId=" + (DbiResourceId==null? "" : System.Uri.EscapeDataString(DbiResourceId))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&DBInstanceAutomatedBackupsArn=" + (DBInstanceAutomatedBackupsArn==null? "" : System.Uri.EscapeDataString(DBInstanceAutomatedBackupsArn))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>
		/// GET_DescribeDBInstances #Action=DescribeDBInstances
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The user-supplied instance identifier or the Amazon Resource Name (ARN) of the DB instance. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DB instance.</p> </li> </ul></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB instances to describe.</p> <p>Supported Filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list only includes information about the DB instances associated with the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list only includes information about the DB instances identified by these ARNs.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts DB instance resource identifiers. The results list only includes information about the DB instances identified by these DB instance resource identifiers.</p> </li> <li> <p> <code>domain</code> - Accepts Active Directory directory IDs. The results list only includes information about the DB instances associated with these domains.</p> </li> <li> <p> <code>engine</code> - Accepts engine names. The results list only includes information about the DB instances for these engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBInstances</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBInstancesAsync(string DBInstanceIdentifier, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBInstancesAction Action, GET_DescribeDBInstancesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBInstances?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DB log files for the DB instance.</p> <p>This command doesn't apply to RDS Custom.</p>
		/// GET_DescribeDBLogFiles #Action=DescribeDBLogFiles
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="FilenameContains">Filters the available log files for log file names that contain the specified string.</param>
		/// <param name="FileLastWritten">Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.</param>
		/// <param name="FileSize">Filters the available log files for files larger than the specified size.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords">The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</param>
		/// <param name="Marker">The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBLogFilesAsync(string DBInstanceIdentifier, string FilenameContains, int FileLastWritten, int FileSize, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBLogFilesAction Action, GET_DescribeDBLogFilesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBLogFiles?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&FilenameContains=" + (FilenameContains==null? "" : System.Uri.EscapeDataString(FilenameContains))+"&FileLastWritten="+FileLastWritten+"&FileSize="+FileSize+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group.
		/// GET_DescribeDBParameterGroups #Action=DescribeDBParameterGroups
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBParameterGroupsAsync(string DBParameterGroupName, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBParameterGroupsAction Action, GET_DescribeDBParameterGroupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBParameterGroups?DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the detailed parameter list for a particular DB parameter group.
		/// GET_DescribeDBParameters #Action=DescribeDBParameters
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul></param>
		/// <param name="Source"><p>The parameter types to return.</p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code> </p></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBParametersAsync(string DBParameterGroupName, string Source, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBParametersAction Action, GET_DescribeDBParametersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBParameters?DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&Source=" + (Source==null? "" : System.Uri.EscapeDataString(Source))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about DB proxies.
		/// GET_DescribeDBProxies #Action=DescribeDBProxies
		/// </summary>
		/// <param name="DBProxyName">The name of the DB proxy. If you omit this parameter, the output includes information about all DB proxies owned by your Amazon Web Services account ID.</param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		/// Minimum: 20
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxiesAsync(string DBProxyName, string[] Filters, string Marker, int MaxRecords, GET_DescribeDBProxiesAction Action, GET_DescribeDBProxiesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBProxies?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about DB proxy endpoints.
		/// GET_DescribeDBProxyEndpoints #Action=DescribeDBProxyEndpoints
		/// </summary>
		/// <param name="DBProxyName">The name of the DB proxy whose endpoints you want to describe. If you omit this parameter, the output includes information about all DB proxy endpoints associated with all your DB proxies.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="DBProxyEndpointName">The name of a DB proxy endpoint to describe. If you omit this parameter, the output includes information about all DB proxy endpoints associated with the specified proxy.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		/// Minimum: 20
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxyEndpointsAsync(string DBProxyName, string DBProxyEndpointName, string[] Filters, string Marker, int MaxRecords, GET_DescribeDBProxyEndpointsAction Action, GET_DescribeDBProxyEndpointsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBProxyEndpoints?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&DBProxyEndpointName=" + (DBProxyEndpointName==null? "" : System.Uri.EscapeDataString(DBProxyEndpointName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.
		/// GET_DescribeDBProxyTargetGroups #Action=DescribeDBProxyTargetGroups
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxy</code> associated with the target group.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code> to describe.</param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		/// Minimum: 20
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxyTargetGroupsAsync(string DBProxyName, string TargetGroupName, string[] Filters, string Marker, int MaxRecords, GET_DescribeDBProxyTargetGroupsAction Action, GET_DescribeDBProxyTargetGroupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBProxyTargetGroups?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : System.Uri.EscapeDataString(TargetGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.
		/// GET_DescribeDBProxyTargets #Action=DescribeDBProxyTargets
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxyTarget</code> to describe.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code> to describe.</param>
		/// <param name="Filters">This parameter is not currently supported.</param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		/// Minimum: 20
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBProxyTargetsAsync(string DBProxyName, string TargetGroupName, string[] Filters, string Marker, int MaxRecords, GET_DescribeDBProxyTargetsAction Action, GET_DescribeDBProxyTargetsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBProxyTargets?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : System.Uri.EscapeDataString(TargetGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group.</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		/// GET_DescribeDBSecurityGroups #Action=DescribeDBSecurityGroups
		/// </summary>
		/// <param name="DBSecurityGroupName">The name of the DB security group to return details for.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBSecurityGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSecurityGroupsAsync(string DBSecurityGroupName, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBSecurityGroupsAction Action, GET_DescribeDBSecurityGroupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBSecurityGroups?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : System.Uri.EscapeDataString(DBSecurityGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>
		/// GET_DescribeDBSnapshotAttributes #Action=DescribeDBSnapshotAttributes
		/// </summary>
		/// <param name="DBSnapshotIdentifier">The identifier for the DB snapshot to describe the attributes for.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSnapshotAttributesAsync(string DBSnapshotIdentifier, GET_DescribeDBSnapshotAttributesAction Action, GET_DescribeDBSnapshotAttributesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBSnapshotAttributes?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about DB snapshots. This API action supports pagination.
		/// GET_DescribeDBSnapshots #Action=DescribeDBSnapshots
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The ID of the DB instance to retrieve the list of DB snapshots for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="DBSnapshotIdentifier"><p>A specific DB snapshot identifier to describe. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul></param>
		/// <param name="SnapshotType"><p>The type of snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB snapshots that have been automatically taken by Amazon RDS for my Amazon Web Services account.</p> </li> <li> <p> <code>manual</code> - Return all DB snapshots that have been taken by my Amazon Web Services account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB snapshots that have been shared to my Amazon Web Services account.</p> </li> <li> <p> <code>public</code> - Return all DB snapshots that have been marked as public.</p> </li> <li> <p> <code>awsbackup</code> - Return the DB snapshots managed by the Amazon Web Services Backup service.</p> <p>For information about Amazon Web Services Backup, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html"> <i>Amazon Web Services Backup Developer Guide.</i> </a> </p> <p>The <code>awsbackup</code> type does not apply to Aurora.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual snapshots are returned. Shared and public DB snapshots are not included in the returned results by default. You can include shared snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p></param>
		/// <param name="Filters"><p>A filter that specifies one or more DB snapshots to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs).</p> </li> <li> <p> <code>db-snapshot-id</code> - Accepts DB snapshot identifiers.</p> </li> <li> <p> <code>dbi-resource-id</code> - Accepts identifiers of source DB instances.</p> </li> <li> <p> <code>snapshot-type</code> - Accepts types of DB snapshots.</p> </li> <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeDBSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="IncludeShared"><p>A value that indicates whether to include shared manual DB cluster snapshots from other Amazon Web Services accounts that this Amazon Web Services account has been given permission to copy or restore. By default, these snapshots are not included.</p> <p>You can give an Amazon Web Services account permission to restore a manual DB snapshot from another Amazon Web Services account by using the <code>ModifyDBSnapshotAttribute</code> API action.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="IncludePublic"><p>A value that indicates whether to include manual DB cluster snapshots that are public and can be copied or restored by any Amazon Web Services account. By default, the public snapshots are not included.</p> <p>You can share a manual DB snapshot as public by using the <a>ModifyDBSnapshotAttribute</a> API.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DbiResourceId">A specific DB resource ID to describe.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSnapshotsAsync(string DBInstanceIdentifier, string DBSnapshotIdentifier, string SnapshotType, string[] Filters, int MaxRecords, string Marker, bool IncludeShared, bool IncludePublic, string DbiResourceId, GET_DescribeDBSnapshotsAction Action, GET_DescribeDBSnapshotsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBSnapshots?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&SnapshotType=" + (SnapshotType==null? "" : System.Uri.EscapeDataString(SnapshotType))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&IncludeShared="+IncludeShared+"&IncludePublic="+IncludePublic+"&DbiResourceId=" + (DbiResourceId==null? "" : System.Uri.EscapeDataString(DbiResourceId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>.</p>
		/// GET_DescribeDBSubnetGroups #Action=DescribeDBSubnetGroups
		/// </summary>
		/// <param name="DBSubnetGroupName">The name of the DB subnet group to return details for.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeDBSubnetGroupsAsync(string DBSubnetGroupName, string[] Filters, int MaxRecords, string Marker, GET_DescribeDBSubnetGroupsAction Action, GET_DescribeDBSubnetGroupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeDBSubnetGroups?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_DescribeEngineDefaultClusterParameters #Action=DescribeEngineDefaultClusterParameters
		/// </summary>
		/// <param name="DBParameterGroupFamily">The name of the DB cluster parameter group family to return engine parameter information for.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEngineDefaultClusterParametersAsync(string DBParameterGroupFamily, string[] Filters, int MaxRecords, string Marker, GET_DescribeEngineDefaultClusterParametersAction Action, GET_DescribeEngineDefaultClusterParametersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeEngineDefaultClusterParameters?DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : System.Uri.EscapeDataString(DBParameterGroupFamily))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the default engine and system parameter information for the specified database engine.
		/// GET_DescribeEngineDefaultParameters #Action=DescribeEngineDefaultParameters
		/// </summary>
		/// <param name="DBParameterGroupFamily"><p>The name of the DB parameter group family.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql5.7</code> </p> </li> <li> <p> <code>aurora-mysql8.0</code> </p> </li> <li> <p> <code>aurora-postgresql10</code> </p> </li> <li> <p> <code>aurora-postgresql11</code> </p> </li> <li> <p> <code>aurora-postgresql12</code> </p> </li> <li> <p> <code>aurora-postgresql13</code> </p> </li> <li> <p> <code>aurora-postgresql14</code> </p> </li> <li> <p> <code>custom-oracle-ee-19</code> </p> </li> <li> <p> <code>mariadb10.2</code> </p> </li> <li> <p> <code>mariadb10.3</code> </p> </li> <li> <p> <code>mariadb10.4</code> </p> </li> <li> <p> <code>mariadb10.5</code> </p> </li> <li> <p> <code>mariadb10.6</code> </p> </li> <li> <p> <code>mysql5.7</code> </p> </li> <li> <p> <code>mysql8.0</code> </p> </li> <li> <p> <code>oracle-ee-19</code> </p> </li> <li> <p> <code>oracle-ee-cdb-19</code> </p> </li> <li> <p> <code>oracle-ee-cdb-21</code> </p> </li> <li> <p> <code>oracle-se2-19</code> </p> </li> <li> <p> <code>oracle-se2-cdb-19</code> </p> </li> <li> <p> <code>oracle-se2-cdb-21</code> </p> </li> <li> <p> <code>postgres10</code> </p> </li> <li> <p> <code>postgres11</code> </p> </li> <li> <p> <code>postgres12</code> </p> </li> <li> <p> <code>postgres13</code> </p> </li> <li> <p> <code>postgres14</code> </p> </li> <li> <p> <code>sqlserver-ee-11.0</code> </p> </li> <li> <p> <code>sqlserver-ee-12.0</code> </p> </li> <li> <p> <code>sqlserver-ee-13.0</code> </p> </li> <li> <p> <code>sqlserver-ee-14.0</code> </p> </li> <li> <p> <code>sqlserver-ee-15.0</code> </p> </li> <li> <p> <code>sqlserver-ex-11.0</code> </p> </li> <li> <p> <code>sqlserver-ex-12.0</code> </p> </li> <li> <p> <code>sqlserver-ex-13.0</code> </p> </li> <li> <p> <code>sqlserver-ex-14.0</code> </p> </li> <li> <p> <code>sqlserver-ex-15.0</code> </p> </li> <li> <p> <code>sqlserver-se-11.0</code> </p> </li> <li> <p> <code>sqlserver-se-12.0</code> </p> </li> <li> <p> <code>sqlserver-se-13.0</code> </p> </li> <li> <p> <code>sqlserver-se-14.0</code> </p> </li> <li> <p> <code>sqlserver-se-15.0</code> </p> </li> <li> <p> <code>sqlserver-web-11.0</code> </p> </li> <li> <p> <code>sqlserver-web-12.0</code> </p> </li> <li> <p> <code>sqlserver-web-13.0</code> </p> </li> <li> <p> <code>sqlserver-web-14.0</code> </p> </li> <li> <p> <code>sqlserver-web-15.0</code> </p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEngineDefaultParametersAsync(string DBParameterGroupFamily, string[] Filters, int MaxRecords, string Marker, GET_DescribeEngineDefaultParametersAction Action, GET_DescribeEngineDefaultParametersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeEngineDefaultParameters?DBParameterGroupFamily=" + (DBParameterGroupFamily==null? "" : System.Uri.EscapeDataString(DBParameterGroupFamily))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Displays a list of categories for all event source types, or, if specified, for a specified source type. You can also see this list in the "Amazon RDS event categories and event messages" section of the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Messages.html"> <i>Amazon RDS User Guide</i> </a> or the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Messages.html"> <i>Amazon Aurora User Guide</i> </a>.
		/// GET_DescribeEventCategories #Action=DescribeEventCategories
		/// </summary>
		/// <param name="SourceType"><p>The type of source that is generating the events. For RDS Proxy events, specify <code>db-proxy</code>.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> | <code>db-proxy</code> </p></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEventCategoriesAsync(string SourceType, string[] Filters, GET_DescribeEventCategoriesAction Action, GET_DescribeEventCategoriesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeEventCategories?SourceType=" + (SourceType==null? "" : System.Uri.EscapeDataString(SourceType))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all the subscription descriptions for a customer account. The description for a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p> <p>If you specify a <code>SubscriptionName</code>, lists the description for that subscription.</p>
		/// GET_DescribeEventSubscriptions #Action=DescribeEventSubscriptions
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to describe.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> .</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEventSubscriptionsAsync(string SubscriptionName, string[] Filters, int MaxRecords, string Marker, GET_DescribeEventSubscriptionsAction Action, GET_DescribeEventSubscriptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeEventSubscriptions?SubscriptionName=" + (SubscriptionName==null? "" : System.Uri.EscapeDataString(SubscriptionName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, DB cluster snapshots, and RDS Proxies for the past 14 days. Events specific to a particular DB instance, DB cluster, DB parameter group, DB security group, DB snapshot, DB cluster snapshot group, or RDS Proxy can be obtained by providing the name as a parameter.</p> <p>For more information on working with events, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/working-with-events.html">Monitoring Amazon RDS events</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/working-with-events.html">Monitoring Amazon Aurora events</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>By default, RDS returns events that were generated in the past hour.</p> </note>
		/// GET_DescribeEvents #Action=DescribeEvents
		/// </summary>
		/// <param name="SourceIdentifier"><p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If <code>SourceIdentifier</code> is supplied, <code>SourceType</code> must also be provided.</p> </li> <li> <p>If the source type is a DB instance, a <code>DBInstanceIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster, a <code>DBClusterIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is a DB cluster snapshot, a <code>DBClusterSnapshotIdentifier</code> value must be supplied.</p> </li> <li> <p>If the source type is an RDS Proxy, a <code>DBProxyName</code> value must be supplied.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="SourceType">The event source to retrieve events for. If no value is specified, all events are returned.</param>
		/// <param name="StartTime"><p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p></param>
		/// <param name="EndTime"><p>The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p></param>
		/// <param name="Duration"><p>The number of minutes to retrieve events for.</p> <p>Default: 60</p></param>
		/// <param name="EventCategories">A list of event categories that trigger notifications for a event notification subscription.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeEventsAsync(string SourceIdentifier, GET_DescribeEventsSourceType SourceType, System.DateTimeOffset StartTime, System.DateTimeOffset EndTime, int Duration, string[] EventCategories, string[] Filters, int MaxRecords, string Marker, GET_DescribeEventsAction Action, GET_DescribeEventsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeEvents?SourceIdentifier=" + (SourceIdentifier==null? "" : System.Uri.EscapeDataString(SourceIdentifier))+"&SourceType=" + SourceType+"&StartTime=" + StartTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&EndTime=" + EndTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&Duration="+Duration+"&"+string.Join("&", EventCategories.Select(z => $"EventCategories={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a snapshot or cluster export to Amazon S3. This API operation supports pagination.
		/// GET_DescribeExportTasks #Action=DescribeExportTasks
		/// </summary>
		/// <param name="ExportTaskIdentifier">The identifier of the snapshot or cluster export task to be described.</param>
		/// <param name="SourceArn">The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</param>
		/// <param name="Filters"><p>Filters specify one or more snapshot or cluster exports to describe. The filters are specified as name-value pairs that define what to include in the output. Filter names and values are case-sensitive.</p> <p>Supported filters include the following:</p> <ul> <li> <p> <code>export-task-identifier</code> - An identifier for the snapshot or cluster export task.</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket the data is exported to.</p> </li> <li> <p> <code>source-arn</code> - The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p> </li> <li> <p> <code>status</code> - The status of the export task. Must be lowercase. Valid statuses are the following:</p> <ul> <li> <p> <code>canceled</code> </p> </li> <li> <p> <code>canceling</code> </p> </li> <li> <p> <code>complete</code> </p> </li> <li> <p> <code>failed</code> </p> </li> <li> <p> <code>in_progress</code> </p> </li> <li> <p> <code>starting</code> </p> </li> </ul> </li> </ul></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeExportTasks</code> request. If you specify this parameter, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified value, a pagination token called a marker is included in the response. You can use the marker in a later <code>DescribeExportTasks</code> request to retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
		/// Minimum: 20
		/// Maximum: 100
		// </param>
		/// <param name="SourceType">The type of source for the export.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeExportTasksAsync(string ExportTaskIdentifier, string SourceArn, string[] Filters, string Marker, int MaxRecords, ExportSourceType SourceType, GET_DescribeExportTasksAction Action, GET_DescribeExportTasksVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeExportTasks?ExportTaskIdentifier=" + (ExportTaskIdentifier==null? "" : System.Uri.EscapeDataString(ExportTaskIdentifier))+"&SourceArn=" + (SourceArn==null? "" : System.Uri.EscapeDataString(SourceArn))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&SourceType=" + SourceType+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about Aurora global database clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_DescribeGlobalClusters #Action=DescribeGlobalClusters
		/// </summary>
		/// <param name="GlobalClusterIdentifier"><p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBClusterIdentifier.</p> </li> </ul></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeGlobalClusters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeGlobalClustersAsync(string GlobalClusterIdentifier, string[] Filters, int MaxRecords, string Marker, GET_DescribeGlobalClustersAction Action, GET_DescribeGlobalClustersVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeGlobalClusters?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes all available options.
		/// GET_DescribeOptionGroupOptions #Action=DescribeOptionGroupOptions
		/// </summary>
		/// <param name="EngineName"><p>A required parameter. Options available for the given engine name are described.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="MajorEngineVersion">If specified, filters the results to include only options for the specified major engine version.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOptionGroupOptionsAsync(string EngineName, string MajorEngineVersion, string[] Filters, int MaxRecords, string Marker, GET_DescribeOptionGroupOptionsAction Action, GET_DescribeOptionGroupOptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeOptionGroupOptions?EngineName=" + (EngineName==null? "" : System.Uri.EscapeDataString(EngineName))+"&MajorEngineVersion=" + (MajorEngineVersion==null? "" : System.Uri.EscapeDataString(MajorEngineVersion))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the available option groups.
		/// GET_DescribeOptionGroups #Action=DescribeOptionGroups
		/// </summary>
		/// <param name="OptionGroupName">The name of the option group to describe. Can't be supplied together with EngineName or MajorEngineVersion.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="Marker">An optional pagination token provided by a previous DescribeOptionGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="EngineName"><p>Filters the list of option groups to only include groups associated with a specific database engine.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="MajorEngineVersion">Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOptionGroupsAsync(string OptionGroupName, string[] Filters, string Marker, int MaxRecords, string EngineName, string MajorEngineVersion, GET_DescribeOptionGroupsAction Action, GET_DescribeOptionGroupsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeOptionGroups?OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&EngineName=" + (EngineName==null? "" : System.Uri.EscapeDataString(EngineName))+"&MajorEngineVersion=" + (MajorEngineVersion==null? "" : System.Uri.EscapeDataString(MajorEngineVersion))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of orderable DB instance options for the specified DB engine, DB engine version, and DB instance class.
		/// GET_DescribeOrderableDBInstanceOptions #Action=DescribeOrderableDBInstanceOptions
		/// </summary>
		/// <param name="Engine"><p>The name of the engine to retrieve DB instance options for.</p> <p>Valid Values:</p> <ul> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>custom-oracle-ee</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="EngineVersion">The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.</param>
		/// <param name="DBInstanceClass">The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</param>
		/// <param name="LicenseModel"><p>The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.</p> <p>RDS Custom supports only the BYOL licensing model.</p></param>
		/// <param name="AvailabilityZoneGroup"><p>The Availability Zone group associated with a Local Zone. Specify this parameter to retrieve available offerings for the Local Zones in the group.</p> <p>Omit this parameter to show the available offerings in the specified Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="Vpc"><p>A value that indicates whether to show only VPC or non-VPC offerings. RDS Custom supports only VPC offerings.</p> <p>RDS Custom supports only VPC offerings. If you describe non-VPC offerings for RDS Custom, the output shows VPC offerings.</p></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 10000.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOrderableDBInstanceOptionsAsync(string Engine, string EngineVersion, string DBInstanceClass, string LicenseModel, string AvailabilityZoneGroup, bool Vpc, string[] Filters, int MaxRecords, string Marker, GET_DescribeOrderableDBInstanceOptionsAction Action, GET_DescribeOrderableDBInstanceOptionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeOrderableDBInstanceOptions?Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&LicenseModel=" + (LicenseModel==null? "" : System.Uri.EscapeDataString(LicenseModel))+"&AvailabilityZoneGroup=" + (AvailabilityZoneGroup==null? "" : System.Uri.EscapeDataString(AvailabilityZoneGroup))+"&Vpc="+Vpc+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.
		/// GET_DescribePendingMaintenanceActions #Action=DescribePendingMaintenanceActions
		/// </summary>
		/// <param name="ResourceIdentifier">The ARN of a resource to return pending maintenance actions for.</param>
		/// <param name="Filters"><p>A filter that specifies one or more resources to return pending maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list only includes pending maintenance actions for the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs. The results list only includes pending maintenance actions for the DB instances identified by these ARNs.</p> </li> </ul></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribePendingMaintenanceActionsAsync(string ResourceIdentifier, string[] Filters, string Marker, int MaxRecords, GET_DescribePendingMaintenanceActionsAction Action, GET_DescribePendingMaintenanceActionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribePendingMaintenanceActions?ResourceIdentifier=" + (ResourceIdentifier==null? "" : System.Uri.EscapeDataString(ResourceIdentifier))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxRecords="+MaxRecords+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about reserved DB instances for this account, or about a specified reserved DB instance.
		/// GET_DescribeReservedDBInstances #Action=DescribeReservedDBInstances
		/// </summary>
		/// <param name="ReservedDBInstanceId">The reserved DB instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID.</param>
		/// <param name="ReservedDBInstancesOfferingId">The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier.</param>
		/// <param name="DBInstanceClass">The DB instance class filter value. Specify this parameter to show only those reservations matching the specified DB instances class.</param>
		/// <param name="Duration"><p>The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p></param>
		/// <param name="ProductDescription">The product description filter value. Specify this parameter to show only those reservations matching the specified product description.</param>
		/// <param name="OfferingType"><p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p></param>
		/// <param name="MultiAZ">A value that indicates whether to show only those reservations that support Multi-AZ.</param>
		/// <param name="LeaseId"><p>The lease identifier filter value. Specify this parameter to show only the reservation that matches the specified lease ID.</p> <note> <p>Amazon Web Services Support might request the lease ID for an issue related to a reserved DB instance.</p> </note></param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeReservedDBInstancesAsync(string ReservedDBInstanceId, string ReservedDBInstancesOfferingId, string DBInstanceClass, string Duration, string ProductDescription, string OfferingType, bool MultiAZ, string LeaseId, string[] Filters, int MaxRecords, string Marker, GET_DescribeReservedDBInstancesAction Action, GET_DescribeReservedDBInstancesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeReservedDBInstances?ReservedDBInstanceId=" + (ReservedDBInstanceId==null? "" : System.Uri.EscapeDataString(ReservedDBInstanceId))+"&ReservedDBInstancesOfferingId=" + (ReservedDBInstancesOfferingId==null? "" : System.Uri.EscapeDataString(ReservedDBInstancesOfferingId))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&Duration=" + (Duration==null? "" : System.Uri.EscapeDataString(Duration))+"&ProductDescription=" + (ProductDescription==null? "" : System.Uri.EscapeDataString(ProductDescription))+"&OfferingType=" + (OfferingType==null? "" : System.Uri.EscapeDataString(OfferingType))+"&MultiAZ="+MultiAZ+"&LeaseId=" + (LeaseId==null? "" : System.Uri.EscapeDataString(LeaseId))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists available reserved DB instance offerings.
		/// GET_DescribeReservedDBInstancesOfferings #Action=DescribeReservedDBInstancesOfferings
		/// </summary>
		/// <param name="ReservedDBInstancesOfferingId"><p>The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p></param>
		/// <param name="DBInstanceClass">The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</param>
		/// <param name="Duration"><p>Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p></param>
		/// <param name="ProductDescription"><p>Product description filter value. Specify this parameter to show only the available offerings that contain the specified product description.</p> <note> <p>The results show offerings that partially match the filter value.</p> </note></param>
		/// <param name="OfferingType"><p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p></param>
		/// <param name="MultiAZ">A value that indicates whether to show only those reservations that support Multi-AZ.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeReservedDBInstancesOfferingsAsync(string ReservedDBInstancesOfferingId, string DBInstanceClass, string Duration, string ProductDescription, string OfferingType, bool MultiAZ, string[] Filters, int MaxRecords, string Marker, GET_DescribeReservedDBInstancesOfferingsAction Action, GET_DescribeReservedDBInstancesOfferingsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeReservedDBInstancesOfferings?ReservedDBInstancesOfferingId=" + (ReservedDBInstancesOfferingId==null? "" : System.Uri.EscapeDataString(ReservedDBInstancesOfferingId))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&Duration=" + (Duration==null? "" : System.Uri.EscapeDataString(Duration))+"&ProductDescription=" + (ProductDescription==null? "" : System.Uri.EscapeDataString(ProductDescription))+"&OfferingType=" + (OfferingType==null? "" : System.Uri.EscapeDataString(OfferingType))+"&MultiAZ="+MultiAZ+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from.</p> <p>Use this operation to determine whether cross-Region features are supported between other Regions and your current Region. This operation supports pagination.</p> <p>To return information about the Regions that are enabled for your account, or all Regions, use the EC2 operation <code>DescribeRegions</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"> DescribeRegions</a> in the <i>Amazon EC2 API Reference</i>.</p>
		/// GET_DescribeSourceRegions #Action=DescribeSourceRegions
		/// </summary>
		/// <param name="RegionName"><p>The source Amazon Web Services Region name. For example, <code>us-east-1</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid Amazon Web Services Region name.</p> </li> </ul></param>
		/// <param name="MaxRecords"><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p></param>
		/// <param name="Marker">An optional pagination token provided by a previous <code>DescribeSourceRegions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeSourceRegionsAsync(string RegionName, int MaxRecords, string Marker, string[] Filters, GET_DescribeSourceRegionsAction Action, GET_DescribeSourceRegionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeSourceRegions?RegionName=" + (RegionName==null? "" : System.Uri.EscapeDataString(RegionName))+"&MaxRecords="+MaxRecords+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>.</p> <p>This command doesn't apply to RDS Custom.</p>
		/// GET_DescribeValidDBInstanceModifications #Action=DescribeValidDBInstanceModifications
		/// </summary>
		/// <param name="DBInstanceIdentifier">The customer identifier or the ARN of your DB instance.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeValidDBInstanceModificationsAsync(string DBInstanceIdentifier, GET_DescribeValidDBInstanceModificationsAction Action, GET_DescribeValidDBInstanceModificationsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeValidDBInstanceModifications?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Downloads all or a portion of the specified log file, up to 1 MB in size.</p> <p>This command doesn't apply to RDS Custom.</p>
		/// GET_DownloadDBLogFilePortion #Action=DownloadDBLogFilePortion
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="LogFileName">The name of the log file to be downloaded.</param>
		/// <param name="Marker">The pagination token provided in the previous request or "0". If the Marker parameter is specified the response includes only records beyond the marker until the end of the file or up to NumberOfLines.</param>
		/// <param name="NumberOfLines"><p>The number of lines to download. If the number of lines specified results in a file over 1 MB in size, the file is truncated at 1 MB in size.</p> <p>If the NumberOfLines parameter is specified, then the block of lines returned can be from the beginning or the end of the log file, depending on the value of the Marker parameter.</p> <ul> <li> <p>If neither Marker or NumberOfLines are specified, the entire log file is returned up to a maximum of 10000 lines, starting with the most recent log entries first.</p> </li> <li> <p>If NumberOfLines is specified and Marker isn't specified, then the most recent lines from the end of the log file are returned.</p> </li> <li> <p>If Marker is specified as "0", then the specified number of lines from the beginning of the log file are returned.</p> </li> <li> <p>You can download the log file in blocks of lines by specifying the size of the block using the NumberOfLines parameter, and by specifying a value of "0" for the Marker parameter in your first request. Include the Marker value returned in the response as the Marker value for the next request, continuing until the AdditionalDataPending response element returns false.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DownloadDBLogFilePortionAsync(string DBInstanceIdentifier, string LogFileName, string Marker, int NumberOfLines, GET_DownloadDBLogFilePortionAction Action, GET_DownloadDBLogFilePortionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DownloadDBLogFilePortion?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&LogFileName=" + (LogFileName==null? "" : System.Uri.EscapeDataString(LogFileName))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&NumberOfLines="+NumberOfLines+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Forces a failover for a DB cluster.</p> <p>For an Aurora DB cluster, failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary DB instance (the cluster writer).</p> <p>For a Multi-AZ DB cluster, failover for a DB cluster promotes one of the readable standby DB instances (read-only instances) in the DB cluster to be the primary DB instance (the cluster writer).</p> <p>An Amazon Aurora DB cluster automatically fails over to an Aurora Replica, if one exists, when the primary DB instance fails. A Multi-AZ DB cluster automatically fails over to a readable standby DB instance when the primary DB instance fails.</p> <p>To simulate a failure of a primary instance for testing, you can force a failover. Because each instance in a DB cluster has its own endpoint address, make sure to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_FailoverDBCluster #Action=FailoverDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>A DB cluster identifier to force a failover for. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul></param>
		/// <param name="TargetDBInstanceIdentifier"><p>The name of the DB instance to promote to the primary DB instance.</p> <p>Specify the DB instance identifier for an Aurora Replica or a Multi-AZ readable standby in the DB cluster, for example <code>mydbcluster-replica1</code>.</p> <p>This setting isn't supported for RDS for MySQL Multi-AZ DB clusters.</p></param>
		/// <returns>Success</returns>
		public async Task GET_FailoverDBClusterAsync(string DBClusterIdentifier, string TargetDBInstanceIdentifier, GET_FailoverDBClusterAction Action, GET_FailoverDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=FailoverDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&TargetDBInstanceIdentifier=" + (TargetDBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(TargetDBInstanceIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Initiates the failover process for an Aurora global database (<a>GlobalCluster</a>).</p> <p>A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.</p> <p>For more information about failing over an Amazon Aurora global database, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover">Managed planned failover for Amazon Aurora global databases</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action applies to <a>GlobalCluster</a> (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology.</p> </note>
		/// GET_FailoverGlobalCluster #Action=FailoverGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier"><p>Identifier of the Aurora global database (<a>GlobalCluster</a>) that should be failed over. The identifier is the unique key assigned by the user when the Aurora global database was created. In other words, it's the name of the Aurora global database that you want to fail over.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing <a>GlobalCluster</a> (Aurora global database).</p> </li> </ul>
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="TargetDbClusterIdentifier">Identifier of the secondary Aurora DB cluster that you want to promote to primary for the Aurora global database (<a>GlobalCluster</a>.) Use the Amazon Resource Name (ARN) for the identifier so that Aurora can locate the cluster in its Amazon Web Services Region.
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <returns>Success</returns>
		public async Task GET_FailoverGlobalClusterAsync(string GlobalClusterIdentifier, string TargetDbClusterIdentifier, GET_FailoverGlobalClusterAction Action, GET_FailoverGlobalClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=FailoverGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&TargetDbClusterIdentifier=" + (TargetDbClusterIdentifier==null? "" : System.Uri.EscapeDataString(TargetDbClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_ListTagsForResource #Action=ListTagsForResource
		/// </summary>
		/// <param name="ResourceName">The Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</param>
		/// <param name="Filters">This parameter isn't currently supported.</param>
		/// <returns>Success</returns>
		public async Task GET_ListTagsForResourceAsync(string ResourceName, string[] Filters, GET_ListTagsForResourceAction Action, GET_ListTagsForResourceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListTagsForResource?ResourceName=" + (ResourceName==null? "" : System.Uri.EscapeDataString(ResourceName))+"&"+string.Join("&", Filters.Select(z => $"Filters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Changes the audit policy state of a database activity stream to either locked (default) or unlocked. A locked policy is read-only, whereas an unlocked policy is read/write. If your activity stream is started and locked, you can unlock it, customize your audit policy, and then lock your activity stream. Restarting the activity stream isn't required. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/DBActivityStreams.Modifying.html"> Modifying a database activity stream</a> in the <i>Amazon RDS User Guide</i>. </p> <p>This operation is supported for RDS for Oracle and Microsoft SQL Server.</p>
		/// GET_ModifyActivityStream #Action=ModifyActivityStream
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the RDS for Oracle or Microsoft SQL Server DB instance. For example, <code>arn:aws:rds:us-east-1:12345667890:instance:my-orcl-db</code>.</param>
		/// <param name="AuditPolicyState">The audit policy state. When a policy is unlocked, it is read/write. When it is locked, it is read-only. You can edit your audit policy only when the activity stream is unlocked or stopped.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyActivityStreamAsync(string ResourceArn, AuditPolicyState AuditPolicyState, GET_ModifyActivityStreamAction Action, GET_ModifyActivityStreamVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyActivityStream?ResourceArn=" + (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"&AuditPolicyState=" + AuditPolicyState+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified Amazon Web Services Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified Amazon Web Services Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_ModifyCertificates #Action=ModifyCertificates
		/// </summary>
		/// <param name="CertificateIdentifier"><p>The new default certificate identifier to override the current one with.</p> <p>To determine the valid values, use the <code>describe-certificates</code> CLI command or the <code>DescribeCertificates</code> API operation.</p></param>
		/// <param name="RemoveCustomerOverride">A value that indicates whether to remove the override for the default certificate. If the override is removed, the default certificate is the system default.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyCertificatesAsync(string CertificateIdentifier, bool RemoveCustomerOverride, GET_ModifyCertificatesAction Action, GET_ModifyCertificatesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyCertificates?CertificateIdentifier=" + (CertificateIdentifier==null? "" : System.Uri.EscapeDataString(CertificateIdentifier))+"&RemoveCustomerOverride="+RemoveCustomerOverride+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Set the capacity of an Aurora Serverless v1 DB cluster to a specific value.</p> <p>Aurora Serverless v1 scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless v1 can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless v1, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless v1 from finding a scaling point might be dropped. For more information about scaling points, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling"> Autoscaling for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora Serverless v1 DB clusters.</p> </note>
		/// GET_ModifyCurrentDBClusterCapacity #Action=ModifyCurrentDBClusterCapacity
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster.</p> </li> </ul></param>
		/// <param name="Capacity"><p>The DB cluster capacity.</p> <p>When you change the capacity of a paused Aurora Serverless v1 DB cluster, it automatically resumes.</p> <p>Constraints:</p> <ul> <li> <p>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>, and <code>256</code>.</p> </li> <li> <p>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</p> </li> </ul></param>
		/// <param name="SecondsBeforeTimeout"><p>The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.</p> <p>Specify a value between 10 and 600 seconds.</p></param>
		/// <param name="TimeoutAction"><p>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code> or <code>RollbackCapacityChange</code>.</p> <p> <code>ForceApplyCapacityChange</code>, the default, sets the capacity to the specified value as soon as possible.</p> <p> <code>RollbackCapacityChange</code> ignores the capacity change if a scaling point isn't found in the timeout period.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyCurrentDBClusterCapacityAsync(string DBClusterIdentifier, int Capacity, int SecondsBeforeTimeout, string TimeoutAction, GET_ModifyCurrentDBClusterCapacityAction Action, GET_ModifyCurrentDBClusterCapacityVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyCurrentDBClusterCapacity?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&Capacity="+Capacity+"&SecondsBeforeTimeout="+SecondsBeforeTimeout+"&TimeoutAction=" + (TimeoutAction==null? "" : System.Uri.EscapeDataString(TimeoutAction))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the status of a custom engine version (CEV). You can find CEVs to modify by calling <code>DescribeDBEngineVersions</code>.</p> <note> <p>The MediaImport service that imports files from Amazon S3 to create CEVs isn't integrated with Amazon Web Services CloudTrail. If you turn on data logging for Amazon RDS in CloudTrail, calls to the <code>ModifyCustomDbEngineVersion</code> event aren't logged. However, you might see calls from the API gateway that accesses your Amazon S3 bucket. These calls originate from the MediaImport service for the <code>ModifyCustomDbEngineVersion</code> event.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.modify">Modifying CEV status</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_ModifyCustomDBEngineVersion #Action=ModifyCustomDBEngineVersion
		/// </summary>
		/// <param name="Engine">The DB engine. The only supported values are <code>custom-oracle-ee</code> and <code>custom-oracle-ee-cdb</code>.
		/// Min length: 1
		/// Max length: 35
		// </param>
		/// <param name="EngineVersion">The custom engine version (CEV) that you want to modify. This option is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Amazon Web Services Region.
		/// Min length: 1
		/// Max length: 60
		// </param>
		/// <param name="Description">An optional description of your CEV.
		/// Min length: 1
		/// Max length: 1000
		// </param>
		/// <param name="Status"><p>The availability status to be assigned to the CEV. Valid values are as follows:</p> <dl> <dt>available</dt> <dd> <p>You can use this CEV to create a new RDS Custom DB instance.</p> </dd> <dt>inactive</dt> <dd> <p>You can create a new RDS Custom instance by restoring a DB snapshot with this CEV. You can't patch or create new instances with this CEV.</p> </dd> </dl> <p>You can change any status to any status. A typical reason to change status is to prevent the accidental use of a CEV, or to make a deprecated CEV eligible for use again. For example, you might change the status of your CEV from <code>available</code> to <code>inactive</code>, and from <code>inactive</code> back to <code>available</code>. To change the availability status of the CEV, it must not currently be in use by an RDS Custom instance, snapshot, or automated backup.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyCustomDBEngineVersionAsync(string Engine, string EngineVersion, string Description, GET_ModifyCustomDBEngineVersionStatus Status, GET_ModifyCustomDBEngineVersionAction Action, GET_ModifyCustomDBEngineVersionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyCustomDBEngineVersion?Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&Status=" + Status+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the settings of an Amazon Aurora DB cluster or a Multi-AZ DB cluster. You can change one or more settings by specifying these parameters and the new values in the request.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_ModifyDBCluster #Action=ModifyDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster.</p> </li> </ul></param>
		/// <param name="NewDBClusterIdentifier"><p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p></param>
		/// <param name="ApplyImmediately"><p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is disabled, changes to the DB cluster are applied during the next maintenance window.</p> <p>Most modifications can be applied immediately or during the next scheduled maintenance window. Some modifications, such as turning on deletion protection and changing the master password, are applied immediately—regardless of when you choose to apply them.</p> <p>By default, this parameter is disabled.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained. Specify a minimum value of <code>1</code>.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Default: <code>1</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul></param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to use for the DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of EC2 VPC security groups to associate with this DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Port"><p>The port number on which the DB cluster accepts connections.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p></param>
		/// <param name="MasterUserPassword"><p>The new password for the master database user.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 8 to 41 characters.</p> </li> <li> <p>Can contain any printable ASCII character except "/", """, or "@".</p> </li> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> </ul></param>
		/// <param name="OptionGroupName"><p>The option group to associate the DB cluster with.</p> <p>DB clusters are associated with a default option group that can't be modified.</p></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Days must be one of <code>Mon | Tue | Wed | Thu | Fri | Sat | Sun</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to <code>0</code>.</p> <p>Valid for Cluster Type: Aurora MySQL DB clusters only</p> <p>Default: <code>0</code> </p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="CloudwatchLogsExportConfiguration"><p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB cluster.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>The following values are valid for each DB engine:</p> <ul> <li> <p>Aurora MySQL - <code>audit | error | general | slowquery</code> </p> </li> <li> <p>Aurora PostgreSQL - <code>postgresql</code> </p> </li> <li> <p>RDS for MySQL - <code>error | general | slowquery</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li> </ul> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch"> Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless <code>ApplyImmediately</code> is enabled.</p> <p>If the cluster that you're modifying has one or more read replicas, all replicas must be running an engine version that's the same or later than the version you specify.</p> <p>To list all of the available engine versions for Aurora MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="AllowMajorVersionUpgrade"><p>Specifies whether major version upgrades are allowed.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>You must allow major version upgrades when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the DB cluster's current version.</p> </li> </ul></param>
		/// <param name="DBInstanceParameterGroupName"><p>The name of the DB parameter group to apply to all instances of the DB cluster.</p> <note> <p>When you apply a parameter group using the <code>DBInstanceParameterGroupName</code> parameter, the DB cluster isn't rebooted automatically. Also, parameter changes are applied immediately rather than during the next maintenance window.</p> </note> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Default: The existing name setting</p> <p>Constraints:</p> <ul> <li> <p>The DB parameter group must be in the same DB parameter group family as this DB cluster.</p> </li> <li> <p>The <code>DBInstanceParameterGroupName</code> parameter is valid in combination with the <code>AllowMajorVersionUpgrade</code> parameter for a major version upgrade only.</p> </li> </ul></param>
		/// <param name="Domain"><p>The Active Directory directory ID to move the DB cluster to. Specify <code>none</code> to remove the cluster from its current domain. The domain must be created prior to this operation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="ScalingConfiguration"><p>The scaling properties of the DB cluster. You can only modify scaling properties for DB clusters in <code>serverless</code> DB engine mode.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DeletionProtection"><p>Specifies whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EnableHttpEndpoint"><p>Specifies whether to enable the HTTP endpoint for an Aurora Serverless v1 DB cluster. By default, the HTTP endpoint is disabled.</p> <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless v1 DB cluster. You can also query your database from inside the RDS console with the query editor.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="CopyTagsToSnapshot"><p>Specifies whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EnableGlobalWriteForwarding"><p>Specifies whether to enable this DB cluster to forward write operations to the primary cluster of a global cluster (Aurora global database). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.</p> <p>You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster, and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by a global cluster API operation, but it does nothing until then.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="DBClusterInstanceClass"><p>The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example <code>db.m6gd.xlarge</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"> DB Instance Class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="StorageType"><p>The storage type to associate with the DB cluster.</p> <p>For information on storage types for Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type">Storage configurations for Amazon Aurora DB clusters</a>. For information on storage types for Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings">Settings for creating Multi-AZ DB clusters</a>.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora | aurora-iopt1</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul> <p>Default:</p> <ul> <li> <p>Aurora DB clusters - <code>aurora</code> </p> </li> <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>Must be a multiple between .5 and 50 of the storage amount for the DB cluster.</p> </li> </ul></param>
		/// <param name="AutoMinorVersionUpgrade"><p>Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, also set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="EnablePerformanceInsights"><p>Specifies whether to turn on Performance Insights for the DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod"><p>The number of days to retain Performance Insights data.</p> <p>Valid for Cluster Type: Multi-AZ DB clusters only</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS issues an error.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB cluster.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters only</p> <p>Valid Values: <code>IPV4 | DUAL</code> </p></param>
		/// <param name="ManageMasterUserPassword"><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>If the DB cluster doesn't manage the master user password with Amazon Web Services Secrets Manager, you can turn on this management. In this case, you can't specify <code>MasterUserPassword</code>.</p> <p>If the DB cluster already manages the master user password with Amazon Web Services Secrets Manager, and you specify that the master user password is not managed with Amazon Web Services Secrets Manager, then you must specify <code>MasterUserPassword</code>. In this case, RDS deletes the secret and uses the new password for the master user specified by <code>MasterUserPassword</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="RotateMasterUserPassword"><p>Specifies whether to rotate the secret managed by Amazon Web Services Secrets Manager for the master user password.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster. The secret value contains the updated password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Constraints:</p> <ul> <li> <p>You must apply the change immediately when rotating the master user password.</p> </li> </ul></param>
		/// <param name="MasterUserSecretKmsKeyId"><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if both of the following conditions are met:</p> <ul> <li> <p>The DB cluster doesn't manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If the DB cluster already manages the master user password in Amazon Web Services Secrets Manager, you can't change the KMS key that is used to encrypt the secret.</p> </li> <li> <p>You are turning on <code>ManageMasterUserPassword</code> to manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If you are turning on <code>ManageMasterUserPassword</code> and don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> </li> </ul> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EngineMode"><p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <note> <p>The DB engine mode can be modified only from <code>serverless</code> to <code>provisioned</code>.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html"> CreateDBCluster</a>.</p> <p>Valid for Cluster Type: Aurora DB clusters only</p></param>
		/// <param name="AllowEngineModeChange"><p>Specifies whether engine mode changes from <code>serverless</code> to <code>provisioned</code> are allowed.</p> <p>Valid for Cluster Type: Aurora Serverless v1 DB clusters only</p> <p>Constraints:</p> <ul> <li> <p>You must allow engine mode changes when specifying a different value for the <code>EngineMode</code> parameter from the DB cluster's current engine mode.</p> </li> </ul></param>
		/// <param name="EnableLocalWriteForwarding"><p>Specifies whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterAsync(
					string DBClusterIdentifier, 
					string NewDBClusterIdentifier, 
					bool ApplyImmediately, 
					int BackupRetentionPeriod, 
					string DBClusterParameterGroupName, 
					string[] VpcSecurityGroupIds, 
					int Port, 
					string MasterUserPassword, 
					string OptionGroupName, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					GET_ModifyDBClusterCloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration, 
					string EngineVersion, 
					bool AllowMajorVersionUpgrade, 
					string DBInstanceParameterGroupName, 
					string Domain, 
					string DomainIAMRoleName, 
					GET_ModifyDBClusterScalingConfiguration ScalingConfiguration, 
					bool DeletionProtection, 
					bool EnableHttpEndpoint, 
					bool CopyTagsToSnapshot, 
					bool EnableGlobalWriteForwarding, 
					string DBClusterInstanceClass, 
					int AllocatedStorage, 
					string StorageType, 
					int Iops, 
					bool AutoMinorVersionUpgrade, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					GET_ModifyDBClusterServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration, 
					string NetworkType, 
					bool ManageMasterUserPassword, 
					bool RotateMasterUserPassword, 
					string MasterUserSecretKmsKeyId, 
					string EngineMode, 
					bool AllowEngineModeChange, 
					bool EnableLocalWriteForwarding, 
					GET_ModifyDBClusterAction Action, 
					GET_ModifyDBClusterVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&NewDBClusterIdentifier=" + (NewDBClusterIdentifier==null? "" : System.Uri.EscapeDataString(NewDBClusterIdentifier))+"&ApplyImmediately="+ApplyImmediately+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Port="+Port+"&MasterUserPassword=" + (MasterUserPassword==null? "" : System.Uri.EscapeDataString(MasterUserPassword))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : System.Uri.EscapeDataString(PreferredMaintenanceWindow))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&CloudwatchLogsExportConfiguration=" + CloudwatchLogsExportConfiguration+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&AllowMajorVersionUpgrade="+AllowMajorVersionUpgrade+"&DBInstanceParameterGroupName=" + (DBInstanceParameterGroupName==null? "" : System.Uri.EscapeDataString(DBInstanceParameterGroupName))+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&ScalingConfiguration=" + ScalingConfiguration+"&DeletionProtection="+DeletionProtection+"&EnableHttpEndpoint="+EnableHttpEndpoint+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&EnableGlobalWriteForwarding="+EnableGlobalWriteForwarding+"&DBClusterInstanceClass=" + (DBClusterInstanceClass==null? "" : System.Uri.EscapeDataString(DBClusterInstanceClass))+"&AllocatedStorage="+AllocatedStorage+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&Iops="+Iops+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : System.Uri.EscapeDataString(MonitoringRoleArn))+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : System.Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&ServerlessV2ScalingConfiguration=" + ServerlessV2ScalingConfiguration+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&ManageMasterUserPassword="+ManageMasterUserPassword+"&RotateMasterUserPassword="+RotateMasterUserPassword+"&MasterUserSecretKmsKeyId=" + (MasterUserSecretKmsKeyId==null? "" : System.Uri.EscapeDataString(MasterUserSecretKmsKeyId))+"&EngineMode=" + (EngineMode==null? "" : System.Uri.EscapeDataString(EngineMode))+"&AllowEngineModeChange="+AllowEngineModeChange+"&EnableLocalWriteForwarding="+EnableLocalWriteForwarding+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_ModifyDBClusterEndpoint #Action=ModifyDBClusterEndpoint
		/// </summary>
		/// <param name="DBClusterEndpointIdentifier">The identifier of the endpoint to modify. This parameter is stored as a lowercase string.</param>
		/// <param name="EndpointType">The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</param>
		/// <param name="StaticMembers">List of DB instance identifiers that are part of the custom endpoint group.</param>
		/// <param name="ExcludedMembers">List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterEndpointAsync(string DBClusterEndpointIdentifier, string EndpointType, string[] StaticMembers, string[] ExcludedMembers, GET_ModifyDBClusterEndpointAction Action, GET_ModifyDBClusterEndpointVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBClusterEndpoint?DBClusterEndpointIdentifier=" + (DBClusterEndpointIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterEndpointIdentifier))+"&EndpointType=" + (EndpointType==null? "" : System.Uri.EscapeDataString(EndpointType))+"&"+string.Join("&", StaticMembers.Select(z => $"StaticMembers={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ExcludedMembers.Select(z => $"ExcludedMembers={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> operation to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless v1 cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_ModifyDBClusterParameterGroup #Action=ModifyDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName">The name of the DB cluster parameter group to modify.</param>
		/// <param name="Parameters"><p>A list of parameters in the DB cluster parameter group to modify.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <note> <p>You can use the <code>immediate</code> value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters.</p> <p>When the application method is <code>immediate</code>, changes to dynamic parameters are applied immediately to the DB clusters associated with the parameter group. When the application method is <code>pending-reboot</code>, changes to dynamic and static parameters are applied after a reboot without failover to the DB clusters associated with the parameter group.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterParameterGroupAsync(string DBClusterParameterGroupName, string[] Parameters, GET_ModifyDBClusterParameterGroupAction Action, GET_ModifyDBClusterParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+string.Join("&", Parameters.Select(z => $"Parameters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot is public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API operation. The accounts are returned as values for the <code>restore</code> attribute.</p>
		/// GET_ModifyDBClusterSnapshotAttribute #Action=ModifyDBClusterSnapshotAttribute
		/// </summary>
		/// <param name="DBClusterSnapshotIdentifier">The identifier for the DB cluster snapshot to modify the attributes for.</param>
		/// <param name="AttributeName"><p>The name of the DB cluster snapshot attribute to modify.</p> <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot, set this value to <code>restore</code>.</p> <note> <p>To view the list of attributes available to modify, use the <a>DescribeDBClusterSnapshotAttributes</a> API operation.</p> </note></param>
		/// <param name="ValuesToAdd"><p>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB cluster snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p></param>
		/// <param name="ValuesToRemove"><p>A list of DB cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB cluster snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore a manual DB cluster snapshot.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBClusterSnapshotAttributeAsync(string DBClusterSnapshotIdentifier, string AttributeName, string[] ValuesToAdd, string[] ValuesToRemove, GET_ModifyDBClusterSnapshotAttributeAction Action, GET_ModifyDBClusterSnapshotAttributeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBClusterSnapshotAttribute?DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&AttributeName=" + (AttributeName==null? "" : System.Uri.EscapeDataString(AttributeName))+"&"+string.Join("&", ValuesToAdd.Select(z => $"ValuesToAdd={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ValuesToRemove.Select(z => $"ValuesToRemove={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>.
		/// GET_ModifyDBInstance #Action=ModifyDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The identifier of DB instance to modify. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB instance.</p> </li> </ul></param>
		/// <param name="AllocatedStorage"><p>The new amount of storage in gibibytes (GiB) to allocate for the DB instance.</p> <p>For RDS for MariaDB, RDS for MySQL, RDS for Oracle, and RDS for PostgreSQL, the value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>For the valid values for allocated storage for each engine, see <code>CreateDBInstance</code>.</p></param>
		/// <param name="DBInstanceClass"><p>The new compute and memory capacity of the DB instance, for example <code>db.m4.large</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">Aurora DB instance classes</a> in the <i>Amazon Aurora User Guide</i>. For RDS Custom, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits.html#custom-reqs-limits.instances">DB instance class support for RDS Custom for Oracle</a> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html#custom-reqs-limits.instancesMS"> DB instance class support for RDS Custom for SQL Server</a>.</p> <p>If you modify the DB instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless you specify <code>ApplyImmediately</code> in your request. </p> <p>Default: Uses existing setting</p></param>
		/// <param name="DBSubnetGroupName"><p>The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. If your DB instance isn't in a VPC, you can also use this parameter to move your DB instance into a VPC. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Non-VPC2VPC">Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Changing the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you enable <code>ApplyImmediately</code>.</p> <p>This parameter doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DB subnet group.</p> </li> </ul> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="DBSecurityGroups"><p>A list of DB security groups to authorize on this DB instance. Changing this setting doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DB security groups.</p> </li> </ul></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of Amazon EC2 VPC security groups to associate with this DB instance. This change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.)</p> </li> <li> <p>RDS Custom</p> </li> </ul> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing VPC security group IDs.</p> </li> </ul></param>
		/// <param name="ApplyImmediately"><p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB instance. By default, this parameter is disabled.</p> <p>If this parameter is disabled, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot. Review the table of parameters in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html">Modifying a DB Instance</a> in the <i>Amazon RDS User Guide</i> to see the impact of enabling or disabling <code>ApplyImmediately</code> for each modified parameter and to determine when the changes are applied.</p></param>
		/// <param name="MasterUserPassword"><p>The new password for the master user.</p> <p>Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response.</p> <note> <p>Amazon RDS API operations never return the password, so this action provides a way to regain access to a primary instance user if the password is lost. This includes restoring privileges that might have been accidentally revoked.</p> </note> <p>This setting doesn't apply to the following DB instances:</p> <ul> <li> <p>Amazon Aurora (The password for the master user is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.)</p> </li> <li> <p>RDS Custom</p> </li> </ul> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> <li> <p>Can include any printable ASCII character except "/", """, or "@".</p> </li> </ul> <p>Length Constraints:</p> <ul> <li> <p>RDS for MariaDB - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.</p> </li> <li> <p>RDS for MySQL - Must contain from 8 to 41 characters.</p> </li> <li> <p>RDS for Oracle - Must contain from 8 to 30 characters.</p> </li> <li> <p>RDS for PostgreSQL - Must contain from 8 to 128 characters.</p> </li> </ul></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to apply to the DB instance.</p> <p>Changing this setting doesn't result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. In this case, the DB instance isn't rebooted automatically, and the parameter changes aren't applied during the next maintenance window. However, if you modify dynamic parameters in the newly associated DB parameter group, these changes are applied immediately without a reboot.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be in the same DB parameter group family as the DB instance.</p> </li> </ul></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <note> <p>Enabling and disabling backups can result in a brief I/O suspension that lasts from a few seconds to a few minutes, depending on the size and class of your DB instance.</p> </note> <p>These changes are applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If you change the parameter from one non-zero value to another non-zero value, the change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The retention period for automated backups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> <li> <p>Can't be set to 0 for an RDS Custom for Oracle DB instance.</p> </li> </ul></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code> parameter. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible. The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <code>ModifyDBCluster</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur, which might result in an outage. Changing this parameter doesn't result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter causes a reboot of the DB instance. If you change this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>The day values must be <code>mon | tue | wed | thu | fri | sat | sun</code>. </p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="MultiAZ"><p>Specifies whether the DB instance is a Multi-AZ deployment. Changing this parameter doesn't result in an outage. The change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request.</p> <p>For major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.</p> <p>If you specify only a major version, Amazon RDS updates the DB instance to the default minor version if the current minor version is lower. For information about valid engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>.</p> <p>If the instance that you're modifying is acting as a read replica, the engine version that you specify must be the same or higher than the version that the source DB instance or cluster is running.</p> <p>In RDS Custom for Oracle, this parameter is supported for read replicas only if they are in the <code>PATCH_DB_FAILURE</code> lifecycle.</p></param>
		/// <param name="AllowMajorVersionUpgrade"><p>Specifies whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Major version upgrades must be allowed when specifying a value for the <code>EngineVersion</code> parameter that's a different major version than the DB instance's current version.</p> </li> </ul></param>
		/// <param name="AutoMinorVersionUpgrade"><p>Specifies whether minor version upgrades are applied automatically to the DB instance during the maintenance window. An outage occurs when all the following conditions are met:</p> <ul> <li> <p>The automatic upgrade is enabled for the maintenance window.</p> </li> <li> <p>A newer minor version is available.</p> </li> <li> <p>RDS has enabled automatic patching for the engine version.</p> </li> </ul> <p>If any of the preceding conditions isn't met, Amazon RDS applies the change as soon as possible and doesn't cause an outage.</p> <p>For an RDS Custom DB instance, don't enable this setting. Otherwise, the operation returns an error.</p></param>
		/// <param name="LicenseModel"><p>The license model for the DB instance.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p>RDS for MariaDB - <code>general-public-license</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>license-included</code> </p> </li> <li> <p>RDS for MySQL - <code>general-public-license</code> </p> </li> <li> <p>RDS for Oracle - <code>bring-your-own-license | license-included</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>postgresql-license</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>The new Provisioned IOPS (I/O operations per second) value for the RDS instance.</p> <p>Changing this setting doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request. If you are migrating from Provisioned IOPS to standard storage, set this value to 0. The DB instance will require a reboot for the change in storage type to take effect.</p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance.</p> <p>Constraints:</p> <ul> <li> <p>For RDS for MariaDB, RDS for MySQL, RDS for Oracle, and RDS for PostgreSQL - The value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> </li> </ul> <p>Default: Uses existing setting</p></param>
		/// <param name="OptionGroupName"><p>The option group to associate the DB instance with.</p> <p>Changing this parameter doesn't result in an outage, with one exception. If the parameter change results in an option group that enables OEM, it can cause a brief period, lasting less than a second, during which new connections are rejected but existing connections aren't interrupted.</p> <p>The change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is enabled for this request.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance after it is associated with a DB instance.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="NewDBInstanceIdentifier"><p>The new identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot occurs immediately if you enable <code>ApplyImmediately</code>, or will occur during the next maintenance window if you disable <code>ApplyImmediately</code>. This value is stored as a lowercase string.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="StorageType"><p>The storage type to associate with the DB instance.</p> <p>If you specify Provisioned IOPS (<code>io1</code>), you must also include a value for the <code>Iops</code> parameter.</p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a read replica for the instance, and creating a DB snapshot of the instance.</p> <p>Valid Values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>Default: <code>io1</code>, if the <code>Iops</code> parameter is specified. Otherwise, <code>gp2</code>.</p></param>
		/// <param name="TdeCredentialArn"><p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="TdeCredentialPassword"><p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="CACertificateIdentifier"><p>The CA certificate identifier to use for the DB instance's server certificate.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="Domain"><p>The Active Directory directory ID to move the DB instance to. Specify <code>none</code> to remove the instance from its current domain. You must create the domain before this operation. Currently, you can create only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="DomainFqdn"><p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p></param>
		/// <param name="DomainOu"><p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p></param>
		/// <param name="DomainAuthSecretArn"><p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p></param>
		/// <param name="DomainDnsIps"><p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p></param>
		/// <param name="CopyTagsToSnapshot"><p>Specifies whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags aren't copied.</p> <p>This setting doesn't apply to Amazon Aurora DB instances. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. For more information, see <code>ModifyDBCluster</code>.</p></param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collection of Enhanced Monitoring metrics, specify <code>0</code>.</p> <p>If <code>MonitoringRoleArn</code> is specified, set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p> <p>Default: <code>0</code> </p></param>
		/// <param name="DBPortNumber"><p>The port number on which the database accepts connections.</p> <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values specified for options in the option group for the DB instance.</p> <p>If you change the <code>DBPortNumber</code> value, your database restarts regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values: <code>1150-65535</code> </p> <p>Default:</p> <ul> <li> <p>Amazon Aurora - <code>3306</code> </p> </li> <li> <p>RDS for MariaDB - <code>3306</code> </p> </li> <li> <p>RDS for Microsoft SQL Server - <code>1433</code> </p> </li> <li> <p>RDS for MySQL - <code>3306</code> </p> </li> <li> <p>RDS for Oracle - <code>1521</code> </p> </li> <li> <p>RDS for PostgreSQL - <code>5432</code> </p> </li> </ul> <p>Constraints:</p> <ul> <li> <p>For RDS for Microsoft SQL Server, the value can't be <code>1234</code>, <code>1434</code>, <code>3260</code>, <code>3343</code>, <code>3389</code>, <code>47001</code>, or <code>49152-49156</code>.</p> </li> </ul></param>
		/// <param name="PubliclyAccessible"><p>Specifies whether the DB instance is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p> <code>PubliclyAccessible</code> only applies to DB instances in a VPC. The DB instance must be part of a public subnet and <code>PubliclyAccessible</code> must be enabled for it to be publicly accessible.</p> <p>Changes to the <code>PubliclyAccessible</code> parameter are applied immediately regardless of the value of the <code>ApplyImmediately</code> parameter.</p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole">To create an IAM role for Amazon RDS Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="DisableDomain">Specifies whether to remove the DB instance from the Active Directory domain.</param>
		/// <param name="PromotionTier"><p>The order of priority in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance"> Fault Tolerance for an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Default: <code>1</code> </p> <p>Valid Values: <code>0 - 15</code> </p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>This setting doesn't apply to Amazon Aurora. Mapping Amazon Web Services IAM accounts to database accounts is managed by the DB cluster.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="EnablePerformanceInsights"><p>Specifies whether to enable Performance Insights for the DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod"><p>The number of days to retain Performance Insights data.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p> <p>Valid Values:</p> <ul> <li> <p> <code>7</code> </p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li> <li> <p> <code>731</code> </p> </li> </ul> <p>Default: <code>7</code> days</p> <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS returns an error.</p></param>
		/// <param name="CloudwatchLogsExportConfiguration"><p>The log types to be enabled for export to CloudWatch Logs for a specific DB instance.</p> <p>A change to the <code>CloudwatchLogsExportConfiguration</code> parameter is always applied to the DB instance immediately. Therefore, the <code>ApplyImmediately</code> parameter has no effect.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="ProcessorFeatures"><p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="UseDefaultProcessorFeatures"><p>Specifies whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="DeletionProtection">Specifies whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</param>
		/// <param name="MaxAllocatedStorage"><p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="CertificateRotationRestart"><p>Specifies whether the DB instance is restarted when you rotate your SSL/TLS certificate.</p> <p>By default, the DB instance is restarted when you rotate your SSL/TLS certificate. The certificate is not updated until the DB instance is restarted.</p> <important> <p>Set this parameter only if you are <i>not</i> using SSL/TLS to connect to the DB instance.</p> </important> <p>If you are using SSL/TLS to connect to the DB instance, follow the appropriate instructions for your DB engine to rotate your SSL/TLS certificate:</p> <ul> <li> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate.</a> in the <i>Amazon RDS User Guide.</i> </p> </li> <li> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p> </li> </ul> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="ReplicaMode"><p>A value that sets the open mode of a replica database to either mounted or read-only.</p> <note> <p>Currently, this parameter is only supported for Oracle DB instances.</p> </note> <p>Mounted DB replicas are included in Oracle Enterprise Edition. The main use case for mounted replicas is cross-Region disaster recovery. The primary database doesn't use Active Data Guard to transmit information to the mounted replica. Because it doesn't accept user connections, a mounted replica can't serve a read-only workload. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html">Working with Oracle Read Replicas for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="EnableCustomerOwnedIp"><p>Specifies whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p></param>
		/// <param name="AwsBackupRecoveryPointArn"><p>The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services Backup.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p>
		/// Min length: 43
		/// Max length: 350
		// </param>
		/// <param name="AutomationMode">The automation mode of the RDS Custom DB instance. If <code>full</code>, the DB instance automates monitoring and instance recovery. If <code>all paused</code>, the instance pauses automation for the duration set by <code>ResumeFullAutomationModeMinutes</code>.</param>
		/// <param name="ResumeFullAutomationModeMinutes"><p>The number of minutes to pause the automation. When the time period ends, RDS Custom resumes full automation.</p> <p>Default: <code>60</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be at least 60.</p> </li> <li> <p>Must be no more than 1,440.</p> </li> </ul></param>
		/// <param name="NetworkType"><p>The network type of the DB instance.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Values: <code>IPV4 | DUAL</code> </p></param>
		/// <param name="StorageThroughput"><p>The storage throughput value for the DB instance.</p> <p>This setting applies only to the <code>gp3</code> storage type.</p> <p>This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.</p></param>
		/// <param name="ManageMasterUserPassword"><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>If the DB instance doesn't manage the master user password with Amazon Web Services Secrets Manager, you can turn on this management. In this case, you can't specify <code>MasterUserPassword</code>.</p> <p>If the DB instance already manages the master user password with Amazon Web Services Secrets Manager, and you specify that the master user password is not managed with Amazon Web Services Secrets Manager, then you must specify <code>MasterUserPassword</code>. In this case, Amazon RDS deletes the secret and uses the new password for the master user specified by <code>MasterUserPassword</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul></param>
		/// <param name="RotateMasterUserPassword"><p>Specifies whether to rotate the secret managed by Amazon Web Services Secrets Manager for the master user password.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster. The secret value contains the updated password.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>You must apply the change immediately when rotating the master user password.</p> </li> </ul></param>
		/// <param name="MasterUserSecretKmsKeyId"><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if both of the following conditions are met:</p> <ul> <li> <p>The DB instance doesn't manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If the DB instance already manages the master user password in Amazon Web Services Secrets Manager, you can't change the KMS key used to encrypt the secret.</p> </li> <li> <p>You are turning on <code>ManageMasterUserPassword</code> to manage the master user password in Amazon Web Services Secrets Manager.</p> <p>If you are turning on <code>ManageMasterUserPassword</code> and don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> </li> </ul> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <param name="Engine"><p>The target Oracle DB engine when you convert a non-CDB to a CDB. This intermediate step is necessary to upgrade an Oracle Database 19c non-CDB to an Oracle Database 21c CDB.</p> <p>Note the following requirements:</p> <ul> <li> <p>Make sure that you specify <code>oracle-ee-cdb</code> or <code>oracle-se2-cdb</code>.</p> </li> <li> <p>Make sure that your DB engine runs Oracle Database 19c with an April 2021 or later RU.</p> </li> </ul> <p>Note the following limitations:</p> <ul> <li> <p>You can't convert a CDB to a non-CDB.</p> </li> <li> <p>You can't convert a replica database.</p> </li> <li> <p>You can't convert a non-CDB to a CDB and upgrade the engine version in the same command.</p> </li> <li> <p>You can't convert the existing custom parameter or option group when it has options or parameters that are permanent or persistent. In this situation, the DB instance reverts to the default option and parameter group. To avoid reverting to the default, specify a new parameter group with <code>--db-parameter-group-name</code> and a new option group with <code>--option-group-name</code>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBInstanceAsync(
					string DBInstanceIdentifier, 
					int AllocatedStorage, 
					string DBInstanceClass, 
					string DBSubnetGroupName, 
					string[] DBSecurityGroups, 
					string[] VpcSecurityGroupIds, 
					bool ApplyImmediately, 
					string MasterUserPassword, 
					string DBParameterGroupName, 
					int BackupRetentionPeriod, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					bool MultiAZ, 
					string EngineVersion, 
					bool AllowMajorVersionUpgrade, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					int Iops, 
					string OptionGroupName, 
					string NewDBInstanceIdentifier, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					string CACertificateIdentifier, 
					string Domain, 
					string DomainFqdn, 
					string DomainOu, 
					string DomainAuthSecretArn, 
					string[] DomainDnsIps, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					int DBPortNumber, 
					bool PubliclyAccessible, 
					string MonitoringRoleArn, 
					string DomainIAMRoleName, 
					bool DisableDomain, 
					int PromotionTier, 
					bool EnableIAMDatabaseAuthentication, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					GET_ModifyDBInstanceCloudwatchLogsExportConfiguration CloudwatchLogsExportConfiguration, 
					string[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					bool DeletionProtection, 
					int MaxAllocatedStorage, 
					bool CertificateRotationRestart, 
					GET_ModifyDBInstanceReplicaMode ReplicaMode, 
					bool EnableCustomerOwnedIp, 
					string AwsBackupRecoveryPointArn, 
					GET_ModifyDBInstanceAutomationMode AutomationMode, 
					int ResumeFullAutomationModeMinutes, 
					string NetworkType, 
					int StorageThroughput, 
					bool ManageMasterUserPassword, 
					bool RotateMasterUserPassword, 
					string MasterUserSecretKmsKeyId, 
					string Engine, 
					GET_ModifyDBInstanceAction Action, 
					GET_ModifyDBInstanceVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&"+string.Join("&", DBSecurityGroups.Select(z => $"DBSecurityGroups={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&ApplyImmediately="+ApplyImmediately+"&MasterUserPassword=" + (MasterUserPassword==null? "" : System.Uri.EscapeDataString(MasterUserPassword))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : System.Uri.EscapeDataString(PreferredMaintenanceWindow))+"&MultiAZ="+MultiAZ+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&AllowMajorVersionUpgrade="+AllowMajorVersionUpgrade+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : System.Uri.EscapeDataString(LicenseModel))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&NewDBInstanceIdentifier=" + (NewDBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(NewDBInstanceIdentifier))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : System.Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : System.Uri.EscapeDataString(TdeCredentialPassword))+"&CACertificateIdentifier=" + (CACertificateIdentifier==null? "" : System.Uri.EscapeDataString(CACertificateIdentifier))+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainFqdn=" + (DomainFqdn==null? "" : System.Uri.EscapeDataString(DomainFqdn))+"&DomainOu=" + (DomainOu==null? "" : System.Uri.EscapeDataString(DomainOu))+"&DomainAuthSecretArn=" + (DomainAuthSecretArn==null? "" : System.Uri.EscapeDataString(DomainAuthSecretArn))+"&"+string.Join("&", DomainDnsIps.Select(z => $"DomainDnsIps={System.Uri.EscapeDataString(z.ToString())}"))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&DBPortNumber="+DBPortNumber+"&PubliclyAccessible="+PubliclyAccessible+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : System.Uri.EscapeDataString(MonitoringRoleArn))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&DisableDomain="+DisableDomain+"&PromotionTier="+PromotionTier+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : System.Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&CloudwatchLogsExportConfiguration=" + CloudwatchLogsExportConfiguration+"&"+string.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={System.Uri.EscapeDataString(z.ToString())}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DeletionProtection="+DeletionProtection+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&CertificateRotationRestart="+CertificateRotationRestart+"&ReplicaMode=" + ReplicaMode+"&EnableCustomerOwnedIp="+EnableCustomerOwnedIp+"&AwsBackupRecoveryPointArn=" + (AwsBackupRecoveryPointArn==null? "" : System.Uri.EscapeDataString(AwsBackupRecoveryPointArn))+"&AutomationMode=" + AutomationMode+"&ResumeFullAutomationModeMinutes="+ResumeFullAutomationModeMinutes+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&StorageThroughput="+StorageThroughput+"&ManageMasterUserPassword="+ManageMasterUserPassword+"&RotateMasterUserPassword="+RotateMasterUserPassword+"&MasterUserSecretKmsKeyId=" + (MasterUserSecretKmsKeyId==null? "" : System.Uri.EscapeDataString(MasterUserSecretKmsKeyId))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>
		/// GET_ModifyDBParameterGroup #Action=ModifyDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing <code>DBParameterGroup</code>.</p> </li> </ul></param>
		/// <param name="Parameters"><p>An array of parameter names, values, and the application methods for the parameter update. At least one parameter name, value, and application method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <p>You can use the <code>immediate</code> value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters.</p> <p>When the application method is <code>immediate</code>, changes to dynamic parameters are applied immediately to the DB instances associated with the parameter group.</p> <p>When the application method is <code>pending-reboot</code>, changes to dynamic and static parameters are applied after a reboot without failover to the DB instances associated with the parameter group.</p> <note> <p>You can't use <code>pending-reboot</code> with dynamic parameters on RDS for SQL Server DB instances. Use <code>immediate</code>.</p> </note> <p>For more information on modifying DB parameters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html">Working with DB parameter groups</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBParameterGroupAsync(string DBParameterGroupName, string[] Parameters, GET_ModifyDBParameterGroupAction Action, GET_ModifyDBParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&"+string.Join("&", Parameters.Select(z => $"Parameters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Changes the settings for an existing DB proxy.
		/// GET_ModifyDBProxy #Action=ModifyDBProxy
		/// </summary>
		/// <param name="DBProxyName">The identifier for the <code>DBProxy</code> to modify.</param>
		/// <param name="NewDBProxyName">The new identifier for the <code>DBProxy</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</param>
		/// <param name="Auth">The new authentication settings for the <code>DBProxy</code>.</param>
		/// <param name="RequireTLS">Whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy, even if the associated database doesn't use TLS.</param>
		/// <param name="IdleClientTimeout">The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.</param>
		/// <param name="DebugLogging">Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager.</param>
		/// <param name="SecurityGroups">The new list of security groups for the <code>DBProxy</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBProxyAsync(string DBProxyName, string NewDBProxyName, UserAuthConfig[] Auth, bool RequireTLS, int IdleClientTimeout, bool DebugLogging, string RoleArn, string[] SecurityGroups, GET_ModifyDBProxyAction Action, GET_ModifyDBProxyVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBProxy?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&NewDBProxyName=" + (NewDBProxyName==null? "" : System.Uri.EscapeDataString(NewDBProxyName))+"&"+string.Join("&", Auth.Select(z => $"Auth={z}"))+"&RequireTLS="+RequireTLS+"&IdleClientTimeout="+IdleClientTimeout+"&DebugLogging="+DebugLogging+"&RoleArn=" + (RoleArn==null? "" : System.Uri.EscapeDataString(RoleArn))+"&"+string.Join("&", SecurityGroups.Select(z => $"SecurityGroups={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Changes the settings for an existing DB proxy endpoint.
		/// GET_ModifyDBProxyEndpoint #Action=ModifyDBProxyEndpoint
		/// </summary>
		/// <param name="DBProxyEndpointName">The name of the DB proxy sociated with the DB proxy endpoint that you want to modify.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="NewDBProxyEndpointName">The new identifier for the <code>DBProxyEndpoint</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="VpcSecurityGroupIds">The VPC security group IDs for the DB proxy endpoint. When the DB proxy endpoint uses a different VPC than the original proxy, you also specify a different set of security group IDs than for the original proxy.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBProxyEndpointAsync(string DBProxyEndpointName, string NewDBProxyEndpointName, string[] VpcSecurityGroupIds, GET_ModifyDBProxyEndpointAction Action, GET_ModifyDBProxyEndpointVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBProxyEndpoint?DBProxyEndpointName=" + (DBProxyEndpointName==null? "" : System.Uri.EscapeDataString(DBProxyEndpointName))+"&NewDBProxyEndpointName=" + (NewDBProxyEndpointName==null? "" : System.Uri.EscapeDataString(NewDBProxyEndpointName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the properties of a <code>DBProxyTargetGroup</code>.
		/// GET_ModifyDBProxyTargetGroup #Action=ModifyDBProxyTargetGroup
		/// </summary>
		/// <param name="TargetGroupName">The name of the target group to modify.</param>
		/// <param name="DBProxyName">The name of the proxy.</param>
		/// <param name="ConnectionPoolConfig">The settings that determine the size and behavior of the connection pool for the target group.</param>
		/// <param name="NewName">The new name for the modified <code>DBProxyTarget</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBProxyTargetGroupAsync(string TargetGroupName, string DBProxyName, GET_ModifyDBProxyTargetGroupConnectionPoolConfig ConnectionPoolConfig, string NewName, GET_ModifyDBProxyTargetGroupAction Action, GET_ModifyDBProxyTargetGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBProxyTargetGroup?TargetGroupName=" + (TargetGroupName==null? "" : System.Uri.EscapeDataString(TargetGroupName))+"&DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&ConnectionPoolConfig=" + ConnectionPoolConfig+"&NewName=" + (NewName==null? "" : System.Uri.EscapeDataString(NewName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, PostgreSQL, and Oracle. This command doesn't apply to RDS Custom.</p>
		/// GET_ModifyDBSnapshot #Action=ModifyDBSnapshot
		/// </summary>
		/// <param name="DBSnapshotIdentifier">The identifier of the DB snapshot to modify.</param>
		/// <param name="EngineVersion"><p>The engine version to upgrade the DB snapshot to.</p> <p>The following are the database engines and engine versions that are available when you upgrade a DB snapshot.</p> <p> <b>MySQL</b> </p> <ul> <li> <p> <code>5.5.46</code> (supported for 5.1 DB snapshots)</p> </li> </ul> <p> <b>Oracle</b> </p> <ul> <li> <p> <code>19.0.0.0.ru-2022-01.rur-2022-01.r1</code> (supported for 12.2.0.1 DB snapshots)</p> </li> <li> <p> <code>19.0.0.0.ru-2022-07.rur-2022-07.r1</code> (supported for 12.1.0.2 DB snapshots)</p> </li> <li> <p> <code>12.1.0.2.v8</code> (supported for 12.1.0.1 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v12</code> (supported for 11.2.0.2 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v11</code> (supported for 11.2.0.3 DB snapshots)</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>For the list of engine versions that are available for upgrading a DB snapshot, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.PostgreSQL.html#USER_UpgradeDBInstance.PostgreSQL.MajorVersion"> Upgrading the PostgreSQL DB Engine for Amazon RDS</a>.</p></param>
		/// <param name="OptionGroupName"><p>The option group to identify with the upgraded DB snapshot.</p> <p>You can specify this parameter when you upgrade an Oracle DB snapshot. The same option group considerations apply when upgrading a DB snapshot as when upgrading a DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Oracle.html#USER_UpgradeDBInstance.Oracle.OGPG.OG">Option group considerations</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBSnapshotAsync(string DBSnapshotIdentifier, string EngineVersion, string OptionGroupName, GET_ModifyDBSnapshotAction Action, GET_ModifyDBSnapshotVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBSnapshot?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API operation. The accounts are returned as values for the <code>restore</code> attribute.</p>
		/// GET_ModifyDBSnapshotAttribute #Action=ModifyDBSnapshotAttribute
		/// </summary>
		/// <param name="DBSnapshotIdentifier">The identifier for the DB snapshot to modify the attributes for.</param>
		/// <param name="AttributeName"><p>The name of the DB snapshot attribute to modify.</p> <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note> <p>To view the list of attributes available to modify, use the <a>DescribeDBSnapshotAttributes</a> API operation.</p> </note></param>
		/// <param name="ValuesToAdd"><p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p></param>
		/// <param name="ValuesToRemove"><p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBSnapshotAttributeAsync(string DBSnapshotIdentifier, string AttributeName, string[] ValuesToAdd, string[] ValuesToRemove, GET_ModifyDBSnapshotAttributeAction Action, GET_ModifyDBSnapshotAttributeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBSnapshotAttribute?DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&AttributeName=" + (AttributeName==null? "" : System.Uri.EscapeDataString(AttributeName))+"&"+string.Join("&", ValuesToAdd.Select(z => $"ValuesToAdd={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ValuesToRemove.Select(z => $"ValuesToRemove={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.
		/// GET_ModifyDBSubnetGroup #Action=ModifyDBSubnetGroup
		/// </summary>
		/// <param name="DBSubnetGroupName"><p>The name for the DB subnet group. This value is stored as a lowercase string. You can't modify the default subnet group.</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="DBSubnetGroupDescription">The description for the DB subnet group.</param>
		/// <param name="SubnetIds">The EC2 subnet IDs for the DB subnet group.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyDBSubnetGroupAsync(string DBSubnetGroupName, string DBSubnetGroupDescription, string[] SubnetIds, GET_ModifyDBSubnetGroupAction Action, GET_ModifyDBSubnetGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyDBSubnetGroup?DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&DBSubnetGroupDescription=" + (DBSubnetGroupDescription==null? "" : System.Uri.EscapeDataString(DBSubnetGroupDescription))+"&"+string.Join("&", SubnetIds.Select(z => $"SubnetIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given source type (<code>SourceType</code>) in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</p>
		/// GET_ModifyEventSubscription #Action=ModifyEventSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription.</param>
		/// <param name="SnsTopicArn">The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.</param>
		/// <param name="SourceType"><p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. For RDS Proxy events, specify <code>db-proxy</code>. If this value isn't specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> | <code>db-proxy</code> </p></param>
		/// <param name="EventCategories">A list of event categories for a source type (<code>SourceType</code>) that you want to subscribe to. You can see a list of the categories for a given source type in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</param>
		/// <param name="Enabled">A value that indicates whether to activate the subscription.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyEventSubscriptionAsync(string SubscriptionName, string SnsTopicArn, string SourceType, string[] EventCategories, bool Enabled, GET_ModifyEventSubscriptionAction Action, GET_ModifyEventSubscriptionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyEventSubscription?SubscriptionName=" + (SubscriptionName==null? "" : System.Uri.EscapeDataString(SubscriptionName))+"&SnsTopicArn=" + (SnsTopicArn==null? "" : System.Uri.EscapeDataString(SnsTopicArn))+"&SourceType=" + (SourceType==null? "" : System.Uri.EscapeDataString(SourceType))+"&"+string.Join("&", EventCategories.Select(z => $"EventCategories={System.Uri.EscapeDataString(z.ToString())}"))+"&Enabled="+Enabled+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This operation only applies to Aurora global database clusters.</p> </note>
		/// GET_ModifyGlobalCluster #Action=ModifyGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier"><p>The cluster identifier for the global cluster to modify. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing global database cluster.</p> </li> </ul></param>
		/// <param name="NewGlobalClusterIdentifier"><p>The new cluster identifier for the global database cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p></param>
		/// <param name="DeletionProtection">Specifies whether to enable deletion protection for the global database cluster. The global database cluster can't be deleted when deletion protection is enabled.</param>
		/// <param name="EngineVersion"><p>The version number of the database engine to which you want to upgrade. </p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL-based Aurora global databases), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code> </p> <p>To list all of the available engine versions for <code>aurora-postgresql</code> (for PostgreSQL-based Aurora global databases), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code> </p></param>
		/// <param name="AllowMajorVersionUpgrade"><p>Specifies whether to allow major version upgrades.</p> <p>Constraints: Must be enabled if you specify a value for the <code>EngineVersion</code> parameter that's a different major version than the global cluster's current version.</p> <p>If you upgrade the major version of a global database, the cluster and DB instance parameter groups are set to the default parameter groups for the new version. Apply any custom parameter groups after completing the upgrade.</p></param>
		/// <returns>Success</returns>
		public async Task GET_ModifyGlobalClusterAsync(string GlobalClusterIdentifier, string NewGlobalClusterIdentifier, bool DeletionProtection, string EngineVersion, bool AllowMajorVersionUpgrade, GET_ModifyGlobalClusterAction Action, GET_ModifyGlobalClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&NewGlobalClusterIdentifier=" + (NewGlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(NewGlobalClusterIdentifier))+"&DeletionProtection="+DeletionProtection+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&AllowMajorVersionUpgrade="+AllowMajorVersionUpgrade+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies an existing option group.
		/// GET_ModifyOptionGroup #Action=ModifyOptionGroup
		/// </summary>
		/// <param name="OptionGroupName"><p>The name of the option group to be modified.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p></param>
		/// <param name="OptionsToInclude">Options in this list are added to the option group or, if already present, the specified configuration is used to update the existing configuration.</param>
		/// <param name="OptionsToRemove">Options in this list are removed from the option group.</param>
		/// <param name="ApplyImmediately">A value that indicates whether to apply the change immediately or during the next maintenance window for each instance associated with the option group.</param>
		/// <returns>Success</returns>
		public async Task GET_ModifyOptionGroupAsync(string OptionGroupName, string[] OptionsToInclude, string[] OptionsToRemove, bool ApplyImmediately, GET_ModifyOptionGroupAction Action, GET_ModifyOptionGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ModifyOptionGroup?OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&"+string.Join("&", OptionsToInclude.Select(z => $"OptionsToInclude={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", OptionsToRemove.Select(z => $"OptionsToRemove={System.Uri.EscapeDataString(z.ToString())}"))+"&ApplyImmediately="+ApplyImmediately+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL, Aurora PostgreSQL, or RDS Custom.</p> </li> </ul> </note>
		/// GET_PromoteReadReplica #Action=PromoteReadReplica
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing read replica DB instance.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35.</p> </li> <li> <p>Can't be set to 0 if the DB instance is a source to read replicas.</p> </li> </ul></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_PromoteReadReplicaAsync(string DBInstanceIdentifier, int BackupRetentionPeriod, string PreferredBackupWindow, GET_PromoteReadReplicaAction Action, GET_PromoteReadReplicaVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=PromoteReadReplica?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Promotes a read replica DB cluster to a standalone DB cluster.
		/// GET_PromoteReadReplicaDBCluster #Action=PromoteReadReplicaDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The identifier of the DB cluster read replica to promote. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster read replica.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_PromoteReadReplicaDBClusterAsync(string DBClusterIdentifier, GET_PromoteReadReplicaDBClusterAction Action, GET_PromoteReadReplicaDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=PromoteReadReplicaDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Purchases a reserved DB instance offering.
		/// GET_PurchaseReservedDBInstancesOffering #Action=PurchaseReservedDBInstancesOffering
		/// </summary>
		/// <param name="ReservedDBInstancesOfferingId"><p>The ID of the Reserved DB instance offering to purchase.</p> <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p></param>
		/// <param name="ReservedDBInstanceId"><p>Customer-specified identifier to track this reservation.</p> <p>Example: myreservationID</p></param>
		/// <param name="DBInstanceCount"><p>The number of instances to reserve.</p> <p>Default: <code>1</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_PurchaseReservedDBInstancesOfferingAsync(string ReservedDBInstancesOfferingId, string ReservedDBInstanceId, int DBInstanceCount, string[] Tags, GET_PurchaseReservedDBInstancesOfferingAction Action, GET_PurchaseReservedDBInstancesOfferingVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=PurchaseReservedDBInstancesOffering?ReservedDBInstancesOfferingId=" + (ReservedDBInstancesOfferingId==null? "" : System.Uri.EscapeDataString(ReservedDBInstancesOfferingId))+"&ReservedDBInstanceId=" + (ReservedDBInstanceId==null? "" : System.Uri.EscapeDataString(ReservedDBInstanceId))+"&DBInstanceCount="+DBInstanceCount+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>You might need to reboot your DB cluster, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB cluster parameter group associated with the DB cluster, reboot the DB cluster for the changes to take effect.</p> <p>Rebooting a DB cluster restarts the database engine service. Rebooting a DB cluster results in a momentary outage, during which the DB cluster status is set to rebooting.</p> <p>Use this operation only for a non-Aurora Multi-AZ DB cluster.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RebootDBCluster #Action=RebootDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_RebootDBClusterAsync(string DBClusterIdentifier, GET_RebootDBClusterAction Action, GET_RebootDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RebootDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect.</p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting.</p> <p>For more information about rebooting, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This command doesn't apply to RDS Custom.</p> <p>If your DB instance is part of a Multi-AZ DB cluster, you can reboot the DB cluster with the <code>RebootDBCluster</code> operation.</p>
		/// GET_RebootDBInstance #Action=RebootDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul></param>
		/// <param name="ForceFailover"><p>A value that indicates whether the reboot is conducted through a Multi-AZ failover.</p> <p>Constraint: You can't enable force failover if the instance isn't configured for Multi-AZ.</p></param>
		/// <returns>Success</returns>
		public async Task GET_RebootDBInstanceAsync(string DBInstanceIdentifier, bool ForceFailover, GET_RebootDBInstanceAction Action, GET_RebootDBInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RebootDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&ForceFailover="+ForceFailover+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.
		/// GET_RegisterDBProxyTargets #Action=RegisterDBProxyTargets
		/// </summary>
		/// <param name="DBProxyName">The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="TargetGroupName">The identifier of the <code>DBProxyTargetGroup</code>.</param>
		/// <param name="DBInstanceIdentifiers">One or more DB instance identifiers.</param>
		/// <param name="DBClusterIdentifiers">One or more DB cluster identifiers.</param>
		/// <returns>Success</returns>
		public async Task GET_RegisterDBProxyTargetsAsync(string DBProxyName, string TargetGroupName, string[] DBInstanceIdentifiers, string[] DBClusterIdentifiers, GET_RegisterDBProxyTargetsAction Action, GET_RegisterDBProxyTargetsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RegisterDBProxyTargets?DBProxyName=" + (DBProxyName==null? "" : System.Uri.EscapeDataString(DBProxyName))+"&TargetGroupName=" + (TargetGroupName==null? "" : System.Uri.EscapeDataString(TargetGroupName))+"&"+string.Join("&", DBInstanceIdentifiers.Select(z => $"DBInstanceIdentifiers={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", DBClusterIdentifiers.Select(z => $"DBClusterIdentifiers={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different Region.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_RemoveFromGlobalCluster #Action=RemoveFromGlobalCluster
		/// </summary>
		/// <param name="GlobalClusterIdentifier">The cluster identifier to detach from the Aurora global database cluster.</param>
		/// <param name="DbClusterIdentifier">The Amazon Resource Name (ARN) identifying the cluster that was detached from the Aurora global database cluster.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveFromGlobalClusterAsync(string GlobalClusterIdentifier, string DbClusterIdentifier, GET_RemoveFromGlobalClusterAction Action, GET_RemoveFromGlobalClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RemoveFromGlobalCluster?GlobalClusterIdentifier=" + (GlobalClusterIdentifier==null? "" : System.Uri.EscapeDataString(GlobalClusterIdentifier))+"&DbClusterIdentifier=" + (DbClusterIdentifier==null? "" : System.Uri.EscapeDataString(DbClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes the asssociation of an Amazon Web Services Identity and Access Management (IAM) role from a DB cluster.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RemoveRoleFromDBCluster #Action=RemoveRoleFromDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The name of the DB cluster to disassociate the IAM role from.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB cluster that the IAM role is to be disassociated from. For information about supported feature names, see <a>DBEngineVersion</a>.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveRoleFromDBClusterAsync(string DBClusterIdentifier, string RoleArn, string FeatureName, GET_RemoveRoleFromDBClusterAction Action, GET_RemoveRoleFromDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RemoveRoleFromDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&RoleArn=" + (RoleArn==null? "" : System.Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : System.Uri.EscapeDataString(FeatureName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance.
		/// GET_RemoveRoleFromDBInstance #Action=RemoveRoleFromDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier">The name of the DB instance to disassociate the IAM role from.</param>
		/// <param name="RoleArn">The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB instance, for example, <code>arn:aws:iam::123456789012:role/AccessRole</code>.</param>
		/// <param name="FeatureName">The name of the feature for the DB instance that the IAM role is to be disassociated from. For information about supported feature names, see <code>DBEngineVersion</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveRoleFromDBInstanceAsync(string DBInstanceIdentifier, string RoleArn, string FeatureName, GET_RemoveRoleFromDBInstanceAction Action, GET_RemoveRoleFromDBInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RemoveRoleFromDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&RoleArn=" + (RoleArn==null? "" : System.Uri.EscapeDataString(RoleArn))+"&FeatureName=" + (FeatureName==null? "" : System.Uri.EscapeDataString(FeatureName))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a source identifier from an existing RDS event notification subscription.
		/// GET_RemoveSourceIdentifierFromSubscription #Action=RemoveSourceIdentifierFromSubscription
		/// </summary>
		/// <param name="SubscriptionName">The name of the RDS event notification subscription you want to remove a source identifier from.</param>
		/// <param name="SourceIdentifier">The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveSourceIdentifierFromSubscriptionAsync(string SubscriptionName, string SourceIdentifier, GET_RemoveSourceIdentifierFromSubscriptionAction Action, GET_RemoveSourceIdentifierFromSubscriptionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RemoveSourceIdentifierFromSubscription?SubscriptionName=" + (SubscriptionName==null? "" : System.Uri.EscapeDataString(SubscriptionName))+"&SourceIdentifier=" + (SourceIdentifier==null? "" : System.Uri.EscapeDataString(SourceIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RemoveTagsFromResource #Action=RemoveTagsFromResource
		/// </summary>
		/// <param name="ResourceName">The Amazon RDS resource that the tags are removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="TagKeys">The tag key (name) of the tag to be removed.</param>
		/// <returns>Success</returns>
		public async Task GET_RemoveTagsFromResourceAsync(string ResourceName, string[] TagKeys, GET_RemoveTagsFromResourceAction Action, GET_RemoveTagsFromResourceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RemoveTagsFromResource?ResourceName=" + (ResourceName==null? "" : System.Uri.EscapeDataString(ResourceName))+"&"+string.Join("&", TagKeys.Select(z => $"TagKeys={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.</p> <p>When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_ResetDBClusterParameterGroup #Action=ResetDBClusterParameterGroup
		/// </summary>
		/// <param name="DBClusterParameterGroupName">The name of the DB cluster parameter group to reset.</param>
		/// <param name="ResetAllParameters">A value that indicates whether to reset all parameters in the DB cluster parameter group to their default values. You can't use this parameter if there is a list of parameter names specified for the <code>Parameters</code> parameter.</param>
		/// <param name="Parameters">A list of parameter names in the DB cluster parameter group to reset to the default values. You can't use this parameter if the <code>ResetAllParameters</code> parameter is enabled.</param>
		/// <returns>Success</returns>
		public async Task GET_ResetDBClusterParameterGroupAsync(string DBClusterParameterGroupName, bool ResetAllParameters, string[] Parameters, GET_ResetDBClusterParameterGroupAction Action, GET_ResetDBClusterParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ResetDBClusterParameterGroup?DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&ResetAllParameters="+ResetAllParameters+"&"+string.Join("&", Parameters.Select(z => $"Parameters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request.
		/// GET_ResetDBParameterGroup #Action=ResetDBParameterGroup
		/// </summary>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing <code>DBParameterGroup</code>.</p> </li> </ul></param>
		/// <param name="ResetAllParameters">A value that indicates whether to reset all parameters in the DB parameter group to default values. By default, all parameters in the DB parameter group are reset to default values.</param>
		/// <param name="Parameters"><p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p> <b>MySQL</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>MariaDB</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>Oracle</b> </p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p></param>
		/// <returns>Success</returns>
		public async Task GET_ResetDBParameterGroupAsync(string DBParameterGroupName, bool ResetAllParameters, string[] Parameters, GET_ResetDBParameterGroupAction Action, GET_ResetDBParameterGroupVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ResetDBParameterGroup?DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&ResetAllParameters="+ResetAllParameters+"&"+string.Join("&", Parameters.Select(z => $"Parameters={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3"> Migrating Data from MySQL by Using an Amazon S3 Bucket</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters. The source DB engine must be MySQL.</p> </note>
		/// GET_RestoreDBClusterFromS3 #Action=RestoreDBClusterFromS3
		/// </summary>
		/// <param name="AvailabilityZones">A list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</param>
		/// <param name="BackupRetentionPeriod"><p>The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul></param>
		/// <param name="CharacterSetName">A value that indicates that the restored DB cluster should be associated with the specified CharacterSet.</param>
		/// <param name="DatabaseName">The database name for the restored DB cluster.</param>
		/// <param name="DBClusterIdentifier"><p>The name of the DB cluster to create from the source data in the Amazon S3 bucket. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p></param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with the restored DB cluster. If this argument is omitted, the default parameter group for the engine version is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul></param>
		/// <param name="VpcSecurityGroupIds">A list of EC2 VPC security groups to associate with the restored DB cluster.</param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with the restored DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="Engine"><p>The name of the database engine to be used for this DB cluster.</p> <p>Valid Values: <code>aurora-mysql</code> (for Aurora MySQL)</p></param>
		/// <param name="EngineVersion"><p>The version number of the database engine to use.</p> <p>To list all of the available engine versions for <code>aurora-mysql</code> (Aurora MySQL), use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p> <b>Aurora MySQL</b> </p> <p>Examples: <code>5.7.mysql_aurora.2.07.1</code>, <code>8.0.mysql_aurora.3.02.0</code> </p></param>
		/// <param name="Port"><p>The port number on which the instances in the restored DB cluster accept connections.</p> <p>Default: <code>3306</code> </p></param>
		/// <param name="MasterUsername"><p>The name of the master user for the restored DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 8 to 41 characters.</p> </li> <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li> </ul></param>
		/// <param name="OptionGroupName"><p>A value that indicates that the restored DB cluster should be associated with the specified option group.</p> <p>Permanent options can't be removed from an option group. An option group can't be removed from a DB cluster once it is associated with a DB cluster.</p></param>
		/// <param name="PreferredBackupWindow"><p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="PreferredMaintenanceWindow"><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p></param>
		/// <param name="StorageEncrypted">A value that indicates whether the restored DB cluster is encrypted.</param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If the StorageEncrypted parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="SourceEngine"><p>The identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket.</p> <p>Valid values: <code>mysql</code> </p></param>
		/// <param name="SourceEngineVersion"><p>The version of the database that the backup files were created from.</p> <p>MySQL versions 5.5, 5.6, and 5.7 are supported.</p> <p>Example: <code>5.6.40</code>, <code>5.7.28</code> </p></param>
		/// <param name="S3BucketName">The name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster.</param>
		/// <param name="S3Prefix">The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster. If you do not specify a <b>SourceS3Prefix</b> value, then the Amazon Aurora DB cluster is created by using all of the files in the Amazon S3 bucket.</param>
		/// <param name="S3IngestionRoleArn">The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf.</param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <note> <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p> </note> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p> <b>Aurora MySQL</b> </p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.</p> <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p></param>
		/// <param name="DomainIAMRoleName">Specify the name of the IAM role to be used when making API calls to the Directory Service.</param>
		/// <param name="NetworkType"><p>The network type of the DB cluster.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p></param>
		/// <param name="ManageMasterUserPassword"><p>A value that indicates whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul></param>
		/// <param name="MasterUserSecretKmsKeyId"><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB cluster.</p> <p>Valid values: <code>aurora</code>, <code>aurora-iopt1</code> </p> <p>Default: <code>aurora</code> </p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBClusterFromS3Async(
					string[] AvailabilityZones, 
					int BackupRetentionPeriod, 
					string CharacterSetName, 
					string DatabaseName, 
					string DBClusterIdentifier, 
					string DBClusterParameterGroupName, 
					string[] VpcSecurityGroupIds, 
					string DBSubnetGroupName, 
					string Engine, 
					string EngineVersion, 
					int Port, 
					string MasterUsername, 
					string MasterUserPassword, 
					string OptionGroupName, 
					string PreferredBackupWindow, 
					string PreferredMaintenanceWindow, 
					string[] Tags, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					bool EnableIAMDatabaseAuthentication, 
					string SourceEngine, 
					string SourceEngineVersion, 
					string S3BucketName, 
					string S3Prefix, 
					string S3IngestionRoleArn, 
					int BacktrackWindow, 
					string[] EnableCloudwatchLogsExports, 
					bool DeletionProtection, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					GET_RestoreDBClusterFromS3ServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration, 
					string NetworkType, 
					bool ManageMasterUserPassword, 
					string MasterUserSecretKmsKeyId, 
					string StorageType, 
					GET_RestoreDBClusterFromS3Action Action, 
					GET_RestoreDBClusterFromS3Version Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RestoreDBClusterFromS3?"+string.Join("&", AvailabilityZones.Select(z => $"AvailabilityZones={System.Uri.EscapeDataString(z.ToString())}"))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&CharacterSetName=" + (CharacterSetName==null? "" : System.Uri.EscapeDataString(CharacterSetName))+"&DatabaseName=" + (DatabaseName==null? "" : System.Uri.EscapeDataString(DatabaseName))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&Port="+Port+"&MasterUsername=" + (MasterUsername==null? "" : System.Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : System.Uri.EscapeDataString(MasterUserPassword))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : System.Uri.EscapeDataString(PreferredMaintenanceWindow))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&SourceEngine=" + (SourceEngine==null? "" : System.Uri.EscapeDataString(SourceEngine))+"&SourceEngineVersion=" + (SourceEngineVersion==null? "" : System.Uri.EscapeDataString(SourceEngineVersion))+"&S3BucketName=" + (S3BucketName==null? "" : System.Uri.EscapeDataString(S3BucketName))+"&S3Prefix=" + (S3Prefix==null? "" : System.Uri.EscapeDataString(S3Prefix))+"&S3IngestionRoleArn=" + (S3IngestionRoleArn==null? "" : System.Uri.EscapeDataString(S3IngestionRoleArn))+"&BacktrackWindow="+BacktrackWindow+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&DeletionProtection="+DeletionProtection+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&ServerlessV2ScalingConfiguration=" + ServerlessV2ScalingConfiguration+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&ManageMasterUserPassword="+ManageMasterUserPassword+"&MasterUserSecretKmsKeyId=" + (MasterUserSecretKmsKeyId==null? "" : System.Uri.EscapeDataString(MasterUserSecretKmsKeyId))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RestoreDBClusterFromSnapshot #Action=RestoreDBClusterFromSnapshot
		/// </summary>
		/// <param name="AvailabilityZones"><p>Provides the list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="DBClusterIdentifier"><p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="SnapshotIdentifier"><p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Snapshot.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Engine"><p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EngineVersion"><p>The version of the database engine to use for the new DB cluster. If you don't specify an engine version, the default version for the database engine in the Amazon Web Services Region is used.</p> <p>To list all of the available engine versions for Aurora MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p> <p> <b>Aurora MySQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html">Database engine updates for Amazon Aurora MySQL</a> in the <i>Amazon Aurora User Guide</i>.</p> <p> <b>Aurora PostgreSQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">Amazon Aurora PostgreSQL releases and engine versions</a> in the <i>Amazon Aurora User Guide</i>.</p> <p> <b>MySQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">Amazon RDS for MySQL</a> in the <i>Amazon RDS User Guide.</i> </p> <p> <b>PostgreSQL</b> </p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL versions and extensions</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Port"><p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: This value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DBSubnetGroupName"><p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DB subnet group.</p> <p>Example: <code>mydbsubnetgroup</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DatabaseName"><p>The database name for the restored DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="OptionGroupName"><p>The name of the option group to use for the restored DB cluster.</p> <p>DB clusters are associated with a default option group that can't be modified.</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of VPC security groups that the new DB cluster will belong to.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Tags"><p>The tags to be assigned to the restored DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>When you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> isn't encrypted, then the restored DB cluster isn't encrypted.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <note> <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p> </note> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p> <b>RDS for MySQL</b> </p> <p>Possible values are <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>RDS for PostgreSQL</b> </p> <p>Possible values are <code>postgresql</code> and <code>upgrade</code>.</p> <p> <b>Aurora MySQL</b> </p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>Aurora PostgreSQL</b> </p> <p>Possible value is <code>postgresql</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EngineMode"><p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html"> CreateDBCluster</a>.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="ScalingConfiguration"><p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing default DB cluster parameter group.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DeletionProtection"><p>A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="CopyTagsToSnapshot"><p>A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="DomainIAMRoleName"><p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="DBClusterInstanceClass"><p>The compute and memory capacity of the each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid for: Multi-AZ DB clusters only</p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid values: <code>aurora</code>, <code>aurora-iopt1</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Default: <code>aurora</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="NetworkType"><p>The network type of the DB cluster.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBClusterFromSnapshotAsync(
					string[] AvailabilityZones, 
					string DBClusterIdentifier, 
					string SnapshotIdentifier, 
					string Engine, 
					string EngineVersion, 
					int Port, 
					string DBSubnetGroupName, 
					string DatabaseName, 
					string OptionGroupName, 
					string[] VpcSecurityGroupIds, 
					string[] Tags, 
					string KmsKeyId, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					string[] EnableCloudwatchLogsExports, 
					string EngineMode, 
					GET_RestoreDBClusterFromSnapshotScalingConfiguration ScalingConfiguration, 
					string DBClusterParameterGroupName, 
					bool DeletionProtection, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					string DBClusterInstanceClass, 
					string StorageType, 
					int Iops, 
					bool PubliclyAccessible, 
					GET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration, 
					string NetworkType, 
					GET_RestoreDBClusterFromSnapshotAction Action, 
					GET_RestoreDBClusterFromSnapshotVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RestoreDBClusterFromSnapshot?"+string.Join("&", AvailabilityZones.Select(z => $"AvailabilityZones={System.Uri.EscapeDataString(z.ToString())}"))+"&DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&SnapshotIdentifier=" + (SnapshotIdentifier==null? "" : System.Uri.EscapeDataString(SnapshotIdentifier))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&Port="+Port+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&DatabaseName=" + (DatabaseName==null? "" : System.Uri.EscapeDataString(DatabaseName))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&EngineMode=" + (EngineMode==null? "" : System.Uri.EscapeDataString(EngineMode))+"&ScalingConfiguration=" + ScalingConfiguration+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&DBClusterInstanceClass=" + (DBClusterInstanceClass==null? "" : System.Uri.EscapeDataString(DBClusterInstanceClass))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&Iops="+Iops+"&PubliclyAccessible="+PubliclyAccessible+"&ServerlessV2ScalingConfiguration=" + ServerlessV2ScalingConfiguration+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group.</p> <note> <p>For Aurora, this action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_RestoreDBClusterToPointInTime #Action=RestoreDBClusterToPointInTime
		/// </summary>
		/// <param name="DBClusterIdentifier"><p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="RestoreType"><p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="SourceDBClusterIdentifier"><p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="RestoreToTime"><p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter isn't provided</p> </li> <li> <p>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</p> </li> <li> <p>Can't be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="UseLatestRestorableTime"><p>A value that indicates whether to restore the DB cluster to the latest restorable backup time. By default, the DB cluster isn't restored to the latest restorable backup time.</p> <p>Constraints: Can't be specified if <code>RestoreToTime</code> parameter is provided.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Port"><p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: A value from <code>1150-65535</code>.</p> <p>Default: The default port for the engine.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DBSubnetGroupName"><p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="OptionGroupName"><p>The name of the option group for the new DB cluster.</p> <p>DB clusters are associated with a default option group that can't be modified.</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of VPC security groups that the new DB cluster belongs to.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different from the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster isn't encrypted, then the restored DB cluster isn't encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that isn't encrypted, then the restore request is rejected.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="BacktrackWindow"><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p> <p>Default: 0</p> <p>Constraints:</p> <ul> <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li> </ul> <p>Valid for: Aurora MySQL DB clusters only</p></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p> <b>RDS for MySQL</b> </p> <p>Possible values are <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>RDS for PostgreSQL</b> </p> <p>Possible values are <code>postgresql</code> and <code>upgrade</code>.</p> <p> <b>Aurora MySQL</b> </p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p> <b>Aurora PostgreSQL</b> </p> <p>Possible value is <code>postgresql</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DBClusterParameterGroupName"><p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="DeletionProtection"><p>A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="CopyTagsToSnapshot"><p>A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation.</p> <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="DomainIAMRoleName"><p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="ScalingConfiguration"><p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="EngineMode"><p>The engine mode of the new cluster. Specify <code>provisioned</code> or <code>serverless</code>, depending on the type of the cluster you are creating. You can create an Aurora Serverless v1 clone from a provisioned cluster, or a provisioned clone from an Aurora Serverless v1 cluster. To create a clone that is an Aurora Serverless v1 cluster, the original cluster must be an Aurora Serverless v1 cluster or an encrypted provisioned cluster.</p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="DBClusterInstanceClass"><p>The compute and memory capacity of the each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid for: Multi-AZ DB clusters only</p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid values: <code>aurora</code>, <code>aurora-iopt1</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Default: <code>aurora</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul> <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li> <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li> </ul> <p>Valid for: Multi-AZ DB clusters only</p></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> <p>Valid for: Multi-AZ DB clusters only</p></param>
		/// <param name="NetworkType"><p>The network type of the DB cluster.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>Valid for: Aurora DB clusters only</p></param>
		/// <param name="SourceDbClusterResourceId">The resource ID of the source DB cluster from which to restore.</param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBClusterToPointInTimeAsync(
					string DBClusterIdentifier, 
					string RestoreType, 
					string SourceDBClusterIdentifier, 
					System.DateTimeOffset RestoreToTime, 
					bool UseLatestRestorableTime, 
					int Port, 
					string DBSubnetGroupName, 
					string OptionGroupName, 
					string[] VpcSecurityGroupIds, 
					string[] Tags, 
					string KmsKeyId, 
					bool EnableIAMDatabaseAuthentication, 
					int BacktrackWindow, 
					string[] EnableCloudwatchLogsExports, 
					string DBClusterParameterGroupName, 
					bool DeletionProtection, 
					bool CopyTagsToSnapshot, 
					string Domain, 
					string DomainIAMRoleName, 
					GET_RestoreDBClusterToPointInTimeScalingConfiguration ScalingConfiguration, 
					string EngineMode, 
					string DBClusterInstanceClass, 
					string StorageType, 
					bool PubliclyAccessible, 
					int Iops, 
					GET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfiguration ServerlessV2ScalingConfiguration, 
					string NetworkType, 
					string SourceDbClusterResourceId, 
					GET_RestoreDBClusterToPointInTimeAction Action, 
					GET_RestoreDBClusterToPointInTimeVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RestoreDBClusterToPointInTime?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&RestoreType=" + (RestoreType==null? "" : System.Uri.EscapeDataString(RestoreType))+"&SourceDBClusterIdentifier=" + (SourceDBClusterIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBClusterIdentifier))+"&RestoreToTime=" + RestoreToTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&UseLatestRestorableTime="+UseLatestRestorableTime+"&Port="+Port+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&BacktrackWindow="+BacktrackWindow+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&DBClusterParameterGroupName=" + (DBClusterParameterGroupName==null? "" : System.Uri.EscapeDataString(DBClusterParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&ScalingConfiguration=" + ScalingConfiguration+"&EngineMode=" + (EngineMode==null? "" : System.Uri.EscapeDataString(EngineMode))+"&DBClusterInstanceClass=" + (DBClusterInstanceClass==null? "" : System.Uri.EscapeDataString(DBClusterInstanceClass))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&PubliclyAccessible="+PubliclyAccessible+"&Iops="+Iops+"&ServerlessV2ScalingConfiguration=" + ServerlessV2ScalingConfiguration+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&SourceDbClusterResourceId=" + (SourceDbClusterResourceId==null? "" : System.Uri.EscapeDataString(SourceDbClusterResourceId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with most of the source's original configuration, including the default security group and DB parameter group. By default, the new DB instance is created as a Single-AZ deployment, except when the instance is a SQL Server instance that has an option group associated with mirroring. In this case, the instance becomes a Multi-AZ deployment, not a Single-AZ deployment.</p> <p>If you want to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. After you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>
		/// GET_RestoreDBInstanceFromDBSnapshot #Action=RestoreDBInstanceFromDBSnapshot
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>Name of the DB instance to create from the DB snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 numbers, letters, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p></param>
		/// <param name="DBSnapshotIdentifier"><p>The identifier for the DB snapshot to restore from.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBSnapshot.</p> </li> <li> <p>Can't be specified when <code>DBClusterSnapshotIdentifier</code> is specified.</p> </li> <li> <p>Must be specified when <code>DBClusterSnapshotIdentifier</code> isn't specified.</p> </li> <li> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> </li> </ul></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the Amazon RDS DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: The same DBInstanceClass as the original DB instance.</p></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p>Default: The same port as the original DB instance</p> <p>Constraints: Value must be <code>1150-65535</code> </p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the DB instance will be created.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>Example: <code>us-east-1a</code> </p></param>
		/// <param name="DBSubnetGroupName"><p>The DB subnet group name to use for the new instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="MultiAZ"><p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p></param>
		/// <param name="AutoMinorVersionUpgrade"><p>A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</p> <p>If you restore an RDS Custom DB instance, you must disable this parameter.</p></param>
		/// <param name="LicenseModel"><p>License model information for the restored DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: Same as source.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p></param>
		/// <param name="DBName"><p>The database name for the restored DB instance.</p> <p>This parameter doesn't apply to the MySQL, PostgreSQL, or MariaDB engines. It also doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="Engine"><p>The database engine to use for the new instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source. For example, you can restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second. If this parameter isn't specified, the IOPS value is taken from the backup. If this parameter is set to 0, the new instance is converted to a non-PIOPS instance. The conversion takes additional time, though your DB instance is available for connections before the conversion starts.</p> <p>The provisioned IOPS value must follow the requirements for your database engine. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints: Must be an integer greater than 1000.</p></param>
		/// <param name="OptionGroupName"><p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance after it is associated with a DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="TdeCredentialArn"><p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="TdeCredentialPassword"><p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p></param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB instance in. The domain/ must be created prior to this operation. Currently, you can create only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DomainFqdn"><p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p></param>
		/// <param name="DomainOu"><p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p></param>
		/// <param name="DomainAuthSecretArn"><p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Constraints:</p> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p></param>
		/// <param name="DomainDnsIps"><p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p></param>
		/// <param name="CopyTagsToSnapshot"><p>A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance.</p> <p>In most cases, tags aren't copied by default. However, when you restore a DB instance from a DB snapshot, RDS checks whether you specify new tags. If yes, the new tags are added to the restored DB instance. If there are no new tags, RDS looks for the tags from the source DB instance for the DB snapshot, and then adds those tags to the restored DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html#USER_Tagging.CopyTags"> Copying tags to DB instance snapshots</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="ProcessorFeatures"><p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="UseDefaultProcessorFeatures"><p>A value that indicates whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you don't specify a value for <code>DBParameterGroupName</code>, then RDS uses the default <code>DBParameterGroup</code> for the specified DB engine.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</param>
		/// <param name="EnableCustomerOwnedIp"><p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p></param>
		/// <param name="CustomIamInstanceProfile"><p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required for RDS Custom.</p></param>
		/// <param name="BackupTarget"><p>Specifies where automated backups and manual snapshots are stored for the restored DB instance.</p> <p>Possible values are <code>outposts</code> (Amazon Web Services Outposts) and <code>region</code> (Amazon Web Services Region). The default is <code>region</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="StorageThroughput"><p>Specifies the storage throughput value for the DB instance.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p></param>
		/// <param name="DBClusterSnapshotIdentifier"><p>The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore from.</p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ DB cluster deployments</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Multi-AZ DB cluster snapshot.</p> </li> <li> <p>Can't be specified when <code>DBSnapshotIdentifier</code> is specified.</p> </li> <li> <p>Must be specified when <code>DBSnapshotIdentifier</code> isn't specified.</p> </li> <li> <p>If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the <code>DBClusterSnapshotIdentifier</code> must be the ARN of the shared snapshot.</p> </li> <li> <p>Can't be the identifier of an Aurora DB cluster snapshot.</p> </li> <li> <p>Can't be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.</p> </li> </ul></param>
		/// <param name="AllocatedStorage"><p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in CreateDBInstance.</p> <note> <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBInstanceFromDBSnapshotAsync(
					string DBInstanceIdentifier, 
					string DBSnapshotIdentifier, 
					string DBInstanceClass, 
					int Port, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					bool MultiAZ, 
					bool PubliclyAccessible, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					string DBName, 
					string Engine, 
					int Iops, 
					string OptionGroupName, 
					string[] Tags, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					string[] VpcSecurityGroupIds, 
					string Domain, 
					string DomainFqdn, 
					string DomainOu, 
					string DomainAuthSecretArn, 
					string[] DomainDnsIps, 
					bool CopyTagsToSnapshot, 
					string DomainIAMRoleName, 
					bool EnableIAMDatabaseAuthentication, 
					string[] EnableCloudwatchLogsExports, 
					string[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					string DBParameterGroupName, 
					bool DeletionProtection, 
					bool EnableCustomerOwnedIp, 
					string CustomIamInstanceProfile, 
					string BackupTarget, 
					string NetworkType, 
					int StorageThroughput, 
					string DBClusterSnapshotIdentifier, 
					int AllocatedStorage, 
					GET_RestoreDBInstanceFromDBSnapshotAction Action, 
					GET_RestoreDBInstanceFromDBSnapshotVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RestoreDBInstanceFromDBSnapshot?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&Port="+Port+"&AvailabilityZone=" + (AvailabilityZone==null? "" : System.Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&MultiAZ="+MultiAZ+"&PubliclyAccessible="+PubliclyAccessible+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : System.Uri.EscapeDataString(LicenseModel))+"&DBName=" + (DBName==null? "" : System.Uri.EscapeDataString(DBName))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : System.Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : System.Uri.EscapeDataString(TdeCredentialPassword))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainFqdn=" + (DomainFqdn==null? "" : System.Uri.EscapeDataString(DomainFqdn))+"&DomainOu=" + (DomainOu==null? "" : System.Uri.EscapeDataString(DomainOu))+"&DomainAuthSecretArn=" + (DomainAuthSecretArn==null? "" : System.Uri.EscapeDataString(DomainAuthSecretArn))+"&"+string.Join("&", DomainDnsIps.Select(z => $"DomainDnsIps={System.Uri.EscapeDataString(z.ToString())}"))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={System.Uri.EscapeDataString(z.ToString())}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&EnableCustomerOwnedIp="+EnableCustomerOwnedIp+"&CustomIamInstanceProfile=" + (CustomIamInstanceProfile==null? "" : System.Uri.EscapeDataString(CustomIamInstanceProfile))+"&BackupTarget=" + (BackupTarget==null? "" : System.Uri.EscapeDataString(BackupTarget))+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&StorageThroughput="+StorageThroughput+"&DBClusterSnapshotIdentifier=" + (DBClusterSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterSnapshotIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p> <p>This command doesn't apply to RDS Custom.</p>
		/// GET_RestoreDBInstanceFromS3 #Action=RestoreDBInstanceFromS3
		/// </summary>
		/// <param name="DBName">The name of the database to create when the DB instance is created. Follow the naming rules specified in <code>CreateDBInstance</code>.</param>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note> <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p> </note></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Importing from Amazon S3 isn't supported on the db.t2.micro DB instance class.</p></param>
		/// <param name="Engine"><p>The name of the database engine to be used for this instance.</p> <p>Valid Values: <code>mysql</code> </p></param>
		/// <param name="MasterUsername"><p>The name for the master user.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't be a reserved word for the chosen database engine.</p> </li> </ul></param>
		/// <param name="MasterUserPassword"><p>The password for the master user. The password can include any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> <p> <b>MariaDB</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p> <p> <b>MySQL</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Oracle</b> </p> <p>Constraints: Must contain from 8 to 30 characters.</p> <p> <b>PostgreSQL</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p></param>
		/// <param name="DBSecurityGroups"><p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p></param>
		/// <param name="VpcSecurityGroupIds">A list of VPC security groups to associate with this DB instance.</param>
		/// <param name="AvailabilityZone"><p>The Availability Zone that the DB instance is created in. For information about Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p> <p>Example: <code>us-east-1d</code> </p> <p>Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same Amazon Web Services Region as the current endpoint.</p></param>
		/// <param name="DBSubnetGroupName"><p>A DB subnet group to associate with this DB instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="PreferredMaintenanceWindow"><p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li> <li> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred backup window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p></param>
		/// <param name="BackupRetentionPeriod">The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. For more information, see <code>CreateDBInstance</code>.</param>
		/// <param name="PreferredBackupWindow"><p>The time range each day during which automated backups are created if automated backups are enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p>Type: Integer</p> <p>Valid Values: <code>1150</code>-<code>65535</code> </p> <p>Default: <code>3306</code> </p></param>
		/// <param name="MultiAZ">A value that indicates whether the DB instance is a Multi-AZ deployment. If the DB instance is a Multi-AZ deployment, you can't set the <code>AvailabilityZone</code> parameter.</param>
		/// <param name="EngineVersion">The version number of the database engine to use. Choose the latest minor version of your database engine. For information about engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>.</param>
		/// <param name="AutoMinorVersionUpgrade">A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are not applied automatically.</param>
		/// <param name="LicenseModel">The license model for this DB instance. Use <code>general-public-license</code>.</param>
		/// <param name="Iops">The amount of Provisioned IOPS (input/output operations per second) to allocate initially for the DB instance. For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="OptionGroupName">The name of the option group to associate with this DB instance. If this argument is omitted, the default option group for the specified engine is used.</param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p></param>
		/// <param name="Tags">A list of tags to associate with this DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>gp2</code> </p></param>
		/// <param name="StorageEncrypted">A value that indicates whether the new DB instance is encrypted or not.</param>
		/// <param name="KmsKeyId"><p>The Amazon Web Services KMS key identifier for an encrypted DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If the <code>StorageEncrypted</code> parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.</param>
		/// <param name="MonitoringInterval"><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: 0, 1, 5, 10, 15, 30, 60</p> <p>Default: <code>0</code> </p></param>
		/// <param name="MonitoringRoleArn"><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="SourceEngine"><p>The name of the engine of your source database.</p> <p>Valid Values: <code>mysql</code> </p></param>
		/// <param name="SourceEngineVersion"><p>The version of the database that the backup files were created from.</p> <p>MySQL versions 5.6 and 5.7 are supported.</p> <p>Example: <code>5.6.40</code> </p></param>
		/// <param name="S3BucketName">The name of your Amazon S3 bucket that contains your database backup file.</param>
		/// <param name="S3Prefix">The prefix of your Amazon S3 bucket.</param>
		/// <param name="S3IngestionRoleArn">An Amazon Web Services Identity and Access Management (IAM) role to allow Amazon RDS to access your Amazon S3 bucket.</param>
		/// <param name="EnablePerformanceInsights"><p>A value that indicates whether to enable Performance Insights for the DB instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="PerformanceInsightsKMSKeyId"><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p> <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <param name="PerformanceInsightsRetentionPeriod"><p>The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:</p> <ul> <li> <p>7</p> </li> <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23</p> </li> <li> <p>731</p> </li> </ul> <p>For example, the following values are valid:</p> <ul> <li> <p>93 (3 months * 31)</p> </li> <li> <p>341 (11 months * 31)</p> </li> <li> <p>589 (19 months * 31)</p> </li> <li> <p>731</p> </li> </ul> <p>If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.</p></param>
		/// <param name="EnableCloudwatchLogsExports">The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</param>
		/// <param name="ProcessorFeatures">The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</param>
		/// <param name="UseDefaultProcessorFeatures">A value that indicates whether the DB instance class of the DB instance uses its default processor features.</param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</param>
		/// <param name="MaxAllocatedStorage"><p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="StorageThroughput"><p>Specifies the storage throughput value for the DB instance.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p></param>
		/// <param name="ManageMasterUserPassword"><p>A value that indicates whether to manage the master user password with Amazon Web Services Secrets Manager.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li> </ul></param>
		/// <param name="MasterUserSecretKmsKeyId"><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB instance.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p></param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBInstanceFromS3Async(
					string DBName, 
					string DBInstanceIdentifier, 
					int AllocatedStorage, 
					string DBInstanceClass, 
					string Engine, 
					string MasterUsername, 
					string MasterUserPassword, 
					string[] DBSecurityGroups, 
					string[] VpcSecurityGroupIds, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					string PreferredMaintenanceWindow, 
					string DBParameterGroupName, 
					int BackupRetentionPeriod, 
					string PreferredBackupWindow, 
					int Port, 
					bool MultiAZ, 
					string EngineVersion, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					int Iops, 
					string OptionGroupName, 
					bool PubliclyAccessible, 
					string[] Tags, 
					string StorageType, 
					bool StorageEncrypted, 
					string KmsKeyId, 
					bool CopyTagsToSnapshot, 
					int MonitoringInterval, 
					string MonitoringRoleArn, 
					bool EnableIAMDatabaseAuthentication, 
					string SourceEngine, 
					string SourceEngineVersion, 
					string S3BucketName, 
					string S3Prefix, 
					string S3IngestionRoleArn, 
					bool EnablePerformanceInsights, 
					string PerformanceInsightsKMSKeyId, 
					int PerformanceInsightsRetentionPeriod, 
					string[] EnableCloudwatchLogsExports, 
					string[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					bool DeletionProtection, 
					int MaxAllocatedStorage, 
					string NetworkType, 
					int StorageThroughput, 
					bool ManageMasterUserPassword, 
					string MasterUserSecretKmsKeyId, 
					GET_RestoreDBInstanceFromS3Action Action, 
					GET_RestoreDBInstanceFromS3Version Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RestoreDBInstanceFromS3?DBName=" + (DBName==null? "" : System.Uri.EscapeDataString(DBName))+"&DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&AllocatedStorage="+AllocatedStorage+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&MasterUsername=" + (MasterUsername==null? "" : System.Uri.EscapeDataString(MasterUsername))+"&MasterUserPassword=" + (MasterUserPassword==null? "" : System.Uri.EscapeDataString(MasterUserPassword))+"&"+string.Join("&", DBSecurityGroups.Select(z => $"DBSecurityGroups={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&AvailabilityZone=" + (AvailabilityZone==null? "" : System.Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&PreferredMaintenanceWindow=" + (PreferredMaintenanceWindow==null? "" : System.Uri.EscapeDataString(PreferredMaintenanceWindow))+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&PreferredBackupWindow=" + (PreferredBackupWindow==null? "" : System.Uri.EscapeDataString(PreferredBackupWindow))+"&Port="+Port+"&MultiAZ="+MultiAZ+"&EngineVersion=" + (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : System.Uri.EscapeDataString(LicenseModel))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&PubliclyAccessible="+PubliclyAccessible+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&StorageEncrypted="+StorageEncrypted+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&MonitoringInterval="+MonitoringInterval+"&MonitoringRoleArn=" + (MonitoringRoleArn==null? "" : System.Uri.EscapeDataString(MonitoringRoleArn))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&SourceEngine=" + (SourceEngine==null? "" : System.Uri.EscapeDataString(SourceEngine))+"&SourceEngineVersion=" + (SourceEngineVersion==null? "" : System.Uri.EscapeDataString(SourceEngineVersion))+"&S3BucketName=" + (S3BucketName==null? "" : System.Uri.EscapeDataString(S3BucketName))+"&S3Prefix=" + (S3Prefix==null? "" : System.Uri.EscapeDataString(S3Prefix))+"&S3IngestionRoleArn=" + (S3IngestionRoleArn==null? "" : System.Uri.EscapeDataString(S3IngestionRoleArn))+"&EnablePerformanceInsights="+EnablePerformanceInsights+"&PerformanceInsightsKMSKeyId=" + (PerformanceInsightsKMSKeyId==null? "" : System.Uri.EscapeDataString(PerformanceInsightsKMSKeyId))+"&PerformanceInsightsRetentionPeriod="+PerformanceInsightsRetentionPeriod+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={System.Uri.EscapeDataString(z.ToString())}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DeletionProtection="+DeletionProtection+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&StorageThroughput="+StorageThroughput+"&ManageMasterUserPassword="+ManageMasterUserPassword+"&MasterUserSecretKmsKeyId=" + (MasterUserSecretKmsKeyId==null? "" : System.Uri.EscapeDataString(MasterUserSecretKmsKeyId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>
		/// GET_RestoreDBInstanceToPointInTime #Action=RestoreDBInstanceToPointInTime
		/// </summary>
		/// <param name="SourceDBInstanceIdentifier"><p>The identifier of the source DB instance from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB instance.</p> </li> </ul></param>
		/// <param name="TargetDBInstanceIdentifier"><p>The name of the new DB instance to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li> </ul></param>
		/// <param name="RestoreTime"><p>The date and time to restore from.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Can't be specified if the <code>UseLatestRestorableTime</code> parameter is enabled</p> </li> </ul> <p>Example: <code>2009-09-07T23:45:00Z</code> </p></param>
		/// <param name="UseLatestRestorableTime"><p>A value that indicates whether the DB instance is restored from the latest backup time. By default, the DB instance isn't restored from the latest backup time.</p> <p>Constraints: Can't be specified if the <code>RestoreTime</code> parameter is provided.</p></param>
		/// <param name="DBInstanceClass"><p>The compute and memory capacity of the Amazon RDS DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Default: The same DBInstanceClass as the original DB instance.</p></param>
		/// <param name="Port"><p>The port number on which the database accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB instance.</p></param>
		/// <param name="AvailabilityZone"><p>The Availability Zone (AZ) where the DB instance will be created.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p> <p>Example: <code>us-east-1a</code> </p></param>
		/// <param name="DBSubnetGroupName"><p>The DB subnet group name to use for the new instance.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mydbsubnetgroup</code> </p></param>
		/// <param name="MultiAZ"><p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p></param>
		/// <param name="PubliclyAccessible"><p>A value that indicates whether the DB instance is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p> <p>For more information, see <a>CreateDBInstance</a>.</p></param>
		/// <param name="AutoMinorVersionUpgrade"><p>A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="LicenseModel"><p>License model information for the restored DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: Same as source.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p></param>
		/// <param name="DBName"><p>The database name for the restored DB instance.</p> <note> <p>This parameter isn't supported for the MySQL or MariaDB engines. It also doesn't apply to RDS Custom.</p> </note></param>
		/// <param name="Engine"><p>The database engine to use for the new instance.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Valid Values:</p> <ul> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-ee-cdb</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se2-cdb</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul></param>
		/// <param name="Iops"><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</p> <p>Constraints: Must be an integer greater than 1000.</p> <p> <b>SQL Server</b> </p> <p>Setting the IOPS value for the SQL Server database engine isn't supported.</p></param>
		/// <param name="OptionGroupName"><p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance after it is associated with a DB instance</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="CopyTagsToSnapshot">A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.</param>
		/// <param name="StorageType"><p>Specifies the storage type to be associated with the DB instance.</p> <p>Valid values: <code>gp2 | gp3 | io1 | standard</code> </p> <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>gp2</code> </p></param>
		/// <param name="TdeCredentialArn"><p>The ARN from the key store with which to associate the instance for TDE encryption.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="TdeCredentialPassword"><p>The password for the given ARN from the key store in order to access the device.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="VpcSecurityGroupIds"><p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p></param>
		/// <param name="Domain"><p>Specify the Active Directory directory ID to restore the DB instance in. Create the domain before running this command. Currently, you can create only the MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances in an Active Directory Domain.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="DomainIAMRoleName"><p>The name of the IAM role to use when making API calls to the Directory Service.</p> <p>This setting doesn't apply to RDS Custom DB instances.</p></param>
		/// <param name="DomainFqdn"><p>The fully qualified domain name (FQDN) of an Active Directory domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>mymanagedADtest.mymanagedAD.mydomain</code> </p></param>
		/// <param name="DomainOu"><p>The Active Directory organizational unit for your DB instance to join.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the distinguished name format.</p> </li> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain</code> </p></param>
		/// <param name="DomainAuthSecretArn"><p>The ARN for the Secrets Manager secret with the credentials for the user joining the domain.</p> <p>Constraints:</p> <ul> <li> <p>Can't be longer than 64 characters.</p> </li> </ul> <p>Example: <code>arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456</code> </p></param>
		/// <param name="DomainDnsIps"><p>The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.</p> <p>Constraints:</p> <ul> <li> <p>Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list.</p> </li> </ul> <p>Example: <code>123.124.125.126,234.235.236.237</code> </p></param>
		/// <param name="EnableIAMDatabaseAuthentication"><p>A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="EnableCloudwatchLogsExports"><p>The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="ProcessorFeatures"><p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="UseDefaultProcessorFeatures"><p>A value that indicates whether the DB instance class of the DB instance uses its default processor features.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="DBParameterGroupName"><p>The name of the DB parameter group to associate with this DB instance.</p> <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> </ul></param>
		/// <param name="DeletionProtection">A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</param>
		/// <param name="SourceDbiResourceId">The resource ID of the source DB instance from which to restore.</param>
		/// <param name="MaxAllocatedStorage"><p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p> <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="SourceDBInstanceAutomatedBackupsArn"><p>The Amazon Resource Name (ARN) of the replicated automated backups from which to restore, for example, <code>arn:aws:rds:useast-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE</code>.</p> <p>This setting doesn't apply to RDS Custom.</p></param>
		/// <param name="EnableCustomerOwnedIp"><p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p> <p>A <i>CoIP</i> provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network.</p> <p>This setting doesn't apply to RDS Custom.</p> <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing">Customer-owned IP addresses</a> in the <i>Amazon Web Services Outposts User Guide</i>.</p></param>
		/// <param name="CustomIamInstanceProfile"><p>The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:</p> <ul> <li> <p>The profile must exist in your account.</p> </li> <li> <p>The profile must have an IAM role that Amazon EC2 has permissions to assume.</p> </li> <li> <p>The instance profile name and the associated IAM role name must start with the prefix <code>AWSRDSCustom</code>.</p> </li> </ul> <p>For the list of permissions required for the IAM role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc"> Configure IAM and your VPC</a> in the <i>Amazon RDS User Guide</i>.</p> <p>This setting is required for RDS Custom.</p></param>
		/// <param name="BackupTarget"><p>Specifies where automated backups and manual snapshots are stored for the restored DB instance.</p> <p>Possible values are <code>outposts</code> (Amazon Web Services Outposts) and <code>region</code> (Amazon Web Services Region). The default is <code>region</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on Amazon Web Services Outposts</a> in the <i>Amazon RDS User Guide</i>.</p></param>
		/// <param name="NetworkType"><p>The network type of the DB instance.</p> <p>Valid values:</p> <ul> <li> <p> <code>IPV4</code> </p> </li> <li> <p> <code>DUAL</code> </p> </li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p></param>
		/// <param name="StorageThroughput"><p>Specifies the storage throughput value for the DB instance.</p> <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p></param>
		/// <param name="AllocatedStorage"><p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note> <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_RestoreDBInstanceToPointInTimeAsync(
					string SourceDBInstanceIdentifier, 
					string TargetDBInstanceIdentifier, 
					System.DateTimeOffset RestoreTime, 
					bool UseLatestRestorableTime, 
					string DBInstanceClass, 
					int Port, 
					string AvailabilityZone, 
					string DBSubnetGroupName, 
					bool MultiAZ, 
					bool PubliclyAccessible, 
					bool AutoMinorVersionUpgrade, 
					string LicenseModel, 
					string DBName, 
					string Engine, 
					int Iops, 
					string OptionGroupName, 
					bool CopyTagsToSnapshot, 
					string[] Tags, 
					string StorageType, 
					string TdeCredentialArn, 
					string TdeCredentialPassword, 
					string[] VpcSecurityGroupIds, 
					string Domain, 
					string DomainIAMRoleName, 
					string DomainFqdn, 
					string DomainOu, 
					string DomainAuthSecretArn, 
					string[] DomainDnsIps, 
					bool EnableIAMDatabaseAuthentication, 
					string[] EnableCloudwatchLogsExports, 
					string[] ProcessorFeatures, 
					bool UseDefaultProcessorFeatures, 
					string DBParameterGroupName, 
					bool DeletionProtection, 
					string SourceDbiResourceId, 
					int MaxAllocatedStorage, 
					string SourceDBInstanceAutomatedBackupsArn, 
					bool EnableCustomerOwnedIp, 
					string CustomIamInstanceProfile, 
					string BackupTarget, 
					string NetworkType, 
					int StorageThroughput, 
					int AllocatedStorage, 
					GET_RestoreDBInstanceToPointInTimeAction Action, 
					GET_RestoreDBInstanceToPointInTimeVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RestoreDBInstanceToPointInTime?SourceDBInstanceIdentifier=" + (SourceDBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(SourceDBInstanceIdentifier))+"&TargetDBInstanceIdentifier=" + (TargetDBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(TargetDBInstanceIdentifier))+"&RestoreTime=" + RestoreTime.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&UseLatestRestorableTime="+UseLatestRestorableTime+"&DBInstanceClass=" + (DBInstanceClass==null? "" : System.Uri.EscapeDataString(DBInstanceClass))+"&Port="+Port+"&AvailabilityZone=" + (AvailabilityZone==null? "" : System.Uri.EscapeDataString(AvailabilityZone))+"&DBSubnetGroupName=" + (DBSubnetGroupName==null? "" : System.Uri.EscapeDataString(DBSubnetGroupName))+"&MultiAZ="+MultiAZ+"&PubliclyAccessible="+PubliclyAccessible+"&AutoMinorVersionUpgrade="+AutoMinorVersionUpgrade+"&LicenseModel=" + (LicenseModel==null? "" : System.Uri.EscapeDataString(LicenseModel))+"&DBName=" + (DBName==null? "" : System.Uri.EscapeDataString(DBName))+"&Engine=" + (Engine==null? "" : System.Uri.EscapeDataString(Engine))+"&Iops="+Iops+"&OptionGroupName=" + (OptionGroupName==null? "" : System.Uri.EscapeDataString(OptionGroupName))+"&CopyTagsToSnapshot="+CopyTagsToSnapshot+"&"+string.Join("&", Tags.Select(z => $"Tags={System.Uri.EscapeDataString(z.ToString())}"))+"&StorageType=" + (StorageType==null? "" : System.Uri.EscapeDataString(StorageType))+"&TdeCredentialArn=" + (TdeCredentialArn==null? "" : System.Uri.EscapeDataString(TdeCredentialArn))+"&TdeCredentialPassword=" + (TdeCredentialPassword==null? "" : System.Uri.EscapeDataString(TdeCredentialPassword))+"&"+string.Join("&", VpcSecurityGroupIds.Select(z => $"VpcSecurityGroupIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Domain=" + (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"&DomainIAMRoleName=" + (DomainIAMRoleName==null? "" : System.Uri.EscapeDataString(DomainIAMRoleName))+"&DomainFqdn=" + (DomainFqdn==null? "" : System.Uri.EscapeDataString(DomainFqdn))+"&DomainOu=" + (DomainOu==null? "" : System.Uri.EscapeDataString(DomainOu))+"&DomainAuthSecretArn=" + (DomainAuthSecretArn==null? "" : System.Uri.EscapeDataString(DomainAuthSecretArn))+"&"+string.Join("&", DomainDnsIps.Select(z => $"DomainDnsIps={System.Uri.EscapeDataString(z.ToString())}"))+"&EnableIAMDatabaseAuthentication="+EnableIAMDatabaseAuthentication+"&"+string.Join("&", EnableCloudwatchLogsExports.Select(z => $"EnableCloudwatchLogsExports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ProcessorFeatures.Select(z => $"ProcessorFeatures={System.Uri.EscapeDataString(z.ToString())}"))+"&UseDefaultProcessorFeatures="+UseDefaultProcessorFeatures+"&DBParameterGroupName=" + (DBParameterGroupName==null? "" : System.Uri.EscapeDataString(DBParameterGroupName))+"&DeletionProtection="+DeletionProtection+"&SourceDbiResourceId=" + (SourceDbiResourceId==null? "" : System.Uri.EscapeDataString(SourceDbiResourceId))+"&MaxAllocatedStorage="+MaxAllocatedStorage+"&SourceDBInstanceAutomatedBackupsArn=" + (SourceDBInstanceAutomatedBackupsArn==null? "" : System.Uri.EscapeDataString(SourceDBInstanceAutomatedBackupsArn))+"&EnableCustomerOwnedIp="+EnableCustomerOwnedIp+"&CustomIamInstanceProfile=" + (CustomIamInstanceProfile==null? "" : System.Uri.EscapeDataString(CustomIamInstanceProfile))+"&BackupTarget=" + (BackupTarget==null? "" : System.Uri.EscapeDataString(BackupTarget))+"&NetworkType=" + (NetworkType==null? "" : System.Uri.EscapeDataString(NetworkType))+"&StorageThroughput="+StorageThroughput+"&AllocatedStorage="+AllocatedStorage+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).</p> <note> <p>EC2-Classic was retired on August 15, 2022. If you haven't migrated from EC2-Classic to a VPC, we recommend that you migrate as soon as possible. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 User Guide</i>, the blog <a href="http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">EC2-Classic Networking is Retiring – Here’s How to Prepare</a>, and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Non-VPC2VPC.html">Moving a DB instance not in a VPC into a VPC</a> in the <i>Amazon RDS User Guide</i>.</p> </note>
		/// GET_RevokeDBSecurityGroupIngress #Action=RevokeDBSecurityGroupIngress
		/// </summary>
		/// <param name="DBSecurityGroupName">The name of the DB security group to revoke ingress from.</param>
		/// <param name="CIDRIP">The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and <code>EC2SecurityGroupOwnerId</code> can't be provided.</param>
		/// <param name="EC2SecurityGroupName">The name of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</param>
		/// <param name="EC2SecurityGroupId">The id of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</param>
		/// <param name="EC2SecurityGroupOwnerId">The Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</param>
		/// <returns>Success</returns>
		public async Task GET_RevokeDBSecurityGroupIngressAsync(string DBSecurityGroupName, string CIDRIP, string EC2SecurityGroupName, string EC2SecurityGroupId, string EC2SecurityGroupOwnerId, GET_RevokeDBSecurityGroupIngressAction Action, GET_RevokeDBSecurityGroupIngressVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RevokeDBSecurityGroupIngress?DBSecurityGroupName=" + (DBSecurityGroupName==null? "" : System.Uri.EscapeDataString(DBSecurityGroupName))+"&CIDRIP=" + (CIDRIP==null? "" : System.Uri.EscapeDataString(CIDRIP))+"&EC2SecurityGroupName=" + (EC2SecurityGroupName==null? "" : System.Uri.EscapeDataString(EC2SecurityGroupName))+"&EC2SecurityGroupId=" + (EC2SecurityGroupId==null? "" : System.Uri.EscapeDataString(EC2SecurityGroupId))+"&EC2SecurityGroupOwnerId=" + (EC2SecurityGroupOwnerId==null? "" : System.Uri.EscapeDataString(EC2SecurityGroupOwnerId))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts a database activity stream to monitor activity on the database. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html"> Monitoring Amazon Aurora with Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/DBActivityStreams.html"> Monitoring Amazon RDS with Database Activity Streams</a> in the <i>Amazon RDS User Guide</i>.
		/// GET_StartActivityStream #Action=StartActivityStream
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the DB cluster, for example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.</param>
		/// <param name="Mode">Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.</param>
		/// <param name="KmsKeyId">The Amazon Web Services KMS key identifier for encrypting messages in the database activity stream. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</param>
		/// <param name="ApplyImmediately">Specifies whether or not the database activity stream is to start as soon as possible, regardless of the maintenance window for the database.</param>
		/// <param name="EngineNativeAuditFieldsIncluded">Specifies whether the database activity stream includes engine-native audit fields. This option applies to an Oracle or Microsoft SQL Server DB instance. By default, no engine-native audit fields are included.</param>
		/// <returns>Success</returns>
		public async Task GET_StartActivityStreamAsync(string ResourceArn, ActivityStreamMode Mode, string KmsKeyId, bool ApplyImmediately, bool EngineNativeAuditFieldsIncluded, GET_StartActivityStreamAction Action, GET_StartActivityStreamVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StartActivityStream?ResourceArn=" + (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"&Mode=" + Mode+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&ApplyImmediately="+ApplyImmediately+"&EngineNativeAuditFieldsIncluded="+EngineNativeAuditFieldsIncluded+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_StartDBCluster #Action=StartDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the Amazon Aurora DB cluster to be started. This parameter is stored as a lowercase string.</param>
		/// <returns>Success</returns>
		public async Task GET_StartDBClusterAsync(string DBClusterIdentifier, GET_StartDBClusterAction Action, GET_StartDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StartDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead.</p> </note>
		/// GET_StartDBInstance #Action=StartDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier">The user-supplied instance identifier.</param>
		/// <returns>Success</returns>
		public async Task GET_StartDBInstanceAsync(string DBInstanceIdentifier, GET_StartDBInstanceAction Action, GET_StartDBInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StartDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Enables replication of automated backups to a different Amazon Web Services Region.</p> <p>This command doesn't apply to RDS Custom.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_StartDBInstanceAutomatedBackupsReplication #Action=StartDBInstanceAutomatedBackupsReplication
		/// </summary>
		/// <param name="SourceDBInstanceArn">The Amazon Resource Name (ARN) of the source DB instance for the replicated automated backups, for example, <code>arn:aws:rds:us-west-2:123456789012:db:mydatabase</code>.</param>
		/// <param name="BackupRetentionPeriod">The retention period for the replicated automated backups.</param>
		/// <param name="KmsKeyId">The Amazon Web Services KMS key identifier for encryption of the replicated automated backups. The KMS key ID is the Amazon Resource Name (ARN) for the KMS encryption key in the destination Amazon Web Services Region, for example, <code>arn:aws:kms:us-east-1:123456789012:key/AKIAIOSFODNN7EXAMPLE</code>.</param>
		/// <param name="PreSignedUrl"><p>In an Amazon Web Services GovCloud (US) Region, an URL that contains a Signature Version 4 signed request for the <code>StartDBInstanceAutomatedBackupsReplication</code> operation to call in the Amazon Web Services Region of the source DB instance. The presigned URL must be a valid request for the <code>StartDBInstanceAutomatedBackupsReplication</code> API operation that can run in the Amazon Web Services Region that contains the source DB instance.</p> <p>This setting applies only to Amazon Web Services GovCloud (US) Regions. It's ignored in other Amazon Web Services Regions.</p> <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p> </note></param>
		/// <returns>Success</returns>
		public async Task GET_StartDBInstanceAutomatedBackupsReplicationAsync(string SourceDBInstanceArn, int BackupRetentionPeriod, string KmsKeyId, string PreSignedUrl, GET_StartDBInstanceAutomatedBackupsReplicationAction Action, GET_StartDBInstanceAutomatedBackupsReplicationVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StartDBInstanceAutomatedBackupsReplication?SourceDBInstanceArn=" + (SourceDBInstanceArn==null? "" : System.Uri.EscapeDataString(SourceDBInstanceArn))+"&BackupRetentionPeriod="+BackupRetentionPeriod+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&PreSignedUrl=" + (PreSignedUrl==null? "" : System.Uri.EscapeDataString(PreSignedUrl))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an export of DB snapshot or DB cluster data to Amazon S3. The provided IAM role must have access to the S3 bucket.</p> <p>You can't export snapshot data from RDS Custom DB instances.</p> <p>You can't export cluster data from Multi-AZ DB clusters.</p> <p>For more information on exporting DB snapshot data, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ExportSnapshot.html">Exporting DB snapshot data to Amazon S3</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-export-snapshot.html">Exporting DB cluster snapshot data to Amazon S3</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>For more information on exporting DB cluster data, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/export-cluster-data.html">Exporting DB cluster data to Amazon S3</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_StartExportTask #Action=StartExportTask
		/// </summary>
		/// <param name="ExportTaskIdentifier">A unique identifier for the export task. This ID isn't an identifier for the Amazon S3 bucket where the data is to be exported.</param>
		/// <param name="SourceArn">The Amazon Resource Name (ARN) of the snapshot or cluster to export to Amazon S3.</param>
		/// <param name="S3BucketName">The name of the Amazon S3 bucket to export the snapshot or cluster data to.</param>
		/// <param name="IamRoleArn"><p>The name of the IAM role to use for writing to the Amazon S3 bucket when exporting a snapshot or cluster.</p> <p>In the IAM policy attached to your IAM role, include the following required actions to allow the transfer of files from Amazon RDS or Amazon Aurora to an S3 bucket:</p> <ul> <li> <p>s3:PutObject*</p> </li> <li> <p>s3:GetObject*</p> </li> <li> <p>s3:ListBucket</p> </li> <li> <p>s3:DeleteObject*</p> </li> <li> <p>s3:GetBucketLocation </p> </li> </ul> <p>In the policy, include the resources to identify the S3 bucket and objects in the bucket. The following list of resources shows the Amazon Resource Name (ARN) format for accessing S3:</p> <ul> <li> <p> <code>arn:aws:s3:::<i>your-s3-bucket</i> </code> </p> </li> <li> <p> <code>arn:aws:s3:::<i>your-s3-bucket</i>/*</code> </p> </li> </ul></param>
		/// <param name="KmsKeyId"><p>The ID of the Amazon Web Services KMS key to use to encrypt the data exported to Amazon S3. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. The caller of this operation must be authorized to run the following operations. These can be set in the Amazon Web Services KMS key policy:</p> <ul> <li> <p>kms:Encrypt</p> </li> <li> <p>kms:Decrypt</p> </li> <li> <p>kms:GenerateDataKey</p> </li> <li> <p>kms:GenerateDataKeyWithoutPlaintext</p> </li> <li> <p>kms:ReEncryptFrom</p> </li> <li> <p>kms:ReEncryptTo</p> </li> <li> <p>kms:CreateGrant</p> </li> <li> <p>kms:DescribeKey</p> </li> <li> <p>kms:RetireGrant</p> </li> </ul></param>
		/// <param name="S3Prefix">The Amazon S3 bucket prefix to use as the file name and path of the exported data.</param>
		/// <param name="ExportOnly"><p>The data to be exported from the snapshot or cluster. If this parameter is not provided, all of the data is exported. Valid values are the following:</p> <ul> <li> <p> <code>database</code> - Export all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li> <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot or cluster. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_StartExportTaskAsync(string ExportTaskIdentifier, string SourceArn, string S3BucketName, string IamRoleArn, string KmsKeyId, string S3Prefix, string[] ExportOnly, GET_StartExportTaskAction Action, GET_StartExportTaskVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StartExportTask?ExportTaskIdentifier=" + (ExportTaskIdentifier==null? "" : System.Uri.EscapeDataString(ExportTaskIdentifier))+"&SourceArn=" + (SourceArn==null? "" : System.Uri.EscapeDataString(SourceArn))+"&S3BucketName=" + (S3BucketName==null? "" : System.Uri.EscapeDataString(S3BucketName))+"&IamRoleArn=" + (IamRoleArn==null? "" : System.Uri.EscapeDataString(IamRoleArn))+"&KmsKeyId=" + (KmsKeyId==null? "" : System.Uri.EscapeDataString(KmsKeyId))+"&S3Prefix=" + (S3Prefix==null? "" : System.Uri.EscapeDataString(S3Prefix))+"&"+string.Join("&", ExportOnly.Select(z => $"ExportOnly={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a database activity stream that was started using the Amazon Web Services console, the <code>start-activity-stream</code> CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html"> Monitoring Amazon Aurora with Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/DBActivityStreams.html"> Monitoring Amazon RDS with Database Activity Streams</a> in the <i>Amazon RDS User Guide</i>.</p>
		/// GET_StopActivityStream #Action=StopActivityStream
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the DB cluster for the database activity stream. For example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.</param>
		/// <param name="ApplyImmediately">Specifies whether or not the database activity stream is to stop as soon as possible, regardless of the maintenance window for the database.</param>
		/// <returns>Success</returns>
		public async Task GET_StopActivityStreamAsync(string ResourceArn, bool ApplyImmediately, GET_StopActivityStreamAction Action, GET_StopActivityStreamVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StopActivityStream?ResourceArn=" + (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"&ApplyImmediately="+ApplyImmediately+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>
		/// GET_StopDBCluster #Action=StopDBCluster
		/// </summary>
		/// <param name="DBClusterIdentifier">The DB cluster identifier of the Amazon Aurora DB cluster to be stopped. This parameter is stored as a lowercase string.</param>
		/// <returns>Success</returns>
		public async Task GET_StopDBClusterAsync(string DBClusterIdentifier, GET_StopDBClusterAction Action, GET_StopDBClusterVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StopDBCluster?DBClusterIdentifier=" + (DBClusterIdentifier==null? "" : System.Uri.EscapeDataString(DBClusterIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead.</p> </note>
		/// GET_StopDBInstance #Action=StopDBInstance
		/// </summary>
		/// <param name="DBInstanceIdentifier">The user-supplied instance identifier.</param>
		/// <param name="DBSnapshotIdentifier">The user-supplied instance identifier of the DB Snapshot created immediately before the DB instance is stopped.</param>
		/// <returns>Success</returns>
		public async Task GET_StopDBInstanceAsync(string DBInstanceIdentifier, string DBSnapshotIdentifier, GET_StopDBInstanceAction Action, GET_StopDBInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StopDBInstance?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&DBSnapshotIdentifier=" + (DBSnapshotIdentifier==null? "" : System.Uri.EscapeDataString(DBSnapshotIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops automated backup replication for a DB instance.</p> <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>
		/// GET_StopDBInstanceAutomatedBackupsReplication #Action=StopDBInstanceAutomatedBackupsReplication
		/// </summary>
		/// <param name="SourceDBInstanceArn">The Amazon Resource Name (ARN) of the source DB instance for which to stop replicating automate backups, for example, <code>arn:aws:rds:us-west-2:123456789012:db:mydatabase</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_StopDBInstanceAutomatedBackupsReplicationAsync(string SourceDBInstanceArn, GET_StopDBInstanceAutomatedBackupsReplicationAction Action, GET_StopDBInstanceAutomatedBackupsReplicationVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StopDBInstanceAutomatedBackupsReplication?SourceDBInstanceArn=" + (SourceDBInstanceArn==null? "" : System.Uri.EscapeDataString(SourceDBInstanceArn))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Switches over a blue/green deployment.</p> <p>Before you switch over, production traffic is routed to the databases in the blue environment. After you switch over, production traffic is routed to the databases in the green environment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
		/// GET_SwitchoverBlueGreenDeployment #Action=SwitchoverBlueGreenDeployment
		/// </summary>
		/// <param name="BlueGreenDeploymentIdentifier"><p>The unique identifier of the blue/green deployment.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
		/// Min length: 1
		/// Max length: 255
		// </param>
		/// <param name="SwitchoverTimeout"><p>The amount of time, in seconds, for the switchover to complete.</p> <p>Default: 300</p> <p>If the switchover takes longer than the specified duration, then any changes are rolled back, and no changes are made to the environments.</p>
		/// Minimum: 30
		// </param>
		/// <returns>Success</returns>
		public async Task GET_SwitchoverBlueGreenDeploymentAsync(string BlueGreenDeploymentIdentifier, int SwitchoverTimeout, GET_SwitchoverBlueGreenDeploymentAction Action, GET_SwitchoverBlueGreenDeploymentVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=SwitchoverBlueGreenDeployment?BlueGreenDeploymentIdentifier=" + (BlueGreenDeploymentIdentifier==null? "" : System.Uri.EscapeDataString(BlueGreenDeploymentIdentifier))+"&SwitchoverTimeout="+SwitchoverTimeout+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Switches over an Oracle standby database in an Oracle Data Guard environment, making it the new primary database. Issue this command in the Region that hosts the current standby database.
		/// GET_SwitchoverReadReplica #Action=SwitchoverReadReplica
		/// </summary>
		/// <param name="DBInstanceIdentifier"><p>The DB instance identifier of the current standby database. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identiﬁer of an existing Oracle read replica DB instance.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_SwitchoverReadReplicaAsync(string DBInstanceIdentifier, GET_SwitchoverReadReplicaAction Action, GET_SwitchoverReadReplicaVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=SwitchoverReadReplica?DBInstanceIdentifier=" + (DBInstanceIdentifier==null? "" : System.Uri.EscapeDataString(DBInstanceIdentifier))+"&Action=" + Action+"&Version=" + Version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum GET_AddRoleToDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AddRoleToDBCluster = 0,
	}
	
	public enum GET_AddRoleToDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_AddRoleToDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_AddRoleToDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AddRoleToDBInstance = 0,
	}
	
	public enum GET_AddRoleToDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_AddRoleToDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_AddSourceIdentifierToSubscriptionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AddSourceIdentifierToSubscription = 0,
	}
	
	public enum GET_AddSourceIdentifierToSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_AddSourceIdentifierToSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_AddTagsToResourceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AddTagsToResource = 0,
	}
	
	public enum GET_AddTagsToResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_AddTagsToResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ApplyPendingMaintenanceActionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ApplyPendingMaintenanceAction = 0,
	}
	
	public enum GET_ApplyPendingMaintenanceActionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ApplyPendingMaintenanceActionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_AuthorizeDBSecurityGroupIngressAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizeDBSecurityGroupIngress = 0,
	}
	
	public enum GET_AuthorizeDBSecurityGroupIngressVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_AuthorizeDBSecurityGroupIngressVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_BacktrackDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BacktrackDBCluster = 0,
	}
	
	public enum GET_BacktrackDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_BacktrackDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CancelExportTaskAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CancelExportTask = 0,
	}
	
	public enum GET_CancelExportTaskVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CancelExportTaskVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CopyDBClusterParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CopyDBClusterParameterGroup = 0,
	}
	
	public enum GET_CopyDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CopyDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CopyDBClusterSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CopyDBClusterSnapshot = 0,
	}
	
	public enum GET_CopyDBClusterSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CopyDBClusterSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CopyDBParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CopyDBParameterGroup = 0,
	}
	
	public enum GET_CopyDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CopyDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CopyDBSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CopyDBSnapshot = 0,
	}
	
	public enum GET_CopyDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CopyDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CopyOptionGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CopyOptionGroup = 0,
	}
	
	public enum GET_CopyOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CopyOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateBlueGreenDeploymentAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateBlueGreenDeployment = 0,
	}
	
	public enum GET_CreateBlueGreenDeploymentVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateBlueGreenDeploymentVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateCustomDBEngineVersionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateCustomDBEngineVersion = 0,
	}
	
	public enum GET_CreateCustomDBEngineVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateCustomDBEngineVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_CreateDBClusterScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
	}
	
	public class GET_CreateDBClusterServerlessV2ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	public enum GET_CreateDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBCluster = 0,
	}
	
	public enum GET_CreateDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBClusterEndpointAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBClusterEndpoint = 0,
	}
	
	public enum GET_CreateDBClusterEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBClusterEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBClusterParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBClusterParameterGroup = 0,
	}
	
	public enum GET_CreateDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBClusterSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBClusterSnapshot = 0,
	}
	
	public enum GET_CreateDBClusterSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBClusterSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBInstance = 0,
	}
	
	public enum GET_CreateDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBInstanceReadReplicaReplicaMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="open-read-only")]
		openMinusreadMinusonly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mounted = 1,
	}
	
	public enum GET_CreateDBInstanceReadReplicaAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBInstanceReadReplica = 0,
	}
	
	public enum GET_CreateDBInstanceReadReplicaVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBInstanceReadReplicaVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBParameterGroup = 0,
	}
	
	public enum GET_CreateDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBProxyAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBProxy = 0,
	}
	
	public enum GET_CreateDBProxyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBProxyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBProxyEndpointAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBProxyEndpoint = 0,
	}
	
	public enum GET_CreateDBProxyEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBProxyEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBSecurityGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBSecurityGroup = 0,
	}
	
	public enum GET_CreateDBSecurityGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBSecurityGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBSnapshot = 0,
	}
	
	public enum GET_CreateDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateDBSubnetGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateDBSubnetGroup = 0,
	}
	
	public enum GET_CreateDBSubnetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateDBSubnetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateEventSubscriptionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateEventSubscription = 0,
	}
	
	public enum GET_CreateEventSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateEventSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateGlobalClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateGlobalCluster = 0,
	}
	
	public enum GET_CreateGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_CreateOptionGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateOptionGroup = 0,
	}
	
	public enum GET_CreateOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_CreateOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteBlueGreenDeploymentAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteBlueGreenDeployment = 0,
	}
	
	public enum GET_DeleteBlueGreenDeploymentVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteBlueGreenDeploymentVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteCustomDBEngineVersionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteCustomDBEngineVersion = 0,
	}
	
	public enum GET_DeleteCustomDBEngineVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteCustomDBEngineVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBCluster = 0,
	}
	
	public enum GET_DeleteDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBClusterAutomatedBackupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBClusterAutomatedBackup = 0,
	}
	
	public enum GET_DeleteDBClusterAutomatedBackupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBClusterAutomatedBackupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBClusterEndpointAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBClusterEndpoint = 0,
	}
	
	public enum GET_DeleteDBClusterEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBClusterEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBClusterParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBClusterParameterGroup = 0,
	}
	
	public enum GET_DeleteDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBClusterSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBClusterSnapshot = 0,
	}
	
	public enum GET_DeleteDBClusterSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBClusterSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBInstance = 0,
	}
	
	public enum GET_DeleteDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBInstanceAutomatedBackupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBInstanceAutomatedBackup = 0,
	}
	
	public enum GET_DeleteDBInstanceAutomatedBackupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBInstanceAutomatedBackupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBParameterGroup = 0,
	}
	
	public enum GET_DeleteDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBProxyAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBProxy = 0,
	}
	
	public enum GET_DeleteDBProxyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBProxyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBProxyEndpointAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBProxyEndpoint = 0,
	}
	
	public enum GET_DeleteDBProxyEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBProxyEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBSecurityGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBSecurityGroup = 0,
	}
	
	public enum GET_DeleteDBSecurityGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBSecurityGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBSnapshot = 0,
	}
	
	public enum GET_DeleteDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteDBSubnetGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteDBSubnetGroup = 0,
	}
	
	public enum GET_DeleteDBSubnetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteDBSubnetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteEventSubscriptionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteEventSubscription = 0,
	}
	
	public enum GET_DeleteEventSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteEventSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteGlobalClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteGlobalCluster = 0,
	}
	
	public enum GET_DeleteGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeleteOptionGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteOptionGroup = 0,
	}
	
	public enum GET_DeleteOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeleteOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DeregisterDBProxyTargetsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeregisterDBProxyTargets = 0,
	}
	
	public enum GET_DeregisterDBProxyTargetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DeregisterDBProxyTargetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeAccountAttributesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeAccountAttributes = 0,
	}
	
	public enum GET_DescribeAccountAttributesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeAccountAttributesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeBlueGreenDeploymentsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeBlueGreenDeployments = 0,
	}
	
	public enum GET_DescribeBlueGreenDeploymentsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeBlueGreenDeploymentsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeCertificatesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeCertificates = 0,
	}
	
	public enum GET_DescribeCertificatesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeCertificatesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterAutomatedBackupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterAutomatedBackups = 0,
	}
	
	public enum GET_DescribeDBClusterAutomatedBackupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterAutomatedBackupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterBacktracksAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterBacktracks = 0,
	}
	
	public enum GET_DescribeDBClusterBacktracksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterBacktracksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterEndpointsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterEndpoints = 0,
	}
	
	public enum GET_DescribeDBClusterEndpointsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterEndpointsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterParameterGroupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterParameterGroups = 0,
	}
	
	public enum GET_DescribeDBClusterParameterGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterParameterGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterParametersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterParameters = 0,
	}
	
	public enum GET_DescribeDBClusterParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterSnapshotAttributesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterSnapshotAttributes = 0,
	}
	
	public enum GET_DescribeDBClusterSnapshotAttributesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterSnapshotAttributesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClusterSnapshotsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusterSnapshots = 0,
	}
	
	public enum GET_DescribeDBClusterSnapshotsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClusterSnapshotsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBClustersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBClusters = 0,
	}
	
	public enum GET_DescribeDBClustersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBClustersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBEngineVersionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBEngineVersions = 0,
	}
	
	public enum GET_DescribeDBEngineVersionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBEngineVersionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBInstanceAutomatedBackupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBInstanceAutomatedBackups = 0,
	}
	
	public enum GET_DescribeDBInstanceAutomatedBackupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBInstanceAutomatedBackupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBInstancesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBInstances = 0,
	}
	
	public enum GET_DescribeDBInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBLogFilesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBLogFiles = 0,
	}
	
	public enum GET_DescribeDBLogFilesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBLogFilesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBParameterGroupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBParameterGroups = 0,
	}
	
	public enum GET_DescribeDBParameterGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBParameterGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBParametersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBParameters = 0,
	}
	
	public enum GET_DescribeDBParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBProxiesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBProxies = 0,
	}
	
	public enum GET_DescribeDBProxiesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBProxiesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBProxyEndpointsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBProxyEndpoints = 0,
	}
	
	public enum GET_DescribeDBProxyEndpointsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBProxyEndpointsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBProxyTargetGroupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBProxyTargetGroups = 0,
	}
	
	public enum GET_DescribeDBProxyTargetGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBProxyTargetGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBProxyTargetsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBProxyTargets = 0,
	}
	
	public enum GET_DescribeDBProxyTargetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBProxyTargetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBSecurityGroupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBSecurityGroups = 0,
	}
	
	public enum GET_DescribeDBSecurityGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBSecurityGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBSnapshotAttributesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBSnapshotAttributes = 0,
	}
	
	public enum GET_DescribeDBSnapshotAttributesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBSnapshotAttributesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBSnapshotsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBSnapshots = 0,
	}
	
	public enum GET_DescribeDBSnapshotsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBSnapshotsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeDBSubnetGroupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeDBSubnetGroups = 0,
	}
	
	public enum GET_DescribeDBSubnetGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeDBSubnetGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeEngineDefaultClusterParametersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeEngineDefaultClusterParameters = 0,
	}
	
	public enum GET_DescribeEngineDefaultClusterParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeEngineDefaultClusterParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeEngineDefaultParametersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeEngineDefaultParameters = 0,
	}
	
	public enum GET_DescribeEngineDefaultParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeEngineDefaultParametersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeEventCategoriesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeEventCategories = 0,
	}
	
	public enum GET_DescribeEventCategoriesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeEventCategoriesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeEventSubscriptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeEventSubscriptions = 0,
	}
	
	public enum GET_DescribeEventSubscriptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeEventSubscriptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeEventsSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-instance")]
		dbMinusinstance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-parameter-group")]
		dbMinusparameterMinusgroup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-security-group")]
		dbMinussecurityMinusgroup = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-snapshot")]
		dbMinussnapshot = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-cluster")]
		dbMinuscluster = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-cluster-snapshot")]
		dbMinusclusterMinussnapshot = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="custom-engine-version")]
		customMinusengineMinusversion = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-proxy")]
		dbMinusproxy = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="blue-green-deployment")]
		blueMinusgreenMinusdeployment = 8,
	}
	
	public enum GET_DescribeEventsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeEvents = 0,
	}
	
	public enum GET_DescribeEventsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeEventsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeExportTasksAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeExportTasks = 0,
	}
	
	public enum GET_DescribeExportTasksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeExportTasksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeGlobalClustersAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeGlobalClusters = 0,
	}
	
	public enum GET_DescribeGlobalClustersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeGlobalClustersVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeOptionGroupOptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeOptionGroupOptions = 0,
	}
	
	public enum GET_DescribeOptionGroupOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeOptionGroupOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeOptionGroupsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeOptionGroups = 0,
	}
	
	public enum GET_DescribeOptionGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeOptionGroupsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeOrderableDBInstanceOptionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeOrderableDBInstanceOptions = 0,
	}
	
	public enum GET_DescribeOrderableDBInstanceOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeOrderableDBInstanceOptionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribePendingMaintenanceActionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribePendingMaintenanceActions = 0,
	}
	
	public enum GET_DescribePendingMaintenanceActionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribePendingMaintenanceActionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeReservedDBInstancesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeReservedDBInstances = 0,
	}
	
	public enum GET_DescribeReservedDBInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeReservedDBInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeReservedDBInstancesOfferingsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeReservedDBInstancesOfferings = 0,
	}
	
	public enum GET_DescribeReservedDBInstancesOfferingsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeReservedDBInstancesOfferingsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeSourceRegionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeSourceRegions = 0,
	}
	
	public enum GET_DescribeSourceRegionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeSourceRegionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DescribeValidDBInstanceModificationsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeValidDBInstanceModifications = 0,
	}
	
	public enum GET_DescribeValidDBInstanceModificationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DescribeValidDBInstanceModificationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_DownloadDBLogFilePortionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadDBLogFilePortion = 0,
	}
	
	public enum GET_DownloadDBLogFilePortionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_DownloadDBLogFilePortionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_FailoverDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailoverDBCluster = 0,
	}
	
	public enum GET_FailoverDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_FailoverDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_FailoverGlobalClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailoverGlobalCluster = 0,
	}
	
	public enum GET_FailoverGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_FailoverGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ListTagsForResourceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListTagsForResource = 0,
	}
	
	public enum GET_ListTagsForResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ListTagsForResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyActivityStreamAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyActivityStream = 0,
	}
	
	public enum GET_ModifyActivityStreamVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyActivityStreamVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyCertificatesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyCertificates = 0,
	}
	
	public enum GET_ModifyCertificatesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyCertificatesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyCurrentDBClusterCapacityAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyCurrentDBClusterCapacity = 0,
	}
	
	public enum GET_ModifyCurrentDBClusterCapacityVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyCurrentDBClusterCapacityVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyCustomDBEngineVersionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inactive-except-restore")]
		inactiveMinusexceptMinusrestore = 2,
	}
	
	public enum GET_ModifyCustomDBEngineVersionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyCustomDBEngineVersion = 0,
	}
	
	public enum GET_ModifyCustomDBEngineVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyCustomDBEngineVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_ModifyDBClusterCloudwatchLogsExportConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableLogTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DisableLogTypes { get; set; }
	}
	
	public class GET_ModifyDBClusterScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
	}
	
	public class GET_ModifyDBClusterServerlessV2ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	public enum GET_ModifyDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBCluster = 0,
	}
	
	public enum GET_ModifyDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBClusterEndpointAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBClusterEndpoint = 0,
	}
	
	public enum GET_ModifyDBClusterEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBClusterEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBClusterParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBClusterParameterGroup = 0,
	}
	
	public enum GET_ModifyDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBClusterSnapshotAttributeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBClusterSnapshotAttribute = 0,
	}
	
	public enum GET_ModifyDBClusterSnapshotAttributeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBClusterSnapshotAttributeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_ModifyDBInstanceCloudwatchLogsExportConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EnableLogTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DisableLogTypes { get; set; }
	}
	
	public enum GET_ModifyDBInstanceReplicaMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="open-read-only")]
		openMinusreadMinusonly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mounted = 1,
	}
	
	public enum GET_ModifyDBInstanceAutomationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		full = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="all-paused")]
		allMinuspaused = 1,
	}
	
	public enum GET_ModifyDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBInstance = 0,
	}
	
	public enum GET_ModifyDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBParameterGroup = 0,
	}
	
	public enum GET_ModifyDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBProxyAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBProxy = 0,
	}
	
	public enum GET_ModifyDBProxyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBProxyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBProxyEndpointAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBProxyEndpoint = 0,
	}
	
	public enum GET_ModifyDBProxyEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBProxyEndpointVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_ModifyDBProxyTargetGroupConnectionPoolConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxIdleConnectionsPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionBorrowTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SessionPinningFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitQuery { get; set; }
	}
	
	public enum GET_ModifyDBProxyTargetGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBProxyTargetGroup = 0,
	}
	
	public enum GET_ModifyDBProxyTargetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBProxyTargetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBSnapshot = 0,
	}
	
	public enum GET_ModifyDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBSnapshotAttributeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBSnapshotAttribute = 0,
	}
	
	public enum GET_ModifyDBSnapshotAttributeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBSnapshotAttributeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyDBSubnetGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyDBSubnetGroup = 0,
	}
	
	public enum GET_ModifyDBSubnetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyDBSubnetGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyEventSubscriptionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyEventSubscription = 0,
	}
	
	public enum GET_ModifyEventSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyEventSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyGlobalClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyGlobalCluster = 0,
	}
	
	public enum GET_ModifyGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ModifyOptionGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyOptionGroup = 0,
	}
	
	public enum GET_ModifyOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ModifyOptionGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_PromoteReadReplicaAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PromoteReadReplica = 0,
	}
	
	public enum GET_PromoteReadReplicaVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_PromoteReadReplicaVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_PromoteReadReplicaDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PromoteReadReplicaDBCluster = 0,
	}
	
	public enum GET_PromoteReadReplicaDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_PromoteReadReplicaDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_PurchaseReservedDBInstancesOfferingAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PurchaseReservedDBInstancesOffering = 0,
	}
	
	public enum GET_PurchaseReservedDBInstancesOfferingVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_PurchaseReservedDBInstancesOfferingVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RebootDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RebootDBCluster = 0,
	}
	
	public enum GET_RebootDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RebootDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RebootDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RebootDBInstance = 0,
	}
	
	public enum GET_RebootDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RebootDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RegisterDBProxyTargetsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RegisterDBProxyTargets = 0,
	}
	
	public enum GET_RegisterDBProxyTargetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RegisterDBProxyTargetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RemoveFromGlobalClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RemoveFromGlobalCluster = 0,
	}
	
	public enum GET_RemoveFromGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RemoveFromGlobalClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RemoveRoleFromDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RemoveRoleFromDBCluster = 0,
	}
	
	public enum GET_RemoveRoleFromDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RemoveRoleFromDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RemoveRoleFromDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RemoveRoleFromDBInstance = 0,
	}
	
	public enum GET_RemoveRoleFromDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RemoveRoleFromDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RemoveSourceIdentifierFromSubscriptionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RemoveSourceIdentifierFromSubscription = 0,
	}
	
	public enum GET_RemoveSourceIdentifierFromSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RemoveSourceIdentifierFromSubscriptionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RemoveTagsFromResourceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RemoveTagsFromResource = 0,
	}
	
	public enum GET_RemoveTagsFromResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RemoveTagsFromResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ResetDBClusterParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResetDBClusterParameterGroup = 0,
	}
	
	public enum GET_ResetDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ResetDBClusterParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_ResetDBParameterGroupAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResetDBParameterGroup = 0,
	}
	
	public enum GET_ResetDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_ResetDBParameterGroupVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_RestoreDBClusterFromS3ServerlessV2ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	public enum GET_RestoreDBClusterFromS3Action
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestoreDBClusterFromS3 = 0,
	}
	
	public enum GET_RestoreDBClusterFromS3Version
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RestoreDBClusterFromS3Version
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_RestoreDBClusterFromSnapshotScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
	}
	
	public class GET_RestoreDBClusterFromSnapshotServerlessV2ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	public enum GET_RestoreDBClusterFromSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestoreDBClusterFromSnapshot = 0,
	}
	
	public enum GET_RestoreDBClusterFromSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RestoreDBClusterFromSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public class GET_RestoreDBClusterToPointInTimeScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsUntilAutoPause { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SecondsBeforeTimeout { get; set; }
	}
	
	public class GET_RestoreDBClusterToPointInTimeServerlessV2ScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxCapacity { get; set; }
	}
	
	public enum GET_RestoreDBClusterToPointInTimeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestoreDBClusterToPointInTime = 0,
	}
	
	public enum GET_RestoreDBClusterToPointInTimeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RestoreDBClusterToPointInTimeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RestoreDBInstanceFromDBSnapshotAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestoreDBInstanceFromDBSnapshot = 0,
	}
	
	public enum GET_RestoreDBInstanceFromDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RestoreDBInstanceFromDBSnapshotVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RestoreDBInstanceFromS3Action
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestoreDBInstanceFromS3 = 0,
	}
	
	public enum GET_RestoreDBInstanceFromS3Version
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RestoreDBInstanceFromS3Version
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RestoreDBInstanceToPointInTimeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestoreDBInstanceToPointInTime = 0,
	}
	
	public enum GET_RestoreDBInstanceToPointInTimeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RestoreDBInstanceToPointInTimeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_RevokeDBSecurityGroupIngressAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RevokeDBSecurityGroupIngress = 0,
	}
	
	public enum GET_RevokeDBSecurityGroupIngressVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_RevokeDBSecurityGroupIngressVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StartActivityStreamAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartActivityStream = 0,
	}
	
	public enum GET_StartActivityStreamVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StartActivityStreamVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StartDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartDBCluster = 0,
	}
	
	public enum GET_StartDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StartDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StartDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartDBInstance = 0,
	}
	
	public enum GET_StartDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StartDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StartDBInstanceAutomatedBackupsReplicationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartDBInstanceAutomatedBackupsReplication = 0,
	}
	
	public enum GET_StartDBInstanceAutomatedBackupsReplicationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StartDBInstanceAutomatedBackupsReplicationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StartExportTaskAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartExportTask = 0,
	}
	
	public enum GET_StartExportTaskVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StartExportTaskVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StopActivityStreamAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StopActivityStream = 0,
	}
	
	public enum GET_StopActivityStreamVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StopActivityStreamVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StopDBClusterAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StopDBCluster = 0,
	}
	
	public enum GET_StopDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StopDBClusterVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StopDBInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StopDBInstance = 0,
	}
	
	public enum GET_StopDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StopDBInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_StopDBInstanceAutomatedBackupsReplicationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StopDBInstanceAutomatedBackupsReplication = 0,
	}
	
	public enum GET_StopDBInstanceAutomatedBackupsReplicationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_StopDBInstanceAutomatedBackupsReplicationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_SwitchoverBlueGreenDeploymentAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SwitchoverBlueGreenDeployment = 0,
	}
	
	public enum GET_SwitchoverBlueGreenDeploymentVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_SwitchoverBlueGreenDeploymentVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum GET_SwitchoverReadReplicaAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SwitchoverReadReplica = 0,
	}
	
	public enum GET_SwitchoverReadReplicaVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
	
	public enum POST_SwitchoverReadReplicaVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2014-10-31")]
		_2014Minus10Minus31 = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

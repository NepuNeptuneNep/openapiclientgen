//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns latitude and longitude for the given easting and northing.
		/// Takes an OSGB36 easting and northing (British National Grid) and returns the geographically equivalent WGS84 latitude and longitude.
		/// #### A successful request returns the following fields:
		/// * status - this will be `ok`
		/// * easting - the easting provided in the request
		/// * northing - the northing provided in the request
		/// * latitude - the latitude of the converted coordinates
		/// * longitude - the longitude of the converted coordinates
		/// #### An unsuccessful request returns the following fields:
		/// * status - this will be `error`
		/// * error - an error message
		/// 
		/// Bng2latlong_easting_northingGet bng2latlong/{easting}/{northing}
		/// </summary>
		/// <param name="easting">An OSGB36 (British National Grid) easting.</param>
		/// <param name="northing">An OSGB36 (British National Grid) northing.</param>
		/// <returns>A JSON object containing the original easting and northing, and the converted latitude and longitude.</returns>
		public async Task<Bng2latlong_easting_northingGetReturn> Bng2latlong_easting_northingGetAsync(int easting, int northing, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bng2latlong/"+easting+"/"+northing;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Bng2latlong_easting_northingGetReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class Bng2latlong_easting_northingGetReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="easting")]
		public System.Nullable<System.Int32> Easting { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="northing")]
		public System.Nullable<System.Int32> Northing { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<Bng2latlong_easting_northingGetReturnStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Bng2latlong_easting_northingGetReturnStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ok = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

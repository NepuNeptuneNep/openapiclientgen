//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public Expr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Expr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Empty
	{
	}
	
	/// <summary>
	/// Request message for `GetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetIamPolicyRequest
	{
		
		/// <summary>
		/// Encapsulates settings provided to GetIamPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetPolicyOptions Options { get; set; }
	}
	
	/// <summary>
	/// Encapsulates settings provided to GetIamPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetPolicyOptions
	{
		
		/// <summary>
		/// Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedPolicyVersion")]
		public System.Nullable<System.Int32> RequestedPolicyVersion { get; set; }
	}
	
	/// <summary>
	/// Specification for the BigQuery connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryConnectionSpec
	{
		
		/// <summary>
		/// Specification for the BigQuery connection to a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudSql")]
		public GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec CloudSql { get; set; }
		
		/// <summary>
		/// The type of the BigQuery connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionType")]
		public System.Nullable<GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType> ConnectionType { get; set; }
		
		/// <summary>
		/// True if there are credentials attached to the BigQuery connection; false otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasCredential")]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
	}
	
	/// <summary>
	/// Specification for the BigQuery connection to a Cloud SQL instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec
	{
		
		/// <summary>
		/// Database name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// Cloud SQL instance ID in the format of `project:location:instance`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceId")]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Type of the Cloud SQL database.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATABASE_TYPE_UNSPECIFIED")]
		DATABASE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="POSTGRES")]
		POSTGRES = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MYSQL")]
		MYSQL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONNECTION_TYPE_UNSPECIFIED")]
		CONNECTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_SQL")]
		CLOUD_SQL = 1,
	}
	
	/// <summary>
	/// Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryDateShardedSpec
	{
		
		/// <summary>
		/// Output only. The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// Output only. BigQuery resource name of the latest shard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestShardResource")]
		public string LatestShardResource { get; set; }
		
		/// <summary>
		/// Output only. Total number of shards.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardCount")]
		public string ShardCount { get; set; }
		
		/// <summary>
		/// Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tablePrefix")]
		public string TablePrefix { get; set; }
	}
	
	/// <summary>
	/// Fields specific for BigQuery routines.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryRoutineSpec
	{
		
		/// <summary>
		/// Paths of the imported libraries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedLibraries")]
		public string[] ImportedLibraries { get; set; }
	}
	
	/// <summary>
	/// Describes a BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BigQueryTableSpec
	{
		
		/// <summary>
		/// Output only. The table source type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSourceType")]
		public System.Nullable<GoogleCloudDatacatalogV1BigQueryTableSpecTableSourceType> TableSourceType { get; set; }
		
		/// <summary>
		/// Normal BigQuery table specification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableSpec")]
		public GoogleCloudDatacatalogV1TableSpec TableSpec { get; set; }
		
		/// <summary>
		/// Table view specification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewSpec")]
		public GoogleCloudDatacatalogV1ViewSpec ViewSpec { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1BigQueryTableSpecTableSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TABLE_SOURCE_TYPE_UNSPECIFIED")]
		TABLE_SOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGQUERY_VIEW")]
		BIGQUERY_VIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGQUERY_TABLE")]
		BIGQUERY_TABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGQUERY_MATERIALIZED_VIEW")]
		BIGQUERY_MATERIALIZED_VIEW = 3,
	}
	
	/// <summary>
	/// Normal BigQuery table specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TableSpec
	{
		
		/// <summary>
		/// Output only. If the table is date-sharded, that is, it matches the `[prefix]YYYYMMDD` name pattern, this field is the Data Catalog resource name of the date-sharded grouped entry. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`. Otherwise, `grouped_entry` is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupedEntry")]
		public string GroupedEntry { get; set; }
	}
	
	/// <summary>
	/// Table view specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ViewSpec
	{
		
		/// <summary>
		/// Output only. The query that defines the table view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewQuery")]
		public string ViewQuery { get; set; }
	}
	
	/// <summary>
	/// Business Context of the entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1BusinessContext
	{
		
		/// <summary>
		/// Contact people for the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public GoogleCloudDatacatalogV1Contacts Contacts { get; set; }
		
		/// <summary>
		/// Entry overview fields for rich text descriptions of entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entryOverview")]
		public GoogleCloudDatacatalogV1EntryOverview EntryOverview { get; set; }
	}
	
	/// <summary>
	/// Contact people for the entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Contacts
	{
		
		/// <summary>
		/// The list of contact people for the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="people")]
		public GoogleCloudDatacatalogV1ContactsPerson[] People { get; set; }
	}
	
	/// <summary>
	/// A contact person for the entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ContactsPerson
	{
		
		/// <summary>
		/// Designation of the person, for example, Data Steward.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="designation")]
		public string Designation { get; set; }
		
		/// <summary>
		/// Email of the person in the format of `john.doe@xyz`, ``, or `John Doe`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
	}
	
	/// <summary>
	/// Entry overview fields for rich text descriptions of entries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1EntryOverview
	{
		
		/// <summary>
		/// Entry overview with support for rich text. The overview must only contain Unicode characters, and should be formatted using HTML. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overview")]
		public string Overview { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to Instance entries that are part of `CLOUD_BIGTABLE` system. (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudBigtableInstanceSpec
	{
		
		/// <summary>
		/// The list of clusters for the Instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudBigtableClusterSpecs")]
		public GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec[] CloudBigtableClusterSpecs { get; set; }
	}
	
	/// <summary>
	/// Spec that applies to clusters of an Instance of Cloud Bigtable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec
	{
		
		/// <summary>
		/// Name of the cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A link back to the parent resource, in this case Instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// Location of the cluster, typically a Cloud zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Type of the resource. For a cluster this would be "CLUSTER".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to all entries that are part of `CLOUD_BIGTABLE` system (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CloudBigtableSystemSpec
	{
		
		/// <summary>
		/// Display name of the Instance. This is user specified and different from the resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceDisplayName")]
		public string InstanceDisplayName { get; set; }
	}
	
	/// <summary>
	/// A column within a schema. Columns can be nested inside other columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ColumnSchema
	{
		
		/// <summary>
		/// Required. Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Optional. Default value for the column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Garbage collection policy for the column or column family. Applies to systems like Cloud Bigtable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcRule")]
		public string GcRule { get; set; }
		
		/// <summary>
		/// Optional. Most important inclusion of this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="highestIndexingType")]
		public System.Nullable<GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType> HighestIndexingType { get; set; }
		
		/// <summary>
		/// Column info specific to Looker System.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lookerColumnSpec")]
		public GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec LookerColumnSpec { get; set; }
		
		/// <summary>
		/// Optional. A column's mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public string Mode { get; set; }
		
		/// <summary>
		/// Optional. Ordinal position
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ordinalPosition")]
		public System.Nullable<System.Int32> OrdinalPosition { get; set; }
		
		/// <summary>
		/// Optional. Schema of sub-columns. A column can have zero or more sub-columns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subcolumns")]
		public GoogleCloudDatacatalogV1ColumnSchema[] Subcolumns { get; set; }
		
		/// <summary>
		/// Required. Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_TYPE_UNSPECIFIED")]
		INDEXING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_TYPE_NONE")]
		INDEXING_TYPE_NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_TYPE_NON_UNIQUE")]
		INDEXING_TYPE_NON_UNIQUE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_TYPE_UNIQUE")]
		INDEXING_TYPE_UNIQUE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_TYPE_PRIMARY_KEY")]
		INDEXING_TYPE_PRIMARY_KEY = 4,
	}
	
	/// <summary>
	/// Column info specific to Looker System.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec
	{
		
		/// <summary>
		/// Looker specific column type of this column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOOKER_COLUMN_TYPE_UNSPECIFIED")]
		LOOKER_COLUMN_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIMENSION")]
		DIMENSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIMENSION_GROUP")]
		DIMENSION_GROUP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER")]
		FILTER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEASURE")]
		MEASURE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PARAMETER")]
		PARAMETER = 5,
	}
	
	/// <summary>
	/// Common statistics on the entry's usage. They can be set on any system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CommonUsageStats
	{
		
		/// <summary>
		/// View count in source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewCount")]
		public string ViewCount { get; set; }
	}
	
	/// <summary>
	/// Cross-regional source used to import an existing taxonomy into a different region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1CrossRegionalSource
	{
		
		/// <summary>
		/// Required. The resource name of the source taxonomy to import.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomy")]
		public string Taxonomy { get; set; }
	}
	
	/// <summary>
	/// Physical location of an entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataSource
	{
		
		/// <summary>
		/// Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Service that physically stores the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public System.Nullable<GoogleCloudDatacatalogV1DataSourceService> Service { get; set; }
		
		/// <summary>
		/// Output only. Data Catalog entry name, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceEntry")]
		public string SourceEntry { get; set; }
		
		/// <summary>
		/// Details the properties of the underlying storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageProperties")]
		public GoogleCloudDatacatalogV1StorageProperties StorageProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DataSourceService
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVICE_UNSPECIFIED")]
		SERVICE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_STORAGE")]
		CLOUD_STORAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGQUERY")]
		BIGQUERY = 2,
	}
	
	/// <summary>
	/// Details the properties of the underlying storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1StorageProperties
	{
		
		/// <summary>
		/// Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: * `gs://bucket_name/dir/*`: matches all files in the `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in the `bucket_name/dir` and all subdirectories recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePattern")]
		public string[] FilePattern { get; set; }
		
		/// <summary>
		/// File type in MIME format, for example, `text/plain`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileType")]
		public string FileType { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs can be set at the time, and cannot be changed later.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataSourceConnectionSpec
	{
		
		/// <summary>
		/// Specification for the BigQuery connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryConnectionSpec")]
		public GoogleCloudDatacatalogV1BigQueryConnectionSpec BigqueryConnectionSpec { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DatabaseTableSpec
	{
		
		/// <summary>
		/// Specification that applies to database view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseViewSpec")]
		public GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec DatabaseViewSpec { get; set; }
		
		/// <summary>
		/// Entry specification for a Dataplex table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexTable")]
		public GoogleCloudDatacatalogV1DataplexTableSpec DataplexTable { get; set; }
		
		/// <summary>
		/// Type of this table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1DatabaseTableSpecType> Type { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to database view.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec
	{
		
		/// <summary>
		/// Name of a singular table this view reflects one to one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseTable")]
		public string BaseTable { get; set; }
		
		/// <summary>
		/// SQL query used to generate this view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlQuery")]
		public string SqlQuery { get; set; }
		
		/// <summary>
		/// Type of this view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewType")]
		public System.Nullable<GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType> ViewType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIEW_TYPE_UNSPECIFIED")]
		VIEW_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STANDARD_VIEW")]
		STANDARD_VIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MATERIALIZED_VIEW")]
		MATERIALIZED_VIEW = 2,
	}
	
	/// <summary>
	/// Entry specification for a Dataplex table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexTableSpec
	{
		
		/// <summary>
		/// Common Dataplex fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexSpec")]
		public GoogleCloudDatacatalogV1DataplexSpec DataplexSpec { get; set; }
		
		/// <summary>
		/// List of external tables registered by Dataplex in other systems based on the same underlying data. External tables allow to query this data in those systems.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalTables")]
		public GoogleCloudDatacatalogV1DataplexExternalTable[] ExternalTables { get; set; }
		
		/// <summary>
		/// Indicates if the table schema is managed by the user or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userManaged")]
		public System.Nullable<System.Boolean> UserManaged { get; set; }
	}
	
	/// <summary>
	/// Common Dataplex fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexSpec
	{
		
		/// <summary>
		/// Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset")]
		public string Asset { get; set; }
		
		/// <summary>
		/// Compression format of the data, e.g., zip, gzip etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compressionFormat")]
		public string CompressionFormat { get; set; }
		
		/// <summary>
		/// Native schema used by a resource represented as an entry. Used by query engines for deserializing and parsing source data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataFormat")]
		public GoogleCloudDatacatalogV1PhysicalSchema DataFormat { get; set; }
		
		/// <summary>
		/// Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	/// <summary>
	/// Native schema used by a resource represented as an entry. Used by query engines for deserializing and parsing source data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchema
	{
		
		/// <summary>
		/// Schema in Avro JSON format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avro")]
		public GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema Avro { get; set; }
		
		/// <summary>
		/// Marks a CSV-encoded data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csv")]
		public GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema Csv { get; set; }
		
		/// <summary>
		/// Marks an ORC-encoded data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orc")]
		public GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema Orc { get; set; }
		
		/// <summary>
		/// Marks a Parquet-encoded data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parquet")]
		public GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema Parquet { get; set; }
		
		/// <summary>
		/// Schema in protocol buffer format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protobuf")]
		public GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema Protobuf { get; set; }
		
		/// <summary>
		/// Schema in Thrift format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thrift")]
		public GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema Thrift { get; set; }
	}
	
	/// <summary>
	/// Schema in Avro JSON format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
	{
		
		/// <summary>
		/// JSON source of the Avro schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Marks a CSV-encoded data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema
	{
	}
	
	/// <summary>
	/// Marks an ORC-encoded data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema
	{
	}
	
	/// <summary>
	/// Marks a Parquet-encoded data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema
	{
	}
	
	/// <summary>
	/// Schema in protocol buffer format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
	{
		
		/// <summary>
		/// Protocol buffer source of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Schema in Thrift format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
	{
		
		/// <summary>
		/// Thrift IDL source of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// External table registered by Dataplex. Dataplex publishes data discovered from an asset into multiple other systems (BigQuery, DPMS) in form of tables. We call them "external tables". External tables are also synced into the Data Catalog. This message contains pointers to those external tables (fully qualified name, resource name et cetera) within the Data Catalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexExternalTable
	{
		
		/// <summary>
		/// Name of the Data Catalog entry representing the external table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCatalogEntry")]
		public string DataCatalogEntry { get; set; }
		
		/// <summary>
		/// Fully qualified name (FQN) of the external table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullyQualifiedName")]
		public string FullyQualifiedName { get; set; }
		
		/// <summary>
		/// Google Cloud resource name of the external table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleCloudResource")]
		public string GoogleCloudResource { get; set; }
		
		/// <summary>
		/// Service in which the external table is registered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="system")]
		public System.Nullable<GoogleCloudDatacatalogV1DataplexExternalTableSystem> System { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DataplexExternalTableSystem
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTEGRATED_SYSTEM_UNSPECIFIED")]
		INTEGRATED_SYSTEM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGQUERY")]
		BIGQUERY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_PUBSUB")]
		CLOUD_PUBSUB = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATAPROC_METASTORE")]
		DATAPROC_METASTORE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATAPLEX")]
		DATAPLEX = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_SPANNER")]
		CLOUD_SPANNER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_BIGTABLE")]
		CLOUD_BIGTABLE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_SQL")]
		CLOUD_SQL = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOOKER")]
		LOOKER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERTEX_AI")]
		VERTEX_AI = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1DatabaseTableSpecType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TABLE_TYPE_UNSPECIFIED")]
		TABLE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NATIVE")]
		NATIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXTERNAL")]
		EXTERNAL = 2,
	}
	
	/// <summary>
	/// Entry specyfication for a Dataplex fileset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DataplexFilesetSpec
	{
		
		/// <summary>
		/// Common Dataplex fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexSpec")]
		public GoogleCloudDatacatalogV1DataplexSpec DataplexSpec { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a dataset. Valid only for entries with the `DATASET` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DatasetSpec
	{
		
		/// <summary>
		/// Specification for vertex dataset resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexDatasetSpec")]
		public GoogleCloudDatacatalogV1VertexDatasetSpec VertexDatasetSpec { get; set; }
	}
	
	/// <summary>
	/// Specification for vertex dataset resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1VertexDatasetSpec
	{
		
		/// <summary>
		/// The number of DataItems in this Dataset. Only apply for non-structured Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemCount")]
		public string DataItemCount { get; set; }
		
		/// <summary>
		/// Type of the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataType")]
		public System.Nullable<GoogleCloudDatacatalogV1VertexDatasetSpecDataType> DataType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1VertexDatasetSpecDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_TYPE_UNSPECIFIED")]
		DATA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TABLE")]
		TABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMAGE")]
		IMAGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TEXT")]
		TEXT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIDEO")]
		VIDEO = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONVERSATION")]
		CONVERSATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TIME_SERIES")]
		TIME_SERIES = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOCUMENT")]
		DOCUMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TEXT_TO_SPEECH")]
		TEXT_TO_SPEECH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRANSLATION")]
		TRANSLATION = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STORE_VISION")]
		STORE_VISION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENTERPRISE_KNOWLEDGE_GRAPH")]
		ENTERPRISE_KNOWLEDGE_GRAPH = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TEXT_PROMPT")]
		TEXT_PROMPT = 12,
	}
	
	/// <summary>
	/// Wrapper for any item that can be contained in the dump.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1DumpItem
	{
		
		/// <summary>
		/// Wrapper containing Entry and information about Tags that should and should not be attached to it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taggedEntry")]
		public GoogleCloudDatacatalogV1TaggedEntry TaggedEntry { get; set; }
	}
	
	/// <summary>
	/// Wrapper containing Entry and information about Tags that should and should not be attached to it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TaggedEntry
	{
		
		/// <summary>
		/// Optional. Tags that should be deleted from the Data Catalog. Caller should populate template name and column only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="absentTags")]
		public GoogleCloudDatacatalogV1Tag[] AbsentTags { get; set; }
		
		/// <summary>
		/// Optional. Tags that should be ingested into the Data Catalog. Caller should populate template name, column and fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="presentTags")]
		public GoogleCloudDatacatalogV1Tag[] PresentTags { get; set; }
		
		/// <summary>
		/// Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="v1Entry")]
		public GoogleCloudDatacatalogV1Entry V1Entry { get; set; }
	}
	
	/// <summary>
	/// Tags contain custom metadata and are attached to Data Catalog resources. Tags conform with the specification of their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Tag
	{
		
		/// <summary>
		/// Resources like entry can have schemas associated with them. This scope allows you to attach tags to an individual column based on that schema. To attach a tag to a nested column, separate column names with a dot (`.`). Example: `column.nested_column`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Required. Maps the ID of a tag field to its value and additional information about that field. Tag template defines valid field IDs. A tag must have at least 1 field and at most 500 fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1TagField> Fields { get; set; }
		
		/// <summary>
		/// The resource name of the tag in URL format where tag ID is a system-generated identifier. Note: The tag itself might not be stored in the location specified in its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The resource name of the tag template this tag uses. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE_ID}` This field cannot be modified after creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		/// <summary>
		/// Output only. The display name of the tag template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateDisplayName")]
		public string TemplateDisplayName { get; set; }
	}
	
	/// <summary>
	/// Contains the value and additional information on a field within a Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TagField
	{
		
		/// <summary>
		/// The value of a tag field with a boolean type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Output only. The display name of this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The value of a tag field with a double type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// An enum value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enumValue")]
		public GoogleCloudDatacatalogV1TagFieldEnumValue EnumValue { get; set; }
		
		/// <summary>
		/// Output only. The order of this field with respect to other fields in this tag. Can be set by Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag don't have to be sequential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		/// <summary>
		/// The value of a tag field with a rich text type. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="richtextValue")]
		public string RichtextValue { get; set; }
		
		/// <summary>
		/// The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
		
		/// <summary>
		/// The value of a tag field with a timestamp type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampValue")]
		public string TimestampValue { get; set; }
	}
	
	/// <summary>
	/// An enum value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TagFieldEnumValue
	{
		
		/// <summary>
		/// The display name of the enum value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Entry
	{
		
		/// <summary>
		/// Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDateShardedSpec")]
		public GoogleCloudDatacatalogV1BigQueryDateShardedSpec BigqueryDateShardedSpec { get; set; }
		
		/// <summary>
		/// Describes a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryTableSpec")]
		public GoogleCloudDatacatalogV1BigQueryTableSpec BigqueryTableSpec { get; set; }
		
		/// <summary>
		/// Business Context of the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="businessContext")]
		public GoogleCloudDatacatalogV1BusinessContext BusinessContext { get; set; }
		
		/// <summary>
		/// Specification that applies to all entries that are part of `CLOUD_BIGTABLE` system (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudBigtableSystemSpec")]
		public GoogleCloudDatacatalogV1CloudBigtableSystemSpec CloudBigtableSystemSpec { get; set; }
		
		/// <summary>
		/// Physical location of an entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSource")]
		public GoogleCloudDatacatalogV1DataSource DataSource { get; set; }
		
		/// <summary>
		/// Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs can be set at the time, and cannot be changed later.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSourceConnectionSpec")]
		public GoogleCloudDatacatalogV1DataSourceConnectionSpec DataSourceConnectionSpec { get; set; }
		
		/// <summary>
		/// Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseTableSpec")]
		public GoogleCloudDatacatalogV1DatabaseTableSpec DatabaseTableSpec { get; set; }
		
		/// <summary>
		/// Specification that applies to a dataset. Valid only for entries with the `DATASET` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetSpec")]
		public GoogleCloudDatacatalogV1DatasetSpec DatasetSpec { get; set; }
		
		/// <summary>
		/// Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Specification that applies to a fileset. Valid only for entries with the 'FILESET' type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filesetSpec")]
		public GoogleCloudDatacatalogV1FilesetSpec FilesetSpec { get; set; }
		
		/// <summary>
		/// [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullyQualifiedName")]
		public string FullyQualifiedName { get; set; }
		
		/// <summary>
		/// Describes a Cloud Storage fileset entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsFilesetSpec")]
		public GoogleCloudDatacatalogV1GcsFilesetSpec GcsFilesetSpec { get; set; }
		
		/// <summary>
		/// Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integratedSystem")]
		public GoogleCloudDatacatalogV1DataplexExternalTableSystem IntegratedSystem { get; set; }
		
		/// <summary>
		/// Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// Specification that applies to entries that are part `LOOKER` system (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lookerSystemSpec")]
		public GoogleCloudDatacatalogV1LookerSystemSpec LookerSystemSpec { get; set; }
		
		/// <summary>
		/// Specification that applies to a model. Valid only for entries with the `MODEL` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelSpec")]
		public GoogleCloudDatacatalogV1ModelSpec ModelSpec { get; set; }
		
		/// <summary>
		/// Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Entry metadata relevant only to the user and private to them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personalDetails")]
		public GoogleCloudDatacatalogV1PersonalDetails PersonalDetails { get; set; }
		
		/// <summary>
		/// Specification that applies to a routine. Valid only for entries with the `ROUTINE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routineSpec")]
		public GoogleCloudDatacatalogV1RoutineSpec RoutineSpec { get; set; }
		
		/// <summary>
		/// Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public GoogleCloudDatacatalogV1Schema Schema { get; set; }
		
		/// <summary>
		/// Specification that applies to a Service resource. Valid only for entries with the `SERVICE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceSpec")]
		public GoogleCloudDatacatalogV1ServiceSpec ServiceSpec { get; set; }
		
		/// <summary>
		/// Timestamps associated with this resource in a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceSystemTimestamps")]
		public GoogleCloudDatacatalogV1SystemTimestamps SourceSystemTimestamps { get; set; }
		
		/// <summary>
		/// Specification that applies to entries that are part `SQL_DATABASE` system (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlDatabaseSystemSpec")]
		public GoogleCloudDatacatalogV1SqlDatabaseSystemSpec SqlDatabaseSystemSpec { get; set; }
		
		/// <summary>
		/// The type of the entry. For details, see [`EntryType`](#entrytype).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDatacatalogV1EntryType> Type { get; set; }
		
		/// <summary>
		/// The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageSignal")]
		public GoogleCloudDatacatalogV1UsageSignal UsageSignal { get; set; }
		
		/// <summary>
		/// Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedSystem")]
		public string UserSpecifiedSystem { get; set; }
		
		/// <summary>
		/// Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedType")]
		public string UserSpecifiedType { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a fileset. Valid only for entries with the 'FILESET' type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1FilesetSpec
	{
		
		/// <summary>
		/// Entry specyfication for a Dataplex fileset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataplexFileset")]
		public GoogleCloudDatacatalogV1DataplexFilesetSpec DataplexFileset { get; set; }
	}
	
	/// <summary>
	/// Describes a Cloud Storage fileset entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1GcsFilesetSpec
	{
		
		/// <summary>
		/// Required. Patterns to identify a set of files in Google Cloud Storage. For more information, see [Wildcard Names] (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). Note: Currently, bucket wildcards are not supported. Examples of valid `file_patterns`: * `gs://bucket_name/dir/*`: matches all files in `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` and all subdirectories * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to match complex sets of files, for example: `gs://bucket_name/[a-m]??.j*g`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePatterns")]
		public string[] FilePatterns { get; set; }
		
		/// <summary>
		/// Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleGcsFileSpecs")]
		public GoogleCloudDatacatalogV1GcsFileSpec[] SampleGcsFileSpecs { get; set; }
	}
	
	/// <summary>
	/// Specification of a single file in Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1GcsFileSpec
	{
		
		/// <summary>
		/// Required. Full file path. Example: `gs://bucket_name/a/b.txt`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePath")]
		public string FilePath { get; set; }
		
		/// <summary>
		/// Timestamps associated with this resource in a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsTimestamps")]
		public GoogleCloudDatacatalogV1SystemTimestamps GcsTimestamps { get; set; }
		
		/// <summary>
		/// Output only. File size in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeBytes")]
		public string SizeBytes { get; set; }
	}
	
	/// <summary>
	/// Timestamps associated with this resource in a particular system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SystemTimestamps
	{
		
		/// <summary>
		/// Creation timestamp of the resource within the given system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Expiration timestamp of the resource within the given system. Currently only applicable to BigQuery resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Timestamp of the last modification of the resource or its metadata within a given system. Note: Depending on the source system, not every modification updates this timestamp. For example, BigQuery timestamps every metadata modification but not data or permission changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to entries that are part `LOOKER` system (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1LookerSystemSpec
	{
		
		/// <summary>
		/// Name of the parent Looker Instance. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentInstanceDisplayName")]
		public string ParentInstanceDisplayName { get; set; }
		
		/// <summary>
		/// ID of the parent Looker Instance. Empty if it does not exist. Example value: `someinstance.looker.com`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentInstanceId")]
		public string ParentInstanceId { get; set; }
		
		/// <summary>
		/// Name of the parent Model. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModelDisplayName")]
		public string ParentModelDisplayName { get; set; }
		
		/// <summary>
		/// ID of the parent Model. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModelId")]
		public string ParentModelId { get; set; }
		
		/// <summary>
		/// Name of the parent View. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentViewDisplayName")]
		public string ParentViewDisplayName { get; set; }
		
		/// <summary>
		/// ID of the parent View. Empty if it does not exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentViewId")]
		public string ParentViewId { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a model. Valid only for entries with the `MODEL` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ModelSpec
	{
		
		/// <summary>
		/// Specification for vertex model resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexModelSpec")]
		public GoogleCloudDatacatalogV1VertexModelSpec VertexModelSpec { get; set; }
	}
	
	/// <summary>
	/// Specification for vertex model resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1VertexModelSpec
	{
		
		/// <summary>
		/// URI of the Docker image to be used as the custom container for serving predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerImageUri")]
		public string ContainerImageUri { get; set; }
		
		/// <summary>
		/// User provided version aliases so that a model version can be referenced via alias
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionAliases")]
		public string[] VersionAliases { get; set; }
		
		/// <summary>
		/// The description of this version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionDescription")]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// The version ID of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionId")]
		public string VersionId { get; set; }
		
		/// <summary>
		/// Detail description of the source information of a Vertex model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexModelSourceInfo")]
		public GoogleCloudDatacatalogV1VertexModelSourceInfo VertexModelSourceInfo { get; set; }
	}
	
	/// <summary>
	/// Detail description of the source information of a Vertex model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1VertexModelSourceInfo
	{
		
		/// <summary>
		/// If this Model is copy of another Model. If true then source_type pertains to the original.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copy")]
		public System.Nullable<System.Boolean> Copy { get; set; }
		
		/// <summary>
		/// Type of the model source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceType")]
		public System.Nullable<GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType> SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_SOURCE_TYPE_UNSPECIFIED")]
		MODEL_SOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUTOML")]
		AUTOML = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUSTOM")]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BQML")]
		BQML = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_GARDEN")]
		MODEL_GARDEN = 4,
	}
	
	/// <summary>
	/// Entry metadata relevant only to the user and private to them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PersonalDetails
	{
		
		/// <summary>
		/// Set if the entry is starred; unset otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starTime")]
		public string StarTime { get; set; }
		
		/// <summary>
		/// True if the entry is starred by the user; false otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starred")]
		public System.Nullable<System.Boolean> Starred { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a routine. Valid only for entries with the `ROUTINE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1RoutineSpec
	{
		
		/// <summary>
		/// Fields specific for BigQuery routines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryRoutineSpec")]
		public GoogleCloudDatacatalogV1BigQueryRoutineSpec BigqueryRoutineSpec { get; set; }
		
		/// <summary>
		/// The body of the routine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="definitionBody")]
		public string DefinitionBody { get; set; }
		
		/// <summary>
		/// The language the routine is written in. The exact value depends on the source system. For BigQuery routines, possible values are: * `SQL` * `JAVASCRIPT`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Return type of the argument. The exact value depends on the source system and the language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnType")]
		public string ReturnType { get; set; }
		
		/// <summary>
		/// Arguments of the routine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routineArguments")]
		public GoogleCloudDatacatalogV1RoutineSpecArgument[] RoutineArguments { get; set; }
		
		/// <summary>
		/// The type of the routine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routineType")]
		public System.Nullable<GoogleCloudDatacatalogV1RoutineSpecRoutineType> RoutineType { get; set; }
	}
	
	/// <summary>
	/// Input or output argument of a function or stored procedure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1RoutineSpecArgument
	{
		
		/// <summary>
		/// Specifies whether the argument is input or output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public System.Nullable<GoogleCloudDatacatalogV1RoutineSpecArgumentMode> Mode { get; set; }
		
		/// <summary>
		/// The name of the argument. A return argument of a function might not have a name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Type of the argument. The exact value depends on the source system and the language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1RoutineSpecArgumentMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODE_UNSPECIFIED")]
		MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IN")]
		IN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUT")]
		OUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INOUT")]
		INOUT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1RoutineSpecRoutineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ROUTINE_TYPE_UNSPECIFIED")]
		ROUTINE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCALAR_FUNCTION")]
		SCALAR_FUNCTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PROCEDURE")]
		PROCEDURE = 2,
	}
	
	/// <summary>
	/// Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Schema
	{
		
		/// <summary>
		/// The unified GoogleSQL-like schema of columns. The overall maximum number of columns and nested columns is 10,000. The maximum nested depth is 15 levels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public GoogleCloudDatacatalogV1ColumnSchema[] Columns { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to a Service resource. Valid only for entries with the `SERVICE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ServiceSpec
	{
		
		/// <summary>
		/// Specification that applies to Instance entries that are part of `CLOUD_BIGTABLE` system. (user_specified_type)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudBigtableInstanceSpec")]
		public GoogleCloudDatacatalogV1CloudBigtableInstanceSpec CloudBigtableInstanceSpec { get; set; }
	}
	
	/// <summary>
	/// Specification that applies to entries that are part `SQL_DATABASE` system (user_specified_type)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SqlDatabaseSystemSpec
	{
		
		/// <summary>
		/// Version of the database engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseVersion")]
		public string DatabaseVersion { get; set; }
		
		/// <summary>
		/// Host of the SQL database enum InstanceHost { UNDEFINED = 0; SELF_HOSTED = 1; CLOUD_SQL = 2; AMAZON_RDS = 3; AZURE_SQL = 4; } Host of the enclousing database instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceHost")]
		public string InstanceHost { get; set; }
		
		/// <summary>
		/// SQL Database Engine. enum SqlEngine { UNDEFINED = 0; MY_SQL = 1; POSTGRE_SQL = 2; SQL_SERVER = 3; } Engine of the enclosing database instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqlEngine")]
		public string SqlEngine { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1EntryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENTRY_TYPE_UNSPECIFIED")]
		ENTRY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TABLE")]
		TABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL")]
		MODEL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_STREAM")]
		DATA_STREAM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILESET")]
		FILESET = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLUSTER")]
		CLUSTER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATABASE")]
		DATABASE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_SOURCE_CONNECTION")]
		DATA_SOURCE_CONNECTION = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ROUTINE")]
		ROUTINE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAKE")]
		LAKE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZONE")]
		ZONE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVICE")]
		SERVICE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATABASE_SCHEMA")]
		DATABASE_SCHEMA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DASHBOARD")]
		DASHBOARD = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXPLORE")]
		EXPLORE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOOK")]
		LOOK = 15,
	}
	
	/// <summary>
	/// The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1UsageSignal
	{
		
		/// <summary>
		/// Common usage statistics over each of the predefined time ranges. Supported time ranges are `{"24H", "7D", "30D", "Lifetime"}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonUsageWithinTimeRange")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1CommonUsageStats> CommonUsageWithinTimeRange { get; set; }
		
		/// <summary>
		/// Favorite count in the source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="favoriteCount")]
		public string FavoriteCount { get; set; }
		
		/// <summary>
		/// The end timestamp of the duration of usage statistics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Output only. BigQuery usage statistics over each of the predefined time ranges. Supported time ranges are `{"24H", "7D", "30D"}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageWithinTimeRange")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1UsageStats> UsageWithinTimeRange { get; set; }
	}
	
	/// <summary>
	/// Detailed statistics on the entry's usage. Usage statistics have the following limitations: - Only BigQuery tables have them. - They only include BigQuery query jobs. - They might be underestimated because wildcard table references are not yet counted. For more information, see [Querying multiple tables using a wildcard table] (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1UsageStats
	{
		
		/// <summary>
		/// The number of cancelled attempts to use the underlying entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCancellations")]
		public System.Nullable<System.Single> TotalCancellations { get; set; }
		
		/// <summary>
		/// The number of successful uses of the underlying entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCompletions")]
		public System.Nullable<System.Single> TotalCompletions { get; set; }
		
		/// <summary>
		/// Total time spent only on successful uses, in milliseconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalExecutionTimeForCompletionsMillis")]
		public System.Nullable<System.Single> TotalExecutionTimeForCompletionsMillis { get; set; }
		
		/// <summary>
		/// The number of failed attempts to use the underlying entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalFailures")]
		public System.Nullable<System.Single> TotalFailures { get; set; }
	}
	
	/// <summary>
	/// Entry group metadata. An `EntryGroup` resource represents a logical grouping of zero or more Data Catalog Entry resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1EntryGroup
	{
		
		/// <summary>
		/// Timestamps associated with this resource in a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCatalogTimestamps")]
		public GoogleCloudDatacatalogV1SystemTimestamps DataCatalogTimestamps { get; set; }
		
		/// <summary>
		/// Entry group description. Can consist of several sentences or paragraphs that describe the entry group contents. Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A short name to identify the entry group, for example, "analytics data - jan 2011". Default value is an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The resource name of the entry group in URL format. Note: The entry group itself and its child resources might not be stored in the location specified in its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response message for ExportTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ExportTaxonomiesResponse
	{
		
		/// <summary>
		/// List of taxonomies and policy tags as nested protocol buffers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1SerializedTaxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// A nested protocol buffer that represents a taxonomy and the hierarchy of its policy tags. Used for taxonomy replacement, import, and export.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SerializedTaxonomy
	{
		
		/// <summary>
		/// A list of policy types that are activated per taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activatedPolicyTypes")]
		public string[] ActivatedPolicyTypes { get; set; }
		
		/// <summary>
		/// Description of the serialized taxonomy. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Display name of the taxonomy. At most 200 bytes when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Top level policy tags associated with the taxonomy, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTags")]
		public GoogleCloudDatacatalogV1SerializedPolicyTag[] PolicyTags { get; set; }
	}
	
	/// <summary>
	/// A nested protocol buffer that represents a policy tag and all its descendants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SerializedPolicyTag
	{
		
		/// <summary>
		/// Children of the policy tag, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childPolicyTags")]
		public GoogleCloudDatacatalogV1SerializedPolicyTag[] ChildPolicyTags { get; set; }
		
		/// <summary>
		/// Description of the serialized policy tag. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Display name of the policy tag. At most 200 bytes when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name of the policy tag. This field is ignored when calling `ImportTaxonomies`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTag")]
		public string PolicyTag { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1FieldType
	{
		
		[System.Runtime.Serialization.DataMember(Name="enumType")]
		public GoogleCloudDatacatalogV1FieldTypeEnumType EnumType { get; set; }
		
		/// <summary>
		/// Primitive types, such as string, boolean, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primitiveType")]
		public System.Nullable<GoogleCloudDatacatalogV1FieldTypePrimitiveType> PrimitiveType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1FieldTypeEnumType
	{
		
		/// <summary>
		/// The set of allowed values for this enum. This set must not be empty and can include up to 100 allowed values. The display names of the values in this set must not be empty and must be case-insensitively unique within this set. The order of items in this set is preserved. This field can be used to create, remove, and reorder enum values. To rename enum values, use the `RenameTagTemplateFieldEnumValue` method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedValues")]
		public GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue[] AllowedValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue
	{
		
		/// <summary>
		/// Required. The display name of the enum value. Must not be an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1FieldTypePrimitiveType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRIMITIVE_TYPE_UNSPECIFIED")]
		PRIMITIVE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOUBLE")]
		DOUBLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STRING")]
		STRING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOL")]
		BOOL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TIMESTAMP")]
		TIMESTAMP = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RICHTEXT")]
		RICHTEXT = 5,
	}
	
	/// <summary>
	/// Metadata message for long-running operation returned by the ImportEntries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportEntriesMetadata
	{
		
		/// <summary>
		/// Partial errors that are encountered during the ImportEntries operation. There is no guarantee that all the encountered errors are reported. However, if no errors are reported, it means that no errors were encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public Status[] Errors { get; set; }
		
		/// <summary>
		/// State of the import operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDatacatalogV1ImportEntriesMetadataState> State { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ImportEntriesMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMPORT_STATE_UNSPECIFIED")]
		IMPORT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMPORT_QUEUED")]
		IMPORT_QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMPORT_IN_PROGRESS")]
		IMPORT_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMPORT_DONE")]
		IMPORT_DONE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMPORT_OBSOLETE")]
		IMPORT_OBSOLETE = 4,
	}
	
	/// <summary>
	/// Request message for ImportEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportEntriesRequest
	{
		
		/// <summary>
		/// Path to a Cloud Storage bucket that contains a dump ready for ingestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsBucketPath")]
		public string GcsBucketPath { get; set; }
		
		/// <summary>
		/// Optional. (Optional) Dataplex task job id, if specified will be used as part of ImportEntries LRO ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// Response message for long-running operation returned by the ImportEntries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportEntriesResponse
	{
		
		/// <summary>
		/// Number of entries deleted as a result of import operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deletedEntriesCount")]
		public string DeletedEntriesCount { get; set; }
		
		/// <summary>
		/// Cumulative number of entries created and entries updated as a result of import operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upsertedEntriesCount")]
		public string UpsertedEntriesCount { get; set; }
	}
	
	/// <summary>
	/// Request message for ImportTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportTaxonomiesRequest
	{
		
		/// <summary>
		/// Cross-regional source used to import an existing taxonomy into a different region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crossRegionalSource")]
		public GoogleCloudDatacatalogV1CrossRegionalSource CrossRegionalSource { get; set; }
		
		/// <summary>
		/// Inline source containing taxonomies to import.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineSource")]
		public GoogleCloudDatacatalogV1InlineSource InlineSource { get; set; }
	}
	
	/// <summary>
	/// Inline source containing taxonomies to import.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1InlineSource
	{
		
		/// <summary>
		/// Required. Taxonomies to import.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1SerializedTaxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// Response message for ImportTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ImportTaxonomiesResponse
	{
		
		/// <summary>
		/// Imported taxonomies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1Taxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// A taxonomy is a collection of hierarchical policy tags that classify data along a common axis. For example, a "data sensitivity" taxonomy might contain the following policy tags: ``` + PII + Account number + Age + SSN + Zipcode + Financials + Revenue ``` A "data origin" taxonomy might contain the following policy tags: ``` + User data + Employee data + Partner data + Public data ```
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1Taxonomy
	{
		
		/// <summary>
		/// Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activatedPolicyTypes")]
		public string[] ActivatedPolicyTypes { get; set; }
		
		/// <summary>
		/// Optional. Description of this taxonomy. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns, and page breaks, and be at most 2000 bytes long when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User-defined name of this taxonomy. The name can't start or end with spaces, must contain only Unicode letters, numbers, underscores, dashes, and spaces, and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Identifier. Resource name of this taxonomy in URL format. Note: Policy tag manager generates unique taxonomy IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Number of policy tags in this taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTagCount")]
		public System.Nullable<System.Int32> PolicyTagCount { get; set; }
		
		/// <summary>
		/// The source system of the Taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public GoogleCloudDatacatalogV1TaxonomyService Service { get; set; }
		
		/// <summary>
		/// Timestamps associated with this resource in a particular system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomyTimestamps")]
		public GoogleCloudDatacatalogV1SystemTimestamps TaxonomyTimestamps { get; set; }
	}
	
	/// <summary>
	/// The source system of the Taxonomy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TaxonomyService
	{
		
		/// <summary>
		/// The service agent for the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The Google Cloud service name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public System.Nullable<GoogleCloudDatacatalogV1TaxonomyServiceName> Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1TaxonomyServiceName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MANAGING_SYSTEM_UNSPECIFIED")]
		MANAGING_SYSTEM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MANAGING_SYSTEM_DATAPLEX")]
		MANAGING_SYSTEM_DATAPLEX = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MANAGING_SYSTEM_OTHER")]
		MANAGING_SYSTEM_OTHER = 2,
	}
	
	/// <summary>
	/// Response message for ListEntries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ListEntriesResponse
	{
		
		/// <summary>
		/// Entry details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entries")]
		public GoogleCloudDatacatalogV1Entry[] Entries { get; set; }
		
		/// <summary>
		/// Pagination token of the next results page. Empty if there are no more items in results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListEntryGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ListEntryGroupsResponse
	{
		
		/// <summary>
		/// Entry group details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entryGroups")]
		public GoogleCloudDatacatalogV1EntryGroup[] EntryGroups { get; set; }
		
		/// <summary>
		/// Pagination token to specify in the next call to retrieve the next page of results. Empty if there are no more items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListPolicyTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ListPolicyTagsResponse
	{
		
		/// <summary>
		/// Pagination token of the next results page. Empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The policy tags that belong to the taxonomy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyTags")]
		public GoogleCloudDatacatalogV1PolicyTag[] PolicyTags { get; set; }
	}
	
	/// <summary>
	/// Denotes one policy tag in a taxonomy, for example, SSN. Policy tags can be defined in a hierarchy. For example: ``` + Geolocation + LatLong + City + ZipCode ``` Where the "Geolocation" policy tag contains three children.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1PolicyTag
	{
		
		/// <summary>
		/// Output only. Resource names of child policy tags of this policy tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childPolicyTags")]
		public string[] ChildPolicyTags { get; set; }
		
		/// <summary>
		/// Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Identifier. Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag, and, for "Geolocation", this field is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentPolicyTag")]
		public string ParentPolicyTag { get; set; }
	}
	
	/// <summary>
	/// Response message for ListTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ListTagsResponse
	{
		
		/// <summary>
		/// Pagination token of the next results page. Empty if there are no more items in results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Tag details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GoogleCloudDatacatalogV1Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Response message for ListTaxonomies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ListTaxonomiesResponse
	{
		
		/// <summary>
		/// Pagination token of the next results page. Empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Taxonomies that the project contains.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxonomies")]
		public GoogleCloudDatacatalogV1Taxonomy[] Taxonomies { get; set; }
	}
	
	/// <summary>
	/// Request message for ModifyEntryContacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ModifyEntryContactsRequest
	{
		
		/// <summary>
		/// Contact people for the entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public GoogleCloudDatacatalogV1Contacts Contacts { get; set; }
	}
	
	/// <summary>
	/// Request message for ModifyEntryOverview.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ModifyEntryOverviewRequest
	{
		
		/// <summary>
		/// Entry overview fields for rich text descriptions of entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entryOverview")]
		public GoogleCloudDatacatalogV1EntryOverview EntryOverview { get; set; }
	}
	
	/// <summary>
	/// Long-running operation metadata message returned by the ReconcileTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ReconcileTagsMetadata
	{
		
		/// <summary>
		/// Maps the name of each tagged column (or empty string for a sole entry) to tagging operation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public System.Collections.Generic.Dictionary<string, Status> Errors { get; set; }
		
		/// <summary>
		/// State of the reconciliation operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDatacatalogV1ReconcileTagsMetadataState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1ReconcileTagsMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECONCILIATION_STATE_UNSPECIFIED")]
		RECONCILIATION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECONCILIATION_QUEUED")]
		RECONCILIATION_QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECONCILIATION_IN_PROGRESS")]
		RECONCILIATION_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECONCILIATION_DONE")]
		RECONCILIATION_DONE = 3,
	}
	
	/// <summary>
	/// Request message for ReconcileTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ReconcileTagsRequest
	{
		
		/// <summary>
		/// If set to `true`, deletes entry tags related to a tag template not listed in the tags source from an entry. If set to `false`, unlisted tags are retained.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forceDeleteMissing")]
		public System.Nullable<System.Boolean> ForceDeleteMissing { get; set; }
		
		/// <summary>
		/// Required. The name of the tag template, which is used for reconciliation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagTemplate")]
		public string TagTemplate { get; set; }
		
		/// <summary>
		/// A list of tags to apply to an entry. A tag can specify a tag template, which must be the template specified in the `ReconcileTagsRequest`. The sole entry and each of its columns must be mentioned at most once.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GoogleCloudDatacatalogV1Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Long-running operation response message returned by ReconcileTags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ReconcileTagsResponse
	{
		
		/// <summary>
		/// Number of tags created in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTagsCount")]
		public string CreatedTagsCount { get; set; }
		
		/// <summary>
		/// Number of tags deleted in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deletedTagsCount")]
		public string DeletedTagsCount { get; set; }
		
		/// <summary>
		/// Number of tags updated in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedTagsCount")]
		public string UpdatedTagsCount { get; set; }
	}
	
	/// <summary>
	/// Request message for RenameTagTemplateFieldEnumValue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest
	{
		
		/// <summary>
		/// Required. The new display name of the enum value. For example, `my_new_enum_value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newEnumValueDisplayName")]
		public string NewEnumValueDisplayName { get; set; }
	}
	
	/// <summary>
	/// Request message for RenameTagTemplateField.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest
	{
		
		/// <summary>
		/// Required. The new ID of this tag template field. For example, `my_new_field`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newTagTemplateFieldId")]
		public string NewTagTemplateFieldId { get; set; }
	}
	
	/// <summary>
	/// Request message for ReplaceTaxonomy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1ReplaceTaxonomyRequest
	{
		
		/// <summary>
		/// A nested protocol buffer that represents a taxonomy and the hierarchy of its policy tags. Used for taxonomy replacement, import, and export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serializedTaxonomy")]
		public GoogleCloudDatacatalogV1SerializedTaxonomy SerializedTaxonomy { get; set; }
	}
	
	/// <summary>
	/// Request message for SearchCatalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SearchCatalogRequest
	{
		
		/// <summary>
		/// Optional. If set, use searchAll permission granted on organizations from `include_org_ids` and projects from `include_project_ids` instead of the fine grained per resource permissions when filtering the search results. The only allowed `order_by` criteria for admin_search mode is `default`. Using this flags guarantees a full recall of the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adminSearch")]
		public System.Nullable<System.Boolean> AdminSearch { get; set; }
		
		/// <summary>
		/// Specifies the order of results. Currently supported case-sensitive values are: * `relevance` that can only be descending * `last_modified_timestamp [asc|desc]` with descending (`desc`) as default * `default` that can only be descending Search queries don't guarantee full recall. Results that match your query might not be returned, even in subsequent result pages. Additionally, returned (and not returned) results can vary if you repeat search queries. If you are experiencing recall issues and you don't have to fetch the results in any specific order, consider setting this parameter to `default`. If this parameter is omitted, it defaults to the descending `relevance`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderBy")]
		public string OrderBy { get; set; }
		
		/// <summary>
		/// Upper bound on the number of results you can get in a single response. Can't be negative or 0, defaults to 10 in this case. The maximum number is 1000. If exceeded, throws an "invalid argument" exception.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Optional. Pagination token that, if specified, returns the next page of search results. If empty, returns the first page. This token is returned in the SearchCatalogResponse.next_page_token field of the response to a previous SearchCatalogRequest call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Optional. The query string with a minimum of 3 characters and specific syntax. For more information, see [Data Catalog search syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference). An empty query string returns all data assets (in the specified scope) that you have access to. A query string can be a simple `xyz` or qualified by predicates: * `name:x` * `column:y` * `description:z`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// The criteria that select the subspace used for query matching.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public GoogleCloudDatacatalogV1SearchCatalogRequestScope Scope { get; set; }
	}
	
	/// <summary>
	/// The criteria that select the subspace used for query matching.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SearchCatalogRequestScope
	{
		
		/// <summary>
		/// If `true`, include Google Cloud public datasets in search results. By default, they are excluded. See [Google Cloud Public Datasets](/public-datasets) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeGcpPublicDatasets")]
		public System.Nullable<System.Boolean> IncludeGcpPublicDatasets { get; set; }
		
		/// <summary>
		/// The list of organization IDs to search within. To find your organization ID, follow the steps from [Creating and managing organizations] (/resource-manager/docs/creating-managing-organization).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeOrgIds")]
		public string[] IncludeOrgIds { get; set; }
		
		/// <summary>
		/// The list of project IDs to search within. For more information on the distinction between project names, IDs, and numbers, see [Projects](/docs/overview/#projects).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeProjectIds")]
		public string[] IncludeProjectIds { get; set; }
		
		/// <summary>
		/// Optional. This field is deprecated. The search mechanism for public and private tag templates is the same.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includePublicTagTemplates")]
		public System.Nullable<System.Boolean> IncludePublicTagTemplates { get; set; }
		
		/// <summary>
		/// Optional. The list of locations to search within. If empty, all locations are searched. Returns an error if any location in the list isn't one of the [Supported regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions). If a location is unreachable, its name is returned in the `SearchCatalogResponse.unreachable` field. To get additional information on the error, repeat the search request and set the location name as the value of this parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restrictedLocations")]
		public string[] RestrictedLocations { get; set; }
		
		/// <summary>
		/// Optional. If `true`, search only among starred entries. By default, all results are returned, starred or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starredOnly")]
		public System.Nullable<System.Boolean> StarredOnly { get; set; }
	}
	
	/// <summary>
	/// Response message for SearchCatalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SearchCatalogResponse
	{
		
		/// <summary>
		/// Pagination token that can be used in subsequent calls to retrieve the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GoogleCloudDatacatalogV1SearchCatalogResult[] Results { get; set; }
		
		/// <summary>
		/// The approximate total number of entries matched by the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
		
		/// <summary>
		/// Unreachable locations. Search results don't include data from those locations. To get additional information on an error, repeat the search request and restrict it to specific locations by setting the `SearchCatalogRequest.scope.restricted_locations` parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// Result in the response to a search request. Each result captures details of one entry that matches the search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1SearchCatalogResult
	{
		
		/// <summary>
		/// Entry description that can consist of several sentences or paragraphs that describe entry contents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The display name of the result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Fully qualified name (FQN) of the resource. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:PROJECT_ID.LOCATION_ID.INSTANCE_ID.DATABASE_ID.TABLE_ID`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullyQualifiedName")]
		public string FullyQualifiedName { get; set; }
		
		/// <summary>
		/// Output only. The source system that Data Catalog automatically integrates with, such as BigQuery, Cloud Pub/Sub, or Dataproc Metastore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integratedSystem")]
		public GoogleCloudDatacatalogV1DataplexExternalTableSystem IntegratedSystem { get; set; }
		
		/// <summary>
		/// The full name of the Google Cloud resource the entry belongs to. For more information, see [Full Resource Name] (/apis/design/resource_names#full_resource_name). Example: `//bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedResource")]
		public string LinkedResource { get; set; }
		
		/// <summary>
		/// The last modification timestamp of the entry in the source system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifyTime")]
		public string ModifyTime { get; set; }
		
		/// <summary>
		/// The relative name of the resource in URL format. Examples: * `projects/{PROJECT_ID}/locations/{LOCATION_ID}/entryGroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}` * `projects/{PROJECT_ID}/tagTemplates/{TAG_TEMPLATE_ID}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativeResourceName")]
		public string RelativeResourceName { get; set; }
		
		/// <summary>
		/// Sub-type of the search result. A dot-delimited full type of the resource. The same type you specify in the `type` search predicate. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchResultSubtype")]
		public string SearchResultSubtype { get; set; }
		
		/// <summary>
		/// Type of the search result. You can use this field to determine which get method to call to fetch the full resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchResultType")]
		public System.Nullable<GoogleCloudDatacatalogV1SearchCatalogResultSearchResultType> SearchResultType { get; set; }
		
		/// <summary>
		/// Custom source system that you can manually integrate Data Catalog with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userSpecifiedSystem")]
		public string UserSpecifiedSystem { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudDatacatalogV1SearchCatalogResultSearchResultType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEARCH_RESULT_TYPE_UNSPECIFIED")]
		SEARCH_RESULT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENTRY")]
		ENTRY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TAG_TEMPLATE")]
		TAG_TEMPLATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENTRY_GROUP")]
		ENTRY_GROUP = 3,
	}
	
	/// <summary>
	/// Request message for StarEntry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1StarEntryRequest
	{
	}
	
	/// <summary>
	/// Response message for StarEntry. Empty for now
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1StarEntryResponse
	{
	}
	
	/// <summary>
	/// A tag template defines a tag that can have one or more typed fields. The template is used to create tags that are attached to Google Cloud resources. [Tag template roles] (https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. For example, see the [TagTemplate User] (https://cloud.google.com/data-catalog/docs/how-to/template-user) role that includes a permission to use the tag template to tag resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TagTemplate
	{
		
		/// <summary>
		/// Display name for this template. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. The map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. The IDs have the following limitations: * Can contain uppercase and lowercase letters, numbers (0-9) and underscores (_). * Must be at least 1 character and at most 64 characters long. * Must start with a letter or underscore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDatacatalogV1TagTemplateField> Fields { get; set; }
		
		/// <summary>
		/// Indicates whether tags created with this template are public. Public tags do not require tag template access to appear in ListTags API response. Additionally, you can search for a public tag by value with a simple search query in addition to using a ``tag:`` predicate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isPubliclyReadable")]
		public System.Nullable<System.Boolean> IsPubliclyReadable { get; set; }
		
		/// <summary>
		/// The resource name of the tag template in URL format. Note: The tag template itself and its child resources might not be stored in the location specified in its name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The template for an individual field within a tag template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1TagTemplateField
	{
		
		/// <summary>
		/// The description for this field. Defaults to an empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The display name for this field. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// If true, this field is required. Defaults to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isRequired")]
		public System.Nullable<System.Boolean> IsRequired { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the tag template field in URL format. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE}/fields/{FIELD}` Note: The tag template field itself might not be stored in the location specified in its name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 64 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The order of this field with respect to other fields in this tag template. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order and field orders within a tag don't have to be sequential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudDatacatalogV1FieldType Type { get; set; }
	}
	
	/// <summary>
	/// Request message for UnstarEntry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1UnstarEntryRequest
	{
	}
	
	/// <summary>
	/// Response message for UnstarEntry. Empty for now
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudDatacatalogV1UnstarEntryResponse
	{
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public Operation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Operation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Policy
	{
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public Policy Policy { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Searches Data Catalog for multiple resources like entries and tags that match a query. This is a [Custom Method] (https://cloud.google.com/apis/design/custom_methods) that doesn't return all information on a resource, only its ID and high level fields. To get more information, you can subsequently call specific get methods. Note: Data Catalog search queries don't guarantee full recall. Results that match your query might not be returned, even in subsequent result pages. Additionally, returned (and not returned) results can vary if you repeat search queries. For more information, see [Data Catalog search syntax] (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
		/// Datacatalog_catalog_search v1/catalog:search
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1SearchCatalogResponse> Datacatalog_catalog_searchAsync(GoogleCloudDatacatalogV1SearchCatalogRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/catalog:search";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1SearchCatalogResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets an entry by its target resource name. The resource name comes from the source Google Cloud Platform service.
		/// Datacatalog_entries_lookup v1/entries:lookup
		/// </summary>
		/// <param name="fullyQualifiedName">[Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`</param>
		/// <param name="linkedResource">The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). Full names are case-sensitive. For example: * `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` * `//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}`</param>
		/// <param name="location">Location where the lookup should be performed. Required to lookup entry that is not a part of `DPMS` or `DATAPLEX` `integrated_system` using its `fully_qualified_name`. Ignored in other cases.</param>
		/// <param name="project">Project where the lookup should be performed. Required to lookup entry that is not a part of `DPMS` or `DATAPLEX` `integrated_system` using its `fully_qualified_name`. Ignored in other cases.</param>
		/// <param name="sqlResource">The SQL name of the entry. SQL names are case-sensitive. Examples: * `pubsub.topic.{PROJECT_ID}.{TOPIC_ID}` * `pubsub.topic.{PROJECT_ID}.`\``{TOPIC.ID.SEPARATED.WITH.DOTS}`\` * `bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}` * `bigquery.dataset.{PROJECT_ID}.{DATASET_ID}` * `datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}` Identifiers (`*_ID`) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1Entry> Datacatalog_entries_lookupAsync(string fullyQualifiedName, string linkedResource, string location, string project, string sqlResource, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/entries:lookup?fullyQualifiedName=" + (fullyQualifiedName==null? "" : System.Uri.EscapeDataString(fullyQualifiedName))+"&linkedResource=" + (linkedResource==null? "" : System.Uri.EscapeDataString(linkedResource))+"&location=" + (location==null? "" : System.Uri.EscapeDataString(location))+"&project=" + (project==null? "" : System.Uri.EscapeDataString(project))+"&sqlResource=" + (sqlResource==null? "" : System.Uri.EscapeDataString(sqlResource));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1Entry>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a policy tag together with the following: * All of its descendant policy tags, if any * Policies associated with the policy tag and its descendants * References from BigQuery table schema of the policy tag and its descendants
		/// Datacatalog_projects_locations_taxonomies_policyTags_delete v1/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of the policy tag to delete. Note: All of its descendant policy tags are also deleted.</param>
		/// <param name="force">Required. If true, deletes this field from any tags that use it. Currently, `true` is the only supported value.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Datacatalog_projects_locations_taxonomies_policyTags_deleteAsync(string name, bool force, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&force="+force;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_get v1/{name}
		/// </summary>
		/// <param name="name">Required. Resource name of the policy tag.</param>
		/// <param name="readMask">The fields to return. If empty or omitted, all fields are returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1PolicyTag> Datacatalog_projects_locations_taxonomies_policyTags_getAsync(string name, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1PolicyTag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a policy tag, including its display name, description, and parent policy tag.
		/// Datacatalog_projects_locations_taxonomies_policyTags_patch v1/{name}
		/// </summary>
		/// <param name="name">Identifier. Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.</param>
		/// <param name="updateMask">Specifies the fields to update. You can update only display name, description, and parent policy tag. If not set, defaults to all updatable fields. For more information, see [FieldMask] (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1PolicyTag> Datacatalog_projects_locations_taxonomies_policyTags_patchAsync(string name, string updateMask, GoogleCloudDatacatalogV1PolicyTag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1PolicyTag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Datacatalog_projects_locations_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListOperationsResponse> Datacatalog_projects_locations_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Datacatalog_projects_locations_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Datacatalog_projects_locations_operations_cancelAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies contacts, part of the business context of an Entry. To call this method, you must have the `datacatalog.entries.updateContacts` IAM permission on the corresponding project.
		/// Datacatalog_projects_locations_entryGroups_entries_modifyEntryContacts v1/{name}:modifyEntryContacts
		/// </summary>
		/// <param name="name">Required. The full resource name of the entry.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1Contacts> Datacatalog_projects_locations_entryGroups_entries_modifyEntryContactsAsync(string name, GoogleCloudDatacatalogV1ModifyEntryContactsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":modifyEntryContacts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1Contacts>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Modifies entry overview, part of the business context of an Entry. To call this method, you must have the `datacatalog.entries.updateOverview` IAM permission on the corresponding project.
		/// Datacatalog_projects_locations_entryGroups_entries_modifyEntryOverview v1/{name}:modifyEntryOverview
		/// </summary>
		/// <param name="name">Required. The full resource name of the entry.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1EntryOverview> Datacatalog_projects_locations_entryGroups_entries_modifyEntryOverviewAsync(string name, GoogleCloudDatacatalogV1ModifyEntryOverviewRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":modifyEntryOverview";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1EntryOverview>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Renames an enum value in a tag template. Within a single enum field, enum values must be unique.
		/// Datacatalog_projects_locations_tagTemplates_fields_enumValues_rename v1/{name}:rename
		/// </summary>
		/// <param name="name">Required. The name of the enum field value.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1TagTemplateField> Datacatalog_projects_locations_tagTemplates_fields_enumValues_renameAsync(string name, GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":rename";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1TagTemplateField>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Replaces (updates) a taxonomy and all its policy tags. The taxonomy and its entire hierarchy of policy tags must be represented literally by `SerializedTaxonomy` and the nested `SerializedPolicyTag` messages. This operation automatically does the following: - Deletes the existing policy tags that are missing from the `SerializedPolicyTag`. - Creates policy tags that don't have resource names. They are considered new. - Updates policy tags with valid resources names accordingly.
		/// Datacatalog_projects_locations_taxonomies_replace v1/{name}:replace
		/// </summary>
		/// <param name="name">Required. Resource name of the taxonomy to update.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1Taxonomy> Datacatalog_projects_locations_taxonomies_replaceAsync(string name, GoogleCloudDatacatalogV1ReplaceTaxonomyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":replace";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1Taxonomy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Marks an Entry as starred by the current user. Starring information is private to each user.
		/// Datacatalog_projects_locations_entryGroups_entries_star v1/{name}:star
		/// </summary>
		/// <param name="name">Required. The name of the entry to mark as starred.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1StarEntryResponse> Datacatalog_projects_locations_entryGroups_entries_starAsync(string name, GoogleCloudDatacatalogV1StarEntryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":star";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1StarEntryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Marks an Entry as NOT starred by the current user. Starring information is private to each user.
		/// Datacatalog_projects_locations_entryGroups_entries_unstar v1/{name}:unstar
		/// </summary>
		/// <param name="name">Required. The name of the entry to mark as **not** starred.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1UnstarEntryResponse> Datacatalog_projects_locations_entryGroups_entries_unstarAsync(string name, GoogleCloudDatacatalogV1UnstarEntryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":unstar";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1UnstarEntryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists entries. Note: Currently, this method can list only custom entries. To get a list of both custom and automatically created entries, use SearchCatalog.
		/// Datacatalog_projects_locations_entryGroups_entries_list v1/{parent}/entries
		/// </summary>
		/// <param name="parent">Required. The name of the entry group that contains the entries to list. Can be provided in URL format.</param>
		/// <param name="pageSize">The maximum number of items to return. Default is 10. Maximum limit is 1000. Throws an invalid argument if `page_size` is more than 1000.</param>
		/// <param name="pageToken">Pagination token that specifies the next page to return. If empty, the first page is returned.</param>
		/// <param name="readMask">The fields to return for each entry. If empty or omitted, all fields are returned. For example, to return a list of entries with only the `name` field, set `read_mask` to only one path with the `name` value.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ListEntriesResponse> Datacatalog_projects_locations_entryGroups_entries_listAsync(string parent, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ListEntriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an entry. You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM', or custom types. Data Catalog automatically creates entries with other types during metadata ingestion from integrated systems. You must enable the Data Catalog API in the project identified by the `parent` parameter. For more information, see [Data Catalog resource project](https://cloud.google.com/data-catalog/docs/concepts/resource-project). An entry group can have a maximum of 100,000 entries.
		/// Datacatalog_projects_locations_entryGroups_entries_create v1/{parent}/entries
		/// </summary>
		/// <param name="parent">Required. The name of the entry group this entry belongs to. Note: The entry itself and its child resources might not be stored in the location specified in its name.</param>
		/// <param name="entryId">Required. The ID of the entry to create. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores (_). The maximum size is 64 bytes when encoded in UTF-8.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1Entry> Datacatalog_projects_locations_entryGroups_entries_createAsync(string parent, string entryId, GoogleCloudDatacatalogV1Entry requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries&entryId=" + (entryId==null? "" : System.Uri.EscapeDataString(entryId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1Entry>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Imports entries from a source, such as data previously dumped into a Cloud Storage bucket, into Data Catalog. Import of entries is a sync operation that reconciles the state of the third-party system with the Data Catalog. `ImportEntries` accepts source data snapshots of a third-party system. Snapshot should be delivered as a .wire or base65-encoded .txt file containing a sequence of Protocol Buffer messages of DumpItem type. `ImportEntries` returns a long-running operation resource that can be queried with Operations.GetOperation to return ImportEntriesMetadata and an ImportEntriesResponse message.
		/// Datacatalog_projects_locations_entryGroups_entries_import v1/{parent}/entries:import
		/// </summary>
		/// <param name="parent">Required. Target entry group for ingested entries.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Datacatalog_projects_locations_entryGroups_entries_importAsync(string parent, GoogleCloudDatacatalogV1ImportEntriesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists entry groups.
		/// Datacatalog_projects_locations_entryGroups_list v1/{parent}/entryGroups
		/// </summary>
		/// <param name="parent">Required. The name of the location that contains the entry groups to list. Can be provided as a URL.</param>
		/// <param name="pageSize">Optional. The maximum number of items to return. Default is 10. Maximum limit is 1000. Throws an invalid argument if `page_size` is greater than 1000.</param>
		/// <param name="pageToken">Optional. Pagination token that specifies the next page to return. If empty, returns the first page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ListEntryGroupsResponse> Datacatalog_projects_locations_entryGroups_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entryGroups&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ListEntryGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an entry group. An entry group contains logically related entries together with [Cloud Identity and Access Management](/data-catalog/docs/concepts/iam) policies. These policies specify users who can create, edit, and view entries within entry groups. Data Catalog automatically creates entry groups with names that start with the `@` symbol for the following resources: * BigQuery entries (`@bigquery`) * Pub/Sub topics (`@pubsub`) * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`) You can create your own entry groups for Cloud Storage fileset entries and custom entries together with the corresponding IAM policies. User-created entry groups can't contain the `@` symbol, it is reserved for automatically created groups. Entry groups, like entries, can be searched. A maximum of 10,000 entry groups may be created per organization across all locations. You must enable the Data Catalog API in the project identified by the `parent` parameter. For more information, see [Data Catalog resource project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
		/// Datacatalog_projects_locations_entryGroups_create v1/{parent}/entryGroups
		/// </summary>
		/// <param name="parent">Required. The names of the project and location that the new entry group belongs to. Note: The entry group itself and its child resources might not be stored in the location specified in its name.</param>
		/// <param name="entryGroupId">Required. The ID of the entry group to create. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and must start with a letter or underscore. The maximum size is 64 bytes when encoded in UTF-8.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1EntryGroup> Datacatalog_projects_locations_entryGroups_createAsync(string parent, string entryGroupId, GoogleCloudDatacatalogV1EntryGroup requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entryGroups&entryGroupId=" + (entryGroupId==null? "" : System.Uri.EscapeDataString(entryGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1EntryGroup>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a field in a tag template. You must enable the Data Catalog API in the project identified by the `parent` parameter. For more information, see [Data Catalog resource project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
		/// Datacatalog_projects_locations_tagTemplates_fields_create v1/{parent}/fields
		/// </summary>
		/// <param name="parent">Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions).</param>
		/// <param name="tagTemplateFieldId">Required. The ID of the tag template field to create. Note: Adding a required field to an existing template is *not* allowed. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1TagTemplateField> Datacatalog_projects_locations_tagTemplates_fields_createAsync(string parent, string tagTemplateFieldId, GoogleCloudDatacatalogV1TagTemplateField requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/fields&tagTemplateFieldId=" + (tagTemplateFieldId==null? "" : System.Uri.EscapeDataString(tagTemplateFieldId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1TagTemplateField>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all policy tags in a taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_list v1/{parent}/policyTags
		/// </summary>
		/// <param name="parent">Required. Resource name of the taxonomy to list the policy tags of.</param>
		/// <param name="pageSize">The maximum number of items to return. Must be a value between 1 and 1000 inclusively. If not set, defaults to 50.</param>
		/// <param name="pageToken">The pagination token of the next results page. If not set, returns the first page. The token is returned in the response to a previous list request.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ListPolicyTagsResponse> Datacatalog_projects_locations_taxonomies_policyTags_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/policyTags&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ListPolicyTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a policy tag in a taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_create v1/{parent}/policyTags
		/// </summary>
		/// <param name="parent">Required. Resource name of the taxonomy that the policy tag will belong to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1PolicyTag> Datacatalog_projects_locations_taxonomies_policyTags_createAsync(string parent, GoogleCloudDatacatalogV1PolicyTag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/policyTags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1PolicyTag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a tag template. You must enable the Data Catalog API in the project identified by the `parent` parameter. For more information, see [Data Catalog resource project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
		/// Datacatalog_projects_locations_tagTemplates_create v1/{parent}/tagTemplates
		/// </summary>
		/// <param name="parent">Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions).</param>
		/// <param name="tagTemplateId">Required. The ID of the tag template to create. The ID must contain only lowercase letters (a-z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum size is 64 bytes when encoded in UTF-8.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1TagTemplate> Datacatalog_projects_locations_tagTemplates_createAsync(string parent, string tagTemplateId, GoogleCloudDatacatalogV1TagTemplate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tagTemplates&tagTemplateId=" + (tagTemplateId==null? "" : System.Uri.EscapeDataString(tagTemplateId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1TagTemplate>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists tags assigned to an Entry. The columns in the response are lowercased.
		/// Datacatalog_projects_locations_entryGroups_tags_list v1/{parent}/tags
		/// </summary>
		/// <param name="parent">Required. The name of the Data Catalog resource to list the tags of. The resource can be an Entry or an EntryGroup (without `/entries/{entries}` at the end).</param>
		/// <param name="pageSize">The maximum number of tags to return. Default is 10. Maximum limit is 1000.</param>
		/// <param name="pageToken">Pagination token that specifies the next page to return. If empty, the first page is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ListTagsResponse> Datacatalog_projects_locations_entryGroups_tags_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ListTagsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a tag and assigns it to: * An Entry if the method name is `projects.locations.entryGroups.entries.tags.create`. * Or EntryGroupif the method name is `projects.locations.entryGroups.tags.create`. Note: The project identified by the `parent` parameter for the [tag] (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template] (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be in the same organization.
		/// Datacatalog_projects_locations_entryGroups_tags_create v1/{parent}/tags
		/// </summary>
		/// <param name="parent">Required. The name of the resource to attach this tag to. Tags can be attached to entries or entry groups. An entry can have up to 1000 attached tags. Note: The tag and its child resources might not be stored in the location specified in its name.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1Tag> Datacatalog_projects_locations_entryGroups_tags_createAsync(string parent, GoogleCloudDatacatalogV1Tag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1Tag>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// `ReconcileTags` creates or updates a list of tags on the entry. If the ReconcileTagsRequest.force_delete_missing parameter is set, the operation deletes tags not included in the input tag list. `ReconcileTags` returns a long-running operation resource that can be queried with Operations.GetOperation to return ReconcileTagsMetadata and a ReconcileTagsResponse message.
		/// Datacatalog_projects_locations_entryGroups_entries_tags_reconcile v1/{parent}/tags:reconcile
		/// </summary>
		/// <param name="parent">Required. Name of Entry to be tagged.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Datacatalog_projects_locations_entryGroups_entries_tags_reconcileAsync(string parent, GoogleCloudDatacatalogV1ReconcileTagsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags:reconcile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all taxonomies in a project in a particular location that you have a permission to view.
		/// Datacatalog_projects_locations_taxonomies_list v1/{parent}/taxonomies
		/// </summary>
		/// <param name="parent">Required. Resource name of the project to list the taxonomies of.</param>
		/// <param name="filter">Supported field for filter is 'service' and value is 'dataplex'. Eg: service=dataplex.</param>
		/// <param name="pageSize">The maximum number of items to return. Must be a value between 1 and 1000 inclusively. If not set, defaults to 50.</param>
		/// <param name="pageToken">The pagination token of the next results page. If not set, the first page is returned. The token is returned in the response to a previous list request.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ListTaxonomiesResponse> Datacatalog_projects_locations_taxonomies_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ListTaxonomiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a taxonomy in a specified project. The taxonomy is initially empty, that is, it doesn't contain policy tags.
		/// Datacatalog_projects_locations_taxonomies_create v1/{parent}/taxonomies
		/// </summary>
		/// <param name="parent">Required. Resource name of the project that the taxonomy will belong to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1Taxonomy> Datacatalog_projects_locations_taxonomies_createAsync(string parent, GoogleCloudDatacatalogV1Taxonomy requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1Taxonomy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Exports taxonomies in the requested type and returns them, including their policy tags. The requested taxonomies must belong to the same project. This method generates `SerializedTaxonomy` protocol buffers with nested policy tags that can be used as input for `ImportTaxonomies` calls.
		/// Datacatalog_projects_locations_taxonomies_export v1/{parent}/taxonomies:export
		/// </summary>
		/// <param name="parent">Required. Resource name of the project that the exported taxonomies belong to.</param>
		/// <param name="serializedTaxonomies">Serialized export taxonomies that contain all the policy tags as nested protocol buffers.</param>
		/// <param name="taxonomies">Required. Resource names of the taxonomies to export.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ExportTaxonomiesResponse> Datacatalog_projects_locations_taxonomies_exportAsync(string parent, bool serializedTaxonomies, string[] taxonomies, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies:export&serializedTaxonomies="+serializedTaxonomies+"&"+string.Join("&", taxonomies.Select(z => $"taxonomies={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ExportTaxonomiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates new taxonomies (including their policy tags) in a given project by importing from inlined or cross-regional sources. For a cross-regional source, new taxonomies are created by copying from a source in another region. For an inlined source, taxonomies and policy tags are created in bulk using nested protocol buffer structures.
		/// Datacatalog_projects_locations_taxonomies_import v1/{parent}/taxonomies:import
		/// </summary>
		/// <param name="parent">Required. Resource name of project that the imported taxonomies will belong to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDatacatalogV1ImportTaxonomiesResponse> Datacatalog_projects_locations_taxonomies_importAsync(string parent, GoogleCloudDatacatalogV1ImportTaxonomiesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/taxonomies:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudDatacatalogV1ImportTaxonomiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the IAM policy for a policy tag or a taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_getIamPolicy v1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Datacatalog_projects_locations_taxonomies_policyTags_getIamPolicyAsync(string resource, GetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sets the IAM policy for a policy tag or a taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_setIamPolicy v1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Datacatalog_projects_locations_taxonomies_policyTags_setIamPolicyAsync(string resource, SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns your permissions on a specified policy tag or taxonomy.
		/// Datacatalog_projects_locations_taxonomies_policyTags_testIamPermissions v1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<TestIamPermissionsResponse> Datacatalog_projects_locations_taxonomies_policyTags_testIamPermissionsAsync(string resource, TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

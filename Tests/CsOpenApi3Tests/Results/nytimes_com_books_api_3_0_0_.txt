//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Best Seller List
		/// GET_lists_format lists.{format}
		/// </summary>
		/// <param name="list">The name of the Times best-seller list. To get valid values, use a list names request.
		///
		///Be sure to replace spaces with hyphens (e.g., e-book-fiction or hardcover-fiction, not E-Book Fiction or Hardcover Fiction). (The parameter is not case sensitive.)</param>
		/// <param name="weeks_on_list">The number of weeks that the best seller has been on list-name, as of bestsellers-date</param>
		/// <param name="bestsellers_date">YYYY-MM-DD
		///
		///The week-ending date for the sales reflected on list-name. Times best-seller lists are compiled using available book sale data. The bestsellers-date may be significantly earlier than published-date. For additional information, see the explanation at the bottom of any best-seller list page on NYTimes.com (example: Hardcover Fiction, published Dec. 5 but reflecting sales to Nov. 29).</param>
		/// <param name="date">YYYY-MM-DD  The date the best-seller list was published on NYTimes.com (compare bestsellers-date)</param>
		/// <param name="isbn">International Standard Book Number, 10 or 13 digits</param>
		/// <param name="published_date">YYYY-MM-DD
		///
		///The date the best-seller list was published on NYTimes.com (compare bestsellers-date)</param>
		/// <param name="rank">The rank of the best seller on list-name as of bestsellers-date</param>
		/// <param name="rank_last_week">The rank of the best seller on list-name one week prior to bestsellers-date</param>
		/// <param name="offset">Sets the starting point of the result set</param>
		/// <param name="sort_order">Sets the sort order of the result set</param>
		public async Task<GET_lists_formatReturn> GET_lists_formatAsync(string list, int weeks_on_list, System.DateTimeOffset bestsellers_date, string date, string isbn, string published_date, int rank, int rank_last_week, int offset, GET_lists_formatSort_order sort_order, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists.{format}?list=" + (list==null? "" : System.Uri.EscapeDataString(list))+"&weeks-on-list="+weeks_on_list+"&bestsellers-date=" + bestsellers_date.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&date=" + (date==null? "" : System.Uri.EscapeDataString(date))+"&isbn=" + (isbn==null? "" : System.Uri.EscapeDataString(isbn))+"&published-date=" + (published_date==null? "" : System.Uri.EscapeDataString(published_date))+"&rank="+rank+"&rank-last-week="+rank_last_week+"&offset="+offset+"&sort-order=" + sort_order;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GET_lists_formatReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Best Seller History List
		/// GET_lists_best_sellers_history_json lists/best-sellers/history.json
		/// </summary>
		/// <param name="age_group">The target age group for the best seller.</param>
		/// <param name="author">The author of the best seller. The author field does not include additional contributors (see Data Structure for more details about the author and contributor fields).
		///
		///When searching the author field, you can specify any combination of first, middle and last names.
		///
		///When sort-by is set to author, the results will be sorted by author's first name. </param>
		/// <param name="contributor">The author of the best seller, as well as other contributors such as the illustrator (to search or sort by author name only, use author instead).
		///
		///When searching, you can specify any combination of first, middle and last names of any of the contributors.
		///
		///When sort-by is set to contributor, the results will be sorted by the first name of the first contributor listed. </param>
		/// <param name="isbn">International Standard Book Number, 10 or 13 digits
		///
		///A best seller may have both 10-digit and 13-digit ISBNs, and may have multiple ISBNs of each type. To search on multiple ISBNs, separate the ISBNs with semicolons (example: 9780446579933;0061374229).</param>
		/// <param name="price">The publisher's list price of the best seller, including decimal point</param>
		/// <param name="publisher">The standardized name of the publisher</param>
		/// <param name="title">The title of the best seller
		///
		///When searching, you can specify a portion of a title or a full title.</param>
		public async Task<GET_lists_best_sellers_history_jsonReturn> GET_lists_best_sellers_history_jsonAsync(string age_group, string author, string contributor, string isbn, string price, string publisher, string title, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/best-sellers/history.json?age-group=" + (age_group==null? "" : System.Uri.EscapeDataString(age_group))+"&author=" + (author==null? "" : System.Uri.EscapeDataString(author))+"&contributor=" + (contributor==null? "" : System.Uri.EscapeDataString(contributor))+"&isbn=" + (isbn==null? "" : System.Uri.EscapeDataString(isbn))+"&price=" + (price==null? "" : System.Uri.EscapeDataString(price))+"&publisher=" + (publisher==null? "" : System.Uri.EscapeDataString(publisher))+"&title=" + (title==null? "" : System.Uri.EscapeDataString(title));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GET_lists_best_sellers_history_jsonReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Best Seller List Names
		/// GET_lists_names_format lists/names.{format}
		/// </summary>
		public async Task<GET_lists_names_formatReturn> GET_lists_names_formatAsync(string api_key, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/names.{format}?api-key=" + (api_key==null? "" : System.Uri.EscapeDataString(api_key));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GET_lists_names_formatReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Best Seller List Overview
		/// GET_lists_overview_format lists/overview.{format}
		/// </summary>
		/// <param name="published_date">The best-seller list publication date. YYYY-MM-DD
		///
		///You do not have to specify the exact date the list was published. The service will search forward (into the future) for the closest publication date to the date you specify. For example, a request for lists/overview/2013-05-22 will retrieve the list that was published on 05-26.
		///
		///If you do not include a published_date, the current week's best-sellers lists will be returned.</param>
		public async Task<GET_lists_overview_formatReturn> GET_lists_overview_formatAsync(string published_date, string api_key, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/overview.{format}?published_date=" + (published_date==null? "" : System.Uri.EscapeDataString(published_date))+"&api-key=" + (api_key==null? "" : System.Uri.EscapeDataString(api_key));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GET_lists_overview_formatReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Best Seller List by Date
		/// GET_lists_date_list_json lists/{date}/{list}.json
		/// </summary>
		/// <param name="isbn">International Standard Book Number, 10 or 13 digits</param>
		/// <param name="list_name">The name of the Times best-seller list. To get valid values, use a list names request.
		///
		///Be sure to replace spaces with hyphens (e.g., e-book-fiction or hardcover-fiction, not E-Book Fiction or Hardcover Fiction). (The parameter is not case sensitive.)</param>
		/// <param name="published_date">YYYY-MM-DD
		///
		///The date the best-seller list was published on NYTimes.com (compare bestsellers-date)</param>
		/// <param name="bestsellers_date">YYYY-MM-DD
		///
		///The week-ending date for the sales reflected on list-name. Times best-seller lists are compiled using available book sale data. The bestsellers-date may be significantly earlier than published-date. For additional information, see the explanation at the bottom of any best-seller list page on NYTimes.com (example: Hardcover Fiction, published Dec. 5 but reflecting sales to Nov. 29).</param>
		/// <param name="weeks_on_list">The number of weeks that the best seller has been on list-name, as of bestsellers-date</param>
		/// <param name="rank">The rank of the best seller on list-name as of bestsellers-date</param>
		/// <param name="rank_last_week">The rank of the best seller on list-name one week prior to bestsellers-date</param>
		/// <param name="offset">Sets the starting point of the result set</param>
		/// <param name="sort_order">The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type.</param>
		public async Task<GET_lists_date_list_jsonReturn> GET_lists_date_list_jsonAsync(int isbn, string list_name, System.DateTimeOffset published_date, string bestsellers_date, int weeks_on_list, string rank, int rank_last_week, int offset, GET_lists_formatSort_order sort_order, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/{date}/{list}.json?isbn="+isbn+"&list-name=" + (list_name==null? "" : System.Uri.EscapeDataString(list_name))+"&published-date=" + published_date.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&bestsellers-date=" + (bestsellers_date==null? "" : System.Uri.EscapeDataString(bestsellers_date))+"&weeks-on-list="+weeks_on_list+"&rank=" + (rank==null? "" : System.Uri.EscapeDataString(rank))+"&rank-last-week="+rank_last_week+"&offset="+offset+"&sort-order=" + sort_order;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GET_lists_date_list_jsonReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Reviews
		/// GET_reviews_format reviews.{format}
		/// </summary>
		/// <param name="isbn">Searching by ISBN is the recommended method. You can enter 10- or 13-digit ISBNs.</param>
		/// <param name="title">You’ll need to enter the full title of the book. Spaces in the title will be converted into the characters %20.</param>
		/// <param name="author">You’ll need to enter the author’s first and last name, separated by a space. This space will be converted into the characters %20.</param>
		public async Task<GET_reviews_formatReturn> GET_reviews_formatAsync(int isbn, string title, string author, string api_key, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reviews.{format}?isbn="+isbn+"&title=" + (title==null? "" : System.Uri.EscapeDataString(title))+"&author=" + (author==null? "" : System.Uri.EscapeDataString(author))+"&api-key=" + (api_key==null? "" : System.Uri.EscapeDataString(api_key));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GET_reviews_formatReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum GET_lists_formatSort_order
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	public class GET_lists_formatReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_modified")]
		public string Last_modified { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GET_lists_formatReturnResults[] GET_lists_formatReturnResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_lists_formatReturnResults
	{
		
		[System.Runtime.Serialization.DataMember(Name="amazon_product_url")]
		public string Amazon_product_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="asterisk")]
		public System.Nullable<System.Int32> Asterisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bestsellers_date")]
		public string Bestsellers_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="book_details")]
		public GET_lists_formatReturnResultsBook_details[] GET_lists_formatReturnResultsBook_details { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dagger")]
		public System.Nullable<System.Int32> Dagger { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbns")]
		public GET_lists_formatReturnResultsIsbns[] GET_lists_formatReturnResultsIsbns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published_date")]
		public string Published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank_last_week")]
		public System.Nullable<System.Int32> Rank_last_week { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reviews")]
		public GET_lists_formatReturnResultsReviews[] GET_lists_formatReturnResultsReviews { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weeks_on_list")]
		public System.Nullable<System.Int32> Weeks_on_list { get; set; }
	}
	
	public class GET_lists_formatReturnResultsBook_details
	{
		
		[System.Runtime.Serialization.DataMember(Name="age_group")]
		public string Age_group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor")]
		public string Contributor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor_note")]
		public string Contributor_note { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn10")]
		public string Primary_isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn13")]
		public string Primary_isbn13 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GET_lists_formatReturnResultsIsbns
	{
		
		[System.Runtime.Serialization.DataMember(Name="isbn10")]
		public string Isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbn13")]
		public string Isbn13 { get; set; }
	}
	
	public class GET_lists_formatReturnResultsReviews
	{
		
		[System.Runtime.Serialization.DataMember(Name="article_chapter_link")]
		public string Article_chapter_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="book_review_link")]
		public string Book_review_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_chapter_link")]
		public string First_chapter_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sunday_review_link")]
		public string Sunday_review_link { get; set; }
	}
	
	public class GET_lists_best_sellers_history_jsonReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GET_lists_best_sellers_history_jsonReturnResults[] GET_lists_best_sellers_history_jsonReturnResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_lists_best_sellers_history_jsonReturnResults
	{
		
		[System.Runtime.Serialization.DataMember(Name="age_group")]
		public string Age_group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor")]
		public string Contributor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor_note")]
		public string Contributor_note { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbns")]
		public GET_lists_best_sellers_history_jsonReturnResultsIsbns[] GET_lists_best_sellers_history_jsonReturnResultsIsbns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ranks_history")]
		public GET_lists_best_sellers_history_jsonReturnResultsRanks_history[] GET_lists_best_sellers_history_jsonReturnResultsRanks_history { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reviews")]
		public GET_lists_best_sellers_history_jsonReturnResultsReviews[] GET_lists_best_sellers_history_jsonReturnResultsReviews { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GET_lists_best_sellers_history_jsonReturnResultsIsbns
	{
		
		[System.Runtime.Serialization.DataMember(Name="isbn10")]
		public string Isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbn13")]
		public string Isbn13 { get; set; }
	}
	
	public class GET_lists_best_sellers_history_jsonReturnResultsRanks_history
	{
		
		[System.Runtime.Serialization.DataMember(Name="asterisk")]
		public System.Nullable<System.Int32> Asterisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bestsellers_date")]
		public string Bestsellers_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dagger")]
		public System.Nullable<System.Int32> Dagger { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn10")]
		public string Primary_isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn13")]
		public string Primary_isbn13 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published_date")]
		public string Published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ranks_last_week")]
		public object Ranks_last_week { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weeks_on_list")]
		public System.Nullable<System.Int32> Weeks_on_list { get; set; }
	}
	
	public class GET_lists_best_sellers_history_jsonReturnResultsReviews
	{
		
		[System.Runtime.Serialization.DataMember(Name="article_chapter_link")]
		public string Article_chapter_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="book_review_link")]
		public string Book_review_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_chapter_link")]
		public string First_chapter_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sunday_review_link")]
		public string Sunday_review_link { get; set; }
	}
	
	public class GET_lists_names_formatReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GET_lists_names_formatReturnResults[] GET_lists_names_formatReturnResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_lists_names_formatReturnResults
	{
		
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_name_encoded")]
		public string List_name_encoded { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="newest_published_date")]
		public string Newest_published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="oldest_published_date")]
		public string Oldest_published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public string Updated { get; set; }
	}
	
	public class GET_lists_overview_formatReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GET_lists_overview_formatReturnResults Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_lists_overview_formatReturnResults
	{
		
		[System.Runtime.Serialization.DataMember(Name="bestsellers_date")]
		public string Bestsellers_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lists")]
		public GET_lists_overview_formatReturnResultsLists[] GET_lists_overview_formatReturnResultsLists { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published_date")]
		public string Published_date { get; set; }
	}
	
	public class GET_lists_overview_formatReturnResultsLists
	{
		
		[System.Runtime.Serialization.DataMember(Name="books")]
		public GET_lists_overview_formatReturnResultsListsBooks[] GET_lists_overview_formatReturnResultsListsBooks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public System.Nullable<System.Int32> List_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_image")]
		public string List_image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public string Updated { get; set; }
	}
	
	public class GET_lists_overview_formatReturnResultsListsBooks
	{
		
		[System.Runtime.Serialization.DataMember(Name="age_group")]
		public string Age_group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor")]
		public string Contributor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor_note")]
		public string Contributor_note { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created_date")]
		public string Created_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn10")]
		public string Primary_isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn13")]
		public string Primary_isbn13 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated_date")]
		public string Updated_date { get; set; }
	}
	
	public class GET_lists_date_list_jsonReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_modified")]
		public string Last_modified { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GET_lists_date_list_jsonReturnResults Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_lists_date_list_jsonReturnResults
	{
		
		[System.Runtime.Serialization.DataMember(Name="bestsellers_date")]
		public string Bestsellers_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="books")]
		public GET_lists_date_list_jsonReturnResultsBooks[] GET_lists_date_list_jsonReturnResultsBooks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="corrections")]
		public string[] Corrections { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="normal_list_ends_at")]
		public System.Nullable<System.Int32> Normal_list_ends_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published_date")]
		public string Published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public string Updated { get; set; }
	}
	
	public class GET_lists_date_list_jsonReturnResultsBooks
	{
		
		[System.Runtime.Serialization.DataMember(Name="age_group")]
		public string Age_group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amazon_product_url")]
		public string Amazon_product_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="article_chapter_link")]
		public string Article_chapter_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="asterisk")]
		public System.Nullable<System.Int32> Asterisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="book_image")]
		public string Book_image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="book_review_link")]
		public string Book_review_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor")]
		public string Contributor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contributor_note")]
		public string Contributor_note { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dagger")]
		public System.Nullable<System.Int32> Dagger { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_chapter_link")]
		public string First_chapter_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbns")]
		public GET_lists_date_list_jsonReturnResultsBooksIsbns[] GET_lists_date_list_jsonReturnResultsBooksIsbns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Int32> Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn10")]
		public string Primary_isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary_isbn13")]
		public string Primary_isbn13 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank_last_week")]
		public System.Nullable<System.Int32> Rank_last_week { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sunday_review_link")]
		public string Sunday_review_link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weeks_on_list")]
		public System.Nullable<System.Int32> Weeks_on_list { get; set; }
	}
	
	public class GET_lists_date_list_jsonReturnResultsBooksIsbns
	{
		
		[System.Runtime.Serialization.DataMember(Name="isbn10")]
		public string Isbn10 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbn13")]
		public string Isbn13 { get; set; }
	}
	
	public class GET_reviews_formatReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GET_reviews_formatReturnResults[] GET_reviews_formatReturnResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_reviews_formatReturnResults
	{
		
		[System.Runtime.Serialization.DataMember(Name="book_author")]
		public string Book_author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="book_title")]
		public string Book_title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="byline")]
		public string Byline { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isbn13")]
		public string[] Isbn13 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publication_dt")]
		public string Publication_dt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public string Summary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

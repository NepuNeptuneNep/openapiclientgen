//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A ShipEngine account settings response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Account_settings
	{
		
		[System.Runtime.Serialization.DataMember(Name="default_label_layout")]
		public Default_label_layout Default_label_layout { get; set; }
	}
	
	/// <summary>
	/// The possible default label layout values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Default_label_layout
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="4x6")]
		_4x6 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Letter = 1,
	}
	
	/// <summary>
	/// A ShipEngine account images body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Account_settings_images
	{
		
		/// <summary>
		/// The date and time that the image was created in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// The file type of the image. 
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_content_type")]
		public Account_settings_imagesImage_content_type Image_content_type { get; set; }
		
		/// <summary>
		/// A base64 encoded string representation of the image.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_data")]
		public string Image_data { get; set; }
		
		/// <summary>
		/// Indicates whether this image is set as default.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_default")]
		public System.Nullable<System.Boolean> Is_default { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the image. This ID is generated by ShipEngine when the image is uploaded.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_image_id")]
		public string Label_image_id { get; set; }
		
		/// <summary>
		/// The date and time that the image was modified in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modified_at")]
		public System.DateTimeOffset Modified_at { get; set; }
		
		/// <summary>
		/// A human readable name for the image.
		///
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Name { get; set; }
	}
	
	public enum Account_settings_imagesImage_content_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/png")]
		image_png = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/jpeg")]
		image_jpeg = 1,
	}
	
	/// <summary>
	/// An add funds to carrier request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Add_funds_to_carrier_request_body
	{
	}
	
	/// <summary>
	/// The current balance of the requested carrier account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Add_funds_to_carrier_response_body
	{
		
		/// <summary>
		/// The current balance of the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public Monetary_value Balance { get; set; }
	}
	
	/// <summary>
	/// A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Monetary_value
	{
		
		/// <summary>
		/// The monetary amount, in the specified currency.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double Amount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
	}
	
	/// <summary>
	/// An add funds to insurance request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Add_funds_to_insurance_request_body
	{
	}
	
	/// <summary>
	/// Add funds to insurance response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Add_funds_to_insurance_response_body
	{
	}
	
	/// <summary>
	/// An add to batch request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Add_to_batch_request_body
	{
	}
	
	/// <summary>
	/// Any residential or business mailing address, anywhere in the world.
	///
	///> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
	}
	
	/// <summary>
	/// Indicates whether an address is residential.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Address_residential_indicator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 2,
	}
	
	/// <summary>
	/// Any residential or business mailing address, anywhere in the world.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address_to_validate
	{
	}
	
	/// <summary>
	/// An address validating shipment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address_validating_shipment
	{
	}
	
	/// <summary>
	/// The error codes that can be returned by the address validation API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Address_validation_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1000 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1001 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1002 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1003 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1004 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1005 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1006 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1007 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a1008 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r1000 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r1001 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r1002 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		r1003 = 12,
	}
	
	/// <summary>
	/// The detailed error codes that can be returned by the address validation API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Address_validation_detail_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unsupported_country = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		non_supported_country = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		minimum_postal_code_verification_failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		street_does_not_match_unique_street_name = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multiple_directionals = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multiple_matches = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suite_not_valid = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suite_missing = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		incompatible_paired_labels = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_house_number = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		missing_house_number = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_box_number = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_charge_event = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		missing_box_number = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		missing_cmra_or_private_mail_box_number = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suite_has_no_secondaries = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		postal_code_changed_or_added = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		state_province_changed_or_added = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		city_locality_changed_or_added = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		urbanization_changed = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		street_name_spelling_changed_or_added = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		street_name_type_changed_or_added = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		street_direction_changed_or_added = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suite_type_changed_or_added = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		suite_unit_number_changed_or_added = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		double_dependent_locality_changed_or_added = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subadministrative_area_changed_or_added = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subnational_area_changed_or_added = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		po_box_changed_or_added = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		premise_type_changed_or_added = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		house_number_changed = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		organization_changed_or_added = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partially_verified_to_state_level = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partially_verified_to_city_level = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partially_verified_to_street_level = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partially_verified_to_premise_level = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verified_to_state_level = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verified_to_city_level = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verified_to_street_level = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verified_to_premise_level = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verified_to_suite_level = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coded_to_street_lavel = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coded_to_neighborhood_level = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coded_to_community_level = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coded_to_state_level = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coded_to_rooftop_level = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coded_to_rooftop_interpolation_level = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name_max_length_exceeded = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone_max_length_exceeded = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		company_name_max_length_exceeded = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		line1_min_max_length = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		line2_max_length_exceeded = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		line3_max_length_exceeded = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		city_locality_max_length_exceeded = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		state_province_max_length_exceeded = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_postal_code = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		country_invalid_length = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		address_not_found = 57,
	}
	
	/// <summary>
	/// The different types of messages that can be returned by the address validation API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Address_validation_message_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		warning = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		info = 2,
	}
	
	/// <summary>
	/// An address validation result
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address_validation_result
	{
		
		/// <summary>
		/// The matched address found by the Shipengine API
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="matched_address")]
		public Address Matched_address { get; set; }
		
		/// <summary>
		/// The list of messages that were generated during the address validation request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public Response_message[] Messages { get; set; }
		
		/// <summary>
		/// The original address that was sent for validation
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="original_address")]
		public Address Original_address { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Address_validation_status Status { get; set; }
	}
	
	/// <summary>
	/// A response message that displays when additional info is needed for an address validation request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Response_message
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public Address_validation_code Code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detail_code")]
		public Address_validation_detail_code Detail_code { get; set; }
		
		/// <summary>
		/// Message explaining the address validation error
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public Address_validation_message_type Type { get; set; }
	}
	
	/// <summary>
	/// The possible address validation status values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Address_validation_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unverified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verified = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		warning = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 3,
	}
	
	/// <summary>
	/// Advanced shipment options
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Advanced_shipment_options
	{
		
		/// <summary>
		/// This field is used to [bill shipping costs to a third party](https://www.shipengine.com/docs/shipping/bill-to-third-party/).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bill_to_account")]
		public string Bill_to_account { get; set; }
		
		/// <summary>
		/// The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bill_to_country_code")]
		public string Bill_to_country_code { get; set; }
		
		/// <summary>
		/// Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bill_to_party")]
		public Bill_to_party Bill_to_party { get; set; }
		
		/// <summary>
		/// The postal code of the third-party that is responsible for shipping costs.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bill_to_postal_code")]
		public string Bill_to_postal_code { get; set; }
		
		/// <summary>
		/// Defer payment until package is delivered, instead of when it is ordered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="collect_on_delivery")]
		public Collect_on_delivery Collect_on_delivery { get; set; }
		
		/// <summary>
		/// Indicates that the shipment contains alcohol.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contains_alcohol")]
		public System.Nullable<System.Boolean> Contains_alcohol { get; set; }
		
		/// <summary>
		/// An arbitrary field that can be used to store information about the shipment.
		///
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_field1")]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Custom_field1 { get; set; }
		
		/// <summary>
		/// An arbitrary field that can be used to store information about the shipment.
		///
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_field2")]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Custom_field2 { get; set; }
		
		/// <summary>
		/// An arbitrary field that can be used to store information about the shipment.
		///
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_field3")]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Custom_field3 { get; set; }
		
		/// <summary>
		/// Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivered_duty_paid")]
		public System.Nullable<System.Boolean> Delivered_duty_paid { get; set; }
		
		/// <summary>
		/// Indicates if the shipment contain dry ice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dry_ice")]
		public System.Nullable<System.Boolean> Dry_ice { get; set; }
		
		/// <summary>
		/// The weight of the dry ice in the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dry_ice_weight")]
		public Weight Dry_ice_weight { get; set; }
		
		/// <summary>
		/// Provide details for the Fedex freight service
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fedex_freight")]
		public Advanced_shipment_optionsFedex_freight Fedex_freight { get; set; }
		
		/// <summary>
		/// The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as "77.5", "110", or "250".
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="freight_class")]
		public string Freight_class { get; set; }
		
		/// <summary>
		/// Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="non_machinable")]
		public System.Nullable<System.Boolean> Non_machinable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="origin_type")]
		public Origin_type Origin_type { get; set; }
		
		/// <summary>
		/// Enables Saturday delivery, if supported by the carrier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday_delivery")]
		public System.Nullable<System.Boolean> Saturday_delivery { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shipper_release")]
		public System.Nullable<System.Boolean> Shipper_release { get; set; }
		
		/// <summary>
		/// Third Party Consignee option is a value-added service that allows the shipper to supply goods without commercial invoices being attached
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="third_party_consignee")]
		public System.Nullable<System.Boolean> Third_party_consignee { get; set; }
		
		/// <summary>
		/// Whether to use [UPS Ground Freight pricing](https://www.shipengine.com/docs/shipping/ups-ground-freight/).  If enabled, then a `freight_class` must also be specified.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_ups_ground_freight_pricing")]
		public System.Nullable<System.Boolean> Use_ups_ground_freight_pricing { get; set; }
	}
	
	/// <summary>
	/// The possible bill to party values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Bill_to_party
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recipient = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		third_party = 1,
	}
	
	/// <summary>
	/// Defer payment until package is delivered, instead of when it is ordered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Collect_on_delivery
	{
		
		[System.Runtime.Serialization.DataMember(Name="payment_amount")]
		public Payment_amount Payment_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payment_type")]
		public Collect_on_delivery_payment_type Payment_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Payment_amount
	{
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
	}
	
	/// <summary>
	/// Types of payment that are supported
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Collect_on_delivery_payment_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		any = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cash_equivalent = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 3,
	}
	
	/// <summary>
	/// The weight of a package
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Weight
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public Weight_unit Unit { get; set; }
		
		/// <summary>
		/// The weight, in the specified unit
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// The possible weight unit values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Weight_unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ounce = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gram = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		kilogram = 3,
	}
	
	public class Advanced_shipment_optionsFedex_freight
	{
		
		[System.Runtime.Serialization.DataMember(Name="booking_confirmation")]
		public string Booking_confirmation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shipper_load_and_count")]
		public string Shipper_load_and_count { get; set; }
	}
	
	/// <summary>
	/// Indicates if the package will be picked up or dropped off by the carrier
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Origin_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pickup = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		drop_off = 1,
	}
	
	/// <summary>
	/// Additional information some carriers may provide by which to identify a given label in their system. 
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Alternative_identifier
	{
		
		/// <summary>
		/// The type of alternative_identifier that corresponds to the value.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Type { get; set; }
		
		/// <summary>
		/// The value of the alternative_identifier.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// [Ancillary service endorsements](https://pe.usps.com/text/qsg300/Q507.htm) are used by mailers to request an addressee's new address and to provide the carrier with instructions on how to handle packages that are undeliverable as addressed.
	///
	///| Ancillary Service Endorsement  | Description
	///|--------------------------------|-----------------------------------------------------
	///| `none`                         | No ancillary service is requested. Depending on the carrier servive, the package may be forwarded, returned, or discarded.
	///| `return_service_requested`     | The package is returned to the sender. If possible, notification of the new address is is included with the returned package.
	///| `forwarding_service_requested` | Forward the package to the new address, if possible; otherwise, return it to the sender.
	///| `address_service_requested`    | Forward the package to the new address, if possible; otherwise, return it to the sender. This is similar to `forwarding_service_requested`, but different restrictions and charges may apply.
	///| `change_service_requested`     | The package is discarded. If possible, notification of the new address is sent to the sender.
	///| `leave_if_no_response`         |
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Ancillary_service_endorsement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_service_requested = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forwarding_service_requested = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		address_service_requested = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		change_service_requested = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		leave_if_no_response = 5,
	}
	
	/// <summary>
	/// Batches are an advanced feature of ShipEngine designed for users who need to generate hundreds or
	///thousands of labels at a time.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Batch
	{
		
		/// <summary>
		/// Link to batch errors endpoint
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_errors_url")]
		public Optional_link Batch_errors_url { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the batch
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_id")]
		public string Batch_id { get; set; }
		
		/// <summary>
		/// Link to batch labels query
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_labels_url")]
		public Optional_link Batch_labels_url { get; set; }
		
		/// <summary>
		/// Custom notes you can add for each created batch
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue("")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_notes")]
		public string Batch_notes { get; set; } = "";
		
		/// <summary>
		/// The batch number.
		/// Required
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_number")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Batch_number { get; set; }
		
		/// <summary>
		/// The batch shipments endpoint
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_shipments_url")]
		public Optional_link Batch_shipments_url { get; set; }
		
		/// <summary>
		/// The number of labels generated in the batch
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completed")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Completed { get; set; }
		
		/// <summary>
		/// The total of errors, warnings, and completed properties
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Count { get; set; }
		
		/// <summary>
		/// The date and time the batch was created in ShipEngine
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// The number of errors that occurred while generating the batch
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Errors { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the external batch
		/// Required
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="external_batch_id")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string External_batch_id { get; set; }
		
		/// <summary>
		/// The form download for any customs that are needed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="form_download")]
		public Optional_link Form_download { get; set; }
		
		/// <summary>
		/// The number of forms for customs that are available for download
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="forms")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Forms { get; set; }
		
		/// <summary>
		/// The label download for the batch
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label_download")]
		public Label_download Label_download { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		/// <summary>
		/// label layout
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_layout._4x6)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public Label_layout Label_layout { get; set; } = Label_layout._4x6;
		
		/// <summary>
		/// The date and time the batch was processed in ShipEngine
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processed_at")]
		public System.DateTimeOffset Processed_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Batch_status Status { get; set; }
		
		/// <summary>
		/// The number of warnings that occurred while generating the batch
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Warnings { get; set; }
	}
	
	/// <summary>
	/// A link to a related resource, or an empty object if there is no resource to link to
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Optional_link
	{
		
		/// <summary>
		/// The URL of the linked resource, if any
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The type of resource, or the type of relationship to the parent resource
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Reference to the various downloadable file formats for the generated label
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Label_download
	{
		
		/// <summary>
		/// The URL of the linked resource, if any
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The URL for the pdf generated label
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pdf")]
		public string Pdf { get; set; }
		
		/// <summary>
		/// The URL for the png generated label
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="png")]
		public string Png { get; set; }
		
		/// <summary>
		/// The URL for the zpl generated label
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zpl")]
		public string Zpl { get; set; }
	}
	
	/// <summary>
	/// The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
	///
	///|Label Format  | Supported Carriers
	///|--------------|-----------------------------------
	///|`pdf`         | All carriers
	///|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`
	///|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Label_format
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pdf = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		png = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zpl = 2,
	}
	
	/// <summary>
	/// The available layouts (sizes) in which shipping labels can be downloaded.  The label format determines which sizes are supported.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Label_layout
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="4x6")]
		_4x6 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		letter = 1,
	}
	
	/// <summary>
	/// The possible batch status values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Batch_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		queued = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed_with_errors = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		notifying = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid = 7,
	}
	
	/// <summary>
	/// A batch response error
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Batch_response_error
	{
		
		/// <summary>
		/// Error message associated with the shipment.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Error { get; set; }
		
		/// <summary>
		/// An external shipment id associated with the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_shipment_id")]
		public string External_shipment_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
	}
	
	/// <summary>
	/// The possible batches sort by values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Batches_sort_by
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ship_date = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processed_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 2,
	}
	
	/// <summary>
	/// A bulk rate
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Bulk_rate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// An array of errors that were returned while retrieving the bulk rate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the rate request
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate_request_id")]
		public string Rate_request_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the shipment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Rate_response_status Status { get; set; }
	}
	
	/// <summary>
	/// The possible rate response status values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Rate_response_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		working = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		@partial = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 3,
	}
	
	/// <summary>
	/// A rate shipment request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Calculate_rates_request_body
	{
	}
	
	/// <summary>
	/// A rate shipment response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Calculate_rates_response_body
	{
	}
	
	/// <summary>
	/// A carrier object that represents a provider such as UPS, USPS, DHL, etc
	///that has been tied to the current account.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Carrier
	{
		
		/// <summary>
		/// The account number that the carrier is connected to.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Current available balance
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="balance")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Balance { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the carrier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the carrier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// Screen readable name
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// Carrier supports multiple packages per shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_multi_package_supporting_services")]
		public System.Nullable<System.Boolean> Has_multi_package_supporting_services { get; set; }
		
		/// <summary>
		/// Nickname given to the account when initially setting up the carrier.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// A list of options that are available to that carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public string[] Options { get; set; }
		
		/// <summary>
		/// A list of package types that are supported by the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		public string[] Packages { get; set; }
		
		/// <summary>
		/// Is this the primary carrier that is used by default when no carrier is specified in label/shipment creation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public System.Nullable<System.Boolean> Primary { get; set; }
		
		/// <summary>
		/// Indicates whether the carrier requires funding to use its services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requires_funded_amount")]
		public System.Nullable<System.Boolean> Requires_funded_amount { get; set; }
		
		/// <summary>
		/// A list of services that are offered by the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="services")]
		public string[] Services { get; set; }
		
		/// <summary>
		/// The carrier supports adding custom label messages to an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supports_label_messages")]
		public System.Nullable<System.Boolean> Supports_label_messages { get; set; }
	}
	
	/// <summary>
	/// Advanced options that are specific to the carrier
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Carrier_advanced_option
	{
		
		/// <summary>
		/// Default value of option
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Default_value { get; set; }
		
		/// <summary>
		/// Description of option
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Description { get; set; }
		
		/// <summary>
		/// Name of advanced option
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The shipping carriers that are supported by ShipEngine
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Carrier_name
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		access_worldwide = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amazon_buy_shipping = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amazon_shipping_uk = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		apc = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asendia = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		australia_post = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canada_post = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dhl_ecommerce = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dhl_express = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dhl_express_au = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dhl_express_ca = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dhl_express_uk = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dpd = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		endicia = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fedex = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fedex_uk = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firstmile = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		imex = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newgistics = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ontrac = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		purolator_canada = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		royal_mail = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rr_donnelley = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		seko = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sendle = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stamps_com = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ups = 26,
	}
	
	/// <summary>
	/// The shipping carriers for which ShipEngine supports carrier settings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Carrier_name_with_settings
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dhl_express = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fedex = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newgistics = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ups = 3,
	}
	
	/// <summary>
	/// A rate shipments request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Compare_bulk_rates_request_body
	{
	}
	
	/// <summary>
	/// An Access Worldwide account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_access_worldwide_request_body
	{
		
		/// <summary>
		/// The nickname associated with the carrier connection
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Access Worldwide Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Access Worldwide Username
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// An Amazon account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_amazon_buy_shipping_request_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="merchant_seller_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Merchant_seller_id { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mws_auth_token")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Mws_auth_token { get; set; }
		
		/// <summary>
		/// Nickname to be associated with the account connection
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// An Amazon Shipping UK account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_amazon_shipping_uk
	{
		
		/// <summary>
		/// Amazon UK Shipping auth code.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="auth_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Auth_code { get; set; }
		
		/// <summary>
		/// The nickname associated with the carrier connection
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// An APC account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_apc_request_body
	{
		
		/// <summary>
		/// The nickname for the APC account
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// The password for the APC account
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// The username for the APC account
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// An Asendia account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_asendia_request_body
	{
		
		/// <summary>
		/// Asendia account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// FTP password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ftp_password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Ftp_password { get; set; }
		
		/// <summary>
		/// FTP username
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ftp_username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Ftp_username { get; set; }
		
		/// <summary>
		/// The nickname of the Asendia account
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// An Australia Post account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_australia_post_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// API key
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_key { get; set; }
		
		/// <summary>
		/// API secret
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// A Canada Post account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_canada_post_request_body
	{
		
		/// <summary>
		/// Canada Post Account Number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Canada Post Account API Key
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_key { get; set; }
		
		/// <summary>
		/// Canada Post Account API Secret
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// Canada Post Account Contract ID
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contract_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Contract_id { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_carrier_request_body
	{
	}
	
	/// <summary>
	/// A connect account response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_carrier_response_body
	{
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
	}
	
	/// <summary>
	/// A DHL Ecommerce account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_dhl_ecommerce_request_body
	{
		
		/// <summary>
		/// Account number
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ancillary_endorsement")]
		public Ancillary_service_endorsement Ancillary_endorsement { get; set; }
		
		/// <summary>
		/// The DHL E-Commerce API key. This field is optional, but if not set you will not be able to get rates for this account.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_key { get; set; }
		
		/// <summary>
		/// The DHL E-Commerce API secret. This field is optional, but if not set you will not be able to get rates for this account.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// The client id
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The distribution center
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distribution_center")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Distribution_center { get; set; }
		
		/// <summary>
		/// FTP password
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ftp_password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Ftp_password { get; set; }
		
		/// <summary>
		/// FTP username
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ftp_username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Ftp_username { get; set; }
		
		/// <summary>
		/// A nickname to help you identify this account
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// The account password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// The pickup number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pickup_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Pickup_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="registration_id")]
		public string Registration_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="software_name")]
		public string Software_name { get; set; }
		
		/// <summary>
		/// Sold To field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sold_to")]
		public string Sold_to { get; set; }
		
		/// <summary>
		/// The account username
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// A DHL Express AU account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_dhl_express_au_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// A DHL Express CA account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_dhl_express_ca_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// A DHL express account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_dhl_express_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Required if site id is provided
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Required if password is provided
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Site_id { get; set; }
	}
	
	/// <summary>
	/// A DHL Express UK account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_dhl_express_uk_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the site
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="site_id")]
		public string Site_id { get; set; }
	}
	
	/// <summary>
	/// A DPD account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_dpd_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
	}
	
	/// <summary>
	/// An Endicia account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_endicia_request_body
	{
		
		/// <summary>
		/// Account
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Passphrase
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="passphrase")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Passphrase { get; set; }
	}
	
	/// <summary>
	/// A Fedex account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_fedex_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Address
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address1")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address1 { get; set; }
		
		/// <summary>
		/// Address
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address2 { get; set; }
		
		/// <summary>
		/// Boolean signaling agreement to the Fedex End User License Agreement
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="agree_to_eula")]
		public bool Agree_to_eula { get; set; }
		
		/// <summary>
		/// The city
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string City { get; set; }
		
		/// <summary>
		/// The company
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Company { get; set; }
		
		/// <summary>
		/// Country code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The email address
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Meter number
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meter_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Meter_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Phone number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Phone { get; set; }
		
		/// <summary>
		/// Postal Code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// State
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string State { get; set; }
	}
	
	/// <summary>
	/// A Fedex UK account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_fedex_uk_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Address
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address1")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address1 { get; set; }
		
		/// <summary>
		/// Address
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address2 { get; set; }
		
		/// <summary>
		/// Boolean signaling agreement to the Fedex End User License Agreement
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="agree_to_eula")]
		public bool Agree_to_eula { get; set; }
		
		/// <summary>
		/// The city
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string City { get; set; }
		
		/// <summary>
		/// The company
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Company { get; set; }
		
		/// <summary>
		/// Country code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The email address
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Meter number
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meter_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Meter_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Phone number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Phone { get; set; }
		
		/// <summary>
		/// Postal Code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// State
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string State { get; set; }
	}
	
	/// <summary>
	/// A First Mile account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_firstmile_request_body
	{
		
		/// <summary>
		/// A string that uniquely identifies the mailer
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mailer_id")]
		public string Mailer_id { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Profile name
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Profile_name { get; set; }
	}
	
	/// <summary>
	/// An Imex account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_imex_request_body
	{
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Username
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// A create shipsurance connection request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_insurer_request_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="policy_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Policy_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_insurer_response_body
	{
	}
	
	/// <summary>
	/// A Newgistics account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_newgistics_request_body
	{
		
		/// <summary>
		/// Induction site
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="induction_site")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Induction_site { get; set; }
		
		/// <summary>
		/// Mailer id
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mailer_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Mailer_id { get; set; }
		
		/// <summary>
		/// Merchant id
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merchant_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Merchant_id { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// An Ontrac account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_ontrac_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
	}
	
	/// <summary>
	/// A Purolator account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_purolator_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Activation key
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="activation_key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Activation_key { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// A Royal Mail account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_royal_mail_request_body
	{
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// City
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string City { get; set; }
		
		/// <summary>
		/// Company name
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Contact name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contact_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Contact_name { get; set; }
		
		/// <summary>
		/// The email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// The oba email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oba_email")]
		public string Oba_email { get; set; }
		
		/// <summary>
		/// Phone
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Phone { get; set; }
		
		/// <summary>
		/// Postal code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// Street line1
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_line1")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Street_line1 { get; set; }
		
		/// <summary>
		/// Street line2
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_line2")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Street_line2 { get; set; }
		
		/// <summary>
		/// Street line3
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_line3")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Street_line3 { get; set; }
	}
	
	/// <summary>
	/// A RR Donnelley account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_rr_donnelley_request_body
	{
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Username
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// A SEKO account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_seko_request_body
	{
		
		/// <summary>
		/// Seko Account Access Key
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Access_key { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
	}
	
	/// <summary>
	/// A Sendle account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_sendle_request_body
	{
		
		/// <summary>
		/// API key
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Api_key { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the sendle
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sendle_id")]
		public string Sendle_id { get; set; }
	}
	
	/// <summary>
	/// A Stamps account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_stamps_request_body
	{
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Password
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Password { get; set; }
		
		/// <summary>
		/// Username
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// A UPS account information request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connect_ups_request_body
	{
		
		/// <summary>
		/// Account country code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_country_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_country_code { get; set; }
		
		/// <summary>
		/// Account number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Account postal code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Account_postal_code { get; set; }
		
		/// <summary>
		/// Address Line 1
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address1")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address1 { get; set; }
		
		/// <summary>
		/// Address Line 2
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The Agreement to the [UPS Technology Agreement](https://www.ups.com/assets/resources/media/UTA_with_EUR.pdf)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="agree_to_technology_agreement")]
		public bool Agree_to_technology_agreement { get; set; }
		
		/// <summary>
		/// City
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string City { get; set; }
		
		/// <summary>
		/// Company
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Company { get; set; }
		
		/// <summary>
		/// Country code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The email address
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string First_name { get; set; }
		
		/// <summary>
		/// The UPS invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice")]
		public Ups_invoice Invoice { get; set; }
		
		/// <summary>
		/// The invoice amount
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_amount")]
		public System.Nullable<System.Double> Invoice_amount { get; set; }
		
		/// <summary>
		/// The invoice currency code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_currency_code")]
		public string Invoice_currency_code { get; set; }
		
		/// <summary>
		/// Last name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Phone
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Phone { get; set; }
		
		/// <summary>
		/// Postal code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// State
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string State { get; set; }
		
		/// <summary>
		/// Title
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// UPS invoice
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ups_invoice
	{
		
		/// <summary>
		/// A string that uniquely identifies the control
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="control_id")]
		public string Control_id { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_amount")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> Invoice_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="invoice_currency_code")]
		public string Invoice_currency_code { get; set; }
		
		/// <summary>
		/// invoice date
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_date")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Invoice_date { get; set; }
		
		/// <summary>
		/// invoice number
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Invoice_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Contact_details
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Phone number associated
		/// Required
		/// Min length: 7
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		[System.ComponentModel.DataAnnotations.MinLength(7)]
		public string Phone { get; set; }
	}
	
	/// <summary>
	/// A ShipEngine account settings images request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_account_settings_image_request_body
	{
	}
	
	/// <summary>
	/// A create and validate shipment resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_and_validate_shipment
	{
	}
	
	/// <summary>
	/// A create batch request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_batch_request_body
	{
		
		/// <summary>
		/// Add custom messages for a particular batch
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batch_notes")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Batch_notes { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the external batch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_batch_id")]
		public string External_batch_id { get; set; }
		
		/// <summary>
		/// Array of rate IDs used in the batch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_ids")]
		public string[] Rate_ids { get; set; }
		
		/// <summary>
		/// Array of shipment IDs used in the batch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_ids")]
		public string[] Shipment_ids { get; set; }
	}
	
	/// <summary>
	/// A create batch response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_batch_response_body
	{
	}
	
	/// <summary>
	/// A purchase label without shipment request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_label_from_rate_request_body
	{
	}
	
	/// <summary>
	/// A create label from rate response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_label_from_rate_response_body
	{
	}
	
	/// <summary>
	/// A purchase label without shipment request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_label_from_shipment_request_body
	{
		
		/// <summary>
		/// The display format that the label should be shown in.
		/// </summary>
		[System.ComponentModel.DefaultValue(Display_scheme.label)]
		[System.Runtime.Serialization.DataMember(Name="display_scheme")]
		public Display_scheme Display_scheme { get; set; } = Display_scheme.label;
		
		[System.Runtime.Serialization.DataMember(Name="label_download_type")]
		public Label_download_type Label_download_type { get; set; }
		
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		[System.ComponentModel.DefaultValue(Label_layout._4x6)]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public Label_layout Label_layout { get; set; } = Label_layout._4x6;
		
		[System.Runtime.Serialization.DataMember(Name="validate_address")]
		public Validate_address Validate_address { get; set; }
	}
	
	/// <summary>
	/// The display format that the label should be shown in.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Display_scheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		label = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qr_code = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		label_and_qr_code = 2,
	}
	
	/// <summary>
	/// There are two different ways to [download a label](https://www.shipengine.com/docs/labels/downloading/):
	///
	///|Label Download Type | Description
	///|--------------------|------------------------------
	///|`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified.
	///|`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Label_download_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		url = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inline = 1,
	}
	
	/// <summary>
	/// The possible validate address values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Validate_address
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_validation = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		validate_only = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		validate_and_clean = 2,
	}
	
	/// <summary>
	/// A create label from shipment response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_label_from_shipment_response_body
	{
	}
	
	/// <summary>
	/// A purchase label request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_label_request_body
	{
		
		/// <summary>
		/// A unique identifier for a carrier drop off point where a merchant plans to deliver packages. This will take precedence over a shipment's ship from address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_from_service_point_id")]
		public string Ship_from_service_point_id { get; set; }
		
		/// <summary>
		/// A unique identifier for a carrier service point where the shipment will be delivered by the carrier. This will take precedence over a shipment's ship to address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_to_service_point_id")]
		public string Ship_to_service_point_id { get; set; }
	}
	
	/// <summary>
	/// A create label response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_label_response_body
	{
	}
	
	/// <summary>
	/// A create manifest request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_manifest_by_object_request_body
	{
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The list of label ids to exclude from the manifest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excluded_label_ids")]
		public string[] Excluded_label_ids { get; set; }
		
		/// <summary>
		/// The list of label ids to include for the manifest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_ids")]
		public string[] Label_ids { get; set; }
		
		/// <summary>
		/// The ship date that the shipment will be sent out on
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.DateTimeOffset Ship_date { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the warehouse
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warehouse_id")]
		public string Warehouse_id { get; set; }
	}
	
	/// <summary>
	/// A create manifest request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_manifest_label_ids_request_body
	{
		
		/// <summary>
		/// The list of label ids to include in the manifest
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="label_ids")]
		public string[] Label_ids { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_manifest_request_body
	{
	}
	
	/// <summary>
	/// A create manifest response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_manifest_response_body
	{
	}
	
	/// <summary>
	/// A create package type request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_package_type_request_body
	{
	}
	
	/// <summary>
	/// A create package type response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_package_type_response_body
	{
	}
	
	/// <summary>
	/// A create return label request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_return_label_request_body
	{
		
		/// <summary>
		/// The label charge event.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="charge_event")]
		public Label_charge_event Charge_event { get; set; }
		
		/// <summary>
		/// The display format that the label should be shown in.
		/// </summary>
		[System.ComponentModel.DefaultValue(Display_scheme.label)]
		[System.Runtime.Serialization.DataMember(Name="display_scheme")]
		public Display_scheme Display_scheme { get; set; } = Display_scheme.label;
		
		[System.ComponentModel.DefaultValue(Label_download_type.url)]
		[System.Runtime.Serialization.DataMember(Name="label_download_type")]
		public Label_download_type Label_download_type { get; set; } = Label_download_type.url;
		
		/// <summary>
		/// The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		/// <summary>
		/// The label image resource that was used to create a custom label image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_image_id")]
		public string Label_image_id { get; set; }
		
		/// <summary>
		/// The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_layout._4x6)]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public Label_layout Label_layout { get; set; } = Label_layout._4x6;
	}
	
	/// <summary>
	/// Determines when the user's account will be charged for the label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Label_charge_event
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier_default = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		on_creation = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		on_carrier_acceptance = 2,
	}
	
	/// <summary>
	/// A create return label response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_return_label_response_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_shipment_response_body_fields
	{
		
		/// <summary>
		/// The address validation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_validation")]
		public Address_validation_result Address_validation { get; set; }
		
		/// <summary>
		/// An array of errors that occurred while creating shipment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
	}
	
	/// <summary>
	/// A create shipments request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_shipments_request_body
	{
		
		/// <summary>
		/// An array of shipments to be created.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Shipments { get; set; }
	}
	
	/// <summary>
	/// A create shipments response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_shipments_response_body
	{
		
		/// <summary>
		/// Indicates if errors occured while creating the shipments
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(false)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="has_errors")]
		public bool Has_errors { get; set; } = false;
		
		/// <summary>
		/// An array of shipments that were created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		public string[] Shipments { get; set; }
	}
	
	/// <summary>
	/// Response body for creating tags
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_tag_response_body
	{
	}
	
	/// <summary>
	/// A create warehouse request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_warehouse_request_body
	{
	}
	
	/// <summary>
	/// A create warehouse response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_warehouse_response_body
	{
	}
	
	/// <summary>
	/// A create webhook request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_webhook_request_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event")]
		public Webhook_event Event { get; set; }
		
		/// <summary>
		/// The url that the webhook sends the request to
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The possible webook event values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Webhook_event
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		batch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier_connected = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		order_source_refresh_complete = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rate = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		report_complete = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sales_orders_imported = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		track = 6,
	}
	
	/// <summary>
	/// A webhook response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create_webhook_response_body
	{
	}
	
	/// <summary>
	/// The customs declaration for a single item in the shipment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Customs_item
	{
		
		/// <summary>
		/// The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_of_origin")]
		public string Country_of_origin { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the customs item
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="customs_item_id")]
		public string Customs_item_id { get; set; }
		
		/// <summary>
		/// A description of the item
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Description { get; set; }
		
		/// <summary>
		/// The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="harmonized_tariff_code")]
		public string Harmonized_tariff_code { get; set; }
		
		/// <summary>
		/// The quantity of this item in the shipment.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// The SKU (Stock Keeping Unit) of the customs item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// Description of the Custom Item's SKU
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku_description")]
		public string Sku_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unit_of_measure")]
		public string Unit_of_measure { get; set; }
		
		/// <summary>
		/// The declared customs value of each item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Monetary_value Value { get; set; }
		
		/// <summary>
		/// The item weight
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public Weight Weight { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Delete_pickup_by_id_response_body : Error_response_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pickup_id")]
		public string Pickup_id { get; set; }
	}
	
	/// <summary>
	/// A delete scheduled pickup response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Delete_scheduled_pickup_response_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pickup_id")]
		public string Pickup_id { get; set; }
	}
	
	/// <summary>
	/// The possible delivery confirmation values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Delivery_confirmation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivery = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signature = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		adult_signature = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		direct_signature = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivery_mailed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verbal_confirmation = 6,
	}
	
	/// <summary>
	/// Deprecated manifest resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Deprecated_manifest
	{
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The date-time that the manifest was created
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the form
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="form_id")]
		public string Form_id { get; set; }
		
		/// <summary>
		/// An array of the label ids used in this manifest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_ids")]
		public string[] Label_ids { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manifest_download")]
		public Manifest_download Manifest_download { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the manifest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifest_id")]
		public string Manifest_id { get; set; }
		
		/// <summary>
		/// The date-time that the manifests shipments will be picked up
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Ship_date { get; set; }
		
		/// <summary>
		/// The number of shipments that are included in this manifest
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Shipments { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the submission
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submission_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Submission_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the warehouse
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warehouse_id")]
		public string Warehouse_id { get; set; }
	}
	
	/// <summary>
	/// Object containing the href link to download the manifest file
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Manifest_download
	{
		
		/// <summary>
		/// The URL of the linked resource, if any
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// A DHL Express account settings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dhl_express_account_settings
	{
		
		/// <summary>
		/// Indicates if this is primary account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_primary_account")]
		public System.Nullable<System.Boolean> Is_primary_account { get; set; }
		
		/// <summary>
		/// Account nickname
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		/// <summary>
		/// Indicates if the account number should be hidden on the archive documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="should_hide_account_number_on_archive_doc")]
		public System.Nullable<System.Boolean> Should_hide_account_number_on_archive_doc { get; set; }
	}
	
	/// <summary>
	/// A DHL Express response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dhl_express_settings_response_body
	{
	}
	
	/// <summary>
	/// The dimension units that are supported by ShipEngine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Dimension_unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		centimeter = 1,
	}
	
	/// <summary>
	/// The dimensions of a package
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dimensions
	{
		
		/// <summary>
		/// The length of the package, in the specified unit
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DefaultValue(0)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="height")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double Height { get; set; } = 0;
		
		/// <summary>
		/// The length of the package, in the specified unit
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DefaultValue(0)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="length")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double Length { get; set; } = 0;
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(Dimension_unit.inch)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public Dimension_unit Unit { get; set; } = Dimension_unit.inch;
		
		/// <summary>
		/// The width of the package, in the specified unit
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DefaultValue(0)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="width")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public double Width { get; set; } = 0;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Disconnect_insurer_response_body
	{
	}
	
	/// <summary>
	/// The error structure that gets returned with almost all failed API calls
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Error
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public Error_code Error_code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_source")]
		public Error_source Error_source { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_type")]
		public Error_type Error_type { get; set; }
		
		/// <summary>
		/// An error message associated with the failed API call
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The error code specified for the failed API Call
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Error_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		auto_fund_not_supported = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		batch_cannot_be_modified = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier_conflict = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier_disconnected = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier_not_connected = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier_not_supported = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		confirmation_not_supported = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		default_warehouse_cannot_be_deleted = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		field_conflict = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		field_value_required = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forbidden = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		identifier_conflict = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		identifiers_must_match = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		insufficient_funds = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_address = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_billing_plan = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_field_value = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_identifier = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_status = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid_string_length = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		label_images_not_supported = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		meter_failure = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		order_source_not_active = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rate_limit_exceeded = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		refresh_not_supported = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		request_body_required = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_label_not_supported = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		settings_not_supported = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subscription_inactive = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		terms_not_accepted = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tracking_not_supported = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trial_expired = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unauthorized = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unspecified = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verification_failure = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		warehouse_conflict = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		webhook_event_type_conflict = 37,
	}
	
	/// <summary>
	/// The source of the error, as indicated by the name this informs us if the API call failed because of the
	///carrier, the order source, or the ShipEngine API itself.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Error_source
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		order_source = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipengine = 2,
	}
	
	/// <summary>
	/// The type of error
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Error_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		account_status = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business_rules = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		validation = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		security = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		system = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		integrations = 5,
	}
	
	/// <summary>
	/// An error response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Error_response_body
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A UUID that uniquely identifies the request id.
		///This can be given to the support team to help debug non-trivial issues that may occur
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An error response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Error_with_label_id_response_body
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A UUID that uniquely identifies the request id.
		///This can be given to the support team to help debug non-trivial issues that may occur
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A rate estimate request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Estimate_rates_request_body
	{
	}
	
	/// <summary>
	/// A Fedex account settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Fedex_account_settings
	{
		
		[System.Runtime.Serialization.DataMember(Name="is_primary_account")]
		public System.Nullable<System.Boolean> Is_primary_account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="letterhead_image")]
		public string Letterhead_image { get; set; }
		
		/// <summary>
		/// Account nickname
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pickup_type")]
		public Fedex_pickup_type Pickup_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="signature_image")]
		public string Signature_image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="smart_post_endorsement")]
		public Ancillary_service_endorsement Smart_post_endorsement { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="smart_post_hub")]
		public Smart_post_hub Smart_post_hub { get; set; }
	}
	
	/// <summary>
	/// Determines how FedEx will pickup your packages
	///
	///|Pickup Type               |Description
	///|--------------------------|-----------------------------------------
	///|`none`                    | Not specified
	///|`regular_pickup`          | You already have a daily pickup scheduled with FedEx
	///|`request_courier`         | You will call FedEx to request a courier
	///|`drop_box`                | You will drop-off packages in a FedEx drop box
	///|`business_service_center` | You will drop-off packages at an authorized FedEx business service center
	///|`station`                 | You will drop-off the package at a FedEx Station
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Fedex_pickup_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		regular_pickup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		request_courier = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		drop_box = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business_service_center = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		station = 5,
	}
	
	/// <summary>
	/// The possible smart post hub values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Smart_post_hub
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		allentown_pa = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		atlanta_ga = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		baltimore_md = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		charlotte_nc = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		chino_ca = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dallas_tx = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		denver_co = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		detroit_mi = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		edison_nj = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		grove_city_oh = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groveport_oh = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		houston_tx = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		indianapolis_in = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		kansas_city_ks = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		los_angeles_ca = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		martinsburg_wv = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		memphis_tn = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		minneapolis_mn = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		new_berlin_wi = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		northborough_ma = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		orlando_fl = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phoneix_az = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pittsburgh_pa = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reno_nv = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sacramento_ca = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		salt_lake_city_ut = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		seattle_wa = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		st_louis_mo = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		windsor_ct = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newark_ny = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		south_brunswick_nj = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scranton_pa = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wheeling_il = 33,
	}
	
	/// <summary>
	/// A Fedex account settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Fedex_account_settings_request_body
	{
	}
	
	/// <summary>
	/// A Fedex settings response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Fedex_settings_response_body
	{
	}
	
	/// <summary>
	/// A get account images by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_account_settings_images_response_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_account_settings_response_body
	{
	}
	
	/// <summary>
	/// A get batch by external id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_batch_by_external_id_response_body
	{
	}
	
	/// <summary>
	/// A get batch by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_batch_by_id_response_body
	{
	}
	
	/// <summary>
	/// A get carrier by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_carrier_by_id_response_body
	{
	}
	
	/// <summary>
	/// A carrier list options response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_carrier_options_response_body
	{
		
		/// <summary>
		/// AN array of carrier options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public string[] Options { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_carrier_settings_response_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_carriers_response_body : List_carriers_response_body
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A UUID that uniquely identifies the request id.
		///This can be given to the support team to help debug non-trivial issues that may occur
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A get insurance balance response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_insurance_balance_response_body
	{
	}
	
	/// <summary>
	/// A get label by external shipment id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_label_by_external_shipment_id_response_body
	{
	}
	
	/// <summary>
	/// A get label by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_label_by_id_response_body
	{
	}
	
	/// <summary>
	/// A get manifest by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_manifest_by_id_response_body
	{
	}
	
	/// <summary>
	/// A get package type by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_package_type_by_id_response_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_pickup_by_id_response_body : Pickup_response_body
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A UUID that uniquely identifies the request id.
		///This can be given to the support team to help debug non-trivial issues that may occur
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_pickups_response_body : List_pickup_response_body
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A UUID that uniquely identifies the request id.
		///This can be given to the support team to help debug non-trivial issues that may occur
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A rate response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_rate_by_id_response_body
	{
	}
	
	/// <summary>
	/// A get service point by ID response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_service_point_by_id_response_body
	{
		
		[System.Runtime.Serialization.DataMember(Name="service_point")]
		public Get_service_point_by_id_response_bodyService_point Service_point { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_point
	{
		
		[System.Runtime.Serialization.DataMember(Name="address_line1")]
		public string Address_line1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="city_locality")]
		public string City_locality { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string[] Features { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hours_of_operation")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operation Hours_of_operation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lat")]
		public System.Nullable<System.Double> Lat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="long")]
		public System.Nullable<System.Double> Long { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_codes")]
		public string[] Service_codes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_point_id")]
		public string Service_point_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state_province")]
		public string State_province { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<Get_service_point_by_id_response_bodyService_pointType> Type { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operation
	{
		
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationFriday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationFriday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationMonday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationMonday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationSaturday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationSaturday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationSunday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationSunday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationThursday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationThursday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationTuesday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationTuesday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public Get_service_point_by_id_response_bodyService_pointHours_of_operationWednesday[] Get_service_point_by_id_response_bodyService_pointHours_of_operationWednesday { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationFriday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationMonday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationSaturday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationSunday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationThursday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationTuesday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class Get_service_point_by_id_response_bodyService_pointHours_of_operationWednesday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Get_service_point_by_id_response_bodyService_pointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pudo = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		locker = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_service_points_request
	{
	}
	
	/// <summary>
	/// A get service points request body. Caller must provide exactly one of address_query, address, or lat / long pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_service_points_request_body
	{
		
		/// <summary>
		/// Structured address to search by.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Get_service_points_request_bodyAddress Address { get; set; }
		
		/// <summary>
		/// Unstructured text to search for service points by.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_query")]
		public string Address_query { get; set; }
		
		/// <summary>
		/// The latitude of the point. Represented as signed degrees. Required if long is provided. http://www.geomidpoint.com/latlon.html
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lat")]
		public System.Nullable<System.Double> Lat { get; set; }
		
		/// <summary>
		/// The longitude of the point. Represented as signed degrees. Required if lat is provided. http://www.geomidpoint.com/latlon.html
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long")]
		public System.Nullable<System.Double> Long { get; set; }
		
		/// <summary>
		/// The maximum number of service points to return
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_results")]
		public System.Nullable<System.Int32> Max_results { get; set; }
		
		/// <summary>
		/// An array of shipping service providers and service codes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="providers")]
		public Get_service_points_request_bodyProviders[] Get_service_points_request_bodyProviders { get; set; }
		
		/// <summary>
		/// Search radius in kilometers
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="radius")]
		public System.Nullable<System.Int32> Radius { get; set; }
	}
	
	public class Get_service_points_request_bodyAddress
	{
		
		[System.Runtime.Serialization.DataMember(Name="address_line1")]
		public string Address_line1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address_line2")]
		public string Address_line2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address_line3")]
		public string Address_line3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="city_locality")]
		public string City_locality { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state_province")]
		public string State_province { get; set; }
	}
	
	public class Get_service_points_request_bodyProviders
	{
		
		/// <summary>
		/// Uniquely identifies a carrier connection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		public string[] Service_code { get; set; }
	}
	
	/// <summary>
	/// A get shipment by external id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_shipment_by_external_id_response_body
	{
	}
	
	/// <summary>
	/// A get shipment by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_shipment_by_id_response_body
	{
	}
	
	/// <summary>
	/// A get tracking log from label response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_tracking_log_from_label_response_body
	{
	}
	
	/// <summary>
	/// A get tracking log response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_tracking_log_response_body
	{
	}
	
	/// <summary>
	/// A get warehouse by id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_warehouse_by_id_response_body
	{
	}
	
	/// <summary>
	/// A get webhook id response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Get_webhook_by_id_response_body
	{
	}
	
	/// <summary>
	/// Determines how FedEx will pickup your packages
	///
	///|Pickup Type    | Description
	///|---------------|-----------------------------------------
	///|`vat`          | The tax identifier is a Value Added Tax.
	///|`eori`         | The tax identifier is an Economic Operators Registration and Identification Number (EORI).
	///|`ssn`          | The tax identifier is a Social Security Number.
	///|`ein`          | The tax identifier is an Employer Identification Number (EIN).
	///|`tin`          | The tax identifier is a Tax Identification Number (TIN).
	///|`ioss`         | The tax identifier is an Import One-Stop Shop (IOSS).
	///|`pan`          | The tax identifier is a Permanent Account Number (PAN).
	///|`voec`         | The tax identifier is a Norwegian VAT On E-Commerce(VOEC).
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Identifier_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vat = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eori = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ssn = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ein = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tin = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ioss = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pan = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		voec = 7,
	}
	
	/// <summary>
	/// The possible insurance provider values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Insurance_provider
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipsurance = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		carrier = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		third_party = 3,
	}
	
	/// <summary>
	/// Options for international shipments, such as customs declarations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class International_shipment_options
	{
		
		/// <summary>
		/// The type of contents in this shipment.  This may impact import duties or customs treatment.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(Package_contents.merchandise)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public Package_contents Contents { get; set; } = Package_contents.merchandise;
		
		/// <summary>
		/// Customs declarations for each item in the shipment.
		/// Minimum items: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customs_items")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public Customs_item[] Customs_items { get; set; }
		
		/// <summary>
		/// Indicates what to do if a package is unable to be delivered.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(Non_delivery.return_to_sender)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="non_delivery")]
		public Non_delivery Non_delivery { get; set; } = Non_delivery.return_to_sender;
	}
	
	/// <summary>
	/// The possible package contents values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Package_contents
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		merchandise = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		documents = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gift = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		returned_goods = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sample = 4,
	}
	
	/// <summary>
	/// The possible non delivery values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Non_delivery
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_to_sender = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		treat_as_abandoned = 1,
	}
	
	/// <summary>
	/// A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Label
	{
		
		/// <summary>
		/// Additional information some carriers may provide by which to identify a given label in their system. 
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternative_identifiers")]
		public Alternative_identifier[] Alternative_identifiers { get; set; }
		
		/// <summary>
		/// If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batch_id")]
		public string Batch_id { get; set; }
		
		/// <summary>
		/// The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The label charge event.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="charge_event")]
		public Label_charge_event Charge_event { get; set; }
		
		/// <summary>
		/// The date and time that the label was created in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// The display format that the label should be shown in.
		/// </summary>
		[System.ComponentModel.DefaultValue(Display_scheme.label)]
		[System.Runtime.Serialization.DataMember(Name="display_scheme")]
		public Display_scheme Display_scheme { get; set; } = Display_scheme.label;
		
		/// <summary>
		/// The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="form_download")]
		public Link Form_download { get; set; }
		
		/// <summary>
		/// The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insurance_claim")]
		public Link Insurance_claim { get; set; }
		
		/// <summary>
		/// The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insurance_cost")]
		public Monetary_value Insurance_cost { get; set; }
		
		/// <summary>
		/// Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_international")]
		public System.Nullable<System.Boolean> Is_international { get; set; }
		
		/// <summary>
		/// Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_return_label")]
		public System.Nullable<System.Boolean> Is_return_label { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label_download")]
		public Label_download Label_download { get; set; }
		
		[System.ComponentModel.DefaultValue(Label_download_type.url)]
		[System.Runtime.Serialization.DataMember(Name="label_download_type")]
		public Label_download_type Label_download_type { get; set; } = Label_download_type.url;
		
		/// <summary>
		/// The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		/// <summary>
		/// A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_id")]
		public string Label_id { get; set; }
		
		/// <summary>
		/// The label image resource that was used to create a custom label image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_image_id")]
		public string Label_image_id { get; set; }
		
		/// <summary>
		/// The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_layout._4x6)]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public Label_layout Label_layout { get; set; } = Label_layout._4x6;
		
		/// <summary>
		/// The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is
		///required by some carriers.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_label_id")]
		public string Outbound_label_id { get; set; }
		
		/// <summary>
		/// The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="package_code")]
		public string Package_code { get; set; }
		
		/// <summary>
		/// The label's package(s).
		///
		///> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		public Package[] Packages { get; set; }
		
		/// <summary>
		/// An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rma_number")]
		public string Rma_number { get; set; }
		
		/// <summary>
		/// The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		public string Service_code { get; set; }
		
		/// <summary>
		/// The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		public System.DateTimeOffset Ship_date { get; set; }
		
		/// <summary>
		/// The shipment information used to generate the label
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment")]
		public Shipment Shipment { get; set; }
		
		/// <summary>
		/// The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_cost")]
		public Monetary_value Shipment_cost { get; set; }
		
		/// <summary>
		/// The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/)
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Label_status Status { get; set; }
		
		/// <summary>
		/// Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_label")]
		public System.Nullable<System.Boolean> Test_label { get; set; }
		
		/// <summary>
		/// Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackable")]
		public System.Nullable<System.Boolean> Trackable { get; set; }
		
		/// <summary>
		/// The tracking number for the package. Tracking number formats vary across carriers.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The current status of the package, such as `in_transit` or `delivered`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_status")]
		public Tracking_status Tracking_status { get; set; }
		
		[System.ComponentModel.DefaultValue(Validate_address.validate_and_clean)]
		[System.Runtime.Serialization.DataMember(Name="validate_address")]
		public Validate_address Validate_address { get; set; } = Validate_address.validate_and_clean;
		
		/// <summary>
		/// Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voided")]
		public System.Nullable<System.Boolean> Voided { get; set; }
		
		/// <summary>
		/// The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voided_at")]
		public System.DateTimeOffset Voided_at { get; set; }
	}
	
	/// <summary>
	/// A link to a related resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Link
	{
	}
	
	/// <summary>
	/// A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/)
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Package
	{
		
		/// <summary>
		/// A short description of the package content. Required for shipments moving to, from, and through Mexico.
		///
		/// Min length: 1
		/// Max length: 35
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(35)]
		public string Content_description { get; set; }
		
		/// <summary>
		/// The package dimensions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public Dimensions Dimensions { get; set; }
		
		/// <summary>
		/// An external package id.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_package_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string External_package_id { get; set; }
		
		/// <summary>
		/// The form download for any customs that are needed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="form_download")]
		public Optional_link Form_download { get; set; }
		
		/// <summary>
		/// The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insured_value")]
		public Monetary_value Insured_value { get; set; }
		
		/// <summary>
		/// The label download for the package
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_download")]
		public Label_download Label_download { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label_messages")]
		public Label_messages Label_messages { get; set; }
		
		/// <summary>
		/// The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="package_code")]
		public string Package_code { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="package_id")]
		public string Package_id { get; set; }
		
		/// <summary>
		/// Package sequence
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequence")]
		public System.Nullable<System.Int32> Sequence { get; set; }
		
		/// <summary>
		/// The tracking number for the package.  The format depends on the carrier.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The package weight
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public Weight Weight { get; set; }
	}
	
	/// <summary>
	/// Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.
	///
	///|Carrier            |Max lines |Max line length
	///|-------------------|----------|--------------------
	///|USPS (Stamps.com)  |3         |60
	///|FedEx              |3         |35 for the first line. 30 for additional lines.
	///|UPS                |2         |35
	///|OnTrac             |2         |25
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Label_messages
	{
		
		/// <summary>
		/// The first line of the custom label message.  Some carriers may prefix this line with something like "REF", "Reference", "Trx Ref No.", etc.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference1")]
		public string Reference1 { get; set; }
		
		/// <summary>
		/// The second line of the custom label message.  Some carriers may prefix this line with something like "INV", "Reference 2", "Trx Ref No.", etc.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference2")]
		public string Reference2 { get; set; }
		
		/// <summary>
		/// The third line of the custom label message.  Some carriers may prefix this line with something like "PO", "Reference 3", etc.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference3")]
		public string Reference3 { get; set; }
	}
	
	/// <summary>
	/// The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.
	///
	///> **Note:** Either `ship_from` or `warehouse_id` must be set.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Shipment
	{
	}
	
	/// <summary>
	/// The possible statuses that a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/) can be in.
	///
	///|Status       |Description
	///|:------------|:-----------------------------------------------------
	///|`processing` |When labels are created in a [batch](https://www.shipengine.com/docs/labels/bulk/), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.
	///|`completed`  |The label was successfully created
	///|`error`      |The label could not be created due to an error, such as an invalid delivery address
	///|`voided`     |The label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Label_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		voided = 3,
	}
	
	/// <summary>
	/// The different statuses that can apply to a shipment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Tracking_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		in_transit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivered = 3,
	}
	
	/// <summary>
	/// A list account images response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_account_images_response_body
	{
		
		/// <summary>
		/// Image List
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="images")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Images { get; set; }
	}
	
	/// <summary>
	/// An account settings list response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_account_settings_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_account_settings_images_response_body
	{
	}
	
	/// <summary>
	/// A batch errors response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_batch_errors_response_body
	{
		
		/// <summary>
		/// The errors currently associated with the batch
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public Batch_response_error[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Pagination_link Links { get; set; }
	}
	
	/// <summary>
	/// Helpful links to other pages of results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pagination_link
	{
		
		/// <summary>
		/// The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first")]
		public Link First { get; set; }
		
		/// <summary>
		/// The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last")]
		public Link Last { get; set; }
		
		/// <summary>
		/// The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next")]
		public Optional_link Next { get; set; }
		
		/// <summary>
		/// The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prev")]
		public Optional_link Prev { get; set; }
	}
	
	/// <summary>
	/// A list batch response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_batches_response_body
	{
		
		/// <summary>
		/// Batch List
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batches")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Batches { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Pagination_link Links { get; set; }
		
		/// <summary>
		/// The page that is currently being read
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Page { get; set; }
		
		/// <summary>
		/// The total number of batch pages the API call returned
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Pages { get; set; }
		
		/// <summary>
		/// The total number of batches the API call returned
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int64.MaxValue)]
		public long Total { get; set; }
	}
	
	/// <summary>
	/// A list carrier package types response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_carrier_package_types_response_body
	{
		
		/// <summary>
		/// An array of custom package types
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		public string[] Packages { get; set; }
	}
	
	/// <summary>
	/// A carrier list services response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_carrier_services_response_body
	{
		
		/// <summary>
		/// An array of services associated with the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="services")]
		public string[] Services { get; set; }
	}
	
	/// <summary>
	/// A carrier list response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_carriers_response_body
	{
		
		/// <summary>
		/// The carrier response body
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carriers")]
		public string[] Carriers { get; set; }
	}
	
	/// <summary>
	/// A list label response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_labels_response_body
	{
		
		/// <summary>
		/// The labels that matched the query criteria.  If no matching labels were found, then this array is empty; otherwise, it contains one page of results.  The last page of results may have fewer labels than the `page_size`.
		///
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="labels")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public List_labels_response_bodyLabels[] List_labels_response_bodyLabels { get; set; }
	}
	
	public class List_labels_response_bodyLabels
	{
		
		/// <summary>
		/// Additional information some carriers may provide by which to identify a given label in their system. 
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternative_identifiers")]
		public Alternative_identifier[] Alternative_identifiers { get; set; }
		
		/// <summary>
		/// If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batch_id")]
		public string Batch_id { get; set; }
		
		/// <summary>
		/// The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The label charge event.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="charge_event")]
		public Label_charge_event Charge_event { get; set; }
		
		/// <summary>
		/// The date and time that the label was created in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// The display format that the label should be shown in.
		/// </summary>
		[System.ComponentModel.DefaultValue(Display_scheme.label)]
		[System.Runtime.Serialization.DataMember(Name="display_scheme")]
		public Display_scheme Display_scheme { get; set; } = Display_scheme.label;
		
		/// <summary>
		/// The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="form_download")]
		public Link Form_download { get; set; }
		
		/// <summary>
		/// The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insurance_claim")]
		public Link Insurance_claim { get; set; }
		
		/// <summary>
		/// The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insurance_cost")]
		public Monetary_value Insurance_cost { get; set; }
		
		/// <summary>
		/// Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_international")]
		public System.Nullable<System.Boolean> Is_international { get; set; }
		
		/// <summary>
		/// Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_return_label")]
		public System.Nullable<System.Boolean> Is_return_label { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label_download")]
		public Label_download Label_download { get; set; }
		
		[System.ComponentModel.DefaultValue(Label_download_type.url)]
		[System.Runtime.Serialization.DataMember(Name="label_download_type")]
		public Label_download_type Label_download_type { get; set; } = Label_download_type.url;
		
		/// <summary>
		/// The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		/// <summary>
		/// A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_id")]
		public string Label_id { get; set; }
		
		/// <summary>
		/// The label image resource that was used to create a custom label image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_image_id")]
		public string Label_image_id { get; set; }
		
		/// <summary>
		/// The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Label_layout._4x6)]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public Label_layout Label_layout { get; set; } = Label_layout._4x6;
		
		/// <summary>
		/// The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is
		///required by some carriers.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_label_id")]
		public string Outbound_label_id { get; set; }
		
		/// <summary>
		/// The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="package_code")]
		public string Package_code { get; set; }
		
		/// <summary>
		/// The label's package(s).
		///
		///> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		public Package[] Packages { get; set; }
		
		/// <summary>
		/// An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rma_number")]
		public string Rma_number { get; set; }
		
		/// <summary>
		/// The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		public string Service_code { get; set; }
		
		/// <summary>
		/// The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		public System.DateTimeOffset Ship_date { get; set; }
		
		/// <summary>
		/// The shipment information used to generate the label
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment")]
		public Shipment Shipment { get; set; }
		
		/// <summary>
		/// The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_cost")]
		public Monetary_value Shipment_cost { get; set; }
		
		/// <summary>
		/// The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/)
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Label_status Status { get; set; }
		
		/// <summary>
		/// Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_label")]
		public System.Nullable<System.Boolean> Test_label { get; set; }
		
		/// <summary>
		/// Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackable")]
		public System.Nullable<System.Boolean> Trackable { get; set; }
		
		/// <summary>
		/// The tracking number for the package. Tracking number formats vary across carriers.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The current status of the package, such as `in_transit` or `delivered`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_status")]
		public Tracking_status Tracking_status { get; set; }
		
		[System.ComponentModel.DefaultValue(Validate_address.validate_and_clean)]
		[System.Runtime.Serialization.DataMember(Name="validate_address")]
		public Validate_address Validate_address { get; set; } = Validate_address.validate_and_clean;
		
		/// <summary>
		/// Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voided")]
		public System.Nullable<System.Boolean> Voided { get; set; }
		
		/// <summary>
		/// The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voided_at")]
		public System.DateTimeOffset Voided_at { get; set; }
	}
	
	/// <summary>
	/// A list manifests response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_manifests_response_body
	{
		
		/// <summary>
		/// Helpful links to other pages of results
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Pagination_link Links { get; set; }
		
		/// <summary>
		/// The list of available manifests
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="manifests")]
		public string[] Manifests { get; set; }
		
		/// <summary>
		/// Current page of the list manifests results
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Page { get; set; }
		
		/// <summary>
		/// Total number of pages for list manifests results
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Pages { get; set; }
		
		/// <summary>
		/// The total number of manifests returned
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int64.MaxValue)]
		public long Total { get; set; }
	}
	
	/// <summary>
	/// A list package types response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_package_types_response_body
	{
		
		/// <summary>
		/// An array of custom package types
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		public string[] Packages { get; set; }
	}
	
	/// <summary>
	/// A list pickup response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_pickup_response_body
	{
		
		/// <summary>
		/// Helpful links to other pages of results
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Pagination_link Links { get; set; }
		
		/// <summary>
		/// Current page of the list pickups results
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Page { get; set; }
		
		/// <summary>
		/// Total number of pages for list pickups results
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Pages { get; set; }
		
		/// <summary>
		/// An array of pickups associated with the user's account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pickups")]
		public string[] Pickups { get; set; }
		
		/// <summary>
		/// The total number of pickups returned
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int64.MaxValue)]
		public long Total { get; set; }
	}
	
	/// <summary>
	/// A list service points response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_service_points_response_body
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lat")]
		public System.Nullable<System.Double> Lat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="long")]
		public System.Nullable<System.Double> Long { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_points")]
		public List_service_points_response_bodyService_points[] List_service_points_response_bodyService_points { get; set; }
	}
	
	public class List_service_points_response_bodyService_points
	{
		
		[System.Runtime.Serialization.DataMember(Name="address_line1")]
		public string Address_line1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="city_locality")]
		public string City_locality { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_in_meters")]
		public System.Nullable<System.Double> Distance_in_meters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string[] Features { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hours_of_operation")]
		public List_service_points_response_bodyService_pointsHours_of_operation Hours_of_operation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lat")]
		public System.Nullable<System.Double> Lat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="long")]
		public System.Nullable<System.Double> Long { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_codes")]
		public string[] Service_codes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_point_id")]
		public string Service_point_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state_province")]
		public string State_province { get; set; }
		
		[System.ComponentModel.DefaultValue(Get_service_point_by_id_response_bodyService_pointType.pudo)]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public Get_service_point_by_id_response_bodyService_pointType Type { get; set; } = Get_service_point_by_id_response_bodyService_pointType.pudo;
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operation
	{
		
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public List_service_points_response_bodyService_pointsHours_of_operationFriday[] List_service_points_response_bodyService_pointsHours_of_operationFriday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public List_service_points_response_bodyService_pointsHours_of_operationMonday[] List_service_points_response_bodyService_pointsHours_of_operationMonday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public List_service_points_response_bodyService_pointsHours_of_operationSaturday[] List_service_points_response_bodyService_pointsHours_of_operationSaturday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public List_service_points_response_bodyService_pointsHours_of_operationSunday[] List_service_points_response_bodyService_pointsHours_of_operationSunday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public List_service_points_response_bodyService_pointsHours_of_operationThursday[] List_service_points_response_bodyService_pointsHours_of_operationThursday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public List_service_points_response_bodyService_pointsHours_of_operationTuesday[] List_service_points_response_bodyService_pointsHours_of_operationTuesday { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public List_service_points_response_bodyService_pointsHours_of_operationWednesday[] List_service_points_response_bodyService_pointsHours_of_operationWednesday { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationFriday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationMonday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationSaturday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationSunday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationThursday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationTuesday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	public class List_service_points_response_bodyService_pointsHours_of_operationWednesday
	{
		
		[System.Runtime.Serialization.DataMember(Name="close")]
		public string Close { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open")]
		public string Open { get; set; }
	}
	
	/// <summary>
	/// A list shipment rates response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_shipment_rates_response_body
	{
	}
	
	/// <summary>
	/// A list shipment response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_shipments_response_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Pagination_link Links { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Page { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Pages { get; set; }
		
		/// <summary>
		/// The list of shipments returned by the api call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		public string[] Shipments { get; set; }
		
		/// <summary>
		/// Total number of shipments returned by the api call
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int64.MaxValue)]
		public long Total { get; set; }
	}
	
	/// <summary>
	/// Response body from a successful GET /tags API call
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_tags_response_body
	{
		
		/// <summary>
		/// The array of tags returned by the API call
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// A warehouse list response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class List_warehouses_response_body
	{
		
		/// <summary>
		/// The array of warehouses returned by the API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warehouses")]
		public string[] Warehouses { get; set; }
	}
	
	/// <summary>
	/// Used for combining packages into one scannable form that a carrier can use when picking up a large 
	///number of shipments
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Manifest
	{
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The date-time that the manifest was created
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the form
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="form_id")]
		public string Form_id { get; set; }
		
		/// <summary>
		/// An array of the label ids used in this manifest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_ids")]
		public string[] Label_ids { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manifest_download")]
		public Manifest_download Manifest_download { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the manifest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifest_id")]
		public string Manifest_id { get; set; }
		
		/// <summary>
		/// The date-time that the manifests shipments will be picked up
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Ship_date { get; set; }
		
		/// <summary>
		/// The number of shipments that are included in this manifest
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Shipments { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the submission
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submission_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Submission_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the warehouse
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warehouse_id")]
		public string Warehouse_id { get; set; }
	}
	
	/// <summary>
	/// A reference to the manifest request
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Manifest_request
	{
		
		/// <summary>
		/// A string that uniquely identifies a manifest request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifest_request_id")]
		public string Manifest_request_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Manifest_request_status Status { get; set; }
	}
	
	/// <summary>
	/// The possible statuses of a manifest request
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Manifest_request_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		in_progress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
	}
	
	/// <summary>
	/// An array of manifest resources
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Manifests
	{
		
		/// <summary>
		/// Resulting Manifests
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifests")]
		public Manifest[] Manifests1 { get; set; }
	}
	
	/// <summary>
	/// An array of manifest requests
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Manifests_requests
	{
		
		/// <summary>
		/// Resulting manifest requests with statuses
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifest_requests")]
		public Manifest_request[] Manifest_requests { get; set; }
	}
	
	/// <summary>
	/// A modify batch object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Modify_batch
	{
		
		/// <summary>
		/// Array of Rate IDs to be modifed on the batch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_ids")]
		public string[] Rate_ids { get; set; }
		
		/// <summary>
		/// The Shipment Ids to be modified on the batch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_ids")]
		public string[] Shipment_ids { get; set; }
	}
	
	/// <summary>
	/// The normalized value of the entity.
	///
	///Most entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring "john doe" was recognized as a "person" entity, then the value might be normalized to have proper capitalization (e.g. "John Doe").  Or if the substring "ft worth" was recognized as a "city" entity, then the value might be normalized to "Fort Worth".
	///
	///Some entities have other information in addition to, or instead of a `value`.  For example, a "dimensions" entity will have separate fields for `length`, `width`, `height`, and `unit`.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Normalized_entity
	{
	}
	
	/// <summary>
	/// The order sources that are supported by ShipEngine
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Order_source_name
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amazon_ca = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amazon_us = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brightpearl = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		channel_advisor = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cratejoy = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebay = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		etsy = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jane = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groupon_goods = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		magento = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		seller_active = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shopify = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stitch_labs = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		squarespace = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		three_dcart = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tophatter = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		walmart = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		woo_commerce = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		volusion = 19,
	}
	
	/// <summary>
	/// A package type that a carrier supports for shipment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Package_type
	{
		
		/// <summary>
		/// Provides a helpful description for the custom package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The custom dimensions for the package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public Dimensions Dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="package_code")]
		public string Package_code { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="package_id")]
		public string Package_id { get; set; }
	}
	
	/// <summary>
	/// Many ShipEngine endpoints return a paged list of items.  In addition to the returned items, these responses also include information about the total number of items, the number of pages of results, and URLs of other pages of results.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Paged_list_response_body
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Pagination_link Links { get; set; }
		
		/// <summary>
		/// The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int Page { get; set; }
		
		/// <summary>
		/// The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Pages { get; set; }
		
		/// <summary>
		/// The total number of items across all pages of results
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Total { get; set; }
	}
	
	/// <summary>
	/// The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parse_address_request_body
	{
		
		/// <summary>
		/// You can optionally provide any already-known address values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Partial_address Address { get; set; }
		
		/// <summary>
		/// The unstructured text that contains address-related entities
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// A complete or partial mailing address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Partial_address
	{
		
		/// <summary>
		/// The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_line1")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address_line1 { get; set; }
		
		/// <summary>
		/// The second line of the street address.  For some addresses, this line may not be needed.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_line2")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address_line2 { get; set; }
		
		/// <summary>
		/// The third line of the street address.  For some addresses, this line may not be needed.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_line3")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Address_line3 { get; set; }
		
		/// <summary>
		/// Indicates whether this is a residential address.
		/// </summary>
		[System.ComponentModel.DefaultValue(Address_residential_indicator.unknown)]
		[System.Runtime.Serialization.DataMember(Name="address_residential_indicator")]
		public Address_residential_indicator Address_residential_indicator { get; set; } = Address_residential_indicator.unknown;
		
		/// <summary>
		/// The name of the city or locality
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city_locality")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string City_locality { get; set; }
		
		/// <summary>
		/// If this is a business address, then the company name should be specified here.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// Email for the address owner.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Phone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_province")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string State_province { get; set; }
	}
	
	/// <summary>
	/// The parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parse_address_response_body
	{
		
		/// <summary>
		/// The parsed address.  This address may not be complete, depending on how much information was included in the text and how confident the API is about each recognized entity.
		///
		///> **Note:** The address-recognition API does not currently perform any validation of the parsed address, so we recommend that you use the [address-validation API](https://www.shipengine.com/docs/addresses/validation/) to ensure that the address is correct.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Partial_address Address { get; set; }
		
		/// <summary>
		/// All of the entities that were recognized in the text. An "entity" is a single piece of data, such as a city, a postal code, or an address line.  Each entity includes the original text and the parsed value.
		///
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entities")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public Recognized_entity[] Entities { get; set; }
		
		/// <summary>
		/// A confidence score between zero and one that indicates how certain the API is that it understood the text.
		///
		/// Required
		/// Minimum: 0
		/// Maximum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="score")]
		[System.ComponentModel.DataAnnotations.Range(0, 1)]
		public double Score { get; set; }
	}
	
	/// <summary>
	/// An entity is a single piece of data that was recognized in unstructured text.  For example, a city, a postal code, package dimensions, insured value, etc.  Each entity includes the original text and the parsed value.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Recognized_entity
	{
		
		/// <summary>
		/// The index of the last character of this entity within the original text
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_index")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int End_index { get; set; }
		
		/// <summary>
		/// The normalized value of the entity.
		///
		///Most entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring "john doe" was recognized as a "person" entity, then the value might be normalized to have proper capitalization (e.g. "John Doe").  Or if the substring "ft worth" was recognized as a "city" entity, then the value might be normalized to "Fort Worth".
		///
		///Some entities have other information in addition to, or instead of a `value`.  For example, a "dimensions" entity will have separate fields for `length`, `width`, `height`, and `unit`.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public Normalized_entity Result { get; set; }
		
		/// <summary>
		/// A confidence score between zero and one that indicates how certain the API is that it correctly recognized this entity
		///
		/// Required
		/// Minimum: 0
		/// Maximum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="score")]
		[System.ComponentModel.DataAnnotations.Range(0, 1)]
		public double Score { get; set; }
		
		/// <summary>
		/// The index of the first character of this entity within the original text
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_index")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Start_index { get; set; }
		
		/// <summary>
		/// The substring from the original text that was recognized as this entity
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Text { get; set; }
		
		/// <summary>
		/// The Entity type (e.g. "weight", "person", "address_line1", etc.)
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parse_shipment_request_body
	{
		
		/// <summary>
		/// You can optionally provide a `shipment` object containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment")]
		public Partial_shipment Shipment { get; set; }
		
		/// <summary>
		/// The unstructured text that contains shipping-related entities
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Partial_shipment
	{
		
		/// <summary>
		/// Advanced shipment options.  These are entirely optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanced_options")]
		public Advanced_shipment_options Advanced_options { get; set; }
		
		/// <summary>
		/// The carrier account that is billed for the shipping charges
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The type of delivery confirmation that is required for this shipment.
		/// </summary>
		[System.ComponentModel.DefaultValue(Delivery_confirmation.none)]
		[System.Runtime.Serialization.DataMember(Name="confirmation")]
		public Delivery_confirmation Confirmation { get; set; } = Delivery_confirmation.none;
		
		/// <summary>
		/// The date and time that the shipment was created in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Customs information.  This is usually only needed for international shipments.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customs")]
		public International_shipment_options Customs { get; set; }
		
		/// <summary>
		/// ID that the Order Source assigned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_order_id")]
		public string External_order_id { get; set; }
		
		/// <summary>
		/// A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.
		///
		///> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
		///
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_shipment_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string External_shipment_id { get; set; }
		
		/// <summary>
		/// The insurance provider to use for any insured packages in the shipment.
		///
		/// </summary>
		[System.ComponentModel.DefaultValue(Insurance_provider.none)]
		[System.Runtime.Serialization.DataMember(Name="insurance_provider")]
		public Insurance_provider Insurance_provider { get; set; } = Insurance_provider.none;
		
		/// <summary>
		/// An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_return")]
		public System.Nullable<System.Boolean> Is_return { get; set; }
		
		/// <summary>
		/// Describe the packages included in this shipment as related to potential metadata that was imported from
		///external order sources
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public string[] Items { get; set; }
		
		/// <summary>
		/// The date and time that the shipment was created or last modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modified_at")]
		public System.DateTimeOffset Modified_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order_source_code")]
		public Order_source_name Order_source_code { get; set; }
		
		/// <summary>
		/// Indicates if the package will be picked up or dropped off by the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origin_type")]
		public Origin_type Origin_type { get; set; }
		
		/// <summary>
		/// The packages in the shipment.
		///
		///> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.
		///
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packages")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Packages { get; set; }
		
		/// <summary>
		/// The return address for this shipment.  Defaults to the `ship_from` address.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="return_to")]
		public Shipping_address Return_to { get; set; }
		
		/// <summary>
		/// The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		public string Service_code { get; set; }
		
		/// <summary>
		/// The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		public System.DateTimeOffset Ship_date { get; set; }
		
		/// <summary>
		/// The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://www.shipengine.com/docs/reference/create-warehouse/).  Then you can simply specify the `warehouse_id` rather than the complete address each time.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_from")]
		public Shipping_address Ship_from { get; set; }
		
		/// <summary>
		/// The recipient's mailing address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_to")]
		public Shipping_address Ship_to { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
		
		/// <summary>
		/// A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.
		///
		///> **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
		///
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_number")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Shipment_number { get; set; }
		
		/// <summary>
		/// The current status of the shipment
		/// </summary>
		[System.ComponentModel.DefaultValue(Shipment_status.pending)]
		[System.Runtime.Serialization.DataMember(Name="shipment_status")]
		public Shipment_status Shipment_status { get; set; } = Shipment_status.pending;
		
		/// <summary>
		/// Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
		///
		/// Minimum items: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_identifiers")]
		public string[] Tax_identifiers { get; set; }
		
		/// <summary>
		/// The combined weight of all packages in the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_weight")]
		public Weight Total_weight { get; set; }
		
		/// <summary>
		/// The [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warehouse_id")]
		public string Warehouse_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Shipping_address
	{
	}
	
	/// <summary>
	/// The possible shipment status values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Shipment_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		label_purchased = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 3,
	}
	
	/// <summary>
	/// The parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parse_shipment_response_body
	{
		
		/// <summary>
		/// All of the entities that were recognized in the text. An "entity" is a single piece of data, such as a city, a postal code, a carrier name, or a package weight.  Each entity includes the original text and the parsed value.
		///
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entities")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public Recognized_entity[] Entities { get; set; }
		
		/// <summary>
		/// A confidence score between zero and one that indicates how certain the API is that it understood the text.
		///
		/// Required
		/// Minimum: 0
		/// Maximum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="score")]
		[System.ComponentModel.DataAnnotations.Range(0, 1)]
		public double Score { get; set; }
		
		/// <summary>
		/// The parsed shipment.  This shipment may not be complete, depending on how much information was included in the text and how confident the API is about each recognized entity.
		///
		///> **Note:** The shipment-recognition API does not currently perform any validation of the parsed addresses, so we recommend that you use the [address-validation API](https://www.shipengine.com/docs/addresses/validation/) to ensure that the addresses are correct.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipment")]
		public Partial_shipment Shipment { get; set; }
	}
	
	/// <summary>
	/// A complete or partial mailing address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Partial_shipping_address
	{
		
		/// <summary>
		/// Additional text about how to handle the shipment at this address.
		///
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instructions")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Instructions { get; set; }
	}
	
	/// <summary>
	/// The information necessary to schedule a package pickup
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pickup
	{
		
		/// <summary>
		/// The date and time that the pickup was cancelled in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at")]
		public System.DateTimeOffset Cancelled_at { get; set; }
		
		/// <summary>
		/// The carrier_id associated with the pickup
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// The carrier confirmation number for the scheduled pickup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confirmation_number")]
		public string Confirmation_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contact_details")]
		public Contact_details Contact_details { get; set; }
		
		/// <summary>
		/// The date and time that the pickup was created in ShipEngine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Label IDs that will be included in the pickup request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_ids")]
		public string[] Label_ids { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pickup_address")]
		public Address Pickup_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pickup_id")]
		public string Pickup_id { get; set; }
		
		/// <summary>
		/// Used by some carriers to give special instructions for a package pickup
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pickup_notes")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Pickup_notes { get; set; }
		
		/// <summary>
		/// The desired time range for the package pickup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pickup_window")]
		public Pickup_window Pickup_window { get; set; }
		
		/// <summary>
		/// An array of available pickup windows. Carriers can return multiple times that they will pickup packages.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pickup_windows")]
		public string[] Pickup_windows { get; set; }
		
		/// <summary>
		/// The warehouse_id associated with the pickup
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warehouse_id")]
		public string Warehouse_id { get; set; }
	}
	
	/// <summary>
	/// The desired time range for the package pickup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pickup_window
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_at")]
		public System.DateTimeOffset End_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_at")]
		public System.DateTimeOffset Start_at { get; set; }
	}
	
	/// <summary>
	/// A pickup response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pickup_response_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pickup_windows
	{
		
		[System.Runtime.Serialization.DataMember(Name="end_at")]
		public System.DateTimeOffset End_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_at")]
		public System.DateTimeOffset Start_at { get; set; }
	}
	
	/// <summary>
	/// A process batch request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Process_batch_request_body
	{
		
		/// <summary>
		/// The display format that the label should be shown in.
		/// </summary>
		[System.ComponentModel.DefaultValue(Display_scheme.label)]
		[System.Runtime.Serialization.DataMember(Name="display_scheme")]
		public Display_scheme Display_scheme { get; set; } = Display_scheme.label;
		
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		[System.ComponentModel.DefaultValue("4x6")]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public string Label_layout { get; set; } = "4x6";
		
		/// <summary>
		/// The Ship date the batch is being processed for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		public System.DateTimeOffset Ship_date { get; set; }
	}
	
	/// <summary>
	/// A purchase label without shipment resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Purchase_label_without_shipment
	{
		
		/// <summary>
		/// The display format that the label should be shown in.
		/// </summary>
		[System.ComponentModel.DefaultValue(Display_scheme.label)]
		[System.Runtime.Serialization.DataMember(Name="display_scheme")]
		public Display_scheme Display_scheme { get; set; } = Display_scheme.label;
		
		[System.Runtime.Serialization.DataMember(Name="label_download_type")]
		public Label_download_type Label_download_type { get; set; }
		
		[System.ComponentModel.DefaultValue(Label_format.pdf)]
		[System.Runtime.Serialization.DataMember(Name="label_format")]
		public Label_format Label_format { get; set; } = Label_format.pdf;
		
		[System.ComponentModel.DefaultValue(Label_layout._4x6)]
		[System.Runtime.Serialization.DataMember(Name="label_layout")]
		public Label_layout Label_layout { get; set; } = Label_layout._4x6;
		
		[System.Runtime.Serialization.DataMember(Name="validate_address")]
		public Validate_address Validate_address { get; set; }
	}
	
	/// <summary>
	/// A rate
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate
	{
		
		/// <summary>
		/// carrier code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// The carrier delivery days
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_delivery_days")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_delivery_days { get; set; }
		
		/// <summary>
		/// carrier friendly name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_friendly_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_friendly_name { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// carrier nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_nickname { get; set; }
		
		/// <summary>
		/// The confirmation amount
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmation_amount")]
		public Monetary_value Confirmation_amount { get; set; }
		
		/// <summary>
		/// The number of days estimated for delivery, this will show the _actual_ delivery
		///time if for example, the package gets shipped on a Friday
		///
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_days")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Delivery_days { get; set; }
		
		/// <summary>
		/// The error messages
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_messages")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Error_messages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="estimated_delivery_date")]
		public System.DateTimeOffset Estimated_delivery_date { get; set; }
		
		/// <summary>
		/// Indicates if the rate is guaranteed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guaranteed_service")]
		public bool Guaranteed_service { get; set; }
		
		/// <summary>
		/// The insurance amount
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="insurance_amount")]
		public Monetary_value Insurance_amount { get; set; }
		
		/// <summary>
		/// Indicates if the rates been negotiated
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="negotiated_rate")]
		public bool Negotiated_rate { get; set; }
		
		/// <summary>
		/// Any other charges associated with this rate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other_amount")]
		public Monetary_value Other_amount { get; set; }
		
		/// <summary>
		/// package type that this rate was estimated for
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="package_type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Package_type { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the rate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate_id")]
		public string Rate_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate_type")]
		public Rate_type Rate_type { get; set; }
		
		/// <summary>
		/// service code for the rate
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Service_code { get; set; }
		
		/// <summary>
		/// service type
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service_type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Service_type { get; set; }
		
		/// <summary>
		/// ship date
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Ship_date { get; set; }
		
		/// <summary>
		/// The shipping amount
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipping_amount")]
		public Monetary_value Shipping_amount { get; set; }
		
		/// <summary>
		/// Tariff and additional taxes associated with an international shipment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_amount")]
		public Monetary_value Tax_amount { get; set; }
		
		/// <summary>
		/// Indicates if rate is trackable
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trackable")]
		public bool Trackable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="validation_status")]
		public Validation_status Validation_status { get; set; }
		
		/// <summary>
		/// The warning messages
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warning_messages")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Warning_messages { get; set; }
		
		/// <summary>
		/// Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
		///custom zones that vary depending upon the ship_to and ship_from location
		///
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="zone")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Zone { get; set; }
	}
	
	/// <summary>
	/// The possible rate type values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Rate_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		check = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipment = 1,
	}
	
	/// <summary>
	/// The possible validation status values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Validation_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		valid = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invalid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		has_warnings = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 3,
	}
	
	/// <summary>
	/// A rate estimate
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_estimate
	{
		
		/// <summary>
		/// carrier code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// The carrier delivery days
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_delivery_days")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_delivery_days { get; set; }
		
		/// <summary>
		/// carrier friendly name
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_friendly_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_friendly_name { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// carrier nickname
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_nickname { get; set; }
		
		/// <summary>
		/// The confirmation amount
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmation_amount")]
		public Monetary_value Confirmation_amount { get; set; }
		
		/// <summary>
		/// The number of days estimated for delivery, this will show the _actual_ delivery
		///time if for example, the package gets shipped on a Friday
		///
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_days")]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Delivery_days { get; set; }
		
		/// <summary>
		/// The error messages
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_messages")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Error_messages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="estimated_delivery_date")]
		public System.DateTimeOffset Estimated_delivery_date { get; set; }
		
		/// <summary>
		/// Indicates if the rate is guaranteed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guaranteed_service")]
		public bool Guaranteed_service { get; set; }
		
		/// <summary>
		/// The insurance amount
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="insurance_amount")]
		public Monetary_value Insurance_amount { get; set; }
		
		/// <summary>
		/// Indicates if the rates been negotiated
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="negotiated_rate")]
		public bool Negotiated_rate { get; set; }
		
		/// <summary>
		/// Any other charges associated with this rate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other_amount")]
		public Monetary_value Other_amount { get; set; }
		
		/// <summary>
		/// package type that this rate was estimated for
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="package_type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Package_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate_type")]
		public Rate_type Rate_type { get; set; }
		
		/// <summary>
		/// service code for the rate
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Service_code { get; set; }
		
		/// <summary>
		/// service type
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service_type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Service_type { get; set; }
		
		/// <summary>
		/// ship date
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Ship_date { get; set; }
		
		/// <summary>
		/// The shipping amount
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipping_amount")]
		public Monetary_value Shipping_amount { get; set; }
		
		/// <summary>
		/// Tariff and additional taxes associated with an international shipment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_amount")]
		public Monetary_value Tax_amount { get; set; }
		
		/// <summary>
		/// Indicates if rate is trackable
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trackable")]
		public bool Trackable { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="validation_status")]
		public Validation_status Validation_status { get; set; }
		
		/// <summary>
		/// The warning messages
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warning_messages")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Warning_messages { get; set; }
		
		/// <summary>
		/// Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
		///custom zones that vary depending upon the ship_to and ship_from location
		///
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="zone")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Zone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_estimate_by_carrier_id
	{
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_estimate_by_carrier_ids
	{
		
		/// <summary>
		/// Array of Carrier Ids
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_ids")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Carrier_ids { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_estimate_options
	{
		
		[System.Runtime.Serialization.DataMember(Name="address_residential_indicator")]
		public Address_residential_indicator Address_residential_indicator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmation")]
		public Delivery_confirmation Confirmation { get; set; }
		
		/// <summary>
		/// The dimensions of the package
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public Dimensions Dimensions { get; set; }
		
		/// <summary>
		/// from postal code
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_city_locality")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string From_city_locality { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from_country_code")]
		public string From_country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from_postal_code")]
		public string From_postal_code { get; set; }
		
		/// <summary>
		/// From state province
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_state_province")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string From_state_province { get; set; }
		
		/// <summary>
		/// ship date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		public string Ship_date { get; set; }
		
		/// <summary>
		/// The city locality the package is being shipped to
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_city_locality")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string To_city_locality { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to_country_code")]
		public string To_country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to_postal_code")]
		public string To_postal_code { get; set; }
		
		/// <summary>
		/// To state province
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_state_province")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string To_state_province { get; set; }
		
		/// <summary>
		/// The weight of the package
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public Weight Weight { get; set; }
	}
	
	/// <summary>
	/// A rate request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_request_body
	{
		
		/// <summary>
		/// Calculate the duties and tariffs for cross border shipments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calculate_tax_amount")]
		public System.Nullable<System.Boolean> Calculate_tax_amount { get; set; }
		
		/// <summary>
		/// Array of carrier ids to get rates for
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_ids")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Carrier_ids { get; set; }
		
		/// <summary>
		/// Indicate if it's a return shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_return")]
		public System.Nullable<System.Boolean> Is_return { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="package_types")]
		public string[] Package_types { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preferred_currency")]
		public string Preferred_currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="service_codes")]
		public string[] Service_codes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_request_by_shipment_ids
	{
		
		/// <summary>
		/// The array of shipment IDs
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipment_ids")]
		public string[] Shipment_ids { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_request_by_shipments
	{
		
		/// <summary>
		/// The array of shipments to get bulk rate estimates for
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Shipments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_request_options
	{
		
		/// <summary>
		/// The rate options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_options")]
		public Rate_request_body Rate_options { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_request_rate_options
	{
		
		/// <summary>
		/// The rate options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_options")]
		public Rate_request_body Rate_options { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rate_response
	{
		
		/// <summary>
		/// The rates response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_response")]
		public Rates_information Rate_response1 { get; set; }
	}
	
	/// <summary>
	/// A rates information resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rates_information
	{
		
		/// <summary>
		/// When the rate was created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// An array of invalid shipment rates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalid_rates")]
		public string[] Invalid_rates { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the rate request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_request_id")]
		public string Rate_request_id { get; set; }
		
		/// <summary>
		/// An array of shipment rates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rates")]
		public string[] Rates { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Rate_response_status Status { get; set; }
	}
	
	/// <summary>
	/// The resource to return a redirect URL to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Redirect
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="shipengine-dashboard")]
		shipengineMinusdashboard = 0,
	}
	
	/// <summary>
	/// A modify batch request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Remove_from_batch_request_body
	{
	}
	
	/// <summary>
	/// A schedule pickup request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Schedule_pickup_request_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Schedule_pickup_response_body : Pickup
	{
		
		/// <summary>
		/// The errors associated with the failed API call
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// A UUID that uniquely identifies the request id.
		///This can be given to the support team to help debug non-trivial issues that may occur
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A service offered by the carrier
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Service
	{
		
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the carrier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// Supports domestic shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domestic")]
		public System.Nullable<System.Boolean> Domestic { get; set; }
		
		/// <summary>
		/// Supports international shipping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international")]
		public System.Nullable<System.Boolean> International { get; set; }
		
		/// <summary>
		/// Carrier supports multiple packages per shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_multi_package_supported")]
		public System.Nullable<System.Boolean> Is_multi_package_supported { get; set; }
		
		/// <summary>
		/// User friendly service name
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// service code
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Service_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Shipment_id_request
	{
		
		/// <summary>
		/// A string that uniquely identifies the shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
	}
	
	/// <summary>
	/// A shipment item
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Shipment_item
	{
		
		/// <summary>
		/// Amazon Standard Identification Number
		/// Min length: 10
		/// Max length: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asin")]
		[System.ComponentModel.DataAnnotations.MinLength(10)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string Asin { get; set; }
		
		/// <summary>
		/// external order id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_order_id")]
		public string External_order_id { get; set; }
		
		/// <summary>
		/// external order item id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_order_item_id")]
		public string External_order_item_id { get; set; }
		
		/// <summary>
		/// item name
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="order_source_code")]
		public Order_source_name Order_source_code { get; set; }
		
		/// <summary>
		/// The quantity of this item included in the shipment
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// sales order id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sales_order_id")]
		public string Sales_order_id { get; set; }
		
		/// <summary>
		/// sales order item id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sales_order_item_id")]
		public string Sales_order_item_id { get; set; }
		
		/// <summary>
		/// Item Stock Keeping Unit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Shipment_request
	{
		
		/// <summary>
		/// The shipment object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipment")]
		public Address_validating_shipment Shipment { get; set; }
	}
	
	/// <summary>
	/// The possible shipments sort by values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Shipments_sort_by
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		modified_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 1,
	}
	
	/// <summary>
	/// Controls the sort order of queries
	///
	///|Value     |Description
	///|:---------|:-----------------------------------------------------
	///|`asc`     |Return results in ascending order
	///|`desc`    |Return results in descending order
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Sort_dir
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	/// <summary>
	/// The tracking status codes
	///
	///|Value       |Description
	///|:---------  |:-----------------------------------------------------
	///|`un` | Unknown
	///|`ac` | Accepted
	///|`it` | In Transit
	///|`de` | Delivered
	///|`ex` | Exception
	///|`at` | Delivery Attempt
	///|`ny` | Not Yet In System
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Status_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		un = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ac = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		de = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ex = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		at = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ny = 6,
	}
	
	/// <summary>
	/// Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// The tag name.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A shipment add tag response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag_shipment_response_body
	{
		
		/// <summary>
		/// A string that uniquely identifies the shipment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipment_id")]
		public string Shipment_id { get; set; }
		
		/// <summary>
		/// The tag that is now associated with this shipment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public Tag Tag { get; set; }
	}
	
	/// <summary>
	/// A tax identifier object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tax_identifier
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier_type")]
		public Identifier_type Identifier_type { get; set; }
		
		/// <summary>
		/// The authority that issued this tax. This must be a valid 2 character ISO 3166 Alpha 2 country code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="issuing_authority")]
		public string Issuing_authority { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="taxable_entity_type")]
		public Taxable_entity_type Taxable_entity_type { get; set; }
		
		/// <summary>
		/// The value of the identifier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The taxable entity type for this tax item. Valid values include the following
	///
	///|Value       |Description
	///|:---------  |:-----------------------------------------------------
	///|`shipper`   | The shipper is responsible for this tax.
	///|`recipient` | The recipient of the shipment is responsible for this tax.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Taxable_entity_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipper = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recipient = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tokens_get_ephemeral_token_response_bodyyaml
	{
		
		/// <summary>
		/// The redirect url formatted with the requested token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirect_url")]
		public string Redirect_url { get; set; }
		
		/// <summary>
		/// The requested token that expires in 10 seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
	}
	
	/// <summary>
	/// A track event
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Track_event
	{
		
		/// <summary>
		/// Carrier detail code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_detail_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_detail_code { get; set; }
		
		/// <summary>
		/// Carrier timestamp for the event, it is assumed to be the local time of where the event occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_occurred_at")]
		public System.DateTimeOffset Carrier_occurred_at { get; set; }
		
		/// <summary>
		/// Carrier status code
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_status_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_status_code { get; set; }
		
		/// <summary>
		/// carrier status description
		/// Required
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="carrier_status_description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Carrier_status_description { get; set; }
		
		/// <summary>
		/// City locality
		/// Required
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city_locality")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string City_locality { get; set; }
		
		/// <summary>
		/// Company Name
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// Event description
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Description { get; set; }
		
		/// <summary>
		/// Event Code
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_code")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Event_code { get; set; }
		
		/// <summary>
		/// Latitude coordinate of tracking event.
		/// Minimum: -90
		/// Maximum: 90
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		[System.ComponentModel.DataAnnotations.Range(-90, 90)]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// Longitude coordinate of tracking event.
		/// Minimum: -180
		/// Maximum: 180
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		[System.ComponentModel.DataAnnotations.Range(-180, 180)]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// Timestamp for carrier event
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="occurred_at")]
		public System.DateTimeOffset Occurred_at { get; set; }
		
		/// <summary>
		/// Postal code
		/// Required
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// Signer information
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signer")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Signer { get; set; }
		
		/// <summary>
		/// State province
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state_province")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string State_province { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public Status_code Status_code { get; set; }
		
		/// <summary>
		/// Event Status Description
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Status_description { get; set; }
	}
	
	/// <summary>
	/// A tracking information resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tracking_information
	{
		
		[System.Runtime.Serialization.DataMember(Name="actual_delivery_date")]
		public System.DateTimeOffset Actual_delivery_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="carrier_code")]
		public string Carrier_code { get; set; }
		
		/// <summary>
		/// Carrier detail code
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_detail_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_detail_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="carrier_id")]
		public string Carrier_id { get; set; }
		
		/// <summary>
		/// Carrier status code
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_status_code")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Carrier_status_code { get; set; }
		
		/// <summary>
		/// carrier status description
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrier_status_description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Carrier_status_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="estimated_delivery_date")]
		public System.DateTimeOffset Estimated_delivery_date { get; set; }
		
		/// <summary>
		/// The events that have occured during the lifetime of this tracking number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public Track_event[] Events { get; set; }
		
		/// <summary>
		/// Exception description
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exception_description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Exception_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ship_date")]
		public System.DateTimeOffset Ship_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public Status_code Status_code { get; set; }
		
		/// <summary>
		/// Status description
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Status_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// Carrier Tracking Url, if available
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
	}
	
	/// <summary>
	/// A ShipEngine account settings images request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_account_settings_image_request_body
	{
	}
	
	/// <summary>
	/// An amazon buy shipping account settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_amazon_buy_shipping_request_body
	{
		
		/// <summary>
		/// Email
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Email { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_carrier_settings_request_body
	{
	}
	
	/// <summary>
	/// An update dhl express settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_dhl_express_settings_request_body
	{
	}
	
	/// <summary>
	/// An update Fedex settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_fedex_settings_request_body
	{
	}
	
	/// <summary>
	/// A newgistics account settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_newgistics_settings_request_body
	{
		
		[System.Runtime.Serialization.DataMember(Name="include_barcode_with_order_number")]
		public System.Nullable<System.Boolean> Include_barcode_with_order_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="receive_email_on_manifest_processing")]
		public System.Nullable<System.Boolean> Receive_email_on_manifest_processing { get; set; }
	}
	
	/// <summary>
	/// An update package type request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_package_type_request_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_shipment_fields
	{
		
		[System.ComponentModel.DefaultValue(Validate_address.no_validation)]
		[System.Runtime.Serialization.DataMember(Name="validate_address")]
		public Validate_address Validate_address { get; set; } = Validate_address.no_validation;
	}
	
	/// <summary>
	/// An update shipment request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_shipment_request_body
	{
	}
	
	/// <summary>
	/// An update shipment response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_shipment_response_body
	{
	}
	
	/// <summary>
	/// An update UPS settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_ups_settings_request_body
	{
	}
	
	/// <summary>
	/// An update warehouse request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_warehouse_request_body
	{
	}
	
	/// <summary>
	/// An update warehouse settings request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_warehouse_settings_request_body
	{
		
		/// <summary>
		/// The default property on the warehouse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_default")]
		public System.Nullable<System.Boolean> Is_default { get; set; }
	}
	
	/// <summary>
	/// An update webhook request body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update_webhook_request_body
	{
		
		/// <summary>
		/// The url that the wehbook sends the request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// UPS account settings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ups_account_settings
	{
		
		/// <summary>
		/// account postal code
		/// Min length: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_postal_code")]
		[System.ComponentModel.DataAnnotations.MinLength(5)]
		public string Account_postal_code { get; set; }
		
		/// <summary>
		/// The invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice")]
		public Ups_invoice Invoice { get; set; }
		
		/// <summary>
		/// Indicates if this is the primary UPS account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_primary_account")]
		public System.Nullable<System.Boolean> Is_primary_account { get; set; }
		
		/// <summary>
		/// mail innovations cost center
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mail_innovations_cost_center")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Mail_innovations_cost_center { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mail_innovations_endorsement")]
		public Ancillary_service_endorsement Mail_innovations_endorsement { get; set; }
		
		/// <summary>
		/// nickname
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Nickname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pickup_type")]
		public Ups_pickup_type Pickup_type { get; set; }
		
		/// <summary>
		/// The use carbon neutral shipping program
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_carbon_neutral_shipping_program")]
		public System.Nullable<System.Boolean> Use_carbon_neutral_shipping_program { get; set; }
		
		/// <summary>
		/// The use consolidation services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_consolidation_services")]
		public System.Nullable<System.Boolean> Use_consolidation_services { get; set; }
		
		/// <summary>
		/// The use ground freight pricing
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_ground_freight_pricing")]
		public System.Nullable<System.Boolean> Use_ground_freight_pricing { get; set; }
		
		/// <summary>
		/// The use negotiated rates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_negotiated_rates")]
		public System.Nullable<System.Boolean> Use_negotiated_rates { get; set; }
		
		/// <summary>
		/// The use order number on mail innovations labels
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_order_number_on_mail_innovations_labels")]
		public System.Nullable<System.Boolean> Use_order_number_on_mail_innovations_labels { get; set; }
	}
	
	/// <summary>
	/// The possible ups pickup type values
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Ups_pickup_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily_pickup = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		occasional_pickup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_counter = 2,
	}
	
	/// <summary>
	/// A UPS settings response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ups_settings_response_body
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Validate_shipment_fields
	{
		
		[System.ComponentModel.DefaultValue(Validate_address.no_validation)]
		[System.Runtime.Serialization.DataMember(Name="validate_address")]
		public Validate_address Validate_address { get; set; } = Validate_address.no_validation;
	}
	
	/// <summary>
	/// A void label response body
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Void_label_response_body
	{
		
		/// <summary>
		/// Indicates whether the attempt to void the label was successful
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="approved")]
		public bool Approved { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// A warehouse
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Warehouse
	{
		
		/// <summary>
		/// Timestamp that indicates when the warehouse was created
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Designates which single warehouse is the default on the account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_default")]
		public System.Nullable<System.Boolean> Is_default { get; set; }
		
		/// <summary>
		/// Name of the warehouse
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The origin address of the warehouse
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origin_address")]
		public Address Origin_address { get; set; }
		
		/// <summary>
		/// The return address associated with the warehouse
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="return_address")]
		public Address Return_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the warehouse
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warehouse_id")]
		public string Warehouse_id { get; set; }
	}
	
	/// <summary>
	/// A webhook
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Webhook
	{
		
		[System.Runtime.Serialization.DataMember(Name="event")]
		public Webhook_event Event { get; set; }
		
		/// <summary>
		/// The url that the webhook sends the request to
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the webhook
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_id")]
		public string Webhook_id { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List Account Settings
		/// List all account settings for the ShipEngine account
		/// List_account_settings v1/account/settings
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_account_settings_response_body> List_account_settingsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/account/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_account_settings_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Account Images
		/// List all account images for the ShipEngine account
		/// List_account_images v1/account/settings/images
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_account_settings_images_response_body> List_account_imagesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/account/settings/images";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_account_settings_images_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an Account Image
		/// Create an Account Image
		/// Create_account_image v1/account/settings/images
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Get_account_settings_images_response_body> Create_account_imageAsync(Create_account_settings_image_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/account/settings/images";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_account_settings_images_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Account Image By Id
		/// Delete Account Image By Id
		/// Delete_account_image_by_id v1/account/settings/images/{label_image_id}
		/// </summary>
		/// <param name="label_image_id">Label Image Id
		/// Min length: 4
		// </param>
		public async Task Delete_account_image_by_idAsync(string label_image_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/account/settings/images/"+ (label_image_id==null? "" : System.Uri.EscapeDataString(label_image_id));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Account Image By ID
		/// Retrieve information for an account image.
		/// Get_account_settings_images_by_id v1/account/settings/images/{label_image_id}
		/// </summary>
		/// <param name="label_image_id">Label Image Id
		/// Min length: 4
		// </param>
		/// <returns>The request was a success.</returns>
		public async Task<Get_account_settings_images_response_body> Get_account_settings_images_by_idAsync(string label_image_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/account/settings/images/"+ (label_image_id==null? "" : System.Uri.EscapeDataString(label_image_id));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_account_settings_images_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Account Image By ID
		/// Update information for an account image.
		/// Update_account_settings_images_by_id v1/account/settings/images/{label_image_id}
		/// </summary>
		/// <param name="label_image_id">Label Image Id
		/// Min length: 4
		// </param>
		public async Task Update_account_settings_images_by_idAsync(string label_image_id, Update_account_settings_image_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/account/settings/images/"+ (label_image_id==null? "" : System.Uri.EscapeDataString(label_image_id));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Parse an address
		/// The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.
		/// 
		/// Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that's used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.
		/// 
		/// > **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
		/// 
		/// Parse_address v1/addresses/recognize
		/// </summary>
		/// <param name="requestBody">The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.
		///</param>
		/// <returns>Returns the parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.
		///</returns>
		public async Task<Parse_address_response_body> Parse_addressAsync(Parse_address_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/addresses/recognize";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Parse_address_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Validate An Address
		/// Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges.
		/// ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.
		/// 
		/// Validate_address v1/addresses/validate
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<string[]> Validate_addressAsync(string[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/addresses/validate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<string[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Batches
		/// List Batches associated with your Shipengine account
		/// List_batches v1/batches
		/// </summary>
		/// <param name="page">Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.
		///
		/// Minimum: 1
		// </param>
		/// <param name="page_size">The number of results to return per response.
		/// Minimum: 1
		// </param>
		/// <param name="sort_dir">Controls the sort order of the query.</param>
		/// <param name="batch_number">Batch Number</param>
		/// <returns>The request was a success.</returns>
		public async Task<List_batches_response_body> List_batchesAsync(Batch_status status, int page, int page_size, Sort_dir sort_dir, string batch_number, Batches_sort_by sort_by, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches?status=" + status+"&page="+page+"&page_size="+page_size+"&sort_dir=" + sort_dir+"&batch_number=" + (batch_number==null? "" : System.Uri.EscapeDataString(batch_number))+"&sort_by=" + sort_by;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_batches_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create A Batch
		/// Create a Batch
		/// Create_batch v1/batches
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Create_batch_response_body> Create_batchAsync(Create_batch_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_batch_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Batch By External ID
		/// Get Batch By External ID
		/// Get_batch_by_external_id v1/batches/external_batch_id/{external_batch_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_batch_by_external_id_response_body> Get_batch_by_external_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/external_batch_id/{external_batch_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_batch_by_external_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Batch By Id
		/// Delete Batch By Id
		/// Delete_batch v1/batches/{batch_id}
		/// </summary>
		public async Task Delete_batchAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Batch By ID
		/// Get Batch By ID
		/// Get_batch_by_id v1/batches/{batch_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_batch_by_id_response_body> Get_batch_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_batch_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Batch By Id
		/// Update Batch By Id
		/// Update_batch v1/batches/{batch_id}
		/// </summary>
		public async Task Update_batchAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Add to a Batch
		/// Add a Shipment or Rate to a Batch
		/// Add_to_batch v1/batches/{batch_id}/add
		/// </summary>
		public async Task Add_to_batchAsync(Add_to_batch_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}/add";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Batch Errors
		/// Error handling in batches are handled differently than in a single synchronous request.
		/// You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors.
		/// 
		/// List_batch_errors v1/batches/{batch_id}/errors
		/// </summary>
		/// <param name="page">Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.
		///
		/// Minimum: 1
		// </param>
		/// <param name="pagesize">Minimum: 1</param>
		/// <returns>The request was a success.</returns>
		public async Task<List_batch_errors_response_body> List_batch_errorsAsync(int page, int pagesize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}/errors?page="+page+"&pagesize="+pagesize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_batch_errors_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Process Batch ID Labels
		/// Process Batch ID Labels
		/// Process_batch v1/batches/{batch_id}/process/labels
		/// </summary>
		public async Task Process_batchAsync(Process_batch_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}/process/labels";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove From Batch
		/// Remove a shipment or rate from a batch
		/// Remove_from_batch v1/batches/{batch_id}/remove
		/// </summary>
		public async Task Remove_from_batchAsync(Remove_from_batch_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/batches/{batch_id}/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Carriers
		/// List all carriers that have been added to this account
		/// List_carriers v1/carriers
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_carriers_response_body> List_carriersAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/carriers";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_carriers_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Carrier By ID
		/// Retrive carrier info by ID
		/// Get_carrier_by_id v1/carriers/{carrier_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_carrier_by_id_response_body> Get_carrier_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/carriers/{carrier_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_carrier_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Add Funds To Carrier
		/// Add Funds To A Carrier
		/// Add_funds_to_carrier v1/carriers/{carrier_id}/add_funds
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Add_funds_to_carrier_response_body> Add_funds_to_carrierAsync(Add_funds_to_carrier_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/carriers/{carrier_id}/add_funds";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Add_funds_to_carrier_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Carrier Options
		/// Get a list of the options available for the carrier
		/// Get_carrier_options v1/carriers/{carrier_id}/options
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_carrier_options_response_body> Get_carrier_optionsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/carriers/{carrier_id}/options";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_carrier_options_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Carrier Package Types
		/// List the package types associated with the carrier
		/// List_carrier_package_types v1/carriers/{carrier_id}/packages
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_carrier_package_types_response_body> List_carrier_package_typesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/carriers/{carrier_id}/packages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_carrier_package_types_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Carrier Services
		/// List the services associated with the carrier ID
		/// List_carrier_services v1/carriers/{carrier_id}/services
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_carrier_services_response_body> List_carrier_servicesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/carriers/{carrier_id}/services";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_carrier_services_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Connect a carrier account
		/// Connect a carrier account
		/// Connect_carrier v1/connections/carriers/{carrier_name}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Connect_carrier_response_body> Connect_carrierAsync(Connect_carrier_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connections/carriers/{carrier_name}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Connect_carrier_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disconnect a carrier
		/// Disconnect a carrier
		/// Disconnect_carrier v1/connections/carriers/{carrier_name}/{carrier_id}
		/// </summary>
		public async Task Disconnect_carrierAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connections/carriers/{carrier_name}/{carrier_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get carrier settings
		/// Get carrier settings
		/// Get_carrier_settings v1/connections/carriers/{carrier_name}/{carrier_id}/settings
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_carrier_settings_response_body> Get_carrier_settingsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connections/carriers/{carrier_name}/{carrier_id}/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_carrier_settings_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update carrier settings
		/// Update carrier settings
		/// Update_carrier_settings v1/connections/carriers/{carrier_name}/{carrier_id}/settings
		/// </summary>
		public async Task Update_carrier_settingsAsync(Update_carrier_settings_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connections/carriers/{carrier_name}/{carrier_id}/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disconnect a Shipsurance Account
		/// Disconnect a Shipsurance Account
		/// Disconnect_insurer v1/connections/insurance/shipsurance
		/// </summary>
		/// <returns>The request was a success</returns>
		public async Task<Disconnect_insurer_response_body> Disconnect_insurerAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connections/insurance/shipsurance";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Disconnect_insurer_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Connect a Shipsurance Account
		/// Connect a Shipsurance Account
		/// Connect_insurer v1/connections/insurance/shipsurance
		/// </summary>
		/// <returns>The request was a success</returns>
		public async Task<Connect_insurer_response_body> Connect_insurerAsync(Connect_insurer_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connections/insurance/shipsurance";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Connect_insurer_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Download File
		/// Get File
		/// Download_file v1/downloads/{dir}/{subdir}/{filename}
		/// </summary>
		/// <returns>The request was a success</returns>
		public async Task Download_fileAsync(string download, int rotation, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/downloads/{dir}/{subdir}/{filename}?download=" + (download==null? "" : System.Uri.EscapeDataString(download))+"&rotation="+rotation;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Webhooks
		/// List all webhooks currently enabled for the account.
		/// List_webhooks v1/environment/webhooks
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<string[]> List_webhooksAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/environment/webhooks";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<string[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a Webhook
		/// Create a webook for specific events in the environment.
		/// Create_webhook v1/environment/webhooks
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_webhook_response_body> Create_webhookAsync(Create_webhook_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/environment/webhooks";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_webhook_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Webhook By ID
		/// Delete a webhook
		/// Delete_webhook v1/environment/webhooks/{webhook_id}
		/// </summary>
		public async Task Delete_webhookAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/environment/webhooks/{webhook_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Webhook By ID
		/// Retrieve individual webhook by an ID
		/// Get_webhook_by_id v1/environment/webhooks/{webhook_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_webhook_by_id_response_body> Get_webhook_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/environment/webhooks/{webhook_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_webhook_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update a Webhook
		/// Update the webhook url property
		/// Update_webhook v1/environment/webhooks/{webhook_id}
		/// </summary>
		public async Task Update_webhookAsync(Update_webhook_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/environment/webhooks/{webhook_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Add Funds To Insurance
		/// You may need to auto fund your account from time to time. For example, if you don't normally ship items over $100,
		/// and may want to add funds to insurance rather than keeping the account funded.
		/// 
		/// Add_funds_to_insurance v1/insurance/shipsurance/add_funds
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Add_funds_to_insurance_response_body> Add_funds_to_insuranceAsync(Add_funds_to_insurance_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/insurance/shipsurance/add_funds";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Add_funds_to_insurance_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Insurance Funds Balance
		/// Retrieve the balance of your Shipsurance account.
		/// Get_insurance_balance v1/insurance/shipsurance/balance
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_insurance_balance_response_body> Get_insurance_balanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/insurance/shipsurance/balance";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_insurance_balance_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List labels
		/// This endpoint returns a list of labels that you've [created](https://www.shipengine.com/docs/labels/create-a-label/). You can optionally filter the results as well as control their sort order and the number of results returned at a time.
		/// 
		/// By default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`
		/// 
		/// List_labels v1/labels
		/// </summary>
		/// <param name="label_status">Only return labels that are currently in the specified status</param>
		/// <param name="service_code">Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)</param>
		/// <param name="carrier_id">Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="tracking_number">Only return labels with a specific tracking number
		/// Min length: 1
		// </param>
		/// <param name="batch_id">Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="rate_id">Rate ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="shipment_id">Shipment ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="warehouse_id">Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="created_at_start">Only return labels that were created on or after a specific date/time</param>
		/// <param name="created_at_end">Only return labels that were created on or before a specific date/time</param>
		/// <param name="page">Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.
		///
		/// Minimum: 1
		// </param>
		/// <param name="page_size">The number of results to return per response.
		/// Minimum: 1
		// </param>
		/// <param name="sort_dir">Controls the sort order of the query.</param>
		/// <param name="sort_by">Controls which field the query is sorted by.</param>
		/// <returns>The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results.
		///</returns>
		public async Task<List_labels_response_body> List_labelsAsync(Label_status label_status, string service_code, string carrier_id, string tracking_number, string batch_id, string rate_id, string shipment_id, string warehouse_id, System.DateTimeOffset created_at_start, System.DateTimeOffset created_at_end, int page, int page_size, Sort_dir sort_dir, Shipments_sort_by sort_by, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels?label_status=" + label_status+"&service_code=" + (service_code==null? "" : System.Uri.EscapeDataString(service_code))+"&carrier_id=" + (carrier_id==null? "" : System.Uri.EscapeDataString(carrier_id))+"&tracking_number=" + (tracking_number==null? "" : System.Uri.EscapeDataString(tracking_number))+"&batch_id=" + (batch_id==null? "" : System.Uri.EscapeDataString(batch_id))+"&rate_id=" + (rate_id==null? "" : System.Uri.EscapeDataString(rate_id))+"&shipment_id=" + (shipment_id==null? "" : System.Uri.EscapeDataString(shipment_id))+"&warehouse_id=" + (warehouse_id==null? "" : System.Uri.EscapeDataString(warehouse_id))+"&created_at_start=" + created_at_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&created_at_end=" + created_at_end.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&page="+page+"&page_size="+page_size+"&sort_dir=" + sort_dir+"&sort_by=" + sort_by;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_labels_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Purchase Label
		/// Purchase and print a label for shipment
		/// Create_label v1/labels
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Create_label_response_body> Create_labelAsync(Create_label_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_label_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Label By External Shipment ID
		/// Find a label by using the external shipment id that was used during label creation
		/// 
		/// Get_label_by_external_shipment_id v1/labels/external_shipment_id/{external_shipment_id}
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Get_label_by_external_shipment_id_response_body> Get_label_by_external_shipment_idAsync(Label_download_type label_download_type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/external_shipment_id/{external_shipment_id}?label_download_type=" + label_download_type;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_label_by_external_shipment_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Purchase Label with Rate ID
		/// When retrieving rates for shipments using the `/rates` endpoint, the returned information contains a `rate_id` property that can be used
		/// to generate a label without having to refill in the shipment information repeatedly.
		/// 
		/// Create_label_from_rate v1/labels/rates/{rate_id}
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Create_label_from_rate_response_body> Create_label_from_rateAsync(Create_label_from_rate_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/rates/{rate_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_label_from_rate_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Purchase Label with Shipment ID
		/// Purchase a label using a shipment ID that has already been created with the desired address and
		/// package info.
		/// 
		/// Create_label_from_shipment v1/labels/shipment/{shipment_id}
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Create_label_from_shipment_response_body> Create_label_from_shipmentAsync(Create_label_from_shipment_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/shipment/{shipment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_label_from_shipment_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Label By ID
		/// Retrieve information for individual labels.
		/// Get_label_by_id v1/labels/{label_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_label_by_id_response_body> Get_label_by_idAsync(Label_download_type label_download_type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/{label_id}?label_download_type=" + label_download_type;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_label_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a return label
		/// Create a return label
		/// Create_return_label v1/labels/{label_id}/return
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_return_label_response_body> Create_return_labelAsync(Create_return_label_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/{label_id}/return";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_return_label_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Label Tracking Information
		/// Retrieve the label's tracking information
		/// Get_tracking_log_from_label v1/labels/{label_id}/track
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_tracking_log_from_label_response_body> Get_tracking_log_from_labelAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/{label_id}/track";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_tracking_log_from_label_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Void a Label By ID
		/// Void a label by ID to get a refund.
		/// Void_label v1/labels/{label_id}/void
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Void_label_response_body> Void_labelAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/labels/{label_id}/void";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Void_label_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Manifests
		/// Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.
		/// List_manifests v1/manifests
		/// </summary>
		/// <param name="warehouse_id">Warehouse ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="ship_date_start">ship date start range</param>
		/// <param name="ship_date_end">ship date end range</param>
		/// <param name="created_at_start">Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)</param>
		/// <param name="created_at_end">Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)</param>
		/// <param name="carrier_id">Carrier ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="page">Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.
		///
		/// Minimum: 1
		// </param>
		/// <param name="page_size">The number of results to return per response.
		/// Minimum: 1
		// </param>
		/// <returns>The request was a success.</returns>
		public async Task<List_manifests_response_body> List_manifestsAsync(string warehouse_id, System.DateTimeOffset ship_date_start, System.DateTimeOffset ship_date_end, System.DateTimeOffset created_at_start, System.DateTimeOffset created_at_end, string carrier_id, int page, int page_size, string[] label_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/manifests?warehouse_id=" + (warehouse_id==null? "" : System.Uri.EscapeDataString(warehouse_id))+"&ship_date_start=" + ship_date_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&ship_date_end=" + ship_date_end.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&created_at_start=" + created_at_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&created_at_end=" + created_at_end.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&carrier_id=" + (carrier_id==null? "" : System.Uri.EscapeDataString(carrier_id))+"&page="+page+"&page_size="+page_size+"&"+string.Join("&", label_ids.Select(z => $"label_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_manifests_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Manifest
		/// Each ShipEngine manifest is created for a specific warehouse, so you'll need to provide the warehouse_id
		/// rather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.
		/// 
		/// Create_manifest v1/manifests
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_manifest_response_body> Create_manifestAsync(Create_manifest_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/manifests";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_manifest_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Manifest Request By Id
		/// Get Manifest Request By Id
		/// Get_manifest_request_by_id v1/manifests/requests/{manifest_request_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_manifest_response_body> Get_manifest_request_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/manifests/requests/{manifest_request_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_manifest_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Manifest By Id
		/// Get Manifest By Id
		/// Get_manifest_by_id v1/manifests/{manifest_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_manifest_by_id_response_body> Get_manifest_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/manifests/{manifest_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_manifest_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Custom Package Types
		/// List the custom package types associated with the account
		/// List_package_types v1/packages
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_package_types_response_body> List_package_typesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/packages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_package_types_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Custom Package Type
		/// Create a custom package type to better assist in getting accurate rate estimates
		/// Create_package_type v1/packages
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_package_type_response_body> Create_package_typeAsync(Create_package_type_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/packages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_package_type_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete A Custom Package By ID
		/// Delete a custom package using the ID
		/// Delete_package_type v1/packages/{package_id}
		/// </summary>
		public async Task Delete_package_typeAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/packages/{package_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Custom Package Type By ID
		/// Get Custom Package Type by ID
		/// Get_package_type_by_id v1/packages/{package_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_package_type_by_id_response_body> Get_package_type_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/packages/{package_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_package_type_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Custom Package Type By ID
		/// Update the custom package type object by ID
		/// Update_package_type v1/packages/{package_id}
		/// </summary>
		public async Task Update_package_typeAsync(Update_package_type_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/packages/{package_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Scheduled Pickups
		/// List all pickups that have been scheduled for this carrier
		/// List_scheduled_pickups v1/pickups
		/// </summary>
		/// <param name="carrier_id">Carrier ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="warehouse_id">Warehouse ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="created_at_start">Only return scheduled pickups that were created on or after a specific date/time</param>
		/// <param name="created_at_end">Only return scheduled pickups that were created on or before a specific date/time</param>
		/// <param name="page">Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.
		///
		/// Minimum: 1
		// </param>
		/// <param name="page_size">The number of results to return per response.
		/// Minimum: 1
		// </param>
		/// <returns>The request was a success.</returns>
		public async Task<Get_pickups_response_body> List_scheduled_pickupsAsync(string carrier_id, string warehouse_id, System.DateTimeOffset created_at_start, System.DateTimeOffset created_at_end, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/pickups?carrier_id=" + (carrier_id==null? "" : System.Uri.EscapeDataString(carrier_id))+"&warehouse_id=" + (warehouse_id==null? "" : System.Uri.EscapeDataString(warehouse_id))+"&created_at_start=" + created_at_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&created_at_end=" + created_at_end.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&page="+page+"&page_size="+page_size;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_pickups_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Schedule a Pickup
		/// Schedule a package pickup with a carrier
		/// Schedule_pickup v1/pickups
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Schedule_pickup_response_body> Schedule_pickupAsync(Schedule_pickup_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/pickups";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Schedule_pickup_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a Scheduled Pickup
		/// Delete a previously-scheduled pickup by ID
		/// Delete_scheduled_pickup v1/pickups/{pickup_id}
		/// </summary>
		/// <returns>Return the `pickup_id` of the scheduled pickup that was successfully deleted
		///</returns>
		public async Task<Delete_pickup_by_id_response_body> Delete_scheduled_pickupAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/pickups/{pickup_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Delete_pickup_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Pickup By ID
		/// Get Pickup By ID
		/// Get_pickup_by_id v1/pickups/{pickup_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_pickup_by_id_response_body> Get_pickup_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/pickups/{pickup_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_pickup_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Shipping Rates
		/// It's not uncommon that you want to give your customer the choice between whether they want to ship the fastest, cheapest, or the most trusted route. Most companies don't solely ship things using a single shipping option;
		/// so we provide functionality to show you all your options!
		/// 
		/// Calculate_rates v1/rates
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Calculate_rates_response_body> Calculate_ratesAsync(Calculate_rates_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/rates";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Calculate_rates_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Bulk Rates
		/// Get Bulk Shipment Rates
		/// Compare_bulk_rates v1/rates/bulk
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Bulk_rate[]> Compare_bulk_ratesAsync(Compare_bulk_rates_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/rates/bulk";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Bulk_rate[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Estimate Rates
		/// Get Rate Estimates
		/// Estimate_rates v1/rates/estimate
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<string[]> Estimate_ratesAsync(Estimate_rates_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/rates/estimate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<string[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Rate By ID
		/// Retrieve a previously queried rate by its ID
		/// Get_rate_by_id v1/rates/{rate_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_rate_by_id_response_body> Get_rate_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/rates/{rate_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_rate_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Service Points
		/// List carrier service points by location
		/// Service_points_list v1/service_points/list
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_service_points_response_body> Service_points_listAsync(Get_service_points_request requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/service_points/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_service_points_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Service Point By ID
		/// Returns a carrier service point by using the service_point_id
		/// Service_points_get_by_id v1/service_points/{carrier_code}/{country_code}/{service_point_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_service_point_by_id_response_body> Service_points_get_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/service_points/{carrier_code}/{country_code}/{service_point_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_service_point_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Shipments
		/// Get list of Shipments
		/// List_shipments v1/shipments
		/// </summary>
		/// <param name="batch_id">Batch ID
		/// Min length: 1
		/// Max length: 25
		// </param>
		/// <param name="tag">Search for shipments based on the custom tag added to the shipment object
		/// Min length: 1
		// </param>
		/// <param name="created_at_start">Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)</param>
		/// <param name="created_at_end">Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)</param>
		/// <param name="modified_at_start">Used to create a filter for when a resource was modified (ex. A shipment that was modified after a certain time)</param>
		/// <param name="modified_at_end">Used to create a filter for when a resource was modified (ex. A shipment that was modified before a certain time)</param>
		/// <param name="page">Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.
		///
		/// Minimum: 1
		// </param>
		/// <param name="page_size">The number of results to return per response.
		/// Minimum: 1
		// </param>
		/// <param name="sales_order_id">Sales Order ID</param>
		/// <param name="sort_dir">Controls the sort order of the query.</param>
		/// <returns>The request was a success.</returns>
		public async Task<List_shipments_response_body> List_shipmentsAsync(Shipment_status shipment_status, string batch_id, string tag, System.DateTimeOffset created_at_start, System.DateTimeOffset created_at_end, System.DateTimeOffset modified_at_start, System.DateTimeOffset modified_at_end, int page, int page_size, string sales_order_id, Sort_dir sort_dir, Shipments_sort_by sort_by, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments?shipment_status=" + shipment_status+"&batch_id=" + (batch_id==null? "" : System.Uri.EscapeDataString(batch_id))+"&tag=" + (tag==null? "" : System.Uri.EscapeDataString(tag))+"&created_at_start=" + created_at_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&created_at_end=" + created_at_end.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&modified_at_start=" + modified_at_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&modified_at_end=" + modified_at_end.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&page="+page+"&page_size="+page_size+"&sales_order_id=" + (sales_order_id==null? "" : System.Uri.EscapeDataString(sales_order_id))+"&sort_dir=" + sort_dir+"&sort_by=" + sort_by;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_shipments_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Shipments
		/// Create one or multiple shipments.
		/// Create_shipments v1/shipments
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Create_shipments_response_body> Create_shipmentsAsync(Create_shipments_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_shipments_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Shipment By External ID
		/// Query Shipments created using your own custom ID convention using this endpint
		/// Get_shipment_by_external_id v1/shipments/external_shipment_id/{external_shipment_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_shipment_by_external_id_response_body> Get_shipment_by_external_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/external_shipment_id/{external_shipment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_shipment_by_external_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Parse shipping info
		/// The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people's names, addresses, package weights and dimensions, insurance and delivery requirements, and more.
		/// 
		/// Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that's used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.
		/// 
		/// > **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.
		/// 
		/// Parse_shipment v1/shipments/recognize
		/// </summary>
		/// <param name="requestBody">The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.
		///</param>
		/// <returns>Returns the parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.
		///</returns>
		public async Task<Parse_shipment_response_body> Parse_shipmentAsync(Parse_shipment_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/recognize";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Parse_shipment_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Shipment By ID
		/// Get an individual shipment based on its ID
		/// Get_shipment_by_id v1/shipments/{shipment_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_shipment_by_id_response_body> Get_shipment_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/{shipment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_shipment_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Shipment By ID
		/// Update a shipment object based on its ID
		/// Update_shipment v1/shipments/{shipment_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Update_shipment_response_body> Update_shipmentAsync(Update_shipment_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/{shipment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Update_shipment_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancel a Shipment
		/// Mark a shipment cancelled, if it is no longer needed or being used by your organized. Any label associated with the shipment needs to be voided first
		/// An example use case would be if a batch label creation job is going to run at a set time and only queries `pending` shipments. Marking a shipment as cancelled
		/// would remove it from this process
		/// 
		/// Cancel_shipments v1/shipments/{shipment_id}/cancel
		/// </summary>
		public async Task Cancel_shipmentsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/{shipment_id}/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Shipment Rates
		/// Get Rates for the shipment information associated with the shipment ID
		/// List_shipment_rates v1/shipments/{shipment_id}/rates
		/// </summary>
		/// <param name="created_at_start">Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)</param>
		/// <returns>The request was a success.</returns>
		public async Task<List_shipment_rates_response_body> List_shipment_ratesAsync(System.DateTimeOffset created_at_start, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/{shipment_id}/rates?created_at_start=" + created_at_start.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_shipment_rates_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove Tag from Shipment
		/// Remove an existing tag from the Shipment object
		/// Untag_shipment v1/shipments/{shipment_id}/tags/{tag_name}
		/// </summary>
		public async Task Untag_shipmentAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/{shipment_id}/tags/{tag_name}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Add Tag to Shipment
		/// Add a tag to the shipment object
		/// Tag_shipment v1/shipments/{shipment_id}/tags/{tag_name}
		/// </summary>
		/// <returns>The requested object creation was a success.</returns>
		public async Task<Tag_shipment_response_body> Tag_shipmentAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shipments/{shipment_id}/tags/{tag_name}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Tag_shipment_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Tags
		/// Get a list of all tags associated with an account.
		/// List_tags v1/tags
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_tags_response_body> List_tagsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_tags_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Tag
		/// Delete a tag that is no longer needed
		/// Delete_tag v1/tags/{tag_name}
		/// </summary>
		public async Task Delete_tagAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/{tag_name}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a New Tag
		/// Create a new Tag for customizing how you track your shipments
		/// Create_tag v1/tags/{tag_name}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_tag_response_body> Create_tagAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/{tag_name}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_tag_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Tag Name
		/// Change a tag name while still keeping the relevant shipments attached to it
		/// Rename_tag v1/tags/{tag_name}/{new_tag_name}
		/// </summary>
		public async Task Rename_tagAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/{tag_name}/{new_tag_name}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Ephemeral Token
		/// This endpoint returns a token that can be passed to an application for authorized access.  The lifetime of this token is 10 seconds.
		/// Tokens_get_ephemeral_token v1/tokens/ephemeral
		/// </summary>
		/// <param name="redirect">Include a redirect url to the application formatted with the ephemeral token.</param>
		/// <returns>OK</returns>
		public async Task<Tokens_get_ephemeral_token_response_bodyyaml> Tokens_get_ephemeral_tokenAsync(Redirect redirect, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tokens/ephemeral?redirect=" + redirect;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Tokens_get_ephemeral_token_response_bodyyaml>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Tracking Information
		/// Retrieve package tracking information
		/// Get_tracking_log v1/tracking
		/// </summary>
		/// <param name="carrier_code">Carrier code used to retrieve tracking information
		/// Min length: 1
		// </param>
		/// <param name="tracking_number">The tracking number associated with a shipment
		/// Min length: 1
		// </param>
		/// <returns>The request was a success.</returns>
		public async Task<Get_tracking_log_response_body> Get_tracking_logAsync(string carrier_code, string tracking_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tracking?carrier_code=" + (carrier_code==null? "" : System.Uri.EscapeDataString(carrier_code))+"&tracking_number=" + (tracking_number==null? "" : System.Uri.EscapeDataString(tracking_number));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_tracking_log_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Start Tracking a Package
		/// Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package,
		/// and receive notifications via webhooks whenever the shipping status changes.
		/// 
		/// Start_tracking v1/tracking/start
		/// </summary>
		/// <param name="carrier_code">Carrier code used to retrieve tracking information
		/// Min length: 1
		// </param>
		/// <param name="tracking_number">The tracking number associated with a shipment
		/// Min length: 1
		// </param>
		public async Task Start_trackingAsync(string carrier_code, string tracking_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tracking/start?carrier_code=" + (carrier_code==null? "" : System.Uri.EscapeDataString(carrier_code))+"&tracking_number=" + (tracking_number==null? "" : System.Uri.EscapeDataString(tracking_number));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Stop Tracking a Package
		/// Unsubscribe from tracking updates for a package.
		/// Stop_tracking v1/tracking/stop
		/// </summary>
		/// <param name="carrier_code">Carrier code used to retrieve tracking information
		/// Min length: 1
		// </param>
		/// <param name="tracking_number">The tracking number associated with a shipment
		/// Min length: 1
		// </param>
		public async Task Stop_trackingAsync(string carrier_code, string tracking_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tracking/stop?carrier_code=" + (carrier_code==null? "" : System.Uri.EscapeDataString(carrier_code))+"&tracking_number=" + (tracking_number==null? "" : System.Uri.EscapeDataString(tracking_number));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Warehouses
		/// Retrieve a list of warehouses associated with this account.
		/// List_warehouses v1/warehouses
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<List_warehouses_response_body> List_warehousesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/warehouses";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<List_warehouses_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Warehouse
		/// Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id.
		/// If the return address is not supplied in the request body then it is assumed that the origin address is the return address as well
		/// 
		/// Create_warehouse v1/warehouses
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Create_warehouse_response_body> Create_warehouseAsync(Create_warehouse_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/warehouses";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Create_warehouse_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete Warehouse By ID
		/// Delete a warehouse by ID
		/// Delete_warehouse v1/warehouses/{warehouse_id}
		/// </summary>
		public async Task Delete_warehouseAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/warehouses/{warehouse_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Warehouse By Id
		/// Retrieve warehouse data based on the warehouse ID
		/// Get_warehouse_by_id v1/warehouses/{warehouse_id}
		/// </summary>
		/// <returns>The request was a success.</returns>
		public async Task<Get_warehouse_by_id_response_body> Get_warehouse_by_idAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/warehouses/{warehouse_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Get_warehouse_by_id_response_body>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Warehouse By Id
		/// Update Warehouse object information
		/// Update_warehouse v1/warehouses/{warehouse_id}
		/// </summary>
		public async Task Update_warehouseAsync(Update_warehouse_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/warehouses/{warehouse_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Warehouse Settings
		/// Update Warehouse settings object information
		/// Update_warehouse_settings v1/warehouses/{warehouse_id}/settings
		/// </summary>
		public async Task Update_warehouse_settingsAsync(Update_warehouse_settings_request_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/warehouses/{warehouse_id}/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

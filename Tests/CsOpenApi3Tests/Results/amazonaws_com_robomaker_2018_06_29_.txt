//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteWorldsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="unprocessedWorlds")]
		public string[] UnprocessedWorlds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidParameterException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDescribeSimulationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public SimulationJob[] Jobs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unprocessedJobs")]
		public string[] UnprocessedJobs { get; set; }
	}
	
	/// <summary>
	/// Information about a simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationJob
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastStartedAt")]
		public System.DateTimeOffset LastStartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureBehavior")]
		public FailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public SimulationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loggingConfig")]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxJobDurationInSeconds")]
		public System.Nullable<System.Int32> MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationTimeMillis")]
		public System.Nullable<System.Int32> SimulationTimeMillis { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotApplications")]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplications")]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataSources")]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpcConfig")]
		public VPCConfigResponse VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkInterface")]
		public NetworkInterface NetworkInterface { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compute")]
		public ComputeResponse Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimulationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restarting = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Terminated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FailureBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fail = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Continue = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimulationJobErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationCrash = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationCrash = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationHealthCheckFailure = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationHealthCheckFailure = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsRobotApplication = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsSimulationApplication = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Object = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsS3Output = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsCloudwatchLogs = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetIpLimitExceeded = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENILimitExceeded = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionsUserCredentials = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleRobotApplication = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidBundleSimulationApplication = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidS3Resource = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThrottlingError = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MismatchedEtag = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationVersionMismatchedEtag = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationApplicationVersionMismatchedEtag = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchTimedOut = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchCanceled = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Bucket = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionS3Output = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionRobotApplication = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WrongRegionSimulationApplication = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UploadContentMismatchError = 30,
	}
	
	/// <summary>
	/// The output location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Prefix")]
		public string S3Prefix { get; set; }
	}
	
	/// <summary>
	/// The logging configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoggingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="recordAllRosTopics")]
		public System.Nullable<System.Boolean> RecordAllRosTopics { get; set; }
	}
	
	/// <summary>
	/// Application configuration information for a robot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RobotApplicationConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="launchConfig")]
		public LaunchConfig LaunchConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadConfigurations")]
		public UploadConfiguration[] UploadConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="useDefaultUploadConfigurations")]
		public System.Nullable<System.Boolean> UseDefaultUploadConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tools")]
		public Tool[] Tools { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="useDefaultTools")]
		public System.Nullable<System.Boolean> UseDefaultTools { get; set; }
	}
	
	/// <summary>
	/// Information about a launch configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LaunchConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="packageName")]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchFile")]
		public string LaunchFile { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentVariables")]
		public EnvironmentVariableMap EnvironmentVariables { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="portForwardingConfig")]
		public PortForwardingConfig PortForwardingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="streamUI")]
		public System.Nullable<System.Boolean> StreamUI { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentVariableMap
	{
	}
	
	/// <summary>
	/// Configuration information for port forwarding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PortForwardingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="portMappings")]
		public PortMapping[] PortMappings { get; set; }
	}
	
	/// <summary>
	/// An object representing a port mapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PortMapping
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobPort")]
		public int JobPort { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="applicationPort")]
		public int ApplicationPort { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enableOnPublicIp")]
		public System.Nullable<System.Boolean> EnableOnPublicIp { get; set; }
	}
	
	/// <summary>
	/// Provides upload configuration information. Files are uploaded from the simulation job to a location you specify. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UploadConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="uploadBehavior")]
		public UploadBehavior UploadBehavior { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UploadBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPLOAD_ON_TERMINATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPLOAD_ROLLING_AUTO_REMOVE = 1,
	}
	
	/// <summary>
	/// Information about a tool. Tools are used in a simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tool
	{
		
		[System.Runtime.Serialization.DataMember(Name="streamUI")]
		public System.Nullable<System.Boolean> StreamUI { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string Command { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="streamOutputToCloudWatch")]
		public System.Nullable<System.Boolean> StreamOutputToCloudWatch { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exitBehavior")]
		public ExitBehavior ExitBehavior { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExitBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAIL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTART = 1,
	}
	
	/// <summary>
	/// Information about a simulation application configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationApplicationConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="launchConfig")]
		public LaunchConfig LaunchConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadConfigurations")]
		public UploadConfiguration[] UploadConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldConfigs")]
		public WorldConfig[] WorldConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="useDefaultUploadConfigurations")]
		public System.Nullable<System.Boolean> UseDefaultUploadConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tools")]
		public Tool[] Tools { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="useDefaultTools")]
		public System.Nullable<System.Boolean> UseDefaultTools { get; set; }
	}
	
	/// <summary>
	/// Configuration information for a world.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorldConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="world")]
		public string World { get; set; }
	}
	
	/// <summary>
	/// Information about a data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSource
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Keys")]
		public S3KeyOutput[] S3Keys { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public string Destination { get; set; }
	}
	
	/// <summary>
	/// Information about S3 keys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3KeyOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Key")]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Prefix = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Archive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		File = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	/// <summary>
	/// VPC configuration associated with your simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroups")]
		public string[] SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpcId")]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assignPublicIp")]
		public System.Nullable<System.Boolean> AssignPublicIp { get; set; }
	}
	
	/// <summary>
	/// Describes a network interface.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkInterface
	{
		
		[System.Runtime.Serialization.DataMember(Name="networkInterfaceId")]
		public string NetworkInterfaceId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privateIpAddress")]
		public string PrivateIpAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicIpAddress")]
		public string PublicIpAddress { get; set; }
	}
	
	/// <summary>
	/// Compute information for the simulation job
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComputeResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="simulationUnitLimit")]
		public System.Nullable<System.Int32> SimulationUnitLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeType")]
		public ComputeType ComputeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gpuUnitLimit")]
		public System.Nullable<System.Int32> GpuUnitLimit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComputeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPU = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GPU_AND_CPU = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelDeploymentJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelSimulationJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelSimulationJobBatchResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWorldExportJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWorldGenerationJobResponse
	{
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeploymentJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentApplicationConfigs")]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public DeploymentJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentConfig")]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	/// <summary>
	/// Information about a deployment application configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentApplicationConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="launchConfig")]
		public DeploymentLaunchConfig LaunchConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration information for a deployment launch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentLaunchConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="packageName")]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preLaunchFile")]
		public string PreLaunchFile { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="launchFile")]
		public string LaunchFile { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postLaunchFile")]
		public string PostLaunchFile { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentVariables")]
		public EnvironmentVariableMap EnvironmentVariables { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeploymentJobErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnvironmentSetupError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EtagMismatch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FailureThresholdBreached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentAborted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotDeploymentNoResponse = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotAgentConnectionTimeout = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassDeploymentFailed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidGreengrassGroup = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotArchitecture = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotApplicationArchitecture = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MissingRobotDeploymentResource = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreengrassGroupVersionDoesNotExist = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaDeleted = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtractingBundleFailure = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreLaunchFileFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostLaunchFileFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadPermissionError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadConditionFailed = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BadLambdaAssociated = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServerError = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RobotApplicationDoesNotExist = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeploymentFleetDoesNotExist = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FleetDeploymentTimeout = 23,
	}
	
	/// <summary>
	/// Information about a deployment configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="concurrentDeploymentPercentage")]
		public System.Nullable<System.Int32> ConcurrentDeploymentPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureThresholdPercentage")]
		public System.Nullable<System.Int32> FailureThresholdPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotDeploymentTimeoutInSeconds")]
		public System.Nullable<System.Int32> RobotDeploymentTimeoutInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="downloadConditionFile")]
		public S3Object DownloadConditionFile { get; set; }
	}
	
	/// <summary>
	/// Information about an S3 object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Object
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConcurrentDeploymentException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdempotentParameterMismatchException
	{
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFleetResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRobotResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="greengrassGroupId")]
		public string GreengrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Architecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARM64 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARMHF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceAlreadyExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRobotApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	/// <summary>
	/// Information about a source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Source
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Key")]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
	}
	
	/// <summary>
	/// Information about a robot software suite (ROS distribution).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RobotSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RobotSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public RobotSoftwareSuiteVersionType Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RobotSoftwareSuiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROS2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		General = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RobotSoftwareSuiteVersionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kinetic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Melodic = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dashing = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Foxy = 3,
	}
	
	/// <summary>
	/// The object that contains the Docker image URI for either your robot or simulation applications.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Environment
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Information about a source configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Key")]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRobotApplicationVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSimulationApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	/// <summary>
	/// Information about a simulation software suite.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SimulationSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimulationSoftwareSuiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gazebo = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RosbagPlay = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SimulationRuntime = 2,
	}
	
	/// <summary>
	/// Information about a rendering engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RenderingEngine
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RenderingEngineType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RenderingEngineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OGRE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSimulationApplicationVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSimulationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastStartedAt")]
		public System.DateTimeOffset LastStartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureBehavior")]
		public FailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public SimulationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loggingConfig")]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxJobDurationInSeconds")]
		public System.Nullable<System.Int32> MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationTimeMillis")]
		public System.Nullable<System.Int32> SimulationTimeMillis { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotApplications")]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplications")]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataSources")]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpcConfig")]
		public VPCConfigResponse VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compute")]
		public ComputeResponse Compute { get; set; }
	}
	
	/// <summary>
	/// Information about a data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Keys")]
		public string[] S3Keys { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public string Destination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWorldExportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorldExportJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public WorldExportJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WorldExportJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WorldExportJobErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWorldGenerationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorldGenerationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public WorldGenerationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldCount")]
		public WorldCount WorldCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldTags")]
		public TagMap WorldTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WorldGenerationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PartialFailed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WorldGenerationJobErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestThrottled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidInput = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AllWorldGenerationFailed = 5,
	}
	
	/// <summary>
	/// <p>The number of worlds that will be created. You can configure the number of unique floorplans and the number of unique interiors for each floor plan. For example, if you want 1 world with 20 unique interiors, you set <code>floorplanCount = 1</code> and <code>interiorCountPerFloorplan = 20</code>. This will result in 20 worlds (<code>floorplanCount</code> * <code>interiorCountPerFloorplan)</code>. </p> <p>If you set <code>floorplanCount = 4</code> and <code>interiorCountPerFloorplan = 5</code>, there will be 20 worlds with 5 unique floor plans. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorldCount
	{
		
		[System.Runtime.Serialization.DataMember(Name="floorplanCount")]
		public System.Nullable<System.Int32> FloorplanCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="interiorCountPerFloorplan")]
		public System.Nullable<System.Int32> InteriorCountPerFloorplan { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWorldTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFleetResponse
	{
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRobotResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRobotApplicationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSimulationApplicationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteWorldTemplateResponse
	{
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterRobotResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robot")]
		public string Robot { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDeploymentJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentConfig")]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentApplicationConfigs")]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public DeploymentJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotDeploymentSummary")]
		public RobotDeployment[] RobotDeploymentSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Information about a robot deployment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RobotDeployment
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentStartTime")]
		public System.DateTimeOffset DeploymentStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentFinishTime")]
		public System.DateTimeOffset DeploymentFinishTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public RobotStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="progressDetail")]
		public ProgressDetail ProgressDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public DeploymentJobErrorCode FailureCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RobotStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Registered = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PendingNewDeployment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InSync = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoResponse = 6,
	}
	
	/// <summary>
	/// Information about the progress of a deployment job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProgressDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="currentProgress")]
		public RobotDeploymentStep CurrentProgress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="percentDone")]
		public float PercentDone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="estimatedTimeRemainingSeconds")]
		public System.Nullable<System.Int32> EstimatedTimeRemainingSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="targetResource")]
		public string TargetResource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RobotDeploymentStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Validating = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DownloadingExtracting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingDownloadCondition = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingPreLaunch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Launching = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecutingPostLaunch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finished = 6,
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFleetResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robots")]
		public Robot[] Robots { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentStatus")]
		public DeploymentStatus LastDeploymentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentJob")]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentTime")]
		public System.DateTimeOffset LastDeploymentTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Information about a robot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Robot
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fleetArn")]
		public string FleetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public RobotStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="greenGrassGroupId")]
		public string GreenGrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentJob")]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentTime")]
		public System.DateTimeOffset LastDeploymentTime { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRobotResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fleetArn")]
		public string FleetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public RobotStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="greengrassGroupId")]
		public string GreengrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentJob")]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentTime")]
		public System.DateTimeOffset LastDeploymentTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRobotApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		public string ImageDigest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSimulationApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		public string ImageDigest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSimulationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastStartedAt")]
		public System.DateTimeOffset LastStartedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureBehavior")]
		public FailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public SimulationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loggingConfig")]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxJobDurationInSeconds")]
		public System.Nullable<System.Int32> MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationTimeMillis")]
		public System.Nullable<System.Int32> SimulationTimeMillis { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotApplications")]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplications")]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataSources")]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpcConfig")]
		public VPCConfigResponse VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="networkInterface")]
		public NetworkInterface NetworkInterface { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compute")]
		public ComputeResponse Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSimulationJobBatchResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobBatchStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="batchPolicy")]
		public BatchPolicy BatchPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public SimulationJobBatchErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failedRequests")]
		public FailedCreateSimulationJobRequest[] FailedRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pendingRequests")]
		public SimulationJobRequest[] PendingRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdRequests")]
		public SimulationJobSummary[] CreatedRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimulationJobBatchStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimingOut = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 8,
	}
	
	/// <summary>
	/// Information about the batch policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchPolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="timeoutInSeconds")]
		public System.Nullable<System.Int32> TimeoutInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxConcurrency")]
		public System.Nullable<System.Int32> MaxConcurrency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimulationJobBatchErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalServiceError = 0,
	}
	
	/// <summary>
	/// Information about a failed create simulation job request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailedCreateSimulationJobRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="request")]
		public SimulationJobRequest Request { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public SimulationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failedAt")]
		public System.DateTimeOffset FailedAt { get; set; }
	}
	
	/// <summary>
	/// Information about a simulation job request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationJobRequest
	{
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loggingConfig")]
		public LoggingConfig LoggingConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxJobDurationInSeconds")]
		public int MaxJobDurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureBehavior")]
		public FailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="useDefaultApplications")]
		public System.Nullable<System.Boolean> UseDefaultApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotApplications")]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplications")]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataSources")]
		public DataSourceConfig[] DataSources { get; set; }
		
		/// <summary>
		/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcConfig")]
		public VPCConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compute")]
		public Compute Compute { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroups")]
		public string[] SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assignPublicIp")]
		public System.Nullable<System.Boolean> AssignPublicIp { get; set; }
	}
	
	/// <summary>
	/// Compute information for the simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Compute
	{
		
		[System.Runtime.Serialization.DataMember(Name="simulationUnitLimit")]
		public System.Nullable<System.Int32> SimulationUnitLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeType")]
		public ComputeType ComputeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gpuUnitLimit")]
		public System.Nullable<System.Int32> GpuUnitLimit { get; set; }
	}
	
	/// <summary>
	/// Summary information for a simulation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationJobSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplicationNames")]
		public string[] SimulationApplicationNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotApplicationNames")]
		public string[] RobotApplicationNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataSourceNames")]
		public string[] DataSourceNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeType")]
		public ComputeType ComputeType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="generationJob")]
		public string GenerationJob { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldDescriptionBody")]
		public string WorldDescriptionBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldExportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorldExportJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public WorldExportJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worlds")]
		public string[] Worlds { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldGenerationJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorldGenerationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public WorldGenerationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldCount")]
		public WorldCount WorldCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finishedWorldsSummary")]
		public FinishedWorldsSummary FinishedWorldsSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldTags")]
		public TagMap WorldTags { get; set; }
	}
	
	/// <summary>
	/// Information about worlds that finished.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FinishedWorldsSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="finishedCount")]
		public System.Nullable<System.Int32> FinishedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="succeededWorlds")]
		public string[] SucceededWorlds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureSummary")]
		public FailureSummary FailureSummary { get; set; }
	}
	
	/// <summary>
	/// Information about worlds that failed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailureSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="totalFailureCount")]
		public System.Nullable<System.Int32> TotalFailureCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failures")]
		public WorldFailure[] Failures { get; set; }
	}
	
	/// <summary>
	/// Information about a failed world.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorldFailure
	{
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public WorldGenerationJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sampleFailureReason")]
		public string SampleFailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public System.Nullable<System.Int32> FailureCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetWorldTemplateBodyResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="templateBody")]
		public string TemplateBody { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDeploymentJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="deploymentJobs")]
		public DeploymentJob[] DeploymentJobs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a deployment job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentJob
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentApplicationConfigs")]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentConfig")]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public DeploymentJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
	}
	
	/// <summary>
	/// Information about a filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFleetsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fleetDetails")]
		public Fleet[] FleetDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a fleet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Fleet
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentStatus")]
		public DeploymentStatus LastDeploymentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentJob")]
		public string LastDeploymentJob { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastDeploymentTime")]
		public System.DateTimeOffset LastDeploymentTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRobotApplicationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="robotApplicationSummaries")]
		public RobotApplicationSummary[] RobotApplicationSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for a robot application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RobotApplicationSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRobotsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="robots")]
		public Robot[] Robots { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSimulationApplicationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplicationSummaries")]
		public SimulationApplicationSummary[] SimulationApplicationSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for a simulation application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationApplicationSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSimulationJobBatchesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="simulationJobBatchSummaries")]
		public SimulationJobBatchSummary[] SimulationJobBatchSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a simulation job batch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulationJobBatchSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobBatchStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failedRequestCount")]
		public System.Nullable<System.Int32> FailedRequestCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pendingRequestCount")]
		public System.Nullable<System.Int32> PendingRequestCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdRequestCount")]
		public System.Nullable<System.Int32> CreatedRequestCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSimulationJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="simulationJobSummaries")]
		public SimulationJobSummary[] SimulationJobSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldExportJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worldExportJobSummaries")]
		public WorldExportJobSummary[] WorldExportJobSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a world export job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorldExportJobSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorldExportJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worlds")]
		public string[] Worlds { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldGenerationJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worldGenerationJobSummaries")]
		public WorldGenerationJobSummary[] WorldGenerationJobSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a world generator job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorldGenerationJobSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WorldGenerationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldCount")]
		public WorldCount WorldCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="succeededWorldCount")]
		public System.Nullable<System.Int32> SucceededWorldCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failedWorldCount")]
		public System.Nullable<System.Int32> FailedWorldCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldTemplatesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="templateSummaries")]
		public TemplateSummary[] TemplateSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information for a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="worldSummaries")]
		public WorldSummary[] WorldSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a world.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WorldSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="generationJob")]
		public string GenerationJob { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterRobotResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robot")]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestartSimulationJobResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartSimulationJobBatchResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SimulationJobBatchStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="batchPolicy")]
		public BatchPolicy BatchPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public SimulationJobBatchErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failedRequests")]
		public FailedCreateSimulationJobRequest[] FailedRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pendingRequests")]
		public SimulationJobRequest[] PendingRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdRequests")]
		public SimulationJobSummary[] CreatedRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SyncDeploymentJobResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentConfig")]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deploymentApplicationConfigs")]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureCode")]
		public DeploymentJobErrorCode FailureCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRobotApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSimulationApplicationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateWorldTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedAt")]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteWorldsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worlds")]
		public string[] Worlds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDescribeSimulationJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public string[] Jobs { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelDeploymentJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelSimulationJobBatchRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch")]
		public string Batch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelSimulationJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWorldExportJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWorldGenerationJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeploymentJobRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="deploymentConfig")]
		public DeploymentConfig DeploymentConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentApplicationConfigs")]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFleetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRobotApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRobotApplicationVersionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		public string CurrentRevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Etags")]
		public string[] S3Etags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		public string ImageDigest { get; set; }
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRobotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="greengrassGroupId")]
		public string GreengrassGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSimulationApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSimulationApplicationVersionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		public string CurrentRevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Etags")]
		public string[] S3Etags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		public string ImageDigest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSimulationJobRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loggingConfig")]
		public LoggingConfig LoggingConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxJobDurationInSeconds")]
		public int MaxJobDurationInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureBehavior")]
		public FailureBehavior FailureBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotApplications")]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="simulationApplications")]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataSources")]
		public DataSourceConfig[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpcConfig")]
		public VPCConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compute")]
		public Compute Compute { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWorldExportJobRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worlds")]
		public string[] Worlds { get; set; }
		
		/// <summary>
		/// The output location.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public OutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		public string IamRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWorldGenerationJobRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worldCount")]
		public WorldCount WorldCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="worldTags")]
		public TagMap WorldTags { get; set; }
	}
	
	/// <summary>
	/// Information about a template location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateLocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Key")]
		public string S3Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateWorldTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="templateBody")]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="templateLocation")]
		public TemplateLocation TemplateLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFleetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRobotApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRobotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSimulationApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteWorldTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterRobotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		public string Robot { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDeploymentJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFleetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRobotApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRobotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSimulationApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		public string ApplicationVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSimulationJobBatchRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch")]
		public string Batch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSimulationJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldExportJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldGenerationJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="world")]
		public string World { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeWorldTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetWorldTemplateBodyRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="generationJob")]
		public string GenerationJob { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDeploymentJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFleetsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRobotApplicationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="versionQualifier")]
		public string VersionQualifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRobotsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSimulationApplicationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="versionQualifier")]
		public string VersionQualifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSimulationJobBatchesRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSimulationJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldExportJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldGenerationJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldTemplatesRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorldsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	/// AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterRobotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		public string Robot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestartSimulationJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartSimulationJobBatchRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="batchPolicy")]
		public BatchPolicy BatchPolicy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createSimulationJobRequests")]
		public SimulationJobRequest[] CreateSimulationJobRequests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SyncDeploymentJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		public string Fleet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRobotApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		public string CurrentRevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSimulationApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public string Application { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public SimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public RobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public RenderingEngine RenderingEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		public string CurrentRevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateWorldTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="templateBody")]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="templateLocation")]
		public TemplateLocation TemplateLocation { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes one or more worlds in a batch operation.
		/// BatchDeleteWorlds batchDeleteWorlds
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDeleteWorldsResponse> BatchDeleteWorldsAsync(BatchDeleteWorldsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batchDeleteWorlds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchDeleteWorldsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes one or more simulation jobs.
		/// BatchDescribeSimulationJob batchDescribeSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDescribeSimulationJobResponse> BatchDescribeSimulationJobAsync(BatchDescribeSimulationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batchDescribeSimulationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchDescribeSimulationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Cancels the specified deployment job.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// CancelDeploymentJob cancelDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelDeploymentJobResponse> CancelDeploymentJobAsync(CancelDeploymentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cancelDeploymentJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelDeploymentJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels the specified simulation job.
		/// CancelSimulationJob cancelSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelSimulationJobResponse> CancelSimulationJobAsync(CancelSimulationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cancelSimulationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelSimulationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch.
		/// CancelSimulationJobBatch cancelSimulationJobBatch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelSimulationJobBatchResponse> CancelSimulationJobBatchAsync(CancelSimulationJobBatchPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cancelSimulationJobBatch";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelSimulationJobBatchResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels the specified export job.
		/// CancelWorldExportJob cancelWorldExportJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelWorldExportJobResponse> CancelWorldExportJobAsync(CancelWorldExportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cancelWorldExportJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelWorldExportJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels the specified world generator job.
		/// CancelWorldGenerationJob cancelWorldGenerationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelWorldGenerationJobResponse> CancelWorldGenerationJobAsync(CancelWorldGenerationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cancelWorldGenerationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelWorldGenerationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deploys a specific version of a robot application to robots in a fleet.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important> <p>The robot application must have a numbered <code>applicationVersion</code> for consistency reasons. To create a new version, use <code>CreateRobotApplicationVersion</code> or see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html">Creating a Robot Application Version</a>. </p> <note> <p>After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. </p> </note>
		/// CreateDeploymentJob createDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDeploymentJobResponse> CreateDeploymentJobAsync(CreateDeploymentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createDeploymentJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateDeploymentJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a fleet, a logical group of robots running the same robot application.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>
		/// CreateFleet createFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateFleetResponse> CreateFleetAsync(CreateFleetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createFleet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateFleetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a robot.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>
		/// CreateRobot createRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateRobotResponse> CreateRobotAsync(CreateRobotPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createRobot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateRobotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a robot application.
		/// CreateRobotApplication createRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateRobotApplicationResponse> CreateRobotApplicationAsync(CreateRobotApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createRobotApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateRobotApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a version of a robot application.
		/// CreateRobotApplicationVersion createRobotApplicationVersion
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateRobotApplicationVersionResponse> CreateRobotApplicationVersionAsync(CreateRobotApplicationVersionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createRobotApplicationVersion";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateRobotApplicationVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a simulation application.
		/// CreateSimulationApplication createSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSimulationApplicationResponse> CreateSimulationApplicationAsync(CreateSimulationApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createSimulationApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateSimulationApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a simulation application with a specific revision id.
		/// CreateSimulationApplicationVersion createSimulationApplicationVersion
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSimulationApplicationVersionResponse> CreateSimulationApplicationVersionAsync(CreateSimulationApplicationVersionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createSimulationApplicationVersion";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateSimulationApplicationVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a simulation job.</p> <note> <p>After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible. </p> </note>
		/// CreateSimulationJob createSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSimulationJobResponse> CreateSimulationJobAsync(CreateSimulationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createSimulationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateSimulationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a world export job.
		/// CreateWorldExportJob createWorldExportJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateWorldExportJobResponse> CreateWorldExportJobAsync(CreateWorldExportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createWorldExportJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateWorldExportJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates worlds using the specified template.
		/// CreateWorldGenerationJob createWorldGenerationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateWorldGenerationJobResponse> CreateWorldGenerationJobAsync(CreateWorldGenerationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createWorldGenerationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateWorldGenerationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a world template.
		/// CreateWorldTemplate createWorldTemplate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateWorldTemplateResponse> CreateWorldTemplateAsync(CreateWorldTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "createWorldTemplate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateWorldTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a fleet.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// DeleteFleet deleteFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteFleetResponse> DeleteFleetAsync(DeleteFleetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deleteFleet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteFleetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a robot.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// DeleteRobot deleteRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteRobotResponse> DeleteRobotAsync(DeleteRobotPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deleteRobot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteRobotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a robot application.
		/// DeleteRobotApplication deleteRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteRobotApplicationResponse> DeleteRobotApplicationAsync(DeleteRobotApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deleteRobotApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteRobotApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a simulation application.
		/// DeleteSimulationApplication deleteSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteSimulationApplicationResponse> DeleteSimulationApplicationAsync(DeleteSimulationApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deleteSimulationApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteSimulationApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a world template.
		/// DeleteWorldTemplate deleteWorldTemplate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteWorldTemplateResponse> DeleteWorldTemplateAsync(DeleteWorldTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deleteWorldTemplate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteWorldTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deregisters a robot.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// DeregisterRobot deregisterRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeregisterRobotResponse> DeregisterRobotAsync(DeregisterRobotPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deregisterRobot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeregisterRobotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a deployment job.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// DescribeDeploymentJob describeDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDeploymentJobResponse> DescribeDeploymentJobAsync(DescribeDeploymentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeDeploymentJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDeploymentJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a fleet.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// DescribeFleet describeFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeFleetResponse> DescribeFleetAsync(DescribeFleetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeFleet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeFleetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a robot.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// DescribeRobot describeRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeRobotResponse> DescribeRobotAsync(DescribeRobotPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeRobot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeRobotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a robot application.
		/// DescribeRobotApplication describeRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeRobotApplicationResponse> DescribeRobotApplicationAsync(DescribeRobotApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeRobotApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeRobotApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a simulation application.
		/// DescribeSimulationApplication describeSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSimulationApplicationResponse> DescribeSimulationApplicationAsync(DescribeSimulationApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeSimulationApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeSimulationApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a simulation job.
		/// DescribeSimulationJob describeSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSimulationJobResponse> DescribeSimulationJobAsync(DescribeSimulationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeSimulationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeSimulationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a simulation job batch.
		/// DescribeSimulationJobBatch describeSimulationJobBatch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSimulationJobBatchResponse> DescribeSimulationJobBatchAsync(DescribeSimulationJobBatchPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeSimulationJobBatch";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeSimulationJobBatchResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a world.
		/// DescribeWorld describeWorld
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeWorldResponse> DescribeWorldAsync(DescribeWorldPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeWorld";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeWorldResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a world export job.
		/// DescribeWorldExportJob describeWorldExportJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeWorldExportJobResponse> DescribeWorldExportJobAsync(DescribeWorldExportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeWorldExportJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeWorldExportJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a world generation job.
		/// DescribeWorldGenerationJob describeWorldGenerationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeWorldGenerationJobResponse> DescribeWorldGenerationJobAsync(DescribeWorldGenerationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeWorldGenerationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeWorldGenerationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a world template.
		/// DescribeWorldTemplate describeWorldTemplate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeWorldTemplateResponse> DescribeWorldTemplateAsync(DescribeWorldTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "describeWorldTemplate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeWorldTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the world template body.
		/// GetWorldTemplateBody getWorldTemplateBody
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetWorldTemplateBodyResponse> GetWorldTemplateBodyAsync(GetWorldTemplateBodyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "getWorldTemplateBody";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetWorldTemplateBodyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// ListDeploymentJobs listDeploymentJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDeploymentJobsResponse> ListDeploymentJobsAsync(string maxResults, string nextToken, ListDeploymentJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listDeploymentJobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDeploymentJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of fleets. You can optionally provide filters to retrieve specific fleets.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// ListFleets listFleets
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListFleetsResponse> ListFleetsAsync(string maxResults, string nextToken, ListFleetsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listFleets?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFleetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
		/// ListRobotApplications listRobotApplications
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRobotApplicationsResponse> ListRobotApplicationsAsync(string maxResults, string nextToken, ListRobotApplicationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listRobotApplications?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRobotApplicationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of robots. You can optionally provide filters to retrieve specific robots.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// ListRobots listRobots
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRobotsResponse> ListRobotsAsync(string maxResults, string nextToken, ListRobotsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listRobots?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRobotsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications.
		/// ListSimulationApplications listSimulationApplications
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSimulationApplicationsResponse> ListSimulationApplicationsAsync(string maxResults, string nextToken, ListSimulationApplicationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listSimulationApplications?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSimulationApplicationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs.
		/// ListSimulationJobBatches listSimulationJobBatches
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSimulationJobBatchesResponse> ListSimulationJobBatchesAsync(string maxResults, string nextToken, ListSimulationJobBatchesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listSimulationJobBatches?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSimulationJobBatchesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs.
		/// ListSimulationJobs listSimulationJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSimulationJobsResponse> ListSimulationJobsAsync(string maxResults, string nextToken, ListSimulationJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listSimulationJobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSimulationJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all tags on a AWS RoboMaker resource.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
		/// Min length: 1
		/// Max length: 1224
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. </p> <p>For information about the rules that apply to tag keys and tag values, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are tagging.
		/// Min length: 1
		/// Max length: 1224
		// </param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists world export jobs.
		/// ListWorldExportJobs listWorldExportJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListWorldExportJobsResponse> ListWorldExportJobsAsync(string maxResults, string nextToken, ListWorldExportJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listWorldExportJobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListWorldExportJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists world generator jobs.
		/// ListWorldGenerationJobs listWorldGenerationJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListWorldGenerationJobsResponse> ListWorldGenerationJobsAsync(string maxResults, string nextToken, ListWorldGenerationJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listWorldGenerationJobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListWorldGenerationJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists world templates.
		/// ListWorldTemplates listWorldTemplates
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListWorldTemplatesResponse> ListWorldTemplatesAsync(string maxResults, string nextToken, ListWorldTemplatesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listWorldTemplates?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListWorldTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists worlds.
		/// ListWorlds listWorlds
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListWorldsResponse> ListWorldsAsync(string maxResults, string nextToken, ListWorldsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "listWorlds?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListWorldsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers a robot with a fleet.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>
		/// RegisterRobot registerRobot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterRobotResponse> RegisterRobotAsync(RegisterRobotPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "registerRobot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterRobotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Restarts a running simulation job.
		/// RestartSimulationJob restartSimulationJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RestartSimulationJobResponse> RestartSimulationJobAsync(RestartSimulationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "restartSimulationJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RestartSimulationJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts a new simulation job batch. The batch is defined using one or more <code>SimulationJobRequest</code> objects.
		/// StartSimulationJobBatch startSimulationJobBatch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartSimulationJobBatchResponse> StartSimulationJobBatchAsync(StartSimulationJobBatchPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "startSimulationJobBatch";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartSimulationJobBatchResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>
		/// SyncDeploymentJob syncDeploymentJob
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SyncDeploymentJobResponse> SyncDeploymentJobAsync(SyncDeploymentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "syncDeploymentJob";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SyncDeploymentJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes the specified tags from the specified AWS RoboMaker resource.</p> <p>To remove a tag, specify the tag key. To change the tag value of an existing tag key, use <a href="https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html"> <code>TagResource</code> </a>. </p>
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are removing tags.
		/// Min length: 1
		/// Max length: 1224
		// </param>
		/// <param name="tagKeys">A map that contains tag keys and tag values that will be unattached from the resource.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a robot application.
		/// UpdateRobotApplication updateRobotApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateRobotApplicationResponse> UpdateRobotApplicationAsync(UpdateRobotApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "updateRobotApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateRobotApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a simulation application.
		/// UpdateSimulationApplication updateSimulationApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateSimulationApplicationResponse> UpdateSimulationApplicationAsync(UpdateSimulationApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "updateSimulationApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateSimulationApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a world template.
		/// UpdateWorldTemplate updateWorldTemplate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateWorldTemplateResponse> UpdateWorldTemplateAsync(UpdateWorldTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "updateWorldTemplate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateWorldTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class BatchDeleteWorldsPostBody
	{
		
		/// <summary>
		/// A list of Amazon Resource Names (arns) that correspond to worlds to delete.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worlds")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string[] Worlds { get; set; }
	}
	
	public class BatchDescribeSimulationJobPostBody
	{
		
		/// <summary>
		/// A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string[] Jobs { get; set; }
	}
	
	public class CancelDeploymentJobPostBody
	{
		
		/// <summary>
		/// The deployment job ARN to cancel.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class CancelSimulationJobPostBody
	{
		
		/// <summary>
		/// The simulation job ARN to cancel.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class CancelSimulationJobBatchPostBody
	{
		
		/// <summary>
		/// The id of the batch to cancel.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Batch { get; set; }
	}
	
	public class CancelWorldExportJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world export job to cancel.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class CancelWorldGenerationJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world generator job to cancel.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class CreateDeploymentJobPostBody
	{
		
		/// <summary>
		/// Information about a deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentConfig")]
		public CreateDeploymentJobPostBodyDeploymentConfig DeploymentConfig { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet to deploy.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Fleet { get; set; }
		
		/// <summary>
		/// The deployment application configuration.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentApplicationConfigs")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public DeploymentApplicationConfig[] DeploymentApplicationConfigs { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the deployment job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateDeploymentJobPostBodyDeploymentConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="concurrentDeploymentPercentage")]
		public System.Nullable<System.Int32> ConcurrentDeploymentPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureThresholdPercentage")]
		public System.Nullable<System.Int32> FailureThresholdPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="robotDeploymentTimeoutInSeconds")]
		public System.Nullable<System.Int32> RobotDeploymentTimeoutInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="downloadConditionFile")]
		public S3Object DownloadConditionFile { get; set; }
	}
	
	public class CreateFleetPostBody
	{
		
		/// <summary>
		/// The name of the fleet.
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the fleet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateRobotPostBody
	{
		
		/// <summary>
		/// The name for the robot.
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The target architecture of the robot.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public Architecture Architecture { get; set; }
		
		/// <summary>
		/// The Greengrass group id.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="greengrassGroupId")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string GreengrassGroupId { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the robot.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateRobotApplicationPostBody
	{
		
		/// <summary>
		/// The name of the robot application.
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The sources of the robot application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public CreateRobotApplicationPostBodyRobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the robot application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The object that contains the Docker image URI for either your robot or simulation applications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public CreateRobotApplicationPostBodyEnvironment Environment { get; set; }
	}
	
	public class CreateRobotApplicationPostBodyRobotSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RobotSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public RobotSoftwareSuiteVersionType Version { get; set; }
	}
	
	public class CreateRobotApplicationPostBodyEnvironment
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CreateRobotApplicationVersionPostBody
	{
		
		/// <summary>
		/// The application information for the robot application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.
		/// Min length: 1
		/// Max length: 40
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-]*")]
		public string CurrentRevisionId { get; set; }
		
		/// <summary>
		/// The Amazon S3 identifier for the zip file bundle that you use for your robot application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="s3Etags")]
		public string[] S3Etags { get; set; }
		
		/// <summary>
		/// A SHA256 identifier for the Docker image that you use for your robot application.
		/// Min length: 0
		/// Max length: 72
		/// Pattern: [Ss][Hh][Aa]256:[0-9a-fA-F]{64}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(72)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[Ss][Hh][Aa]256:[0-9a-fA-F]{64}")]
		public string ImageDigest { get; set; }
	}
	
	public class CreateSimulationApplicationPostBody
	{
		
		/// <summary>
		/// The name of the simulation application.
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: [a-zA-Z0-9_\-]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The sources of the simulation application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public CreateSimulationApplicationPostBodySimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public CreateSimulationApplicationPostBodyRobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public CreateSimulationApplicationPostBodyRenderingEngine RenderingEngine { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the simulation application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The object that contains the Docker image URI for either your robot or simulation applications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public CreateSimulationApplicationPostBodyEnvironment Environment { get; set; }
	}
	
	public class CreateSimulationApplicationPostBodySimulationSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SimulationSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class CreateSimulationApplicationPostBodyRobotSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RobotSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public RobotSoftwareSuiteVersionType Version { get; set; }
	}
	
	public class CreateSimulationApplicationPostBodyRenderingEngine
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RenderingEngineType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class CreateSimulationApplicationPostBodyEnvironment
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CreateSimulationApplicationVersionPostBody
	{
		
		/// <summary>
		/// The application information for the simulation application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.
		/// Min length: 1
		/// Max length: 40
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-]*")]
		public string CurrentRevisionId { get; set; }
		
		/// <summary>
		/// The Amazon S3 eTag identifier for the zip file bundle that you use to create the simulation application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="s3Etags")]
		public string[] S3Etags { get; set; }
		
		/// <summary>
		/// The SHA256 digest used to identify the Docker image URI used to created the simulation application.
		/// Min length: 0
		/// Max length: 72
		/// Pattern: [Ss][Hh][Aa]256:[0-9a-fA-F]{64}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(72)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[Ss][Hh][Aa]256:[0-9a-fA-F]{64}")]
		public string ImageDigest { get; set; }
	}
	
	public class CreateSimulationJobPostBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The output location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public CreateSimulationJobPostBodyOutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The logging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loggingConfig")]
		public CreateSimulationJobPostBodyLoggingConfig LoggingConfig { get; set; }
		
		/// <summary>
		/// The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxJobDurationInSeconds")]
		public int MaxJobDurationInSeconds { get; set; }
		
		/// <summary>
		/// The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. 
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws:iam::\w+:role/.*")]
		public string IamRole { get; set; }
		
		/// <summary>
		/// <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Leaves the instance running for its maximum timeout duration after a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureBehavior")]
		public FailureBehavior FailureBehavior { get; set; }
		
		/// <summary>
		/// The robot application to use in the simulation job.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="robotApplications")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public RobotApplicationConfig[] RobotApplications { get; set; }
		
		/// <summary>
		/// The simulation application to use in the simulation job.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="simulationApplications")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public SimulationApplicationConfig[] SimulationApplications { get; set; }
		
		/// <summary>
		/// <p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>
		/// Minimum items: 1
		/// Maximum items: 6
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSources")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(6)]
		public DataSourceConfig[] DataSources { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcConfig")]
		public CreateSimulationJobPostBodyVpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// Compute information for the simulation job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compute")]
		public CreateSimulationJobPostBodyCompute Compute { get; set; }
	}
	
	public class CreateSimulationJobPostBodyOutputLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Prefix")]
		public string S3Prefix { get; set; }
	}
	
	public class CreateSimulationJobPostBodyLoggingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="recordAllRosTopics")]
		public System.Nullable<System.Boolean> RecordAllRosTopics { get; set; }
	}
	
	public class CreateSimulationJobPostBodyVpcConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroups")]
		public string[] SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assignPublicIp")]
		public System.Nullable<System.Boolean> AssignPublicIp { get; set; }
	}
	
	public class CreateSimulationJobPostBodyCompute
	{
		
		[System.Runtime.Serialization.DataMember(Name="simulationUnitLimit")]
		public System.Nullable<System.Int32> SimulationUnitLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="computeType")]
		public ComputeType ComputeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gpuUnitLimit")]
		public System.Nullable<System.Int32> GpuUnitLimit { get; set; }
	}
	
	public class CreateWorldExportJobPostBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// A list of Amazon Resource Names (arns) that correspond to worlds to export.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worlds")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string[] Worlds { get; set; }
		
		/// <summary>
		/// The output location.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputLocation")]
		public CreateWorldExportJobPostBodyOutputLocation OutputLocation { get; set; }
		
		/// <summary>
		/// The IAM role that the world export process uses to access the Amazon S3 bucket and put the export.
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: arn:aws:iam::\w+:role/.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iamRole")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws:iam::\w+:role/.*")]
		public string IamRole { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the world export job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateWorldExportJobPostBodyOutputLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Prefix")]
		public string S3Prefix { get; set; }
	}
	
	public class CreateWorldGenerationJobPostBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world template describing the worlds you want to create.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Template { get; set; }
		
		/// <summary>
		/// <p>The number of worlds that will be created. You can configure the number of unique floorplans and the number of unique interiors for each floor plan. For example, if you want 1 world with 20 unique interiors, you set <code>floorplanCount = 1</code> and <code>interiorCountPerFloorplan = 20</code>. This will result in 20 worlds (<code>floorplanCount</code> * <code>interiorCountPerFloorplan)</code>. </p> <p>If you set <code>floorplanCount = 4</code> and <code>interiorCountPerFloorplan = 5</code>, there will be 20 worlds with 5 unique floor plans. </p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="worldCount")]
		public CreateWorldGenerationJobPostBodyWorldCount WorldCount { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the world generator job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the generated worlds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="worldTags")]
		public System.Collections.Generic.Dictionary<string, string> WorldTags { get; set; }
	}
	
	public class CreateWorldGenerationJobPostBodyWorldCount
	{
		
		[System.Runtime.Serialization.DataMember(Name="floorplanCount")]
		public System.Nullable<System.Int32> FloorplanCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="interiorCountPerFloorplan")]
		public System.Nullable<System.Int32> InteriorCountPerFloorplan { get; set; }
	}
	
	public class CreateWorldTemplatePostBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The name of the world template.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The world template body.
		/// Min length: 1
		/// Max length: 262144
		/// Pattern: [\S\s]+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateBody")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(262144)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\S\s]+")]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Information about a template location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateLocation")]
		public CreateWorldTemplatePostBodyTemplateLocation TemplateLocation { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the world template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateWorldTemplatePostBodyTemplateLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Key")]
		public string S3Key { get; set; }
	}
	
	public class DeleteFleetPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Fleet { get; set; }
	}
	
	public class DeleteRobotPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Robot { get; set; }
	}
	
	public class DeleteRobotApplicationPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the the robot application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the robot application to delete.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(\$LATEST)|[0-9]*")]
		public string ApplicationVersion { get; set; }
	}
	
	public class DeleteSimulationApplicationPostBody
	{
		
		/// <summary>
		/// The application information for the simulation application to delete.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the simulation application to delete.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(\$LATEST)|[0-9]*")]
		public string ApplicationVersion { get; set; }
	}
	
	public class DeleteWorldTemplatePostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world template you want to delete.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Template { get; set; }
	}
	
	public class DeregisterRobotPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Fleet { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Robot { get; set; }
	}
	
	public class DescribeDeploymentJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the deployment job.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class DescribeFleetPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Fleet { get; set; }
	}
	
	public class DescribeRobotPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot to be described.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Robot { get; set; }
	}
	
	public class DescribeRobotApplicationPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the robot application to describe.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(\$LATEST)|[0-9]*")]
		public string ApplicationVersion { get; set; }
	}
	
	public class DescribeSimulationApplicationPostBody
	{
		
		/// <summary>
		/// The application information for the simulation application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The version of the simulation application to describe.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: (\$LATEST)|[0-9]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationVersion")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(\$LATEST)|[0-9]*")]
		public string ApplicationVersion { get; set; }
	}
	
	public class DescribeSimulationJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the simulation job to be described.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class DescribeSimulationJobBatchPostBody
	{
		
		/// <summary>
		/// The id of the batch to describe.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Batch { get; set; }
	}
	
	public class DescribeWorldPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world you want to describe.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="world")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string World { get; set; }
	}
	
	public class DescribeWorldExportJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world export job to describe.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class DescribeWorldGenerationJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world generation job to describe.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class DescribeWorldTemplatePostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world template you want to describe.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Template { get; set; }
	}
	
	public class GetWorldTemplateBodyPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world template.
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Template { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world generator job.
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generationJob")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string GenerationJob { get; set; }
	}
	
	public class ListDeploymentJobsPostBody
	{
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListDeploymentJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 200 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class ListFleetsPostBody
	{
		
		/// <summary>
		/// <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListFleets</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListFleets</code> returns up to 200 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListRobotApplicationsPostBody
	{
		
		/// <summary>
		/// The version qualifier of the robot application.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: ALL
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionQualifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"ALL")]
		public string VersionQualifier { get; set; }
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListRobotApplications</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListRobotsPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListRobots</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListRobots</code> returns up to 200 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListSimulationApplicationsPostBody
	{
		
		/// <summary>
		/// The version qualifier of the simulation application.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: ALL
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionQualifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"ALL")]
		public string VersionQualifier { get; set; }
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationApplications</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListSimulationJobBatchesPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobBatches</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListSimulationJobBatches</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobBatches</code> request with the returned <code>nextToken</code> value. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Optional filters to limit results.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListSimulationJobsPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 1000 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the resource.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class ListWorldExportJobsPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldExportJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListWorldExportJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorldExportJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorldExportJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Optional filters to limit results. You can use <code>generationJobId</code> and <code>templateId</code>.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListWorldGenerationJobsPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGenerationJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListWorldGeneratorJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorldGeneratorJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorldGeneratorJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Optional filters to limit results. You can use <code>status</code> and <code>templateId</code>.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class ListWorldTemplatesPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldTemplates</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListWorldTemplates</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorldTemplates</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorldTemplates</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class ListWorldsPostBody
	{
		
		/// <summary>
		/// If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorlds</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. 
		/// Min length: 1
		/// Max length: 2048
		/// Pattern: [a-zA-Z0-9_.\-\/+=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-\/+=]*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// When this parameter is used, <code>ListWorlds</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorlds</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorlds</code> returns up to 100 results and a <code>nextToken</code> value if applicable. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Optional filters to limit results. You can use <code>status</code>.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Filter[] Filters { get; set; }
	}
	
	public class RegisterRobotPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the fleet.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Fleet { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the robot.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robot")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Robot { get; set; }
	}
	
	public class RestartSimulationJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the simulation job.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="job")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Job { get; set; }
	}
	
	public class StartSimulationJobBatchPostBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Information about the batch policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batchPolicy")]
		public StartSimulationJobBatchPostBodyBatchPolicy BatchPolicy { get; set; }
		
		/// <summary>
		/// A list of simulation job requests to create in the batch.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createSimulationJobRequests")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public SimulationJobRequest[] CreateSimulationJobRequests { get; set; }
		
		/// <summary>
		/// A map that contains tag keys and tag values that are attached to the deployment job batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class StartSimulationJobBatchPostBodyBatchPolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="timeoutInSeconds")]
		public System.Nullable<System.Int32> TimeoutInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxConcurrency")]
		public System.Nullable<System.Int32> MaxConcurrency { get; set; }
	}
	
	public class SyncDeploymentJobPostBody
	{
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// Pattern: [a-zA-Z0-9_\-=]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\-=]*")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The target fleet for the synchronization.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fleet")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Fleet { get; set; }
	}
	
	public class UpdateRobotApplicationPostBody
	{
		
		/// <summary>
		/// The application information for the robot application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The sources of the robot application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public UpdateRobotApplicationPostBodyRobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// The revision id for the robot application.
		/// Min length: 1
		/// Max length: 40
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-]*")]
		public string CurrentRevisionId { get; set; }
		
		/// <summary>
		/// The object that contains the Docker image URI for either your robot or simulation applications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public UpdateRobotApplicationPostBodyEnvironment Environment { get; set; }
	}
	
	public class UpdateRobotApplicationPostBodyRobotSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RobotSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public RobotSoftwareSuiteVersionType Version { get; set; }
	}
	
	public class UpdateRobotApplicationPostBodyEnvironment
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class UpdateSimulationApplicationPostBody
	{
		
		/// <summary>
		/// The application information for the simulation application.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Application { get; set; }
		
		/// <summary>
		/// The sources of the simulation application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public SourceConfig[] Sources { get; set; }
		
		/// <summary>
		/// Information about a simulation software suite.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="simulationSoftwareSuite")]
		public UpdateSimulationApplicationPostBodySimulationSoftwareSuite SimulationSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a robot software suite (ROS distribution).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robotSoftwareSuite")]
		public UpdateSimulationApplicationPostBodyRobotSoftwareSuite RobotSoftwareSuite { get; set; }
		
		/// <summary>
		/// Information about a rendering engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderingEngine")]
		public UpdateSimulationApplicationPostBodyRenderingEngine RenderingEngine { get; set; }
		
		/// <summary>
		/// The revision id for the robot application.
		/// Min length: 1
		/// Max length: 40
		/// Pattern: [a-zA-Z0-9_.\-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentRevisionId")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(40)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_.\-]*")]
		public string CurrentRevisionId { get; set; }
		
		/// <summary>
		/// The object that contains the Docker image URI for either your robot or simulation applications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public UpdateSimulationApplicationPostBodyEnvironment Environment { get; set; }
	}
	
	public class UpdateSimulationApplicationPostBodySimulationSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SimulationSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class UpdateSimulationApplicationPostBodyRobotSoftwareSuite
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RobotSoftwareSuiteType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public RobotSoftwareSuiteVersionType Version { get; set; }
	}
	
	public class UpdateSimulationApplicationPostBodyRenderingEngine
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public RenderingEngineType Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class UpdateSimulationApplicationPostBodyEnvironment
	{
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class UpdateWorldTemplatePostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (arn) of the world template to update.
		/// Required
		/// Min length: 1
		/// Max length: 1224
		/// Pattern: arn:.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1224)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:.*")]
		public string Template { get; set; }
		
		/// <summary>
		/// The name of the template.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The world template body.
		/// Min length: 1
		/// Max length: 262144
		/// Pattern: [\S\s]+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateBody")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(262144)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\S\s]+")]
		public string TemplateBody { get; set; }
		
		/// <summary>
		/// Information about a template location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateLocation")]
		public UpdateWorldTemplatePostBodyTemplateLocation TemplateLocation { get; set; }
	}
	
	public class UpdateWorldTemplatePostBodyTemplateLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Bucket")]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Key")]
		public string S3Key { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

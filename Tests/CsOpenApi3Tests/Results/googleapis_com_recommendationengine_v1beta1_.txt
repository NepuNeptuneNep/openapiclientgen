//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleApiHttpBody
	{
		
		/// <summary>
		/// The HTTP Content-Type header value specifying the content type of the body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// The HTTP request/response body as raw binary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Application specific response metadata. Must be set in the first response for streaming APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extensions")]
		public string[] Extensions { get; set; }
	}
	
	/// <summary>
	/// Metadata for TriggerCatalogRejoin method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1alphaRejoinCatalogMetadata
	{
	}
	
	/// <summary>
	/// Response message for TriggerCatalogRejoin method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1alphaRejoinCatalogResponse
	{
		
		/// <summary>
		/// Number of user events that were joined with latest catalog items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rejoinedUserEventsCount")]
		public string RejoinedUserEventsCount { get; set; }
	}
	
	/// <summary>
	/// Metadata associated with a tune operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1alphaTuningMetadata
	{
		
		/// <summary>
		/// The resource name of the recommendation model that this tune applies to. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/eventStores/{event_store_id}/recommendationModels/{recommendation_model_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendationModel")]
		public string RecommendationModel { get; set; }
	}
	
	/// <summary>
	/// Response associated with a tune operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1alphaTuningResponse
	{
	}
	
	/// <summary>
	/// BigQuery source import data from.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1BigQuerySource
	{
		
		/// <summary>
		/// Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: "catalog_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: "catalog_merchant_center" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user event imports: 1: "user_events_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. "user_events_ga360" using https://support.google.com/analytics/answer/3437719?hl=en
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSchema")]
		public string DataSchema { get; set; }
		
		/// <summary>
		/// Required. The BigQuery data set to copy the data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Optional. Intermediate Cloud Storage directory used for the import. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsStagingDir")]
		public string GcsStagingDir { get; set; }
		
		/// <summary>
		/// Optional. The project id (can be project # or id) that the BigQuery source is in. If not specified, inherits the project id from the parent request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Required. The BigQuery table to copy the data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableId")]
		public string TableId { get; set; }
	}
	
	/// <summary>
	/// The catalog configuration. Next ID: 5.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1Catalog
	{
		
		/// <summary>
		/// Configures the catalog level that users send events to, and the level at which predictions are made.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catalogItemLevelConfig")]
		public GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig CatalogItemLevelConfig { get; set; }
		
		/// <summary>
		/// Required. The ID of the default event store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultEventStoreId")]
		public string DefaultEventStoreId { get; set; }
		
		/// <summary>
		/// Required. The catalog display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The fully qualified resource name of the catalog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Configures the catalog level that users send events to, and the level at which predictions are made.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig
	{
		
		/// <summary>
		/// Optional. Level of the catalog at which events are uploaded. See https://cloud.google.com/recommendations-ai/docs/catalog#catalog-levels for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventItemLevel")]
		public System.Nullable<GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfigEventItemLevel> EventItemLevel { get; set; }
		
		/// <summary>
		/// Optional. Level of the catalog at which predictions are made. See https://cloud.google.com/recommendations-ai/docs/catalog#catalog-levels for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictItemLevel")]
		public GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfigEventItemLevel PredictItemLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfigEventItemLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CATALOG_ITEM_LEVEL_UNSPECIFIED")]
		CATALOG_ITEM_LEVEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VARIANT")]
		VARIANT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MASTER")]
		MASTER = 2,
	}
	
	/// <summary>
	/// The inline source for the input config for ImportCatalogItems method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1CatalogInlineSource
	{
		
		/// <summary>
		/// Optional. A list of catalog items to update/create. Recommended max of 10k items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catalogItems")]
		public GoogleCloudRecommendationengineV1beta1CatalogItem[] CatalogItems { get; set; }
	}
	
	/// <summary>
	/// CatalogItem captures all metadata information of items to be recommended.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1CatalogItem
	{
		
		/// <summary>
		/// Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoryHierarchies")]
		public GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy[] CategoryHierarchies { get; set; }
		
		/// <summary>
		/// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemAttributes")]
		public GoogleCloudRecommendationengineV1beta1FeatureMap ItemAttributes { get; set; }
		
		/// <summary>
		/// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemGroupId")]
		public string ItemGroupId { get; set; }
		
		/// <summary>
		/// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// ProductCatalogItem captures item metadata specific to retail products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productMetadata")]
		public GoogleCloudRecommendationengineV1beta1ProductCatalogItem ProductMetadata { get; set; }
		
		/// <summary>
		/// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Category represents catalog item category hierarchy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy
	{
		
		/// <summary>
		/// Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB. Note that the order in the list denotes the specificity (from least to most specific).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public string[] Categories { get; set; }
	}
	
	/// <summary>
	/// FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1FeatureMap
	{
		
		/// <summary>
		/// Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ "colors": {"value": ["yellow", "green"]}, "sizes": {"value":["S", "M"]}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoricalFeatures")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudRecommendationengineV1beta1FeatureMapStringList> CategoricalFeatures { get; set; }
		
		/// <summary>
		/// Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ "lengths_cm": {"value":[2.3, 15.4]}, "heights_cm": {"value":[8.1, 6.4]} }`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericalFeatures")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudRecommendationengineV1beta1FeatureMapFloatList> NumericalFeatures { get; set; }
	}
	
	/// <summary>
	/// A list of string features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1FeatureMapStringList
	{
		
		/// <summary>
		/// String feature value with a length limit of 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string[] Value { get; set; }
	}
	
	/// <summary>
	/// A list of float features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1FeatureMapFloatList
	{
		
		/// <summary>
		/// Float feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public double[] Value { get; set; }
	}
	
	/// <summary>
	/// ProductCatalogItem captures item metadata specific to retail products.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ProductCatalogItem
	{
		
		/// <summary>
		/// Optional. The available quantity of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableQuantity")]
		public string AvailableQuantity { get; set; }
		
		/// <summary>
		/// Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalProductUri")]
		public string CanonicalProductUri { get; set; }
		
		/// <summary>
		/// Optional. A map to pass the costs associated with the product. For example: {"manufacturing": 45.5} The profit of selling this item is computed like so: * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If 'priceRange' is provided, profit = minPrice - sum(costs)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costs")]
		public System.Collections.Generic.Dictionary<string, float> Costs { get; set; }
		
		/// <summary>
		/// Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Exact product price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactPrice")]
		public GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice ExactPrice { get; set; }
		
		/// <summary>
		/// Optional. Product images for the catalog item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public GoogleCloudRecommendationengineV1beta1Image[] Images { get; set; }
		
		/// <summary>
		/// Product price range when there are a range of prices for different variations of the same product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceRange")]
		public GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange PriceRange { get; set; }
		
		/// <summary>
		/// Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stockState")]
		public System.Nullable<GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState> StockState { get; set; }
	}
	
	/// <summary>
	/// Exact product price.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice
	{
		
		/// <summary>
		/// Optional. Display price of the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayPrice")]
		public System.Nullable<System.Single> DisplayPrice { get; set; }
		
		/// <summary>
		/// Optional. Price of the product without any discount. If zero, by default set to be the 'displayPrice'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalPrice")]
		public System.Nullable<System.Single> OriginalPrice { get; set; }
	}
	
	/// <summary>
	/// Catalog item thumbnail/detail image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1Image
	{
		
		/// <summary>
		/// Optional. Height of the image in number of pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Required. URL of the image with a length limit of 5 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// Optional. Width of the image in number of pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	/// <summary>
	/// Product price range when there are a range of prices for different variations of the same product.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange
	{
		
		/// <summary>
		/// Required. The maximum product price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max")]
		public System.Nullable<System.Single> Max { get; set; }
		
		/// <summary>
		/// Required. The minimum product price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="min")]
		public System.Nullable<System.Single> Min { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STOCK_STATE_UNSPECIFIED")]
		STOCK_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IN_STOCK")]
		IN_STOCK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUT_OF_STOCK")]
		OUT_OF_STOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PREORDER")]
		PREORDER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BACKORDER")]
		BACKORDER = 4,
	}
	
	/// <summary>
	/// Request message for the `CreatePredictionApiKeyRegistration` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest
	{
		
		/// <summary>
		/// Registered Api Key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionApiKeyRegistration")]
		public GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration PredictionApiKeyRegistration { get; set; }
	}
	
	/// <summary>
	/// Registered Api Key.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration
	{
		
		/// <summary>
		/// The API key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiKey")]
		public string ApiKey { get; set; }
	}
	
	/// <summary>
	/// User event details shared by all recommendation types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1EventDetail
	{
		
		/// <summary>
		/// FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventAttributes")]
		public GoogleCloudRecommendationengineV1beta1FeatureMap EventAttributes { get; set; }
		
		/// <summary>
		/// Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="experimentIds")]
		public string[] ExperimentIds { get; set; }
		
		/// <summary>
		/// Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. This `pageViewId` will be automatically generated if using the JavaScript pixel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageViewId")]
		public string PageViewId { get; set; }
		
		/// <summary>
		/// Optional. Recommendation token included in the recommendation prediction response. This field enables accurate attribution of recommendation model performance. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the `PredictResponse.recommendationToken` property as a url parameter to product K's page. When recording events on product K's page, log the PredictResponse.recommendation_token to this field. Optional, but highly encouraged for user events that are the result of a recommendation prediction query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendationToken")]
		public string RecommendationToken { get; set; }
		
		/// <summary>
		/// Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referrerUri")]
		public string ReferrerUri { get; set; }
		
		/// <summary>
		/// Optional. Complete url (window.location.href) of the user's current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Google Cloud Storage location for input content. format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1GcsSource
	{
		
		/// <summary>
		/// Required. Google Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files, and each file can be up to 2 GB. See [Importing catalog information](/recommendations-ai/docs/upload-catalog) for the expected file format and setup instructions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputUris")]
		public string[] InputUris { get; set; }
		
		/// <summary>
		/// Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: "catalog_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: "catalog_merchant_center" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user events imports: 1: "user_events_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. "user_events_ga360" using https://support.google.com/analytics/answer/3437719?hl=en
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsonSchema")]
		public string JsonSchema { get; set; }
	}
	
	/// <summary>
	/// Request message for Import methods.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorsConfig")]
		public GoogleCloudRecommendationengineV1beta1ImportErrorsConfig ErrorsConfig { get; set; }
		
		/// <summary>
		/// The input config source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudRecommendationengineV1beta1InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency and used for request deduplication. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Optional. Indicates which fields in the provided imported 'items' to update. If not set, will by default update all fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Configuration of destination for Import related errors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ImportErrorsConfig
	{
		
		/// <summary>
		/// Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Import errors will be written to a file in this bucket, one per line, as a JSON-encoded `google.rpc.Status` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPrefix")]
		public string GcsPrefix { get; set; }
	}
	
	/// <summary>
	/// The input config source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1InputConfig
	{
		
		/// <summary>
		/// BigQuery source import data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQuerySource")]
		public GoogleCloudRecommendationengineV1beta1BigQuerySource BigQuerySource { get; set; }
		
		/// <summary>
		/// The inline source for the input config for ImportCatalogItems method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catalogInlineSource")]
		public GoogleCloudRecommendationengineV1beta1CatalogInlineSource CatalogInlineSource { get; set; }
		
		/// <summary>
		/// Google Cloud Storage location for input content. format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudRecommendationengineV1beta1GcsSource GcsSource { get; set; }
		
		/// <summary>
		/// The inline source for the input config for ImportUserEvents method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEventInlineSource")]
		public GoogleCloudRecommendationengineV1beta1UserEventInlineSource UserEventInlineSource { get; set; }
	}
	
	/// <summary>
	/// The inline source for the input config for ImportUserEvents method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1UserEventInlineSource
	{
		
		/// <summary>
		/// Optional. A list of user events to import. Recommended max of 10k items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEvents")]
		public GoogleCloudRecommendationengineV1beta1UserEvent[] UserEvents { get; set; }
	}
	
	/// <summary>
	/// UserEvent captures all metadata information recommendation engine needs to know about how end users interact with customers' website.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1UserEvent
	{
		
		/// <summary>
		/// User event details shared by all recommendation types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventDetail")]
		public GoogleCloudRecommendationengineV1beta1EventDetail EventDetail { get; set; }
		
		/// <summary>
		/// Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventSource")]
		public System.Nullable<GoogleCloudRecommendationengineV1beta1UserEventEventSource> EventSource { get; set; }
		
		/// <summary>
		/// Optional. Only required for ImportUserEvents method. Timestamp of user event created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// Required. User event type. Allowed values are: * `add-to-cart` Products being added to cart. * `add-to-list` Items being added to a list (shopping list, favorites etc). * `category-page-view` Special pages such as sale or promotion pages viewed. * `checkout-start` User starting a checkout process. * `detail-page-view` Products detail page viewed. * `home-page-view` Homepage viewed. * `page-visit` Generic page visits not included in the event types above. * `purchase-complete` User finishing a purchase. * `refund` Purchased items being refunded or returned. * `remove-from-cart` Products being removed from cart. * `remove-from-list` Items being removed from a list. * `search` Product search. * `shopping-cart-page-view` User viewing a shopping cart. * `impression` List of items displayed. Used by Google Tag Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public string EventType { get; set; }
		
		/// <summary>
		/// ProductEventDetail captures user event information specific to retail products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productEventDetail")]
		public GoogleCloudRecommendationengineV1beta1ProductEventDetail ProductEventDetail { get; set; }
		
		/// <summary>
		/// Information of end users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userInfo")]
		public GoogleCloudRecommendationengineV1beta1UserInfo UserInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudRecommendationengineV1beta1UserEventEventSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EVENT_SOURCE_UNSPECIFIED")]
		EVENT_SOURCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUTOML")]
		AUTOML = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ECOMMERCE")]
		ECOMMERCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BATCH_UPLOAD")]
		BATCH_UPLOAD = 3,
	}
	
	/// <summary>
	/// ProductEventDetail captures user event information specific to retail products.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ProductEventDetail
	{
		
		/// <summary>
		/// Optional. The id or name of the associated shopping cart. This id is used to associate multiple items added or present in the cart before purchase. This can only be set for `add-to-cart`, `remove-from-cart`, `checkout-start`, `purchase-complete`, or `shopping-cart-page-view` events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cartId")]
		public string CartId { get; set; }
		
		/// <summary>
		/// Required for `add-to-list` and `remove-from-list` events. The id or name of the list that the item is being added to or removed from. Other event types should not set this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listId")]
		public string ListId { get; set; }
		
		/// <summary>
		/// Required for `category-page-view` events. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. The categories associated with a category page. Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: categories : ["Sales", "2017 Black Friday Deals"].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageCategories")]
		public GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy[] PageCategories { get; set; }
		
		/// <summary>
		/// The main product details related to the event. This field is required for the following event types: * `add-to-cart` * `add-to-list` * `checkout-start` * `detail-page-view` * `purchase-complete` * `refund` * `remove-from-cart` * `remove-from-list` This field is optional for the following event types: * `page-visit` * `shopping-cart-page-view` - note that 'product_details' should be set for this unless the shopping cart is empty. * `search` (highly encouraged) In a `search` event, this field represents the products returned to the end user on the current page (the end user may have not finished broswing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new SEARCH event with different product_details is desired. The end user may have not finished broswing the whole page yet. This field is not allowed for the following event types: * `category-page-view` * `home-page-view`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productDetails")]
		public GoogleCloudRecommendationengineV1beta1ProductDetail[] ProductDetails { get; set; }
		
		/// <summary>
		/// A transaction represents the entire purchase transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchaseTransaction")]
		public GoogleCloudRecommendationengineV1beta1PurchaseTransaction PurchaseTransaction { get; set; }
		
		/// <summary>
		/// At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. The user's search query as UTF-8 encoded text with a length limit of 5 KiB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchQuery")]
		public string SearchQuery { get; set; }
	}
	
	/// <summary>
	/// Detailed product information associated with a user event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ProductDetail
	{
		
		/// <summary>
		/// Optional. Quantity of the products in stock when a user event happens. Optional. If provided, this overrides the available quantity in Catalog for this event. and can only be set if `stock_status` is set to `IN_STOCK`. Note that if an item is out of stock, you must set the `stock_state` field to be `OUT_OF_STOCK`. Leaving this field unspecified / as zero is not sufficient to mark the item out of stock.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableQuantity")]
		public System.Nullable<System.Int32> AvailableQuantity { get; set; }
		
		/// <summary>
		/// Optional. Currency code for price/costs. Use three-character ISO-4217 code. Required only if originalPrice or displayPrice is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Optional. Display price of the product (e.g. discounted price). If provided, this will override the display price in Catalog for this product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayPrice")]
		public System.Nullable<System.Single> DisplayPrice { get; set; }
		
		/// <summary>
		/// Required. Catalog item ID. UTF-8 encoded string with a length limit of 128 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemAttributes")]
		public GoogleCloudRecommendationengineV1beta1FeatureMap ItemAttributes { get; set; }
		
		/// <summary>
		/// Optional. Original price of the product. If provided, this will override the original price in Catalog for this product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalPrice")]
		public System.Nullable<System.Single> OriginalPrice { get; set; }
		
		/// <summary>
		/// Optional. Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for `add-to-cart` event. Required for `add-to-cart`, `add-to-list`, `remove-from-cart`, `checkout-start`, `purchase-complete`, `refund` event types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// Optional. Item stock state. If provided, this overrides the stock state in Catalog for items in this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stockState")]
		public GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockState StockState { get; set; }
	}
	
	/// <summary>
	/// A transaction represents the entire purchase transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PurchaseTransaction
	{
		
		/// <summary>
		/// Optional. All the costs associated with the product. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs. Total product cost such that profit = revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax - shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for one of the items, CatalogItem.cost based profit *cannot* be calculated for this Transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costs")]
		public System.Collections.Generic.Dictionary<string, float> Costs { get; set; }
		
		/// <summary>
		/// Required. Currency code. Use three-character ISO-4217 code. This field is not required if the event type is `refund`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Optional. The transaction ID with a length limit of 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required. Total revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations. This field is not required if the event type is `refund`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revenue")]
		public System.Nullable<System.Single> Revenue { get; set; }
		
		/// <summary>
		/// Optional. All the taxes associated with the transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxes")]
		public System.Collections.Generic.Dictionary<string, float> Taxes { get; set; }
	}
	
	/// <summary>
	/// Information of end users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1UserInfo
	{
		
		/// <summary>
		/// Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="directUserRequest")]
		public System.Nullable<System.Boolean> DirectUserRequest { get; set; }
		
		/// <summary>
		/// Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if `direct_user_request` is set. Used to extract location information for personalization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddress")]
		public string IpAddress { get; set; }
		
		/// <summary>
		/// Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB. This should *not* be set when using the JavaScript pixel or if `directUserRequest` is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
		
		/// <summary>
		/// Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users. Don't set for anonymous users. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
		
		/// <summary>
		/// Required. A unique identifier for tracking visitors with a length limit of 128 bytes. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. Maximum length 128 bytes. Cannot be empty. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visitorId")]
		public string VisitorId { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportCatalogItemsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ImportCatalogItemsResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorsConfig")]
		public GoogleCloudRecommendationengineV1beta1ImportErrorsConfig ErrorsConfig { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the Import operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ImportMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Name of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationName")]
		public string OperationName { get; set; }
		
		/// <summary>
		/// Id of the request / operation. This is parroting back the requestId that was passed in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for the ImportUserEvents request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorsConfig")]
		public GoogleCloudRecommendationengineV1beta1ImportErrorsConfig ErrorsConfig { get; set; }
		
		/// <summary>
		/// The input config source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudRecommendationengineV1beta1InputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency for expensive long running operations. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response. Note that this field must not be set if the desired input config is catalog_inline_source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ImportUserEventsResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorsConfig")]
		public GoogleCloudRecommendationengineV1beta1ImportErrorsConfig ErrorsConfig { get; set; }
		
		/// <summary>
		/// A summary of import result. The UserEventImportSummary summarizes the import status for user events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importSummary")]
		public GoogleCloudRecommendationengineV1beta1UserEventImportSummary ImportSummary { get; set; }
	}
	
	/// <summary>
	/// A summary of import result. The UserEventImportSummary summarizes the import status for user events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1UserEventImportSummary
	{
		
		/// <summary>
		/// Count of user events imported with complete existing catalog information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="joinedEventsCount")]
		public string JoinedEventsCount { get; set; }
		
		/// <summary>
		/// Count of user events imported, but with catalog information not found in the imported catalog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unjoinedEventsCount")]
		public string UnjoinedEventsCount { get; set; }
	}
	
	/// <summary>
	/// Response message for ListCatalogItems method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse
	{
		
		/// <summary>
		/// The catalog items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catalogItems")]
		public GoogleCloudRecommendationengineV1beta1CatalogItem[] CatalogItems { get; set; }
		
		/// <summary>
		/// If empty, the list is complete. If nonempty, the token to pass to the next request's ListCatalogItemRequest.page_token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListCatalogs method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ListCatalogsResponse
	{
		
		/// <summary>
		/// Output only. All the customer's catalogs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catalogs")]
		public GoogleCloudRecommendationengineV1beta1Catalog[] Catalogs { get; set; }
		
		/// <summary>
		/// Pagination token, if not returned indicates the last page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for the `ListPredictionApiKeyRegistrations`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse
	{
		
		/// <summary>
		/// If empty, the list is complete. If nonempty, pass the token to the next request's `ListPredictionApiKeysRegistrationsRequest.pageToken`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of registered API keys.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionApiKeyRegistrations")]
		public GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration[] PredictionApiKeyRegistrations { get; set; }
	}
	
	/// <summary>
	/// Response message for ListUserEvents method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1ListUserEventsResponse
	{
		
		/// <summary>
		/// If empty, the list is complete. If nonempty, the token to pass to the next request's ListUserEvents.page_token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The user events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEvents")]
		public GoogleCloudRecommendationengineV1beta1UserEvent[] UserEvents { get; set; }
	}
	
	/// <summary>
	/// Request message for Predict method. Full resource name of the format: `{name=projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/*}` The id of the recommendation engine placement. This id is used to identify the set of models that will be used to make the prediction. We currently support three placements with the following IDs by default: // * `shopping_cart`: Predicts items frequently bought together with one or more catalog items in the same shopping session. Commonly displayed after `add-to-cart` event, on product detail pages, or on the shopping cart page. * `home_page`: Predicts the next product that a user will most likely engage with or purchase based on the shopping or viewing history of the specified `userId` or `visitorId`. For example - Recommendations for you. * `product_detail`: Predicts the next product that a user will most likely engage with or purchase. The prediction is based on the shopping or viewing history of the specified `userId` or `visitorId` and its relevance to a specified `CatalogItem`. Typically used on product detail pages. For example - More items like this. * `recently_viewed_default`: Returns up to 75 items recently viewed by the specified `userId` or `visitorId`, most recent ones first. Returns nothing if neither of them has viewed any items yet. For example - Recently viewed. The full list of available placements can be seen at https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PredictRequest
	{
		
		/// <summary>
		/// Optional. Use dryRun mode for this prediction query. If set to true, a fake model will be used that returns arbitrary catalog items. Note that the dryRun mode should only be used for testing the API, or if the model is not ready.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dryRun")]
		public System.Nullable<System.Boolean> DryRun { get; set; }
		
		/// <summary>
		/// Optional. Filter for restricting prediction results. Accepts values for tags and the `filterOutOfStockItems` flag. * Tag expressions. Restricts predictions to items that match all of the specified tags. Boolean operators `OR` and `NOT` are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. `-"tagA"` is also supported and is equivalent to `NOT "tagA"`. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1 KiB. * filterOutOfStockItems. Restricts predictions to items that do not have a stockState value of OUT_OF_STOCK. Examples: * tag=("Red" OR "Blue") tag="New-Arrival" tag=(NOT "promotional") * filterOutOfStockItems tag=(-"promotional") * filterOutOfStockItems If your filter blocks all prediction results, nothing will be returned. If you want generic (unfiltered) popular items to be returned instead, set `strictFiltering` to false in `PredictRequest.params`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Optional. The labels for the predict request. * Label keys can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. * Non-zero label values can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. * No more than 64 labels can be associated with a given request. See https://goo.gl/xmQnxf for more information on and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Optional. Maximum number of results to return per page. Set this property to the number of prediction results required. If zero, the service will choose a reasonable default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Optional. The previous PredictResponse.next_page_token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Optional. Additional domain specific parameters for the predictions. Allowed values: * `returnCatalogItem`: Boolean. If set to true, the associated catalogItem object will be returned in the `PredictResponse.PredictionResult.itemMetadata` object in the method response. * `returnItemScore`: Boolean. If set to true, the prediction 'score' corresponding to each returned item will be set in the `metadata` field in the prediction response. The given 'score' indicates the probability of an item being clicked/purchased given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular items instead of empty if your filter blocks all prediction results. * `priceRerankLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking', 'high-price-reranking'}. This gives request level control and adjust prediction results based on product price. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity', 'auto-diversity'}. This gives request level control and adjust prediction results based on product category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="params")]
		public System.Collections.Generic.Dictionary<string, object> Params { get; set; }
		
		/// <summary>
		/// UserEvent captures all metadata information recommendation engine needs to know about how end users interact with customers' website.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEvent")]
		public GoogleCloudRecommendationengineV1beta1UserEvent UserEvent { get; set; }
	}
	
	/// <summary>
	/// Response message for predict method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PredictResponse
	{
		
		/// <summary>
		/// True if the dryRun property was set in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dryRun")]
		public System.Nullable<System.Boolean> DryRun { get; set; }
		
		/// <summary>
		/// IDs of items in the request that were missing from the catalog.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemsMissingInCatalog")]
		public string[] ItemsMissingInCatalog { get; set; }
		
		/// <summary>
		/// Additional domain specific prediction response metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// If empty, the list is complete. If nonempty, the token to pass to the next request's PredictRequest.page_token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A unique recommendation token. This should be included in the user event logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendationToken")]
		public string RecommendationToken { get; set; }
		
		/// <summary>
		/// A list of recommended items. The order represents the ranking (from the most relevant item to the least).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult[] Results { get; set; }
	}
	
	/// <summary>
	/// PredictionResult represents the recommendation prediction results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult
	{
		
		/// <summary>
		/// ID of the recommended catalog item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional item metadata / annotations. Possible values: * `catalogItem`: JSON representation of the catalogItem. Will be set if `returnCatalogItem` is set to true in `PredictRequest.params`. * `score`: Prediction score in double value. Will be set if `returnItemScore` is set to true in `PredictRequest.params`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemMetadata")]
		public System.Collections.Generic.Dictionary<string, object> ItemMetadata { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeUserEvents operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PurgeUserEventsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The ID of the request / operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationName")]
		public string OperationName { get; set; }
	}
	
	/// <summary>
	/// Request message for PurgeUserEvents method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest
	{
		
		/// <summary>
		/// Required. The filter string to specify the events to be deleted. Empty string filter is not allowed. The eligible fields for filtering are: * `eventType`: UserEvent.eventType field of type string. * `eventTime`: in ISO 8601 "zulu" format. * `visitorId`: field of type string. Specifying this will delete all events associated with a visitor. * `userId`: field of type string. Specifying this will delete all events associated with a user. Examples: * Deleting all events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` * Deleting specific eventType in time range: `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"` * Deleting all events for a specific visitor: `visitorId = "visitor1024"` The filtering fields are assumed to have an implicit AND.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Optional. The default value is false. Override this flag to true to actually perform the purge. If the field is not set to true, a sampling of events to be deleted will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	/// <summary>
	/// Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse
	{
		
		/// <summary>
		/// The total count of events purged as a result of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgedEventsCount")]
		public string PurgedEventsCount { get; set; }
		
		/// <summary>
		/// A sampling of events deleted (or will be deleted) depending on the `force` property in the request. Max of 500 items will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEventsSample")]
		public GoogleCloudRecommendationengineV1beta1UserEvent[] UserEventsSample { get; set; }
	}
	
	/// <summary>
	/// Metadata for RejoinUserEvents method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1RejoinUserEventsMetadata
	{
	}
	
	/// <summary>
	/// Request message for CatalogRejoin method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest
	{
		
		/// <summary>
		/// Required. The type of the catalog rejoin to define the scope and range of the user events to be rejoined with catalog items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEventRejoinScope")]
		public System.Nullable<GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequestUserEventRejoinScope> UserEventRejoinScope { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequestUserEventRejoinScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USER_EVENT_REJOIN_SCOPE_UNSPECIFIED")]
		USER_EVENT_REJOIN_SCOPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOINED_EVENTS")]
		JOINED_EVENTS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNJOINED_EVENTS")]
		UNJOINED_EVENTS = 2,
	}
	
	/// <summary>
	/// Response message for RejoinUserEvents method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudRecommendationengineV1beta1RejoinUserEventsResponse
	{
		
		/// <summary>
		/// Number of user events that were joined with latest catalog items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rejoinedUserEventsCount")]
		public string RejoinedUserEventsCount { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Unregister an apiKey from using for predict method.
		/// Recommendationengine_projects_locations_catalogs_eventStores_predictionApiKeyRegistrations_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. The API key to unregister including full resource path. `projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/predictionApiKeyRegistrations/`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Recommendationengine_projects_locations_catalogs_eventStores_predictionApiKeyRegistrations_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
		/// Recommendationengine_projects_locations_catalogs_operations_get v1beta1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Recommendationengine_projects_locations_catalogs_operations_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a catalog item. Partial updating is supported. Non-existing items will be created.
		/// Recommendationengine_projects_locations_catalogs_catalogItems_patch v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. Full resource name of catalog item, such as `projects/*/locations/global/catalogs/default_catalog/catalogItems/some_catalog_item_id`.</param>
		/// <param name="updateMask">Optional. Indicates which fields in the provided 'item' to update. If not set, will by default update all fields.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1CatalogItem> Recommendationengine_projects_locations_catalogs_catalogItems_patchAsync(string name, string updateMask, GoogleCloudRecommendationengineV1beta1CatalogItem requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1CatalogItem>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Recommendationengine_projects_locations_catalogs_operations_list v1beta1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Recommendationengine_projects_locations_catalogs_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Makes a recommendation prediction. If using API Key based authentication, the API Key must be registered using the PredictionApiKeyRegistry service. [Learn more](https://cloud.google.com/recommendations-ai/docs/setting-up#register-key).
		/// Recommendationengine_projects_locations_catalogs_eventStores_placements_predict v1beta1/{name}:predict
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1PredictResponse> Recommendationengine_projects_locations_catalogs_eventStores_placements_predictAsync(string name, GoogleCloudRecommendationengineV1beta1PredictRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":predict";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1PredictResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of catalog items.
		/// Recommendationengine_projects_locations_catalogs_catalogItems_list v1beta1/{parent}/catalogItems
		/// </summary>
		/// <param name="parent">Required. The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog`.</param>
		/// <param name="filter">Optional. Use of this field is not supported by version v1beta1.</param>
		/// <param name="pageSize">Optional. Maximum number of results to return per page. If zero, the service will choose a reasonable default.</param>
		/// <param name="pageToken">Optional. The previous ListCatalogItemsResponse.next_page_token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse> Recommendationengine_projects_locations_catalogs_catalogItems_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/catalogItems&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a catalog item.
		/// Recommendationengine_projects_locations_catalogs_catalogItems_create v1beta1/{parent}/catalogItems
		/// </summary>
		/// <param name="parent">Required. The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1CatalogItem> Recommendationengine_projects_locations_catalogs_catalogItems_createAsync(string parent, GoogleCloudRecommendationengineV1beta1CatalogItem requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/catalogItems";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1CatalogItem>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Bulk import of multiple catalog items. Request processing may be synchronous. No partial updating supported. Non-existing items will be created. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully updated.
		/// Recommendationengine_projects_locations_catalogs_catalogItems_import v1beta1/{parent}/catalogItems:import
		/// </summary>
		/// <param name="parent">Required. `projects/1234/locations/global/catalogs/default_catalog` If no updateMask is specified, requires catalogItems.create permission. If updateMask is specified, requires catalogItems.update permission.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Recommendationengine_projects_locations_catalogs_catalogItems_importAsync(string parent, GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/catalogItems:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all the catalog configurations associated with the project.
		/// Recommendationengine_projects_locations_catalogs_list v1beta1/{parent}/catalogs
		/// </summary>
		/// <param name="parent">Required. The account resource name with an associated location.</param>
		/// <param name="pageSize">Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListCatalogs` call. Provide this to retrieve the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1ListCatalogsResponse> Recommendationengine_projects_locations_catalogs_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/catalogs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1ListCatalogsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the registered apiKeys for use with predict method.
		/// Recommendationengine_projects_locations_catalogs_eventStores_predictionApiKeyRegistrations_list v1beta1/{parent}/predictionApiKeyRegistrations
		/// </summary>
		/// <param name="parent">Required. The parent placement resource name such as `projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store`</param>
		/// <param name="pageSize">Optional. Maximum number of results to return per page. If unset, the service will choose a reasonable default.</param>
		/// <param name="pageToken">Optional. The previous `ListPredictionApiKeyRegistration.nextPageToken`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse> Recommendationengine_projects_locations_catalogs_eventStores_predictionApiKeyRegistrations_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/predictionApiKeyRegistrations&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Register an API key for use with predict method.
		/// Recommendationengine_projects_locations_catalogs_eventStores_predictionApiKeyRegistrations_create v1beta1/{parent}/predictionApiKeyRegistrations
		/// </summary>
		/// <param name="parent">Required. The parent resource path. `projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration> Recommendationengine_projects_locations_catalogs_eventStores_predictionApiKeyRegistrations_createAsync(string parent, GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/predictionApiKeyRegistrations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets a list of user events within a time range, with potential filtering. The method does not list unjoined user events. Unjoined user event definition: when a user event is ingested from Recommendations AI User Event APIs, the catalog item included in the user event is connected with the current catalog. If a catalog item of the ingested event is not in the current catalog, it could lead to degraded model quality. This is called an unjoined event.
		/// Recommendationengine_projects_locations_catalogs_eventStores_userEvents_list v1beta1/{parent}/userEvents
		/// </summary>
		/// <param name="parent">Required. The parent eventStore resource name, such as `projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store`.</param>
		/// <param name="filter">Optional. Filtering expression to specify restrictions over returned events. This is a sequence of terms, where each term applies some kind of a restriction to the returned user events. Use this expression to restrict results to a specific time range, or filter events by eventType. eg: eventTime > "2012-04-23T18:25:43.511Z" eventsMissingCatalogItems eventTime<"2012-04-23T18:25:43.511Z" eventType=search We expect only 3 types of fields: * eventTime: this can be specified a maximum of 2 times, once with a less than operator and once with a greater than operator. The eventTime restrict should result in one contiguous valid eventTime range. * eventType: only 1 eventType restriction can be specified. * eventsMissingCatalogItems: specififying this will restrict results to events for which catalog items were not found in the catalog. The default behavior is to return only those events for which catalog items were found. Some examples of valid filters expressions: * Example 1: eventTime > "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z" * Example 2: eventTime > "2012-04-23T18:25:43.511Z" eventType = detail-page-view * Example 3: eventsMissingCatalogItems eventType = search eventTime < "2018-04-23T18:30:43.511Z" * Example 4: eventTime > "2012-04-23T18:25:43.511Z" * Example 5: eventType = search * Example 6: eventsMissingCatalogItems</param>
		/// <param name="pageSize">Optional. Maximum number of results to return per page. If zero, the service will choose a reasonable default.</param>
		/// <param name="pageToken">Optional. The previous ListUserEventsResponse.next_page_token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1ListUserEventsResponse> Recommendationengine_projects_locations_catalogs_eventStores_userEvents_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1ListUserEventsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a 3rd party domain. This method is used only by the Recommendations AI JavaScript pixel. Users should not call this method directly.
		/// Recommendationengine_projects_locations_catalogs_eventStores_userEvents_collect v1beta1/{parent}/userEvents:collect
		/// </summary>
		/// <param name="parent">Required. The parent eventStore name, such as `projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store`.</param>
		/// <param name="ets">Optional. The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes.</param>
		/// <param name="uri">Optional. The url including cgi-parameters but excluding the hash fragment. The URL must be truncated to 1.5K bytes to conservatively be under the 2K bytes. This is often more useful than the referer url, because many browsers only send the domain for 3rd party requests.</param>
		/// <param name="userEvent">Required. URL encoded UserEvent proto.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleApiHttpBody> Recommendationengine_projects_locations_catalogs_eventStores_userEvents_collectAsync(string parent, string ets, string uri, string userEvent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:collect&ets=" + (ets==null? "" : System.Uri.EscapeDataString(ets))+"&uri=" + (uri==null? "" : System.Uri.EscapeDataString(uri))+"&userEvent=" + (userEvent==null? "" : System.Uri.EscapeDataString(userEvent));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleApiHttpBody>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
		/// Recommendationengine_projects_locations_catalogs_eventStores_userEvents_import v1beta1/{parent}/userEvents:import
		/// </summary>
		/// <param name="parent">Required. `projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Recommendationengine_projects_locations_catalogs_eventStores_userEvents_importAsync(string parent, GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first.
		/// Recommendationengine_projects_locations_catalogs_eventStores_userEvents_purge v1beta1/{parent}/userEvents:purge
		/// </summary>
		/// <param name="parent">Required. The resource name of the event_store under which the events are created. The format is `projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Recommendationengine_projects_locations_catalogs_eventStores_userEvents_purgeAsync(string parent, GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:purge";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Triggers a user event rejoin operation with latest catalog data. Events will not be annotated with detailed catalog information if catalog item is missing at the time the user event is ingested, and these events are stored as unjoined events with a limited usage on training and serving. This API can be used to trigger a 'join' operation on specified events with latest version of catalog items. It can also be used to correct events joined with wrong catalog items.
		/// Recommendationengine_projects_locations_catalogs_eventStores_userEvents_rejoin v1beta1/{parent}/userEvents:rejoin
		/// </summary>
		/// <param name="parent">Required. Full resource name of user event, such as `projects/*/locations/*/catalogs/default_catalog/eventStores/default_event_store`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Recommendationengine_projects_locations_catalogs_eventStores_userEvents_rejoinAsync(string parent, GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:rejoin";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Writes a single user event.
		/// Recommendationengine_projects_locations_catalogs_eventStores_userEvents_write v1beta1/{parent}/userEvents:write
		/// </summary>
		/// <param name="parent">Required. The parent eventStore resource name, such as "projects/1234/locations/global/catalogs/default_catalog/eventStores/default_event_store".</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRecommendationengineV1beta1UserEvent> Recommendationengine_projects_locations_catalogs_eventStores_userEvents_writeAsync(string parent, GoogleCloudRecommendationengineV1beta1UserEvent requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:write";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRecommendationengineV1beta1UserEvent>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

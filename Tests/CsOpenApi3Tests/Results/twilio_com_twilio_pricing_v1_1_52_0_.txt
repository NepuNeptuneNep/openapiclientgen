//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1messaging
	{
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1messagingmessaging_country
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1messagingmessaging_country_instance
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The list of [InboundPrice](https://www.twilio.com/docs/sms/api/pricing#inbound-price) records that describe the price to receive an inbound SMS to the different Twilio phone number types supported in this country
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inbound_sms_prices")]
		public Pricingv1messagingmessaging_country_instanceInbound_sms_prices[] Pricingv1messagingmessaging_country_instanceInbound_sms_prices { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The list of [OutboundSMSPrice](https://www.twilio.com/docs/sms/api/pricing#outbound-sms-price) records that represent the price to send a message for each MCC/MNC applicable in this country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_sms_prices")]
		public Pricingv1messagingmessaging_country_instanceOutbound_sms_prices[] Pricingv1messagingmessaging_country_instanceOutbound_sms_prices { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv1messagingmessaging_country_instanceInbound_sms_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv1messagingmessaging_country_instanceOutbound_sms_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="carrier")]
		public string Carrier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mcc")]
		public string Mcc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mnc")]
		public string Mnc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prices")]
		public Pricingv1messagingmessaging_country_instanceOutbound_sms_pricesPrices[] Pricingv1messagingmessaging_country_instanceOutbound_sms_pricesPrices { get; set; }
	}
	
	public class Pricingv1messagingmessaging_country_instanceOutbound_sms_pricesPrices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1phone_number
	{
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1phone_numberphone_number_country
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1phone_numberphone_number_country_instance
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The list of [PhoneNumberPrice](https://www.twilio.com/docs/phone-numbers/pricing#phone-number-price) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number_prices")]
		public Pricingv1phone_numberphone_number_country_instancePhone_number_prices[] Pricingv1phone_numberphone_number_country_instancePhone_number_prices { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv1phone_numberphone_number_country_instancePhone_number_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1voice
	{
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1voicevoice_country
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1voicevoice_country_instance
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The list of [InboundCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inbound_call_prices")]
		public Pricingv1voicevoice_country_instanceInbound_call_prices[] Pricingv1voicevoice_country_instanceInbound_call_prices { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The list of OutboundPrefixPrice records, which include a list of the `prefixes`, the `friendly_name`, `base_price`, and the   `current_price` for those prefixes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_prefix_prices")]
		public Pricingv1voicevoice_country_instanceOutbound_prefix_prices[] Pricingv1voicevoice_country_instanceOutbound_prefix_prices { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv1voicevoice_country_instanceInbound_call_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv1voicevoice_country_instanceOutbound_prefix_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prefixes")]
		public string[] Prefixes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv1voicevoice_number
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [InboundCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) record. If `null`, the Phone Number is not a Twilio number owned by this account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inbound_call_price")]
		public Pricingv1voicevoice_numberInbound_call_price Inbound_call_price { get; set; }
		
		/// <summary>
		/// The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// The OutboundCallPrice record, which includes a list of `origination_prefixes` and the `base_price` and `current_price` for those prefixes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_call_price")]
		public Pricingv1voicevoice_numberOutbound_call_price Outbound_call_price { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv1voicevoice_numberInbound_call_price
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv1voicevoice_numberOutbound_call_price
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// ListMessagingCountry v1/Messaging/Countries
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListMessagingCountryReturn> ListMessagingCountryAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Messaging/Countries?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListMessagingCountryReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// FetchMessagingCountry v1/Messaging/Countries/{IsoCountry}
		/// </summary>
		/// <param name="IsoCountry">The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the pricing information to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv1messagingmessaging_country_instance> FetchMessagingCountryAsync(string IsoCountry, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Messaging/Countries/"+ (IsoCountry==null? "" : System.Uri.EscapeDataString(IsoCountry));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv1messagingmessaging_country_instance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListPhoneNumberCountry v1/PhoneNumbers/Countries
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListPhoneNumberCountryReturn> ListPhoneNumberCountryAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/PhoneNumbers/Countries?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListPhoneNumberCountryReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// FetchPhoneNumberCountry v1/PhoneNumbers/Countries/{IsoCountry}
		/// </summary>
		/// <param name="IsoCountry">The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the pricing information to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv1phone_numberphone_number_country_instance> FetchPhoneNumberCountryAsync(string IsoCountry, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/PhoneNumbers/Countries/"+ (IsoCountry==null? "" : System.Uri.EscapeDataString(IsoCountry));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv1phone_numberphone_number_country_instance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListVoiceCountry v1/Voice/Countries
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListVoiceCountryReturn> ListVoiceCountryAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Voice/Countries?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListVoiceCountryReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// FetchVoiceCountry v1/Voice/Countries/{IsoCountry}
		/// </summary>
		/// <param name="IsoCountry">The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the pricing information to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv1voicevoice_country_instance> FetchVoiceCountryAsync(string IsoCountry, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Voice/Countries/"+ (IsoCountry==null? "" : System.Uri.EscapeDataString(IsoCountry));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv1voicevoice_country_instance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// FetchVoiceNumber v1/Voice/Numbers/{Number}
		/// </summary>
		/// <param name="Number">The phone number to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv1voicevoice_number> FetchVoiceNumberAsync(string Number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Voice/Numbers/"+ (Number==null? "" : System.Uri.EscapeDataString(Number));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv1voicevoice_number>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ListMessagingCountryReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="countries")]
		public Pricingv1messagingmessaging_country[] Countries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListMessagingCountryReturnMeta Meta { get; set; }
	}
	
	public class ListMessagingCountryReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListPhoneNumberCountryReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="countries")]
		public Pricingv1phone_numberphone_number_country[] Countries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListPhoneNumberCountryReturnMeta Meta { get; set; }
	}
	
	public class ListPhoneNumberCountryReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListVoiceCountryReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="countries")]
		public Pricingv1voicevoice_country[] Countries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListVoiceCountryReturnMeta Meta { get; set; }
	}
	
	public class ListVoiceCountryReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

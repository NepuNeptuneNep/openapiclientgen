//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPersonalizedRankingResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="personalizedRanking")]
		public PredictedItem[] PersonalizedRanking { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationId")]
		public string RecommendationId { get; set; }
	}
	
	/// <summary>
	/// <p>An object that identifies an item.</p> <p>The and APIs return a list of <code>PredictedItem</code>s.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PredictedItem
	{
		
		[System.Runtime.Serialization.DataMember(Name="itemId")]
		public string ItemId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="promotionName")]
		public string PromotionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidInputException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="itemList")]
		public PredictedItem[] ItemList { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationId")]
		public string RecommendationId { get; set; }
	}
	
	/// <summary>
	/// Contains information on a promotion. A promotion defines additional business rules that apply to a configurable subset of recommended items.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Promotion
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="percentPromotedItems")]
		public System.Nullable<System.Int32> PercentPromotedItems { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterArn")]
		public string FilterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterValues")]
		public FilterValues FilterValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterValues
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Context
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPersonalizedRankingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="campaignArn")]
		public string CampaignArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputList")]
		public string[] InputList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public Context Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterArn")]
		public string FilterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterValues")]
		public FilterValues FilterValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="campaignArn")]
		public string CampaignArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="itemId")]
		public string ItemId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numResults")]
		public System.Nullable<System.Int32> NumResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public Context Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterArn")]
		public string FilterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filterValues")]
		public FilterValues FilterValues { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommenderArn")]
		public string RecommenderArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="promotions")]
		public Promotion[] Promotions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Re-ranks a list of recommended items for the given user. The first item in the list is deemed the most likely item to be of interest to the user.</p> <note> <p>The solution backing the campaign must have been created using a recipe of type PERSONALIZED_RANKING.</p> </note>
		/// GetPersonalizedRanking personalize-ranking
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetPersonalizedRankingResponse> GetPersonalizedRankingAsync(GetPersonalizedRankingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "personalize-ranking";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPersonalizedRankingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of recommended items. For campaigns, the campaign's Amazon Resource Name (ARN) is required and the required user and item input depends on the recipe type used to create the solution backing the campaign as follows:</p> <ul> <li> <p>USER_PERSONALIZATION - <code>userId</code> required, <code>itemId</code> not used</p> </li> <li> <p>RELATED_ITEMS - <code>itemId</code> required, <code>userId</code> not used</p> </li> </ul> <note> <p>Campaigns that are backed by a solution created using a recipe of type PERSONALIZED_RANKING use the API.</p> </note> <p> For recommenders, the recommender's ARN is required and the required item and user input depends on the use case (domain-based recipe) backing the recommender. For information on use case requirements see <a href="https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html">Choosing recommender use cases</a>. </p>
		/// GetRecommendations recommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetRecommendationsResponse> GetRecommendationsAsync(GetRecommendationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "recommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetRecommendationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class GetPersonalizedRankingPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="campaignArn")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):personalize:.*:.*:.+")]
		public string CampaignArn { get; set; }
		
		/// <summary>
		/// A list of items (by <code>itemId</code>) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputList")]
		public string[] InputList { get; set; }
		
		/// <summary>
		/// The user for which you want the campaign to provide a personalized ranking.
		/// Required
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userId")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string UserId { get; set; }
		
		/// <summary>
		/// The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user's recommendations, such as the user's current location or device type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public System.Collections.Generic.Dictionary<string, string> Context { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user. For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterArn")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):personalize:.*:.*:.+")]
		public string FilterArn { get; set; }
		
		/// <summary>
		/// <p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. </p> <p>For filter expressions that use an <code>INCLUDE</code> element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of the expression to filter recommendations.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterValues")]
		public System.Collections.Generic.Dictionary<string, string> FilterValues { get; set; }
	}
	
	public class GetRecommendationsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the campaign to use for getting recommendations.
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaignArn")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):personalize:.*:.*:.+")]
		public string CampaignArn { get; set; }
		
		/// <summary>
		/// <p>The item ID to provide recommendations for.</p> <p>Required for <code>RELATED_ITEMS</code> recipe type.</p>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemId")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ItemId { get; set; }
		
		/// <summary>
		/// <p>The user ID to provide recommendations for.</p> <p>Required for <code>USER_PERSONALIZATION</code> recipe type.</p>
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string UserId { get; set; }
		
		/// <summary>
		/// The number of results to return. The default is 25. The maximum is 500.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numResults")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> NumResults { get; set; }
		
		/// <summary>
		/// The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user's recommendations, such as the user's current location or device type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public System.Collections.Generic.Dictionary<string, string> Context { get; set; }
		
		/// <summary>
		/// <p>The ARN of the filter to apply to the returned recommendations. For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p> <p>When using this parameter, be sure the filter resource is <code>ACTIVE</code>.</p>
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterArn")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):personalize:.*:.*:.+")]
		public string FilterArn { get; set; }
		
		/// <summary>
		/// <p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. </p> <p>For filter expressions that use an <code>INCLUDE</code> element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of the expression to filter recommendations.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering recommendations and user segments</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterValues")]
		public System.Collections.Generic.Dictionary<string, string> FilterValues { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the recommender to use to get recommendations. Provide a recommender ARN if you created a Domain dataset group with a recommender for a domain use case.
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommenderArn")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):personalize:.*:.*:.+")]
		public string RecommenderArn { get; set; }
		
		/// <summary>
		/// The promotions to apply to the recommendation request. A promotion defines additional business rules that apply to a configurable subset of recommended items.
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promotions")]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Promotion[] Promotions { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

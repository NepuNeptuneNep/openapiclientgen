//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountingCustomer
	{
		
		[System.Runtime.Serialization.DataMember(Name="account")]
		public LinkedLedgerAccount Account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_accounts")]
		public BankAccount[] Bank_accounts { get; set; }
		
		/// <summary>
		/// The channel through which the transaction is processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Display ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// Display name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Is this an individual or business customer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individual")]
		public System.Nullable<System.Boolean> Individual { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Middle name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// Some notes about this customer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The parent customer this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public LinkedParentCustomer Parent { get; set; }
		
		/// <summary>
		/// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// If true, indicates this is a Project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="project")]
		public System.Nullable<System.Boolean> Project { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Customer status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<AccountingCustomerStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_number")]
		public string Tax_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedLedgerAccount
	{
		
		/// <summary>
		/// The code assigned to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The unique identifier for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The nominal code of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nominal_code")]
		public string Nominal_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
		
		/// <summary>
		/// Name of city.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Name of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_name")]
		public string Contact_name { get; set; }
		
		/// <summary>
		/// country code according to ISO 3166-1 alpha-2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Address field that holds a sublocality, such as a county
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="county")]
		public string County { get; set; }
		
		/// <summary>
		/// Email address of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Fax number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// Unique identifier for the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Latitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		/// <summary>
		/// Line 1 of the address e.g. number, street, suite, apt #, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line1")]
		public string Line1 { get; set; }
		
		/// <summary>
		/// Line 2 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line2")]
		public string Line2 { get; set; }
		
		/// <summary>
		/// Line 3 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line3")]
		public string Line3 { get; set; }
		
		/// <summary>
		/// Line 4 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line4")]
		public string Line4 { get; set; }
		
		/// <summary>
		/// Longitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		/// <summary>
		/// The name of the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Additional notes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// Phone number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// Zip code or equivalent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Salutation of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		/// <summary>
		/// Name of state
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Street number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_number")]
		public string Street_number { get; set; }
		
		/// <summary>
		/// The address string. Some APIs don't provide structured address data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="string")]
		public string String { get; set; }
		
		/// <summary>
		/// The type of address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AddressType> Type { get; set; }
		
		/// <summary>
		/// Website of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddressType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billing = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankAccount
	{
		
		/// <summary>
		/// The name which you used in opening your bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The type of bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public System.Nullable<BankAccountAccount_type> Account_type { get; set; }
		
		/// <summary>
		/// A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_code")]
		public string Bank_code { get; set; }
		
		/// <summary>
		/// The name of the bank
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_name")]
		public string Bank_name { get; set; }
		
		/// <summary>
		/// The Bank Identifier Code (BIC).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bic")]
		public string Bic { get; set; }
		
		/// <summary>
		/// A branch identifier is a unique identifier for a branch of a bank or financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="branch_identifier")]
		public string Branch_identifier { get; set; }
		
		/// <summary>
		/// A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bsb_number")]
		public string Bsb_number { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public System.Nullable<BankAccountCurrency> Currency { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
		
		/// <summary>
		/// A routing number is a nine-digit code used to identify a financial institution in the United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankAccountAccount_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bank_account = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit_card = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankAccountCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETH = 182,
	}
	
	/// <summary>
	/// When custom mappings are configured on the resource, the result is included here.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomMappings
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Email
	{
		
		/// <summary>
		/// Email address
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Email1 { get; set; }
		
		/// <summary>
		/// Unique identifier for the email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Email type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<EmailType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	/// <summary>
	/// The parent customer this entity is linked to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedParentCustomer
	{
		
		/// <summary>
		/// The parent ID of the customer this entity is linked to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the parent customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumber
	{
		
		/// <summary>
		/// The area code of the phone number, e.g. 323
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="area_code")]
		public string Area_code { get; set; }
		
		/// <summary>
		/// The country code of the phone number, e.g. +1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The extension of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extension")]
		public string Extension { get; set; }
		
		/// <summary>
		/// Unique identifier of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The phone number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Number { get; set; }
		
		/// <summary>
		/// The type of phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PhoneNumberType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mobile = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assistant = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fax = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="direct-dial-in")]
		directMinusdialMinusin = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountingCustomerStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="gdpr-erasure-request")]
		gdprMinuserasureMinusrequest = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedTaxRate
	{
		
		/// <summary>
		/// Tax rate code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The ID of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the tax rate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Rate of the tax rate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Website
	{
		
		/// <summary>
		/// Unique identifier for the website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The type of website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<WebsiteType> Type { get; set; }
		
		/// <summary>
		/// The website URL
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebsiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountingEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="*")]
		_ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.customer.created")]
		accounting_customer_created = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.customer.updated")]
		accounting_customer_updated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.customer.deleted")]
		accounting_customer_deleted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.invoice.created")]
		accounting_invoice_created = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.invoice.updated")]
		accounting_invoice_updated = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.invoice.deleted")]
		accounting_invoice_deleted = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.invoice_item.created")]
		accounting_invoice_item_created = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.invoice_item.updated")]
		accounting_invoice_item_updated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.invoice_item.deleted")]
		accounting_invoice_item_deleted = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.ledger_account.created")]
		accounting_ledger_account_created = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.ledger_account.updated")]
		accounting_ledger_account_updated = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.ledger_account.deleted")]
		accounting_ledger_account_deleted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.tax_rate.created")]
		accounting_tax_rate_created = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.tax_rate.updated")]
		accounting_tax_rate_updated = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.tax_rate.deleted")]
		accounting_tax_rate_deleted = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.bill.created")]
		accounting_bill_created = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.bill.updated")]
		accounting_bill_updated = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.bill.deleted")]
		accounting_bill_deleted = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.payment.created")]
		accounting_payment_created = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.payment.updated")]
		accounting_payment_updated = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.payment.deleted")]
		accounting_payment_deleted = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.supplier.created")]
		accounting_supplier_created = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.supplier.updated")]
		accounting_supplier_updated = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.supplier.deleted")]
		accounting_supplier_deleted = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.purchase-order.created")]
		accounting_purchaseMinusorder_created = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.purchase-order.updated")]
		accounting_purchaseMinusorder_updated = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting.purchase-order.deleted")]
		accounting_purchaseMinusorder_deleted = 27,
	}
	
	public class AccountingWebhookEvent
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BalanceSheet
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public BalanceSheetAssets Assets { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The start date of the report
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="equity")]
		public BalanceSheetEquity Equity { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="liabilities")]
		public BalanceSheetLiabilities Liabilities { get; set; }
		
		/// <summary>
		/// The name of the report
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_name")]
		public string Report_name { get; set; }
		
		/// <summary>
		/// The start date of the report
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class BalanceSheetAssets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_assets")]
		public BalanceSheetAssetsCurrent_assets Current_assets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fixed_assets")]
		public BalanceSheetAssetsFixed_assets Fixed_assets { get; set; }
		
		/// <summary>
		/// Total assets
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public double Total { get; set; }
	}
	
	public class BalanceSheetAssetsCurrent_assets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public BalanceSheetAssetsCurrent_assetsAccounts[] BalanceSheetAssetsCurrent_assetsAccounts { get; set; }
		
		/// <summary>
		/// Total current assets
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public double Total { get; set; }
	}
	
	public class BalanceSheetAssetsCurrent_assetsAccounts
	{
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the current asset account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The value of the current asset
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class BalanceSheetAssetsFixed_assets
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public BalanceSheetAssetsFixed_assetsAccounts[] BalanceSheetAssetsFixed_assetsAccounts { get; set; }
		
		/// <summary>
		/// Total fixed assets
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public double Total { get; set; }
	}
	
	public class BalanceSheetAssetsFixed_assetsAccounts
	{
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the fixed asset account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The value of the fixed asset
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class BalanceSheetEquity
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public BalanceSheetEquityItems[] BalanceSheetEquityItems { get; set; }
		
		/// <summary>
		/// Total equity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public double Total { get; set; }
	}
	
	public class BalanceSheetEquityItems
	{
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The type of the equity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The equity amount
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	public class BalanceSheetLiabilities
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public BalanceSheetLiabilitiesAccounts[] BalanceSheetLiabilitiesAccounts { get; set; }
		
		/// <summary>
		/// Total liabilities
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public double Total { get; set; }
	}
	
	public class BalanceSheetLiabilitiesAccounts
	{
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the liability account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The value of the liability
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BalanceSheetFilter
	{
		
		/// <summary>
		/// Filter by end date. If end date is given, start date is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public string End_date { get; set; }
		
		/// <summary>
		/// Filter by start date. If start date is given, end date is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public string Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Bill
	{
		
		/// <summary>
		/// Indicates if accounting by row is used (true) or not (false). Accounting by row means that a separate ledger transaction is created for each row.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounting_by_row")]
		public System.Nullable<System.Boolean> Accounting_by_row { get; set; }
		
		/// <summary>
		/// Balance of bill due.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public System.Nullable<System.Double> Balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_account")]
		public BankAccount Bank_account { get; set; }
		
		/// <summary>
		/// Date bill was issued - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bill_date")]
		public System.Nullable<System.DateOnly> Bill_date { get; set; }
		
		/// <summary>
		/// Reference to supplier bill number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bill_number")]
		public string Bill_number { get; set; }
		
		/// <summary>
		/// The channel through which the transaction is processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// Currency Exchange Rate at the time entity was recorded/generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_rate")]
		public System.Nullable<System.Double> Currency_rate { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Amount of deposit made to this bill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deposit")]
		public System.Nullable<System.Double> Deposit { get; set; }
		
		/// <summary>
		/// Discount percentage applied to this transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_percentage")]
		public System.Nullable<System.Double> Discount_percentage { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// The due date is the date on which a payment is scheduled to be received - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="due_date")]
		public System.Nullable<System.DateOnly> Due_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ledger_account")]
		public LinkedLedgerAccount Ledger_account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="line_items")]
		public BillLineItem[] Line_items { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paid_date")]
		public System.Nullable<System.DateOnly> Paid_date { get; set; }
		
		/// <summary>
		/// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		/// <summary>
		/// A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="po_number")]
		public string Po_number { get; set; }
		
		/// <summary>
		/// Optional bill reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Invoice status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<BillStatus> Status { get; set; }
		
		/// <summary>
		/// Sub-total amount, normally before tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_total")]
		public System.Nullable<System.Double> Sub_total { get; set; }
		
		/// <summary>
		/// The supplier this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supplier")]
		public LinkedSupplier Supplier { get; set; }
		
		/// <summary>
		/// Applicable tax id/code override if tax is not supplied on a line item basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_code")]
		public string Tax_code { get; set; }
		
		/// <summary>
		/// Amounts are including tax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_inclusive")]
		public System.Nullable<System.Boolean> Tax_inclusive { get; set; }
		
		/// <summary>
		/// Terms of payment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="terms")]
		public string Terms { get; set; }
		
		/// <summary>
		/// Total amount of bill, including tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		/// <summary>
		/// Total tax amount applied to this bill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_tax")]
		public System.Nullable<System.Double> Total_tax { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BillLineItem
	{
		
		/// <summary>
		/// User defined item code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Department id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department_id")]
		public string Department_id { get; set; }
		
		/// <summary>
		/// User defined description
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount amount applied to the line item when supported downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_amount")]
		public System.Nullable<System.Double> Discount_amount { get; set; }
		
		/// <summary>
		/// Discount percentage applied to the line item when supported downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_percentage")]
		public System.Nullable<System.Double> Discount_percentage { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public LinkedInvoiceItem Item { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ledger_account")]
		public LinkedLedgerAccount Ledger_account { get; set; }
		
		/// <summary>
		/// Line number in the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line_number")]
		public System.Nullable<System.Int32> Line_number { get; set; }
		
		/// <summary>
		/// Location id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location_id")]
		public string Location_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Row ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_id")]
		public string Row_id { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_amount")]
		public System.Nullable<System.Double> Tax_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// Total amount of the line item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public System.Nullable<System.Double> Total_amount { get; set; }
		
		/// <summary>
		/// Bill Line Item type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<BillLineItemType> Type { get; set; }
		
		/// <summary>
		/// Description of the unit type the item is sold as, ie: kg, hour.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit_of_measure")]
		public string Unit_of_measure { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unit_price")]
		public System.Nullable<System.Double> Unit_price { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedInvoiceItem
	{
		
		/// <summary>
		/// User defined item code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// ID of the linked item. A reference to the [invoice item](https://developers.apideck.com/apis/accounting/reference#tag/Invoice-Items) that was used to create this line item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// User defined item name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BillLineItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expense_item = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expense_account = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BillStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		submitted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authorised = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partially_paid = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paid = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="void")]
		_void = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleted = 7,
	}
	
	/// <summary>
	/// The supplier this entity is linked to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedSupplier
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Address Address { get; set; }
		
		/// <summary>
		/// The company name of the supplier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The display ID of the supplier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// The display name of the supplier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The ID of the supplier this entity is linked to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BillsSort
	{
		
		/// <summary>
		/// The field on which to sort the Bills
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<BillsSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<BillsSortDirection> Direction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BillsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BillsSortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Company
	{
		
		/// <summary>
		/// An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abn_branch")]
		public string Abn_branch { get; set; }
		
		/// <summary>
		/// An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abn_or_tfn")]
		public string Abn_or_tfn { get; set; }
		
		/// <summary>
		/// The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="acn")]
		public string Acn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// The annual revenue of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annual_revenue")]
		public string Annual_revenue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_accounts")]
		public BankAccount[] Bank_accounts { get; set; }
		
		/// <summary>
		/// The date of birth of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="birthday")]
		public System.Nullable<System.DateOnly> Birthday { get; set; }
		
		/// <summary>
		/// Creation date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Created by user ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Whether the company is deleted or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// A description of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The fax number of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Unique identifier for the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The Image URL of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// The industry represents the type of business the company is in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industry")]
		public string Industry { get; set; }
		
		/// <summary>
		/// Number of interactions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interaction_count")]
		public System.Nullable<System.Int32> Interaction_count { get; set; }
		
		/// <summary>
		/// Last activity date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_activity_at")]
		public System.Nullable<System.DateTimeOffset> Last_activity_at { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Name of the company
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Number of employees
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_employees")]
		public string Number_of_employees { get; set; }
		
		/// <summary>
		/// Owner ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// The ownership indicates the type of ownership of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownership")]
		public string Ownership { get; set; }
		
		/// <summary>
		/// Parent ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// A payee number is a unique number that identifies a payee for tax purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payee_number")]
		public string Payee_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// Whether the company is read-only or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="read_only")]
		public System.Nullable<System.Boolean> Read_only { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="row_type")]
		public CompanyRow_type Row_type { get; set; }
		
		/// <summary>
		/// A sales tax number is a unique number that identifies a company for tax purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sales_tax_number")]
		public string Sales_tax_number { get; set; }
		
		/// <summary>
		/// A formal salutation for the person. For example, 'Mr', 'Mrs'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="social_links")]
		public SocialLink[] Social_links { get; set; }
		
		/// <summary>
		/// The status of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// Last updated date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// Updated by user ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		/// <summary>
		/// The VAT number of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vat_number")]
		public string Vat_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomField
	{
		
		/// <summary>
		/// More information about the custom field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Unique identifier for the custom field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the custom field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class CompanyRow_type
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SocialLink
	{
		
		/// <summary>
		/// Unique identifier of the social link
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Type of the social link, e.g. twitter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// URL of the social link, e.g. https://www.twitter.com/apideck
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CompanyInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// Whether sales tax is calculated automatically for the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automated_sales_tax")]
		public System.Nullable<System.Boolean> Automated_sales_tax { get; set; }
		
		/// <summary>
		/// The name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Date when company file was created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_start_date")]
		public System.Nullable<System.DateOnly> Company_start_date { get; set; }
		
		/// <summary>
		/// country code according to ISO 3166-1 alpha-2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="default_sales_tax")]
		public TaxRate Default_sales_tax { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The start month of fiscal year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fiscal_year_start_month")]
		public System.Nullable<CompanyInfoFiscal_year_start_month> Fiscal_year_start_month { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The legal name of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Whether sales tax is enabled for the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sales_tax_enabled")]
		public System.Nullable<System.Boolean> Sales_tax_enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sales_tax_number")]
		public string Sales_tax_number { get; set; }
		
		/// <summary>
		/// Based on the status some functionality is enabled or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CompanyInfoStatus> Status { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaxRate
	{
		
		/// <summary>
		/// Tax code assigned to identify this tax rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="components")]
		public TaxRateComponents[] TaxRateComponents { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Description of tax rate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Effective tax rate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effective_tax_rate")]
		public System.Nullable<System.Double> Effective_tax_rate { get; set; }
		
		/// <summary>
		/// ID assigned to identify this tax rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name assigned to identify this tax rate.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="original_tax_rate_id")]
		public string Original_tax_rate_id { get; set; }
		
		/// <summary>
		/// Report Tax type to aggregate tax collected or paid for reporting purposes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_tax_type")]
		public string Report_tax_type { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Tax rate status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<TaxRateStatus> Status { get; set; }
		
		/// <summary>
		/// Unique identifier for the account for tax collected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_payable_account_id")]
		public string Tax_payable_account_id { get; set; }
		
		/// <summary>
		/// Unique identifier for the account for tax remitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_remitted_account_id")]
		public string Tax_remitted_account_id { get; set; }
		
		/// <summary>
		/// Not compounded sum of the components of a tax rate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_tax_rate")]
		public System.Nullable<System.Double> Total_tax_rate { get; set; }
		
		/// <summary>
		/// Tax type used to indicate the source of tax collected or paid
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class TaxRateComponents
	{
		
		[System.Runtime.Serialization.DataMember(Name="compound")]
		public System.Nullable<System.Boolean> Compound { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaxRateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CompanyInfoFiscal_year_start_month
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		January = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		February = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		March = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		April = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		May = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		June = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		July = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		August = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		September = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		October = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		November = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		December = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CompanyInfoStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Contact
	{
		
		/// <summary>
		/// The active status of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// The birthday of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="birthday")]
		public string Birthday { get; set; }
		
		/// <summary>
		/// The company the contact is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The name of the company the contact is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The creation date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The current balance of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_balance")]
		public System.Nullable<System.Double> Current_balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The department of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department")]
		public string Department { get; set; }
		
		/// <summary>
		/// The description of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email_domain")]
		public string Email_domain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The fax number of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// The first call date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_call_at")]
		public System.Nullable<System.DateTimeOffset> First_call_at { get; set; }
		
		/// <summary>
		/// The first email date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_email_at")]
		public System.Nullable<System.DateTimeOffset> First_email_at { get; set; }
		
		/// <summary>
		/// The first name of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The gender of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public System.Nullable<ContactGender> Gender { get; set; }
		
		/// <summary>
		/// Unique identifier for the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The last activity date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_activity_at")]
		public System.Nullable<System.DateTimeOffset> Last_activity_at { get; set; }
		
		/// <summary>
		/// The last name of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The lead the contact is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_id")]
		public string Lead_id { get; set; }
		
		/// <summary>
		/// The lead source of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_source")]
		public string Lead_source { get; set; }
		
		/// <summary>
		/// The middle name of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// Full name of the contact.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The owner of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// The URL of the photo of a person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="photo_url")]
		public string Photo_url { get; set; }
		
		/// <summary>
		/// The prefix of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="social_links")]
		public SocialLink[] Social_links { get; set; }
		
		/// <summary>
		/// The status of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The suffix of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// The job title of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ContactType> Type { get; set; }
		
		/// <summary>
		/// The last update date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactGender
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		male = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		female = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unisex = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		supplier = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		employee = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBillResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnifiedId
	{
		
		/// <summary>
		/// The unique identifier of the resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCreditNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCustomerResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInvoiceItemResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInvoiceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InvoiceResponse Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceResponse
	{
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJournalEntryResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLedgerAccountResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePaymentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePurchaseOrderResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSupplierResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTaxRateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditNote
	{
		
		[System.Runtime.Serialization.DataMember(Name="account")]
		public LinkedLedgerAccount Account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allocations")]
		public CreditNoteAllocations[] CreditNoteAllocations { get; set; }
		
		/// <summary>
		/// The balance reflecting any payments made against the transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public System.Nullable<System.Double> Balance { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// Currency Exchange Rate at the time entity was recorded/generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_rate")]
		public System.Nullable<System.Double> Currency_rate { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The customer this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public LinkedCustomer Customer { get; set; }
		
		/// <summary>
		/// Date credit note issued - YYYY:MM::DDThh:mm:ss.sTZD
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_issued")]
		public System.Nullable<System.DateTimeOffset> Date_issued { get; set; }
		
		/// <summary>
		/// Date credit note paid - YYYY:MM::DDThh:mm:ss.sTZD
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_paid")]
		public System.Nullable<System.DateTimeOffset> Date_paid { get; set; }
		
		/// <summary>
		/// Unique identifier representing the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="line_items")]
		public InvoiceLineItem[] Line_items { get; set; }
		
		/// <summary>
		/// Optional note to be associated with the credit note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// Credit note number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Optional reference message ie: Debit remittance detail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// Indicates the total credit amount still available to apply towards the payment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remaining_credit")]
		public System.Nullable<System.Double> Remaining_credit { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Status of credit notes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CreditNoteStatus> Status { get; set; }
		
		/// <summary>
		/// Sub-total amount, normally before tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_total")]
		public System.Nullable<System.Double> Sub_total { get; set; }
		
		/// <summary>
		/// Applicable tax id/code override if tax is not supplied on a line item basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_code")]
		public string Tax_code { get; set; }
		
		/// <summary>
		/// Amounts are including tax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_inclusive")]
		public System.Nullable<System.Boolean> Tax_inclusive { get; set; }
		
		/// <summary>
		/// Optional terms to be associated with the credit note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="terms")]
		public string Terms { get; set; }
		
		/// <summary>
		/// Amount of transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public double Total_amount { get; set; }
		
		/// <summary>
		/// Total tax amount applied to this invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_tax")]
		public System.Nullable<System.Double> Total_tax { get; set; }
		
		/// <summary>
		/// Type of payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<CreditNoteType> Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class CreditNoteAllocations
	{
		
		/// <summary>
		/// Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Unique identifier of entity this payment should be attributed to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Type of entity this payment should be attributed to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<CreditNoteAllocationsType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditNoteAllocationsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invoice = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		order = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expense = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit_memo = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		over_payment = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pre_payment = 5,
	}
	
	/// <summary>
	/// The customer this entity is linked to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedCustomer
	{
		
		/// <summary>
		/// The company name of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The display ID of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// The display name of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The ID of the customer this entity is linked to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the customer. Deprecated, use display_name instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceLineItem
	{
		
		/// <summary>
		/// User defined item code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Department id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department_id")]
		public string Department_id { get; set; }
		
		/// <summary>
		/// User defined description
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount amount applied to the line item when supported downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_amount")]
		public System.Nullable<System.Double> Discount_amount { get; set; }
		
		/// <summary>
		/// Discount percentage applied to the line item when supported downstream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_percentage")]
		public System.Nullable<System.Double> Discount_percentage { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="item")]
		public LinkedInvoiceItem Item { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ledger_account")]
		public LinkedLedgerAccount Ledger_account { get; set; }
		
		/// <summary>
		/// Line number in the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line_number")]
		public System.Nullable<System.Int32> Line_number { get; set; }
		
		/// <summary>
		/// Location id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location_id")]
		public string Location_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Row ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_id")]
		public string Row_id { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_amount")]
		public System.Nullable<System.Double> Tax_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// Total amount of the line item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public System.Nullable<System.Double> Total_amount { get; set; }
		
		/// <summary>
		/// Item type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<InvoiceLineItemType> Type { get; set; }
		
		/// <summary>
		/// Description of the unit type the item is sold as, ie: kg, hour.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit_of_measure")]
		public string Unit_of_measure { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unit_price")]
		public System.Nullable<System.Double> Unit_price { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvoiceLineItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sales_item = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		discount = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		info = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sub_total = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditNoteStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authorised = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paid = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		voided = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleted = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditNoteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_receivable_credit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_payable_credit = 1,
	}
	
	/// <summary>
	/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Currency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETH = 182,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Customer
	{
		
		[System.Runtime.Serialization.DataMember(Name="account")]
		public LinkedLedgerAccount Account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_accounts")]
		public BankAccount[] Bank_accounts { get; set; }
		
		/// <summary>
		/// The channel through which the transaction is processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Display ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// Display name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Is this an individual or business customer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individual")]
		public System.Nullable<System.Boolean> Individual { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Middle name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// Some notes about this customer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The parent customer this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public LinkedParentCustomer Parent { get; set; }
		
		/// <summary>
		/// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// If true, indicates this is a Project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="project")]
		public System.Nullable<System.Boolean> Project { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Customer status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CustomerStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_number")]
		public string Tax_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CustomerStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="gdpr-erasure-request")]
		gdprMinuserasureMinusrequest = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomersFilter
	{
		
		/// <summary>
		/// Company Name of customer to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Display Name of customer to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// Email of customer to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name of customer to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name of customer to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Status of customer to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CustomersFilterStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CustomersFilterStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBillResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCreditNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCustomerResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInvoiceItemResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInvoiceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InvoiceResponse Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJournalEntryResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteLedgerAccountResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePaymentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePurchaseOrderResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSupplierResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTaxRateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBalanceSheetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BalanceSheet Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBillResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Bill Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBillsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Bill[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Links to navigate to previous or next pages through the API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Links
	{
		
		/// <summary>
		/// Link to navigate to the current page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	/// <summary>
	/// Response metadata
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Meta
	{
		
		/// <summary>
		/// Cursors to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursors")]
		public MetaCursors Cursors { get; set; }
		
		/// <summary>
		/// Number of items returned in the data property of the response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items_on_page")]
		public System.Nullable<System.Int32> Items_on_page { get; set; }
	}
	
	public class MetaCursors
	{
		
		/// <summary>
		/// Cursor to navigate to the current page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the next page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the previous page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCompanyInfoResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CompanyInfo Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCreditNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CreditNote Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCreditNotesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CreditNote[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCustomerResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Customer Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCustomersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Customer[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInvoiceItemResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InvoiceItem Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceItem
	{
		
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="asset_account")]
		public LinkedLedgerAccount Asset_account { get; set; }
		
		/// <summary>
		/// User defined item code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// A short description of the item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expense_account")]
		public LinkedLedgerAccount Expense_account { get; set; }
		
		/// <summary>
		/// The ID of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="income_account")]
		public LinkedLedgerAccount Income_account { get; set; }
		
		/// <summary>
		/// The date of opening balance if inventory item is tracked - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_date")]
		public System.Nullable<System.DateOnly> Inventory_date { get; set; }
		
		/// <summary>
		/// Item name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="purchase_details")]
		public InvoiceItemPurchase_details Purchase_details { get; set; }
		
		/// <summary>
		/// Item is available for purchase transactions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purchased")]
		public System.Nullable<System.Boolean> Purchased { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sales_details")]
		public InvoiceItemSales_details Sales_details { get; set; }
		
		/// <summary>
		/// Item will be available on sales transactions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sold")]
		public System.Nullable<System.Boolean> Sold { get; set; }
		
		/// <summary>
		/// If true, transactions for this item are taxable
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxable")]
		public System.Nullable<System.Boolean> Taxable { get; set; }
		
		/// <summary>
		/// Item is inventoried
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracked")]
		public System.Nullable<System.Boolean> Tracked { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tracking_category")]
		public LinkedTrackingCategory Tracking_category { get; set; }
		
		/// <summary>
		/// Item type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<InvoiceItemType> Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unit_price")]
		public System.Nullable<System.Double> Unit_price { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class InvoiceItemPurchase_details
	{
		
		/// <summary>
		/// Amounts are including tax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_inclusive")]
		public System.Nullable<System.Boolean> Tax_inclusive { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// Description of the unit type the item is sold as, ie: kg, hour.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit_of_measure")]
		public string Unit_of_measure { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unit_price")]
		public System.Nullable<System.Double> Unit_price { get; set; }
	}
	
	public class InvoiceItemSales_details
	{
		
		/// <summary>
		/// Amounts are including tax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_inclusive")]
		public System.Nullable<System.Boolean> Tax_inclusive { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// Description of the unit type the item is sold as, ie: kg, hour.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit_of_measure")]
		public string Unit_of_measure { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unit_price")]
		public System.Nullable<System.Double> Unit_price { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkedTrackingCategory
	{
		
		/// <summary>
		/// The unique identifier for the tracking category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the tracking category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvoiceItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inventory = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		service = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInvoiceItemsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InvoiceItem[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInvoiceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Invoice Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Invoice
	{
		
		/// <summary>
		/// Indicates if accounting by row is used (true) or not (false). Accounting by row means that a separate ledger transaction is created for each row.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounting_by_row")]
		public System.Nullable<System.Boolean> Accounting_by_row { get; set; }
		
		/// <summary>
		/// Balance of invoice due.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public System.Nullable<System.Double> Balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_account")]
		public BankAccount Bank_account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public Address Billing_address { get; set; }
		
		/// <summary>
		/// The channel through which the transaction is processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// Currency Exchange Rate at the time entity was recorded/generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_rate")]
		public System.Nullable<System.Double> Currency_rate { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The customer this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public LinkedCustomer Customer { get; set; }
		
		/// <summary>
		/// Customer memo
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer_memo")]
		public string Customer_memo { get; set; }
		
		/// <summary>
		/// Amount of deposit made to this invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deposit")]
		public System.Nullable<System.Double> Deposit { get; set; }
		
		/// <summary>
		/// Discount amount applied to this invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_amount")]
		public System.Nullable<System.Double> Discount_amount { get; set; }
		
		/// <summary>
		/// Discount percentage applied to this invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_percentage")]
		public System.Nullable<System.Double> Discount_percentage { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="due_date")]
		public System.Nullable<System.DateOnly> Due_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Date invoice was issued - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_date")]
		public System.Nullable<System.DateOnly> Invoice_date { get; set; }
		
		/// <summary>
		/// Invoice sent to contact/customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_sent")]
		public System.Nullable<System.Boolean> Invoice_sent { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ledger_account")]
		public LinkedLedgerAccount Ledger_account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="line_items")]
		public InvoiceLineItem[] Line_items { get; set; }
		
		/// <summary>
		/// Invoice number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		/// <summary>
		/// A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="po_number")]
		public string Po_number { get; set; }
		
		/// <summary>
		/// Optional invoice reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public Address Shipping_address { get; set; }
		
		/// <summary>
		/// URL link to a source document - shown as 'Go to [appName]' in the downstream app. Currently only supported for Xero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_document_url")]
		public string Source_document_url { get; set; }
		
		/// <summary>
		/// Invoice status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<InvoiceStatus> Status { get; set; }
		
		/// <summary>
		/// Sub-total amount, normally before tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_total")]
		public System.Nullable<System.Double> Sub_total { get; set; }
		
		/// <summary>
		/// Applicable tax id/code override if tax is not supplied on a line item basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_code")]
		public string Tax_code { get; set; }
		
		/// <summary>
		/// Amounts are including tax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_inclusive")]
		public System.Nullable<System.Boolean> Tax_inclusive { get; set; }
		
		/// <summary>
		/// Optional invoice template
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
		
		/// <summary>
		/// Terms of payment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="terms")]
		public string Terms { get; set; }
		
		/// <summary>
		/// Total amount of invoice, including tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		/// <summary>
		/// Total tax amount applied to this invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_tax")]
		public System.Nullable<System.Double> Total_tax { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tracking_category")]
		public LinkedTrackingCategory Tracking_category { get; set; }
		
		/// <summary>
		/// Invoice type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<InvoiceType> Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvoiceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		submitted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authorised = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partially_paid = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paid = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="void")]
		_void = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleted = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvoiceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		service = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		product = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		supplier = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInvoicesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Invoice[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJournalEntriesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public JournalEntry[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JournalEntry
	{
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// Currency Exchange Rate at the time entity was recorded/generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_rate")]
		public System.Nullable<System.Double> Currency_rate { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Journal symbol of the entry. For example IND for indirect costs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="journal_symbol")]
		public string Journal_symbol { get; set; }
		
		/// <summary>
		/// Requires a minimum of 2 line items that sum to 0
		/// Minimum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line_items")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public JournalEntryLineItem[] Line_items { get; set; }
		
		/// <summary>
		/// Reference for the journal entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memo")]
		public string Memo { get; set; }
		
		/// <summary>
		/// Journal entry number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="posted_at")]
		public System.Nullable<System.DateTimeOffset> Posted_at { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Applicable tax id/code override if tax is not supplied on a line item basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_code")]
		public string Tax_code { get; set; }
		
		/// <summary>
		/// The specific category of tax associated with a transaction like sales or purchase
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_type")]
		public string Tax_type { get; set; }
		
		/// <summary>
		/// Journal entry title
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JournalEntryLineItem
	{
		
		/// <summary>
		/// The customer this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public LinkedCustomer Customer { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department_id")]
		public string Department_id { get; set; }
		
		/// <summary>
		/// User defined description
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ledger_account")]
		public LinkedLedgerAccount Ledger_account { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location_id")]
		public string Location_id { get; set; }
		
		/// <summary>
		/// Sub-total amount, normally before tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_total")]
		public System.Nullable<System.Double> Sub_total { get; set; }
		
		/// <summary>
		/// The supplier this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supplier")]
		public LinkedSupplier Supplier { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_amount")]
		public System.Nullable<System.Double> Tax_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// Debit entries are considered positive, and credit entries are considered negative.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public System.Nullable<System.Double> Total_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tracking_category")]
		public LinkedTrackingCategory Tracking_category { get; set; }
		
		/// <summary>
		/// Debit entries are considered positive, and credit entries are considered negative.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public JournalEntryLineItemType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JournalEntryLineItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJournalEntryResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public JournalEntry Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLedgerAccountResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public LedgerAccount Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LedgerAccount
	{
		
		/// <summary>
		/// Whether the account is active or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_account")]
		public BankAccount Bank_account { get; set; }
		
		/// <summary>
		/// The categories of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public LedgerAccountCategories[] LedgerAccountCategories { get; set; }
		
		/// <summary>
		/// The classification of account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="classification")]
		public System.Nullable<LedgerAccountClassification> Classification { get; set; }
		
		/// <summary>
		/// The code assigned to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// The current balance of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_balance")]
		public System.Nullable<System.Double> Current_balance { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The description of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The human readable display ID used when displaying the account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// The fully qualified name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fully_qualified_name")]
		public string Fully_qualified_name { get; set; }
		
		/// <summary>
		/// Whether the account is a header or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public System.Nullable<System.Boolean> Header { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Reconciliation Date means the last calendar day of each Reconciliation Period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_reconciliation_date")]
		public System.Nullable<System.DateOnly> Last_reconciliation_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="level")]
		public System.Nullable<System.Double> Level { get; set; }
		
		/// <summary>
		/// The name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The nominal code of the ledger account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nominal_code")]
		public string Nominal_code { get; set; }
		
		/// <summary>
		/// The opening balance of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opening_balance")]
		public System.Nullable<System.Double> Opening_balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_account")]
		public LedgerAccountParent_account Parent_account { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// The status of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TaxRateStatus Status { get; set; }
		
		/// <summary>
		/// Whether the account is a sub account or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_account")]
		public System.Nullable<System.Boolean> Sub_account { get; set; }
		
		/// <summary>
		/// The sub accounts of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_accounts")]
		public LedgerAccountSub_accounts[] LedgerAccountSub_accounts { get; set; }
		
		/// <summary>
		/// The sub type of account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_type")]
		public string Sub_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// The tax type of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_type")]
		public string Tax_type { get; set; }
		
		/// <summary>
		/// The type of account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<LedgerAccountType> Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class LedgerAccountCategories
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LedgerAccountClassification
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asset = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		equity = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expense = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		liability = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		revenue = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		income = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other_income = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other_expense = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		costs_of_sales = 8,
	}
	
	public class LedgerAccountParent_account
	{
		
		/// <summary>
		/// The human readable display ID used when displaying the parent account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// The ID of the parent account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the parent account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class LedgerAccountSub_accounts
	{
		
		/// <summary>
		/// The name of the sub account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sub_name")]
		public string Account_sub_name { get; set; }
		
		/// <summary>
		/// The ID of the sub account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LedgerAccountType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_receivable = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		revenue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sales = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other_income = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bank = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current_asset = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fixed_asset = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		non_current_asset = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other_asset = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		balancesheet = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		equity = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expense = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other_expense = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		costs_of_sales = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_payable = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit_card = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current_liability = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		non_current_liability = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other_liability = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 19,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLedgerAccountsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public LedgerAccount[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPaymentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Payment Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Payment
	{
		
		[System.Runtime.Serialization.DataMember(Name="account")]
		public LinkedLedgerAccount Account { get; set; }
		
		/// <summary>
		/// Unique identifier for the account to allocate payment to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts_receivable_account_id")]
		public string Accounts_receivable_account_id { get; set; }
		
		/// <summary>
		/// Type of accounts receivable account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts_receivable_account_type")]
		public string Accounts_receivable_account_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allocations")]
		public PaymentAllocations[] PaymentAllocations { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// Currency Exchange Rate at the time entity was recorded/generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_rate")]
		public System.Nullable<System.Double> Currency_rate { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The customer this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public LinkedCustomer Customer { get; set; }
		
		/// <summary>
		/// Payment id to be displayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// Unique identifier representing the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional note to be associated with the payment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// Payment method name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		/// <summary>
		/// Unique identifier for the payment method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method_id")]
		public string Payment_method_id { get; set; }
		
		/// <summary>
		/// Optional reference message returned by payment method on processing
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method_reference")]
		public string Payment_method_reference { get; set; }
		
		/// <summary>
		/// Payment has been reconciled
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciled")]
		public System.Nullable<System.Boolean> Reconciled { get; set; }
		
		/// <summary>
		/// Optional payment reference message ie: Debit remittance detail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Status of payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<PaymentStatus> Status { get; set; }
		
		/// <summary>
		/// The supplier this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supplier")]
		public LinkedSupplier Supplier { get; set; }
		
		/// <summary>
		/// Amount of payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public double Total_amount { get; set; }
		
		/// <summary>
		/// Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_date")]
		public System.DateTimeOffset Transaction_date { get; set; }
		
		/// <summary>
		/// Type of payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PaymentType> Type { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class PaymentAllocations
	{
		
		/// <summary>
		/// Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Unique identifier of entity this payment should be attributed to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Type of entity this payment should be attributed to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CreditNoteAllocationsType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authorised = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		voided = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleted = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_receivable = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_payable = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_receivable_credit = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_payable_credit = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_receivable_overpayment = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_payable_overpayment = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_receivable_prepayment = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accounts_payable_prepayment = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPaymentsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Payment[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetProfitAndLossResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfitAndLoss Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfitAndLoss
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Customer id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer_id")]
		public string Customer_id { get; set; }
		
		/// <summary>
		/// The start date of the report
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expenses")]
		public ProfitAndLossExpenses Expenses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gross_profit")]
		public ProfitAndLossGross_profit Gross_profit { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="income")]
		public ProfitAndLossIncome Income { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="net_income")]
		public ProfitAndLossNet_income Net_income { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="net_operating_income")]
		public ProfitAndLossNet_operating_income Net_operating_income { get; set; }
		
		/// <summary>
		/// The name of the report
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_name")]
		public string Report_name { get; set; }
		
		/// <summary>
		/// The start date of the report
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
	}
	
	public class ProfitAndLossExpenses
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="records")]
		public string[] Records { get; set; }
		
		/// <summary>
		/// Total expense
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	public class ProfitAndLossGross_profit
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="records")]
		public string[] Records { get; set; }
		
		/// <summary>
		/// Total gross profit
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	public class ProfitAndLossIncome
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="records")]
		public string[] Records { get; set; }
		
		/// <summary>
		/// Total income
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	public class ProfitAndLossNet_income
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="records")]
		public string[] Records { get; set; }
		
		/// <summary>
		/// Total net income
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	public class ProfitAndLossNet_operating_income
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="records")]
		public string[] Records { get; set; }
		
		/// <summary>
		/// Total net operating income
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPurchaseOrderResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PurchaseOrder Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PurchaseOrder
	{
		
		/// <summary>
		/// Indicates if accounting by row is used (true) or not (false). Accounting by row means that a separate ledger transaction is created for each row.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounting_by_row")]
		public System.Nullable<System.Boolean> Accounting_by_row { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_account")]
		public BankAccount Bank_account { get; set; }
		
		/// <summary>
		/// The channel through which the transaction is processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// Currency Exchange Rate at the time entity was recorded/generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_rate")]
		public System.Nullable<System.Double> Currency_rate { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The date on which the purchase order is to be delivered - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_date")]
		public System.Nullable<System.DateOnly> Delivery_date { get; set; }
		
		/// <summary>
		/// Discount percentage applied to this transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_percentage")]
		public System.Nullable<System.Double> Discount_percentage { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// The due date is the date on which a payment is scheduled to be received - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="due_date")]
		public System.Nullable<System.DateOnly> Due_date { get; set; }
		
		/// <summary>
		/// The date on which the order is expected to arrive - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expected_arrival_date")]
		public System.Nullable<System.DateOnly> Expected_arrival_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Date purchase order was issued - YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issued_date")]
		public System.Nullable<System.DateOnly> Issued_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ledger_account")]
		public LinkedLedgerAccount Ledger_account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="line_items")]
		public InvoiceLineItem[] Line_items { get; set; }
		
		/// <summary>
		/// Message for the supplier. This text appears on the Purchase Order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memo")]
		public string Memo { get; set; }
		
		/// <summary>
		/// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		/// <summary>
		/// A PO Number uniquely identifies a purchase order and is generally defined by the buyer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="po_number")]
		public string Po_number { get; set; }
		
		/// <summary>
		/// Optional purchase order reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public Address Shipping_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<PurchaseOrderStatus> Status { get; set; }
		
		/// <summary>
		/// Sub-total amount, normally before tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_total")]
		public System.Nullable<System.Double> Sub_total { get; set; }
		
		/// <summary>
		/// The supplier this entity is linked to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supplier")]
		public LinkedSupplier Supplier { get; set; }
		
		/// <summary>
		/// Applicable tax id/code override if tax is not supplied on a line item basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_code")]
		public string Tax_code { get; set; }
		
		/// <summary>
		/// Amounts are including tax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_inclusive")]
		public System.Nullable<System.Boolean> Tax_inclusive { get; set; }
		
		/// <summary>
		/// Optional purchase order template
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
		
		/// <summary>
		/// Total amount of invoice, including tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		/// <summary>
		/// Total tax amount applied to this invoice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_tax")]
		public System.Nullable<System.Double> Total_tax { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PurchaseOrderStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		open = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		closed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPurchaseOrdersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PurchaseOrder[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSupplierResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Supplier Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Supplier
	{
		
		[System.Runtime.Serialization.DataMember(Name="account")]
		public LinkedLedgerAccount Account { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_accounts")]
		public BankAccount[] Bank_accounts { get; set; }
		
		/// <summary>
		/// The channel through which the transaction is processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public string Channel { get; set; }
		
		/// <summary>
		/// The name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Display ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_id")]
		public string Display_id { get; set; }
		
		/// <summary>
		/// Display name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Is this an individual or business supplier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individual")]
		public System.Nullable<System.Boolean> Individual { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Middle name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// Some notes about this supplier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Supplier status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<SupplierStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_number")]
		public string Tax_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_rate")]
		public LinkedTaxRate Tax_rate { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SupplierStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="gdpr-erasure-request")]
		gdprMinuserasureMinusrequest = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSuppliersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Supplier[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTaxRateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public TaxRate Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTaxRatesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public TaxRate[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceItemAssetAccount
	{
		
		/// <summary>
		/// The code assigned to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The unique identifier for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The nominal code of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nominal_code")]
		public string Nominal_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceItemExpenseAccount
	{
		
		/// <summary>
		/// The code assigned to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The unique identifier for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The nominal code of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nominal_code")]
		public string Nominal_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceItemIncomeAccount
	{
		
		/// <summary>
		/// The code assigned to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The unique identifier for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The nominal code of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nominal_code")]
		public string Nominal_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoiceItemsFilter
	{
		
		/// <summary>
		/// Name of Invoice Items to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvoicesSort
	{
		
		/// <summary>
		/// The field on which to sort the Invoices
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public BillsSortBy By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.ComponentModel.DefaultValue(BillsSortDirection.asc)]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public BillsSortDirection Direction { get; set; } = BillsSortDirection.asc;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotImplementedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PassThroughQuery
	{
		
		/// <summary>
		/// All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="example_downstream_property")]
		public string Example_downstream_property { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentRequiredResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentsFilter
	{
		
		/// <summary>
		/// Invoice number for payments to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invoice_number")]
		public string Invoice_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfitAndLossFilter
	{
		
		/// <summary>
		/// Filter by customer id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer_id")]
		public string Customer_id { get; set; }
		
		/// <summary>
		/// Filter by end date. If end date is given, start date is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public string End_date { get; set; }
		
		/// <summary>
		/// Filter by start date. If start date is given, end date is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public string Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfitAndLossRecord
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfitAndLossSection
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="records")]
		public string[] Records { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The direction in which to sort the results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppliersFilter
	{
		
		/// <summary>
		/// Company Name of supplier to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Display Name of supplier to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// Email of supplier to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name of supplier to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name of supplier to search for
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaxRatesFilter
	{
		
		/// <summary>
		/// Boolean to describe if tax rate can be used for asset accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public System.Nullable<System.Boolean> Assets { get; set; }
		
		/// <summary>
		/// Boolean to describe if tax rate can be used for equity accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="equity")]
		public System.Nullable<System.Boolean> Equity { get; set; }
		
		/// <summary>
		/// Boolean to describe if tax rate can be used for expense accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expenses")]
		public System.Nullable<System.Boolean> Expenses { get; set; }
		
		/// <summary>
		/// Boolean to describe if tax rate can be used for liability accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="liabilities")]
		public System.Nullable<System.Boolean> Liabilities { get; set; }
		
		/// <summary>
		/// Boolean to describe if tax rate can be used for revenue accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revenue")]
		public System.Nullable<System.Boolean> Revenue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public TooManyRequestsResponseDetail Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	public class TooManyRequestsResponseDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnauthorizedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnexpectedErrorResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnprocessableResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBillResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCreditNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCustomerResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInvoiceItemsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInvoiceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InvoiceResponse Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJournalEntryResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLedgerAccountResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePaymentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePurchaseOrderResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSupplierResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaxRateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get BalanceSheet
		/// Get BalanceSheet
		/// BalanceSheetOne accounting/balance-sheet
		/// </summary>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>BalanceSheet</returns>
		public async Task<GetBalanceSheetResponse> BalanceSheetOneAsync(PassThroughQuery pass_through, BalanceSheetFilter filter, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/balance-sheet?pass_through=" + pass_through+"&filter=" + filter+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBalanceSheetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Bills
		/// List Bills
		/// BillsAll accounting/bills
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Bills</returns>
		public async Task<GetBillsResponse> BillsAllAsync(bool raw, string cursor, int limit, BillsSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/bills?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBillsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Bill
		/// Create Bill
		/// BillsAdd accounting/bills
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task BillsAddAsync(bool raw, Bill requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/bills?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Bill
		/// Delete Bill
		/// BillsDelete accounting/bills/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Bill deleted</returns>
		public async Task<DeleteBillResponse> BillsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/bills/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteBillResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Bill
		/// Get Bill
		/// BillsOne accounting/bills/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Bill</returns>
		public async Task<GetBillResponse> BillsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/bills/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBillResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Bill
		/// Update Bill
		/// BillsUpdate accounting/bills/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Bill Updated</returns>
		public async Task<UpdateBillResponse> BillsUpdateAsync(string id, bool raw, Bill requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/bills/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateBillResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get company info
		/// Get company info
		/// CompanyInfoOne accounting/company-info
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>CompanyInfo</returns>
		public async Task<GetCompanyInfoResponse> CompanyInfoOneAsync(bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/company-info?raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCompanyInfoResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Credit Notes
		/// List Credit Notes
		/// CreditNotesAll accounting/credit-notes
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Credit Notes</returns>
		public async Task<GetCreditNotesResponse> CreditNotesAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/credit-notes?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCreditNotesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Credit Note
		/// Create Credit Note
		/// CreditNotesAdd accounting/credit-notes
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task CreditNotesAddAsync(bool raw, CreditNote requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/credit-notes?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Credit Note
		/// Delete Credit Note
		/// CreditNotesDelete accounting/credit-notes/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Credit Note deleted</returns>
		public async Task<DeleteCreditNoteResponse> CreditNotesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/credit-notes/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteCreditNoteResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Credit Note
		/// Get Credit Note
		/// CreditNotesOne accounting/credit-notes/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Credit Note</returns>
		public async Task<GetCreditNoteResponse> CreditNotesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/credit-notes/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCreditNoteResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Credit Note
		/// Update Credit Note
		/// CreditNotesUpdate accounting/credit-notes/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Credit Note updated</returns>
		public async Task<UpdateCreditNoteResponse> CreditNotesUpdateAsync(string id, bool raw, CreditNote requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/credit-notes/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateCreditNoteResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Customers
		/// List Customers
		/// CustomersAll accounting/customers
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Customers</returns>
		public async Task<GetCustomersResponse> CustomersAllAsync(bool raw, string cursor, int limit, CustomersFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/customers?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCustomersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Customer
		/// Create Customer
		/// CustomersAdd accounting/customers
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task CustomersAddAsync(bool raw, Customer requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/customers?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Customer
		/// Delete Customer
		/// CustomersDelete accounting/customers/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Customers</returns>
		public async Task<DeleteCustomerResponse> CustomersDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/customers/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteCustomerResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Customer
		/// Get Customer
		/// CustomersOne accounting/customers/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Customer</returns>
		public async Task<GetCustomerResponse> CustomersOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/customers/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCustomerResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Customer
		/// Update Customer
		/// CustomersUpdate accounting/customers/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Customers</returns>
		public async Task<UpdateCustomerResponse> CustomersUpdateAsync(string id, bool raw, Customer requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/customers/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateCustomerResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Invoice Items
		/// List Invoice Items
		/// InvoiceItemsAll accounting/invoice-items
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>InvoiceItems</returns>
		public async Task<GetInvoiceItemsResponse> InvoiceItemsAllAsync(bool raw, string cursor, int limit, InvoiceItemsFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoice-items?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetInvoiceItemsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Invoice Item
		/// Create Invoice Item
		/// InvoiceItemsAdd accounting/invoice-items
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task InvoiceItemsAddAsync(bool raw, InvoiceItem requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoice-items?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Invoice Item
		/// Delete Invoice Item
		/// InvoiceItemsDelete accounting/invoice-items/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>InvoiceItems</returns>
		public async Task<DeleteTaxRateResponse> InvoiceItemsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoice-items/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteTaxRateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Invoice Item
		/// Get Invoice Item
		/// InvoiceItemsOne accounting/invoice-items/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>InvoiceItems</returns>
		public async Task<GetInvoiceItemResponse> InvoiceItemsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoice-items/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetInvoiceItemResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Invoice Item
		/// Update Invoice Item
		/// InvoiceItemsUpdate accounting/invoice-items/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>InvoiceItems</returns>
		public async Task<UpdateInvoiceItemsResponse> InvoiceItemsUpdateAsync(string id, bool raw, InvoiceItem requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoice-items/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateInvoiceItemsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Invoices
		/// List Invoices
		/// InvoicesAll accounting/invoices
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Invoices</returns>
		public async Task<GetInvoicesResponse> InvoicesAllAsync(bool raw, string cursor, int limit, InvoicesSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoices?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetInvoicesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Invoice
		/// Create Invoice
		/// InvoicesAdd accounting/invoices
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task InvoicesAddAsync(bool raw, Invoice requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoices?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Invoice
		/// Delete Invoice
		/// InvoicesDelete accounting/invoices/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Invoice deleted</returns>
		public async Task<DeleteInvoiceResponse> InvoicesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoices/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteInvoiceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Invoice
		/// Get Invoice
		/// InvoicesOne accounting/invoices/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Invoice</returns>
		public async Task<GetInvoiceResponse> InvoicesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoices/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetInvoiceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Invoice
		/// Update Invoice
		/// InvoicesUpdate accounting/invoices/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Invoice updated</returns>
		public async Task<UpdateInvoiceResponse> InvoicesUpdateAsync(string id, bool raw, Invoice requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/invoices/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateInvoiceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Journal Entries
		/// List Journal Entries
		/// JournalEntriesAll accounting/journal-entries
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>JournalEntry</returns>
		public async Task<GetJournalEntriesResponse> JournalEntriesAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/journal-entries?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetJournalEntriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Journal Entry
		/// Create Journal Entry
		/// JournalEntriesAdd accounting/journal-entries
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task JournalEntriesAddAsync(bool raw, JournalEntry requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/journal-entries?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Journal Entry
		/// Delete Journal Entry
		/// JournalEntriesDelete accounting/journal-entries/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>JournalEntries</returns>
		public async Task<DeleteJournalEntryResponse> JournalEntriesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/journal-entries/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteJournalEntryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Journal Entry
		/// Get Journal Entry
		/// JournalEntriesOne accounting/journal-entries/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>JournalEntries</returns>
		public async Task<GetJournalEntryResponse> JournalEntriesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/journal-entries/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetJournalEntryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Journal Entry
		/// Update Journal Entry
		/// JournalEntriesUpdate accounting/journal-entries/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>JournalEntries</returns>
		public async Task<UpdateJournalEntryResponse> JournalEntriesUpdateAsync(string id, bool raw, JournalEntry requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/journal-entries/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateJournalEntryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Ledger Accounts
		/// List Ledger Accounts
		/// LedgerAccountsAll accounting/ledger-accounts
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>LedgerAccounts</returns>
		public async Task<GetLedgerAccountsResponse> LedgerAccountsAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/ledger-accounts?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLedgerAccountsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Ledger Account
		/// Create Ledger Account
		/// LedgerAccountsAdd accounting/ledger-accounts
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task LedgerAccountsAddAsync(bool raw, LedgerAccount requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/ledger-accounts?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Ledger Account
		/// Delete Ledger Account
		/// LedgerAccountsDelete accounting/ledger-accounts/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>LedgerAccount deleted</returns>
		public async Task<DeleteLedgerAccountResponse> LedgerAccountsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/ledger-accounts/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteLedgerAccountResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Ledger Account
		/// Get Ledger Account
		/// LedgerAccountsOne accounting/ledger-accounts/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>LedgerAccount</returns>
		public async Task<GetLedgerAccountResponse> LedgerAccountsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/ledger-accounts/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLedgerAccountResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Ledger Account
		/// Update Ledger Account
		/// LedgerAccountsUpdate accounting/ledger-accounts/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>LedgerAccount updated</returns>
		public async Task<UpdateLedgerAccountResponse> LedgerAccountsUpdateAsync(string id, bool raw, LedgerAccount requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/ledger-accounts/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLedgerAccountResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Payments
		/// List Payments
		/// PaymentsAll accounting/payments
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Payments</returns>
		public async Task<GetPaymentsResponse> PaymentsAllAsync(bool raw, string cursor, int limit, PaymentsFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/payments?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPaymentsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Payment
		/// Create Payment
		/// PaymentsAdd accounting/payments
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task PaymentsAddAsync(bool raw, Payment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/payments?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Payment
		/// Delete Payment
		/// PaymentsDelete accounting/payments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Payment deleted</returns>
		public async Task<DeletePaymentResponse> PaymentsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/payments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeletePaymentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Payment
		/// Get Payment
		/// PaymentsOne accounting/payments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Payment</returns>
		public async Task<GetPaymentResponse> PaymentsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/payments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPaymentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Payment
		/// Update Payment
		/// PaymentsUpdate accounting/payments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Payment Updated</returns>
		public async Task<UpdatePaymentResponse> PaymentsUpdateAsync(string id, bool raw, Payment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/payments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdatePaymentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Profit and Loss
		/// Get Profit and Loss
		/// ProfitAndLossOne accounting/profit-and-loss
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Profit & Loss Report</returns>
		public async Task<GetProfitAndLossResponse> ProfitAndLossOneAsync(bool raw, ProfitAndLossFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/profit-and-loss?raw="+raw+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetProfitAndLossResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Purchase Orders
		/// List Purchase Orders
		/// PurchaseOrdersAll accounting/purchase-orders
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <returns>PurchaseOrders</returns>
		public async Task<GetPurchaseOrdersResponse> PurchaseOrdersAllAsync(bool raw, string cursor, PassThroughQuery pass_through, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/purchase-orders?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&pass_through=" + pass_through+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPurchaseOrdersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Purchase Order
		/// Create Purchase Order
		/// PurchaseOrdersAdd accounting/purchase-orders
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task PurchaseOrdersAddAsync(bool raw, PurchaseOrder requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/purchase-orders?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Purchase Order
		/// Delete Purchase Order
		/// PurchaseOrdersDelete accounting/purchase-orders/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>PurchaseOrders</returns>
		public async Task<DeletePurchaseOrderResponse> PurchaseOrdersDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/purchase-orders/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeletePurchaseOrderResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Purchase Order
		/// Get Purchase Order
		/// PurchaseOrdersOne accounting/purchase-orders/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>PurchaseOrders</returns>
		public async Task<GetPurchaseOrderResponse> PurchaseOrdersOneAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/purchase-orders/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPurchaseOrderResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Purchase Order
		/// Update Purchase Order
		/// PurchaseOrdersUpdate accounting/purchase-orders/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>PurchaseOrders</returns>
		public async Task<UpdatePurchaseOrderResponse> PurchaseOrdersUpdateAsync(string id, bool raw, PurchaseOrder requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/purchase-orders/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdatePurchaseOrderResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Suppliers
		/// List Suppliers
		/// SuppliersAll accounting/suppliers
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Suppliers</returns>
		public async Task<GetSuppliersResponse> SuppliersAllAsync(bool raw, string cursor, int limit, SuppliersFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/suppliers?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSuppliersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Supplier
		/// Create Supplier
		/// SuppliersAdd accounting/suppliers
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task SuppliersAddAsync(bool raw, Supplier requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/suppliers?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Supplier
		/// Delete Supplier
		/// SuppliersDelete accounting/suppliers/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Supplier deleted</returns>
		public async Task<DeleteSupplierResponse> SuppliersDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/suppliers/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteSupplierResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Supplier
		/// Get Supplier
		/// SuppliersOne accounting/suppliers/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Supplier</returns>
		public async Task<GetSupplierResponse> SuppliersOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/suppliers/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSupplierResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Supplier
		/// Update Supplier
		/// SuppliersUpdate accounting/suppliers/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Supplier updated</returns>
		public async Task<UpdateSupplierResponse> SuppliersUpdateAsync(string id, bool raw, Supplier requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/suppliers/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateSupplierResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Tax Rates
		/// List Tax Rates. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Connectors Affected: Quickbooks
		/// 
		/// TaxRatesAll accounting/tax-rates
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>TaxRates</returns>
		public async Task<GetTaxRatesResponse> TaxRatesAllAsync(bool raw, string cursor, int limit, TaxRatesFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/tax-rates?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTaxRatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Tax Rate
		/// Create Tax Rate
		/// TaxRatesAdd accounting/tax-rates
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task TaxRatesAddAsync(bool raw, TaxRate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/tax-rates?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete Tax Rate
		/// Delete Tax Rate
		/// TaxRatesDelete accounting/tax-rates/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>TaxRates deleted</returns>
		public async Task<DeleteTaxRateResponse> TaxRatesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/tax-rates/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteTaxRateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Tax Rate
		/// Get Tax Rate. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Support will soon be added to return the actual rate/percentage by doing additional calls in the background to provide the full view of a given tax rate. Connectors Affected: Quickbooks
		/// 
		/// TaxRatesOne accounting/tax-rates/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>TaxRate</returns>
		public async Task<GetTaxRateResponse> TaxRatesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/tax-rates/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTaxRateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Tax Rate
		/// Update Tax Rate
		/// TaxRatesUpdate accounting/tax-rates/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>TaxRate updated</returns>
		public async Task<UpdateTaxRateResponse> TaxRatesUpdateAsync(string id, bool raw, TaxRate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounting/tax-rates/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateTaxRateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

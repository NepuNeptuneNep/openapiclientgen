//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Asset_version_enum_visibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="public")]
		_public = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="private")]
		_private = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="protected")]
		_protected = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Build_enum_runtime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		node8 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		node10 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		node12 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		node14 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		node16 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		node18 = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Build_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		building = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Build_status_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		building = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Function_version_enum_visibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="public")]
		_public = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="private")]
		_private = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="protected")]
		_protected = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Log_enum_level
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		info = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		warn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1service
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Service resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Service resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The base domain name for this Service, which is a combination of the unique name and a randomly generated string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain_base")]
		public string Domain_base { get; set; }
		
		/// <summary>
		/// The string that you assigned to describe the Service resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// Whether to inject Account credentials into a function invocation context.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_credentials")]
		public System.Nullable<System.Boolean> Include_credentials { get; set; }
		
		/// <summary>
		/// The URLs of the Service's nested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Service resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// Whether the Service resource's properties and subresources can be edited via the UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ui_editable")]
		public System.Nullable<System.Boolean> Ui_editable { get; set; }
		
		/// <summary>
		/// A user-defined string that uniquely identifies the Service resource. It can be used in place of the Service resource's `sid` in the URL to address the Service resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_name")]
		public string Unique_name { get; set; }
		
		/// <summary>
		/// The absolute URL of the Service resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1serviceasset
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Asset resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Asset resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Asset resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The string that you assigned to describe the Asset resource. It can be a maximum of 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// The URLs of the Asset resource's nested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Asset resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Asset resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZH[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZH[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Asset resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1serviceassetasset_version
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Asset Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The SID of the Asset resource that is the parent of the Asset Version.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZH[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZH[0-9a-fA-F]{32}$")]
		public string Asset_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Asset Version resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The URL-friendly string by which the Asset Version can be referenced. It can be a maximum of 255 characters. All paths begin with a forward slash ('/'). If an Asset Version creation request is submitted with a path not containing a leading slash, the path will automatically be prepended with one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Asset Version resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Asset Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZN[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Asset Version resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public System.Nullable<Serverlessv1serviceassetasset_versionVisibility> Visibility { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Serverlessv1serviceassetasset_versionVisibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="public")]
		_public = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="private")]
		_private = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="protected")]
		_protected = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1servicebuild
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Build resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The list of Asset Version resource SIDs that are included in the Build.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset_versions")]
		public string[] Asset_versions { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Build resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Build resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// A list of objects that describe the Dependencies included in the Build. Each object contains the `name` and `version` of the dependency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dependencies")]
		public string[] Dependencies { get; set; }
		
		/// <summary>
		/// The list of Function Version resource SIDs that are included in the Build.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="function_versions")]
		public string[] Function_versions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public Build_enum_runtime Runtime { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Build resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Build resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZB[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZB[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Build_enum_status Status { get; set; }
		
		/// <summary>
		/// The absolute URL of the Build resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1servicebuildbuild_status
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Build resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Build resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Build resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZB[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZB[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Build_enum_status Status { get; set; }
		
		/// <summary>
		/// The absolute URL of the Build Status resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1serviceenvironment
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Environment resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The SID of the build deployed in the environment.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZB[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZB[0-9a-fA-F]{32}$")]
		public string Build_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Environment resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Environment resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The domain name for all Functions and Assets deployed in the Environment, using the Service unique name, a randomly-generated Service suffix, and an optional Environment domain suffix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain_name")]
		public string Domain_name { get; set; }
		
		/// <summary>
		/// A URL-friendly name that represents the environment and forms part of the domain name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain_suffix")]
		public string Domain_suffix { get; set; }
		
		/// <summary>
		/// The URLs of the Environment resource's nested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Environment resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Environment resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZE[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZE[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// A user-defined string that uniquely identifies the Environment resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_name")]
		public string Unique_name { get; set; }
		
		/// <summary>
		/// The absolute URL of the Environment resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1serviceenvironmentdeployment
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Deployment resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The SID of the Build for the deployment.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZB[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZB[0-9a-fA-F]{32}$")]
		public string Build_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Deployment resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Deployment resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The SID of the Environment for the Deployment.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZE[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZE[0-9a-fA-F]{32}$")]
		public string Environment_sid { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Deployment resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Deployment resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZD[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZD[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Deployment resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1serviceenvironmentlog
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Log resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The SID of the build that corresponds to the log.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZB[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZB[0-9a-fA-F]{32}$")]
		public string Build_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Log resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The SID of the deployment that corresponds to the log.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZD[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployment_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZD[0-9a-fA-F]{32}$")]
		public string Deployment_sid { get; set; }
		
		/// <summary>
		/// The SID of the environment in which the log occurred.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZE[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZE[0-9a-fA-F]{32}$")]
		public string Environment_sid { get; set; }
		
		/// <summary>
		/// The SID of the function whose invocation produced the log.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZH[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="function_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZH[0-9a-fA-F]{32}$")]
		public string Function_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="level")]
		public Log_enum_level Level { get; set; }
		
		/// <summary>
		/// The log message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The SID of the request associated with the log.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^RQ[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^RQ[0-9a-fA-F]{32}$")]
		public string Request_sid { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Log resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Log resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^NO[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^NO[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Log resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1serviceenvironmentvariable
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Variable resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Variable resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Variable resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The SID of the Environment in which the Variable exists.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZE[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZE[0-9a-fA-F]{32}$")]
		public string Environment_sid { get; set; }
		
		/// <summary>
		/// A string by which the Variable resource can be referenced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Variable resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Variable resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZV[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZV[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Variable resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// A string that contains the actual value of the Variable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1servicefunction
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Function resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Function resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Function resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public System.Nullable<System.DateTimeOffset> Date_updated { get; set; }
		
		/// <summary>
		/// The string that you assigned to describe the Function resource. It can be a maximum of 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// The URLs of nested resources of the Function resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Function resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Function resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZH[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZH[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Function resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1servicefunctionfunction_version
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Function Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The date and time in GMT when the Function Version resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The SID of the Function resource that is the parent of the Function Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZH[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="function_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZH[0-9a-fA-F]{32}$")]
		public string Function_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The URL-friendly string by which the Function Version resource can be referenced. It can be a maximum of 255 characters. All paths begin with a forward slash ('/'). If a Function Version creation request is submitted with a path not containing a leading slash, the path will automatically be prepended with one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Function Version resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Function Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZN[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The absolute URL of the Function Version resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public System.Nullable<Serverlessv1servicefunctionfunction_versionVisibility> Visibility { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Serverlessv1servicefunctionfunction_versionVisibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="public")]
		_public = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="private")]
		_private = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="protected")]
		_protected = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Serverlessv1servicefunctionfunction_versionfunction_version_content
	{
		
		/// <summary>
		/// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Function Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The content of the Function Version resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The SID of the Function that is the parent of the Function Version.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZH[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="function_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZH[0-9a-fA-F]{32}$")]
		public string Function_sid { get; set; }
		
		/// <summary>
		/// The SID of the Service that the Function Version resource is associated with.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZS[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZS[0-9a-fA-F]{32}$")]
		public string Service_sid { get; set; }
		
		/// <summary>
		/// The unique string that we created to identify the Function Version resource.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^ZN[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ZN[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve a list of all Services.
		/// ListService v1/Services
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListServiceReturn> ListServiceAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListServiceReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Assets.
		/// ListAsset v1/Services/{ServiceSid}/Assets
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Asset resources from.</param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListAssetReturn> ListAssetAsync(string ServiceSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Assets&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAssetReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Asset Versions.
		/// ListAssetVersion v1/Services/{ServiceSid}/Assets/{AssetSid}/Versions
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Asset Version resource from.</param>
		/// <param name="AssetSid">The SID of the Asset resource that is the parent of the Asset Version resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListAssetVersionReturn> ListAssetVersionAsync(string ServiceSid, string AssetSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Assets/"+ (AssetSid==null? "" : System.Uri.EscapeDataString(AssetSid))+"/Versions&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAssetVersionReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Asset Version.
		/// FetchAssetVersion v1/Services/{ServiceSid}/Assets/{AssetSid}/Versions/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Asset Version resource from.</param>
		/// <param name="AssetSid">The SID of the Asset resource that is the parent of the Asset Version resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Asset Version resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1serviceassetasset_version> FetchAssetVersionAsync(string ServiceSid, string AssetSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Assets/"+ (AssetSid==null? "" : System.Uri.EscapeDataString(AssetSid))+"/Versions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1serviceassetasset_version>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an Asset resource.
		/// DeleteAsset v1/Services/{ServiceSid}/Assets/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to delete the Asset resource from.</param>
		/// <param name="Sid">The SID that identifies the Asset resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteAssetAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Assets/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Asset resource.
		/// FetchAsset v1/Services/{ServiceSid}/Assets/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Asset resource from.</param>
		/// <param name="Sid">The SID that identifies the Asset resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1serviceasset> FetchAssetAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Assets/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1serviceasset>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Builds.
		/// ListBuild v1/Services/{ServiceSid}/Builds
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Build resources from.</param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListBuildReturn> ListBuildAsync(string ServiceSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Builds&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListBuildReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a Build resource.
		/// DeleteBuild v1/Services/{ServiceSid}/Builds/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to delete the Build resource from.</param>
		/// <param name="Sid">The SID of the Build resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteBuildAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Builds/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Build resource.
		/// FetchBuild v1/Services/{ServiceSid}/Builds/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Build resource from.</param>
		/// <param name="Sid">The SID of the Build resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1servicebuild> FetchBuildAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Builds/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1servicebuild>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Build resource.
		/// FetchBuildStatus v1/Services/{ServiceSid}/Builds/{Sid}/Status
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Build resource from.</param>
		/// <param name="Sid">The SID of the Build resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1servicebuildbuild_status> FetchBuildStatusAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Builds/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid))+"/Status";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1servicebuildbuild_status>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all environments.
		/// ListEnvironment v1/Services/{ServiceSid}/Environments
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Environment resources from.</param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListEnvironmentReturn> ListEnvironmentAsync(string ServiceSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListEnvironmentReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Deployments.
		/// ListDeployment v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Deployment resources from.</param>
		/// <param name="EnvironmentSid">The SID of the Environment used by the Deployment resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListDeploymentReturn> ListDeploymentAsync(string ServiceSid, string EnvironmentSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Deployments&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDeploymentReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Deployment.
		/// FetchDeployment v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Deployment resource from.</param>
		/// <param name="EnvironmentSid">The SID of the Environment used by the Deployment to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID that identifies the Deployment resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1serviceenvironmentdeployment> FetchDeploymentAsync(string ServiceSid, string EnvironmentSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Deployments/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1serviceenvironmentdeployment>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all logs.
		/// ListLog v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Logs
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Log resource from.</param>
		/// <param name="EnvironmentSid">The SID of the environment with the Log resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="FunctionSid">The SID of the function whose invocation produced the Log resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="StartDate">The date/time (in GMT, ISO 8601) after which the Log resources must have been created. Defaults to 1 day prior to current date/time.</param>
		/// <param name="EndDate">The date/time (in GMT, ISO 8601) before which the Log resources must have been created. Defaults to current date/time.</param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListLogReturn> ListLogAsync(string ServiceSid, string EnvironmentSid, string FunctionSid, System.DateTimeOffset StartDate, System.DateTimeOffset EndDate, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Logs&FunctionSid=" + (FunctionSid==null? "" : System.Uri.EscapeDataString(FunctionSid))+"&StartDate=" + StartDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&EndDate=" + EndDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListLogReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific log.
		/// FetchLog v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Logs/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Log resource from.</param>
		/// <param name="EnvironmentSid">The SID of the environment with the Log resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Log resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1serviceenvironmentlog> FetchLogAsync(string ServiceSid, string EnvironmentSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Logs/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1serviceenvironmentlog>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Variables.
		/// ListVariable v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Variable resources from.</param>
		/// <param name="EnvironmentSid">The SID of the Environment with the Variable resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListVariableReturn> ListVariableAsync(string ServiceSid, string EnvironmentSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Variables&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVariableReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a specific Variable.
		/// DeleteVariable v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to delete the Variable resource from.</param>
		/// <param name="EnvironmentSid">The SID of the Environment with the Variables to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Variable resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteVariableAsync(string ServiceSid, string EnvironmentSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Variables/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Variable.
		/// FetchVariable v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Variable resource from.</param>
		/// <param name="EnvironmentSid">The SID of the Environment with the Variable resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Variable resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1serviceenvironmentvariable> FetchVariableAsync(string ServiceSid, string EnvironmentSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (EnvironmentSid==null? "" : System.Uri.EscapeDataString(EnvironmentSid))+"/Variables/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1serviceenvironmentvariable>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a specific environment.
		/// DeleteEnvironment v1/Services/{ServiceSid}/Environments/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to delete the Environment resource from.</param>
		/// <param name="Sid">The SID of the Environment resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteEnvironmentAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific environment.
		/// FetchEnvironment v1/Services/{ServiceSid}/Environments/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Environment resource from.</param>
		/// <param name="Sid">The SID of the Environment resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1serviceenvironment> FetchEnvironmentAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Environments/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1serviceenvironment>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Functions.
		/// ListFunction v1/Services/{ServiceSid}/Functions
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Function resources from.</param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListFunctionReturn> ListFunctionAsync(string ServiceSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Functions&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListFunctionReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of all Function Version resources.
		/// ListFunctionVersion v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to read the Function Version resources from.</param>
		/// <param name="FunctionSid">The SID of the function that is the parent of the Function Version resources to read.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="Page">The page index. This value is simply for client state.
		/// Minimum: 0
		// </param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListFunctionVersionReturn> ListFunctionVersionAsync(string ServiceSid, string FunctionSid, int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Functions/"+ (FunctionSid==null? "" : System.Uri.EscapeDataString(FunctionSid))+"/Versions&PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListFunctionVersionReturn>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Function Version resource.
		/// FetchFunctionVersion v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Function Version resource from.</param>
		/// <param name="FunctionSid">The SID of the function that is the parent of the Function Version resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Function Version resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1servicefunctionfunction_version> FetchFunctionVersionAsync(string ServiceSid, string FunctionSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Functions/"+ (FunctionSid==null? "" : System.Uri.EscapeDataString(FunctionSid))+"/Versions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1servicefunctionfunction_version>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a the content of a specific Function Version resource.
		/// FetchFunctionVersionContent v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions/{Sid}/Content
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Function Version content from.</param>
		/// <param name="FunctionSid">The SID of the Function that is the parent of the Function Version content to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <param name="Sid">The SID of the Function Version content to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1servicefunctionfunction_versionfunction_version_content> FetchFunctionVersionContentAsync(string ServiceSid, string FunctionSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Functions/"+ (FunctionSid==null? "" : System.Uri.EscapeDataString(FunctionSid))+"/Versions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid))+"/Content";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1servicefunctionfunction_versionfunction_version_content>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a Function resource.
		/// DeleteFunction v1/Services/{ServiceSid}/Functions/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to delete the Function resource from.</param>
		/// <param name="Sid">The SID of the Function resource to delete.
		/// Min length: 34
		/// Max length: 34
		// </param>
		public async Task DeleteFunctionAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Functions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Function resource.
		/// FetchFunction v1/Services/{ServiceSid}/Functions/{Sid}
		/// </summary>
		/// <param name="ServiceSid">The SID of the Service to fetch the Function resource from.</param>
		/// <param name="Sid">The SID of the Function resource to fetch.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1servicefunction> FetchFunctionAsync(string ServiceSid, string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (ServiceSid==null? "" : System.Uri.EscapeDataString(ServiceSid))+"/Functions/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1servicefunction>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a Service resource.
		/// DeleteService v1/Services/{Sid}
		/// </summary>
		/// <param name="Sid">The `sid` or `unique_name` of the Service resource to delete.</param>
		public async Task DeleteServiceAsync(string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a specific Service resource.
		/// FetchService v1/Services/{Sid}
		/// </summary>
		/// <param name="Sid">The `sid` or `unique_name` of the Service resource to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Serverlessv1service> FetchServiceAsync(string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Services/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Serverlessv1service>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class ListServiceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListServiceReturnMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="services")]
		public Serverlessv1service[] Services { get; set; }
	}
	
	public class ListServiceReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListAssetReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public Serverlessv1serviceasset[] Assets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListAssetReturnMeta Meta { get; set; }
	}
	
	public class ListAssetReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListAssetVersionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="asset_versions")]
		public Serverlessv1serviceassetasset_version[] Asset_versions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListAssetVersionReturnMeta Meta { get; set; }
	}
	
	public class ListAssetVersionReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListBuildReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public Serverlessv1servicebuild[] Builds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListBuildReturnMeta Meta { get; set; }
	}
	
	public class ListBuildReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListEnvironmentReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public Serverlessv1serviceenvironment[] Environments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListEnvironmentReturnMeta Meta { get; set; }
	}
	
	public class ListEnvironmentReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListDeploymentReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="deployments")]
		public Serverlessv1serviceenvironmentdeployment[] Deployments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListDeploymentReturnMeta Meta { get; set; }
	}
	
	public class ListDeploymentReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListLogReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="logs")]
		public Serverlessv1serviceenvironmentlog[] Logs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListLogReturnMeta Meta { get; set; }
	}
	
	public class ListLogReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListVariableReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListVariableReturnMeta Meta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="variables")]
		public Serverlessv1serviceenvironmentvariable[] Variables { get; set; }
	}
	
	public class ListVariableReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListFunctionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="functions")]
		public Serverlessv1servicefunction[] Functions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListFunctionReturnMeta Meta { get; set; }
	}
	
	public class ListFunctionReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListFunctionVersionReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="function_versions")]
		public Serverlessv1servicefunctionfunction_version[] Function_versions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListFunctionVersionReturnMeta Meta { get; set; }
	}
	
	public class ListFunctionVersionReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

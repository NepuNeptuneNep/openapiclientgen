//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApiException : Exception
	{
		
		[System.Runtime.Serialization.DataMember(Name="customError")]
		public object CustomError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public ValidationError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isCustomErrorObject")]
		public System.Nullable<System.Boolean> IsCustomErrorObject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isModelValidatonError")]
		public System.Nullable<System.Boolean> IsModelValidatonError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="referenceDocumentLink")]
		public string ReferenceDocumentLink { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="referenceErrorCode")]
		public string ReferenceErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public System.Nullable<System.Int32> StatusCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationError
	{
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApiResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public object Result { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public System.Nullable<System.Int32> StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// The ArticleDTO Class.
	///Contains relevant fields of Article DTO by masking actual Article entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArticleDTO
	{
		
		/// <summary>
		/// Active Status 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activeStatus")]
		public System.Nullable<System.Boolean> ActiveStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applyForAllGyms")]
		public System.Nullable<System.Boolean> ApplyForAllGyms { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="articleId")]
		public System.Nullable<System.Int32> ArticleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="availableGyms")]
		public GymDTO[] AvailableGyms { get; set; }
		
		/// <summary>
		/// Default AvailableQty
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableQty")]
		public System.Nullable<System.Decimal> AvailableQty { get; set; }
		
		/// <summary>
		/// Min length: 0
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="barcode")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Barcode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdUser")]
		public string CreatedUser { get; set; }
		
		/// <summary>
		/// Access Schedule CRON Expression 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cronExpression")]
		public string CronExpression { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Pattern: ^\d+.\d{0,2}$|^\d
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d+.\d{0,2}$|^\d")]
		public System.Nullable<System.Decimal> Discount { get; set; }
		
		/// <summary>
		/// Default EmployeeDiscount
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employeeDiscount")]
		public System.Nullable<System.Decimal> EmployeeDiscount { get; set; }
		
		/// <summary>
		/// Default EmployeePrice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employeePrice")]
		public System.Nullable<System.Decimal> EmployeePrice { get; set; }
		
		/// <summary>
		/// Gym Customizations 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gymArticles")]
		public GymArticleDetailsDTO[] GymArticles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isAddOn")]
		public System.Nullable<System.Boolean> IsAddOn { get; set; }
		
		/// <summary>
		/// Default IsInventoryItem of the Article 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isInventoryItem")]
		public System.Nullable<System.Boolean> IsInventoryItem { get; set; }
		
		/// <summary>
		/// Default IsObsolete of the Article 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isObsolete")]
		public System.Nullable<System.Boolean> IsObsolete { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="measureUnit")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string MeasureUnit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modifiedDate")]
		public System.Nullable<System.DateTimeOffset> ModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modifiedUser")]
		public string ModifiedUser { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 0
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number")]
		public System.Nullable<System.Int32> Number { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^\d+.\d{0,2}$|^\d
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d+.\d{0,2}$|^\d")]
		public decimal Price { get; set; }
		
		/// <summary>
		/// Deafault ReorderLevel
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reorderLevel")]
		public System.Nullable<System.Decimal> ReorderLevel { get; set; }
		
		/// <summary>
		/// Default Revenue account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revenueAccountId")]
		public System.Nullable<System.Int32> RevenueAccountId { get; set; }
		
		/// <summary>
		/// Default SellingPrice
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellingPrice")]
		public System.Nullable<System.Decimal> SellingPrice { get; set; }
		
		/// <summary>
		/// Min length: 0
		/// Max length: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public string Tags { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Pattern: item|service|access
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"item|service|access")]
		public string Type { get; set; }
		
		/// <summary>
		/// Pattern: ^\d+.\d{0,2}$|^\d
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vat")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d+.\d{0,2}$|^\d")]
		public System.Nullable<System.Decimal> Vat { get; set; }
		
		/// <summary>
		/// VAT Applicable 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vatApplicable")]
		public System.Nullable<System.Boolean> VatApplicable { get; set; }
	}
	
	/// <summary>
	/// The GymDTO Class.
	///Contains relevant fields of Gym DTO by masking actual Gym entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GymDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="externalGymNumber")]
		public System.Nullable<System.Int32> ExternalGymNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gymId")]
		public System.Nullable<System.Int32> GymId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gymName")]
		public string GymName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
	}
	
	/// <summary>
	/// The GymArticleDetailsDTO Class.
	///Contains fields of GymArticleDetails DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GymArticleDetailsDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="articleId")]
		public System.Nullable<System.Int32> ArticleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="availableQty")]
		public System.Nullable<System.Decimal> AvailableQty { get; set; }
		
		/// <summary>
		/// Created User 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdUser")]
		public string CreatedUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employeeDiscount")]
		public System.Nullable<System.Decimal> EmployeeDiscount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employeePrice")]
		public System.Nullable<System.Decimal> EmployeePrice { get; set; }
		
		/// <summary>
		/// Gym Id where article is related 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gymId")]
		public System.Nullable<System.Int32> GymId { get; set; }
		
		/// <summary>
		/// GymId - Gym Id string with comma separated GymIds 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gymIdList")]
		public string GymIdList { get; set; }
		
		/// <summary>
		/// Gym Name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gymName")]
		public string GymName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Set as the default values for the article 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDefault")]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isInventoryItem")]
		public System.Nullable<System.Boolean> IsInventoryItem { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isObsolete")]
		public System.Nullable<System.Boolean> IsObsolete { get; set; }
		
		/// <summary>
		/// Modified user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedUser")]
		public string ModifiedUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reorderLevel")]
		public System.Nullable<System.Decimal> ReorderLevel { get; set; }
		
		/// <summary>
		/// Revenue account Id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revenueAccountId")]
		public System.Nullable<System.Int32> RevenueAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sellingPrice")]
		public System.Nullable<System.Decimal> SellingPrice { get; set; }
	}
	
	/// <summary>
	/// The ArticleSearchDTO Class.
	///Contains relevant fields of ArticleSearch DTO by masking actual Article entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArticleSearchDTO
	{
		
		/// <summary>
		/// Active Status 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activeStatus")]
		public System.Nullable<System.Boolean> ActiveStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="applyForAllGyms")]
		public System.Nullable<System.Boolean> ApplyForAllGyms { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="articleId")]
		public System.Nullable<System.Int32> ArticleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdUser")]
		public string CreatedUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// MeasureUnit 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="measureUnit")]
		public string MeasureUnit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modifiedDate")]
		public System.Nullable<System.DateTimeOffset> ModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modifiedUser")]
		public string ModifiedUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number")]
		public System.Nullable<System.Int32> Number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Decimal> Price { get; set; }
		
		/// <summary>
		/// Actual Selling price of the article 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sellingPrice")]
		public System.Nullable<System.Decimal> SellingPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
		
		/// <summary>
		/// total number of recode for particular search 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCount")]
		public System.Nullable<System.Int32> TotalCount { get; set; }
		
		/// <summary>
		/// article type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfArticleDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public ArticleDTO Result { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfBoolean
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public System.Nullable<System.Boolean> Result { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfGymDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public GymDTO Result { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfInteger
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public System.Nullable<System.Int32> Result { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfListOfArticleSearchDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public ArticleSearchDTO[] Result { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfListOfPackageSearchDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PackageSearchDTO[] Result { get; set; }
	}
	
	/// <summary>
	/// The PackageSearchDTO Class.
	///Contains relevant fields of PackageSearch DTO by masking actual Package entity's fields in application.
	///               
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackageSearchDTO
	{
		
		/// <summary>
		/// Active Status 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activeStatus")]
		public System.Nullable<System.Boolean> ActiveStatus { get; set; }
		
		/// <summary>
		/// sum of addon fees.
		///incoming values for this filed will ignore.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonFee")]
		public System.Nullable<System.Decimal> AddonFee { get; set; }
		
		/// <summary>
		/// Boolean value to indicate wheather package is available in all the gyms.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applyForAllGyms")]
		public System.Nullable<System.Boolean> ApplyForAllGyms { get; set; }
		
		/// <summary>
		/// Range of period a member is bound to the contract if he/she choose this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindingPeriod")]
		public System.Nullable<System.Int32> BindingPeriod { get; set; }
		
		/// <summary>
		/// Package created DateTime.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// Package created user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdUser")]
		public string CreatedUser { get; set; }
		
		/// <summary>
		/// Common descriptions about package.If there are more instructions can be stored as comma separated values.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string Features { get; set; }
		
		/// <summary>
		/// No of months gym member can come without payments.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="freeMonths")]
		public System.Nullable<System.Int32> FreeMonths { get; set; }
		
		/// <summary>
		/// Boolean value to indicate member can remove already added addons if he choose this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberCanRemoveAddOns")]
		public System.Nullable<System.Boolean> MemberCanRemoveAddOns { get; set; }
		
		/// <summary>
		/// Package last modified DateTime.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedDate")]
		public System.Nullable<System.DateTimeOffset> ModifiedDate { get; set; }
		
		/// <summary>
		/// Package last modified user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedUser")]
		public string ModifiedUser { get; set; }
		
		/// <summary>
		/// Monthly installment fee if package is not fixed visit.
		///addition of the servicefee and addon fees divided by binding period.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthlyFee")]
		public System.Nullable<System.Decimal> MonthlyFee { get; set; }
		
		/// <summary>
		/// No of visits for fixed package 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfVisits")]
		public System.Nullable<System.Int32> NumberOfVisits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="packageId")]
		public System.Nullable<System.Int32> PackageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="packageName")]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="packageNumber")]
		public System.Nullable<System.Int32> PackageNumber { get; set; }
		
		/// <summary>
		/// Package type can be either fixed visit or unlimited.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageType")]
		public string PackageType { get; set; }
		
		/// <summary>
		/// Registartion fee for the package at a gym.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="registrationFee")]
		public System.Nullable<System.Decimal> RegistrationFee { get; set; }
		
		/// <summary>
		/// total Service charge of the package for entire period.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceFee")]
		public System.Nullable<System.Decimal> ServiceFee { get; set; }
		
		/// <summary>
		/// Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
		
		/// <summary>
		/// total number of recode for particular search 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCount")]
		public System.Nullable<System.Int32> TotalCount { get; set; }
		
		/// <summary>
		/// total price for the package including Addon fees, service fee and registration fee.
		///incoming values for this field will ignore.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalPrice")]
		public System.Nullable<System.Decimal> TotalPrice { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfPackageDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PackageDTO Result { get; set; }
	}
	
	/// <summary>
	/// The PackageDTO Class.
	///Contains relevant fields of Package DTO by masking actual Package entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackageDTO
	{
		
		/// <summary>
		/// Extra articles list added to the given package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addOns")]
		public PackageItemDTO[] AddOns { get; set; }
		
		/// <summary>
		/// sum of addon fees.
		///incoming values for this filed will ignore.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonFee")]
		public System.Nullable<System.Decimal> AddonFee { get; set; }
		
		/// <summary>
		/// Boolean value to indicate wheather package is available in all the gyms.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applyForAllGyms")]
		public System.Nullable<System.Boolean> ApplyForAllGyms { get; set; }
		
		/// <summary>
		/// Gyms list where this package is available.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableGyms")]
		public GymDTO[] AvailableGyms { get; set; }
		
		/// <summary>
		/// Range of period a member is bound to the contract if he/she choose this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindingPeriod")]
		public System.Nullable<System.Int32> BindingPeriod { get; set; }
		
		/// <summary>
		/// Package created DateTime.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		/// <summary>
		/// Package created user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdUser")]
		public string CreatedUser { get; set; }
		
		/// <summary>
		/// Common descriptions about package.If there are more instructions 
		///             can be stored as comma separated values.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// End date of the package.After that package is not valid for use.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endDate")]
		public System.Nullable<System.DateTimeOffset> EndDate { get; set; }
		
		/// <summary>
		/// No of months the fixed package is valid for sale
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireInMonths")]
		public System.Nullable<System.Int32> ExpireInMonths { get; set; }
		
		/// <summary>
		/// What are the facilities, features available for package.ex:- wifi,
		///ACm etc.Can be stored as comma seperated values.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string Features { get; set; }
		
		/// <summary>
		/// No of months gym member can come without payments.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="freeMonths")]
		public System.Nullable<System.Int32> FreeMonths { get; set; }
		
		/// <summary>
		/// Instruction to the gym members relevant to the package.
		///             If there are more instructions can be stored as comma seperated values.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instructionsToGymUsers")]
		public string InstructionsToGymUsers { get; set; }
		
		/// <summary>
		/// Instruction to the MRM members relevant to the package.
		///             If there are more instructions can be stored as comma seperated values.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instructionsToWebUsers")]
		public string InstructionsToWebUsers { get; set; }
		
		/// <summary>
		/// Boolean value to indicate this package is still active or not.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isActive")]
		public System.Nullable<System.Boolean> IsActive { get; set; }
		
		/// <summary>
		/// Boolean value to indicate ATG transaction from bank is applicable or not.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isAtg")]
		public System.Nullable<System.Boolean> IsAtg { get; set; }
		
		/// <summary>
		/// Boolean value to indicate the contract will auto renew after expiration 
		///             if this package would be chosen.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isAutoRenew")]
		public System.Nullable<System.Boolean> IsAutoRenew { get; set; }
		
		/// <summary>
		/// Boolean value to indicate if the first month charges is free.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isFirstMonthFree")]
		public System.Nullable<System.Boolean> IsFirstMonthFree { get; set; }
		
		/// <summary>
		/// Boolean value to indicate this package has registration fee or not.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isRegistrationFee")]
		public System.Nullable<System.Boolean> IsRegistrationFee { get; set; }
		
		/// <summary>
		/// Boolean value to indicate rest amount is applicable or not.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isRestAmount")]
		public System.Nullable<System.Boolean> IsRestAmount { get; set; }
		
		/// <summary>
		/// Boolean value to indicate package is visible in Mobile App or not.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isShownInMobile")]
		public System.Nullable<System.Boolean> IsShownInMobile { get; set; }
		
		/// <summary>
		/// Boolean value to indicate package can be sponsored or not by other party.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isSponsorPackage")]
		public System.Nullable<System.Boolean> IsSponsorPackage { get; set; }
		
		/// <summary>
		/// If a member join the gym middle of a month via this package, 
		///             what is the maximum amount of price can be neglected from payment from the member.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximumGiveAwayRestAmount")]
		public System.Nullable<System.Decimal> MaximumGiveAwayRestAmount { get; set; }
		
		/// <summary>
		/// Boolean value to indicate member can add extra addons he wish if he choose this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberCanAddAddOns")]
		public System.Nullable<System.Boolean> MemberCanAddAddOns { get; set; }
		
		/// <summary>
		/// Boolean value to indicate if member can leave from contract within 
		///             free period if he/she choose this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberCanLeaveWithinFreePeriod")]
		public System.Nullable<System.Boolean> MemberCanLeaveWithinFreePeriod { get; set; }
		
		/// <summary>
		/// Boolean value to indicate member can remove already added addons if he choose this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberCanRemoveAddOns")]
		public System.Nullable<System.Boolean> MemberCanRemoveAddOns { get; set; }
		
		/// <summary>
		/// Package last modified DateTime.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedDate")]
		public System.Nullable<System.DateTimeOffset> ModifiedDate { get; set; }
		
		/// <summary>
		/// Package last modified user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedUser")]
		public string ModifiedUser { get; set; }
		
		/// <summary>
		/// Monthly installment fee if package is not fixed visit.
		///addition of the servicefee and addon fees divided by binding period.
		///             read only
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthlyFee")]
		public System.Nullable<System.Decimal> MonthlyFee { get; set; }
		
		/// <summary>
		/// Next Package the contract continue after the binding period of this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPackageNumber")]
		public System.Nullable<System.Int32> NextPackageNumber { get; set; }
		
		/// <summary>
		/// Maximum Number of installment a member can divide the package price/cost to pay.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfInstallments")]
		public System.Nullable<System.Int32> NumberOfInstallments { get; set; }
		
		/// <summary>
		/// If package is fixed visit type, then how many visits are available for this package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfVisits")]
		public System.Nullable<System.Int32> NumberOfVisits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="packageId")]
		public System.Nullable<System.Int32> PackageId { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="packageName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="packageNumber")]
		public string PackageNumber { get; set; }
		
		/// <summary>
		/// Package type can be either fixed visit or unlimited.
		///            
		/// Required
		/// Min length: 1
		/// Pattern: fixedvisit|unlimited
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="packageType")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"fixedvisit|unlimited")]
		public string PackageType { get; set; }
		
		/// <summary>
		/// Cost/Price of the single visit to gym.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="perVisitPrice")]
		public System.Nullable<System.Decimal> PerVisitPrice { get; set; }
		
		/// <summary>
		/// Registartion fee for the package at a gym.
		///             read only
		///            
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="registrationFee")]
		public decimal RegistrationFee { get; set; }
		
		/// <summary>
		/// total Service charge of the package for entire period.
		///            
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="serviceFee")]
		public decimal ServiceFee { get; set; }
		
		/// <summary>
		/// Boolean value to show this package in MRM system or not.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shownInWeb")]
		public System.Nullable<System.Boolean> ShownInWeb { get; set; }
		
		/// <summary>
		/// Start date of the package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startDate")]
		public System.Nullable<System.DateTimeOffset> StartDate { get; set; }
		
		/// <summary>
		/// Comma separated string values in case of need of maintain some labels kind of 
		///             stuff relevant to the package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string Tags { get; set; }
		
		/// <summary>
		/// total price for the package including Addon fees, service fee and registration fee.
		///incoming values for this field will ignore.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalPrice")]
		public System.Nullable<System.Decimal> TotalPrice { get; set; }
	}
	
	/// <summary>
	/// The PackageItemDTO Class.
	///Contains relevant fields of PackageItem DTO by masking actual Package entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackageItemDTO
	{
		
		/// <summary>
		/// Refer to ArticleId in Article table in DB.
		///            
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="articleId")]
		public int ArticleId { get; set; }
		
		/// <summary>
		/// Name of the article(Addon) in a particular package.
		///             read only
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="articleName")]
		public string ArticleName { get; set; }
		
		/// <summary>
		/// Number assigned the article(Addon) in a particular package.
		///             read only
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="articleNumber")]
		public System.Nullable<System.Int32> ArticleNumber { get; set; }
		
		/// <summary>
		/// Price of the article determined from that package.
		///Price of a same article can be varied from package to package.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="articlePrice")]
		public System.Nullable<System.Decimal> ArticlePrice { get; set; }
		
		/// <summary>
		/// Number of the installment this article is available to.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOrder")]
		public System.Nullable<System.Int32> EndOrder { get; set; }
		
		/// <summary>
		/// Is Included in service charge 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isIncludeServiceInCharge")]
		public System.Nullable<System.Boolean> IsIncludeServiceInCharge { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="measureUnit")]
		public string MeasureUnit { get; set; }
		
		/// <summary>
		/// How many article(Addon) is available for that package from that type.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfItems")]
		public System.Nullable<System.Decimal> NumberOfItems { get; set; }
		
		/// <summary>
		/// Number of the installment this article is available from.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOrder")]
		public System.Nullable<System.Int32> StartOrder { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfPackageSearchDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PackageSearchDTO Result { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfStatusDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public StatusDTO Result { get; set; }
	}
	
	/// <summary>
	/// Imideate response for long running api call.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StatusDTO
	{
		
		/// <summary>
		/// Reference id for status endpoint
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		/// <summary>
		/// Status of API Call
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusText")]
		public string StatusText { get; set; }
		
		/// <summary>
		/// Relative url for stauts check
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The DefaultResponseDTO Class.
	///Contains fields of DefaultResponse DTO in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultResponseDTOOfString
	{
		
		[System.Runtime.Serialization.DataMember(Name="isError")]
		public System.Nullable<System.Boolean> IsError { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="responseException")]
		public object ResponseException { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public string Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Exception
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Exception InnerException { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackTrace { get; set; }
	}
	
	/// <summary>
	/// The LoginDTO Class.
	///Contains relevant fields of Login DTO.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoginDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="remember")]
		public System.Nullable<System.Boolean> Remember { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// Mesure unit to represent article mesure unit 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MeasureUnitDTO
	{
		
		/// <summary>
		/// Id of the table
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Mesure Unit Type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Type of the article used with (all, service, item)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The MemeberDTO Class.
	///Contains relevant fields of Member DTO by masking actual Member entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="referenceId")]
		public System.Nullable<System.Int32> ReferenceId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public object Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusId")]
		public System.Nullable<System.Int32> StatusId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusText")]
		public string StatusText { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProblemDetails
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="extensions")]
		public System.Collections.Generic.Dictionary<string, object> Extensions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The TestDTO Class.
	///Contains relevant fields of Test DTO by masking actual Test entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestDTO
	{
		
		/// <summary>
		/// Id of the Test object
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	/// <summary>
	/// The UserDTO Class.
	///Contains relevant fields of User DTO by masking actual User entity's fields in application.
	///            
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserDTO
	{
		
		/// <summary>
		/// Account number of the user.It can be any stakeholder of the application.even can be a gym.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountNumber")]
		public string AccountNumber { get; set; }
		
		/// <summary>
		/// Entity number that make a relationship with BOX API DB.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalEntityNumber")]
		public string ExternalEntityNumber { get; set; }
		
		/// <summary>
		/// Gaurdian of the this user if he/she is under 18 years old.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="guardian")]
		public System.Nullable<System.Int32> Guardian { get; set; }
		
		/// <summary>
		/// If this user is a gym, then the gym number.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gymNumber")]
		public string GymNumber { get; set; }
		
		/// <summary>
		/// If Someone introduced this user to the system, then that user's UserId.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="introduceBy")]
		public System.Nullable<System.Int32> IntroduceBy { get; set; }
		
		/// <summary>
		/// Name of the user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Unique number maintain by application to idenify user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Type of the user.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="typeId")]
		public System.Nullable<System.Int32> TypeId { get; set; }
		
		/// <summary>
		/// Indentity number(primary key) for user object. Generated in DB table when inserting a record.
		///            
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Delete article from the system
		/// 
		/// Article_Delete api/Article
		/// </summary>
		/// <param name="ArticleId">indentity number(primary key) for article object</param>
		/// <returns>operation was success(true) or fail(false) </returns>
		public async Task<DefaultResponseDTOOfInteger> Article_DeleteAsync(int ArticleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article?ArticleId="+ArticleId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfInteger>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add new article
		/// 
		/// Article_Post api/Article
		/// </summary>
		/// <param name="requestBody">article object</param>
		public async Task Article_PostAsync(ArticleDTO requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// update existing article
		/// 
		/// Article_Put api/Article
		/// </summary>
		/// <param name="requestBody">article object</param>
		public async Task Article_PutAsync(ArticleDTO requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add article details that associate with a Gym
		/// 
		/// Article_UpdateArticleGymDetails api/Article/ArticleGymDetails
		/// </summary>
		public async Task Article_UpdateArticleGymDetailsAsync(GymArticleDetailsDTO[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/ArticleGymDetails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Article_GetAddons api/Article/GetAddons
		/// </summary>
		/// <param name="searchText">Search text - will be search by the name</param>
		/// <param name="gymIds">Comma separated gymIds deafult "-1" for all gyms</param>
		public async Task<DefaultResponseDTOOfListOfArticleSearchDTO> Article_GetAddonsAsync(string searchText, string gymIds, string type, int limit, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/GetAddons?searchText=" + (searchText==null? "" : System.Uri.EscapeDataString(searchText))+"&gymIds=" + (gymIds==null? "" : System.Uri.EscapeDataString(gymIds))+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&limit="+limit+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfListOfArticleSearchDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Gym specific properties for article
		/// 
		/// Article_GymArticleDetails api/Article/GymArticle/{articleId}/{gymId}
		/// </summary>
		/// <param name="articleId">indentity number(primary key) for article object</param>
		/// <param name="gymId">indentity number(primary key) for gym object</param>
		/// <returns>API Response with Article entity</returns>
		public async Task<GymArticleDetailsDTO> Article_GymArticleDetailsAsync(int articleId, int gymId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/GymArticle/"+articleId+"/"+gymId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GymArticleDetailsDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add measure unit
		/// Article_AddMeasureUnit api/Article/MeasureUnit
		/// </summary>
		/// <param name="requestBody">list of measureUnit</param>
		public async Task Article_AddMeasureUnitAsync(MeasureUnitDTO[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/MeasureUnit";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get mesure units
		/// Article_GetMeasureUnits api/Article/MeasureUnits
		/// </summary>
		/// <param name="type">type of the measure unit (all, item, service)</param>
		public async Task Article_GetMeasureUnitsAsync(string type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/MeasureUnits?type=" + (type==null? "" : System.Uri.EscapeDataString(type));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Revenue Accounts
		/// Article_GetRevenueAccounts api/Article/RevenueAccounts
		/// </summary>
		public async Task Article_GetRevenueAccountsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/RevenueAccounts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search articles
		/// It will only return basic information of article
		/// 
		/// Article_Search api/Article/Search
		/// </summary>
		/// <param name="searchText">part of article name</param>
		/// <param name="gymId">-1 for all gyms </param>
		/// <param name="type">filter article type. default is 'all'</param>
		/// <param name="orderBy">order by column.!-- invalid column will give internal server error</param>
		/// <param name="limit">number of recode in result and default is 100. use negative numbers to order by desc</param>
		/// <param name="offset">number of recodes to skip</param>
		/// <param name="activeStatus">Active Status 1 : Active, 2: Inactive, 3: All, Default : 1</param>
		/// <returns>API Response with set of a Article entities</returns>
		public async Task<DefaultResponseDTOOfListOfArticleSearchDTO> Article_SearchAsync(string searchText, int gymId, string type, string orderBy, int limit, int offset, int activeStatus, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/Search?searchText=" + (searchText==null? "" : System.Uri.EscapeDataString(searchText))+"&gymId="+gymId+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&limit="+limit+"&offset="+offset+"&activeStatus="+activeStatus;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfListOfArticleSearchDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deactivate existing article
		/// Article_UpdateStatus api/Article/UpdateStatus
		/// </summary>
		/// <param name="status">1 : activate , 2 deactivate</param>
		/// <param name="userName">Updating user</param>
		public async Task<DefaultResponseDTOOfInteger> Article_UpdateStatusAsync(int ArticleId, int status, string userName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/UpdateStatus?ArticleId="+ArticleId+"&status="+status+"&userName=" + (userName==null? "" : System.Uri.EscapeDataString(userName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfInteger>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get article details
		/// This will return all properties related to article entity
		/// 
		/// Article_get api/Article/{articleID}
		/// </summary>
		/// <param name="articleID">indentity number (primary key) for article object</param>
		/// <returns>API Response with Article entity</returns>
		public async Task<DefaultResponseDTOOfArticleDTO> Article_getAsync(int articleID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Article/"+articleID;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfArticleDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Authenticate and provide token for autherizations.
		/// 
		/// Auth_Login api/Auth/login
		/// </summary>
		/// <param name="requestBody">Login Credentials</param>
		/// <returns>Authorizized with a new token or unauthorized request.</returns>
		public async Task Auth_LoginAsync(LoginDTO requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Auth/login";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get gym details
		/// This will return all properties related to gym entity
		/// 
		/// Gym_get api/Gym/{gymID}
		/// </summary>
		/// <param name="gymID">indentity number (primary key) for gym object</param>
		/// <returns>API Response with Gym entity</returns>
		public async Task<DefaultResponseDTOOfGymDTO> Gym_getAsync(int gymID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Gym/"+gymID;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfGymDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all of the members details
		/// This will return all properties related to member entity
		/// 
		/// Membership_Get api/Membership
		/// </summary>
		/// <returns>API Response with all Members entity as a list.</returns>
		public async Task<MemberDTO[]> Membership_GetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Membership";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<MemberDTO[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add new Member
		/// 
		/// Membership_Post api/Membership
		/// </summary>
		/// <param name="requestBody">member object</param>
		/// <returns>newly created member entity</returns>
		public async Task<bool> Membership_PostAsync(MemberDTO requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Membership";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<bool>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete existing package
		/// 
		/// Package_Delete api/Package
		/// </summary>
		/// <param name="PackageId">primary key of package entity</param>
		/// <returns>status 1  : success, status 404 : package not found, status -2: package already in use </returns>
		public async Task<DefaultResponseDTOOfBoolean> Package_DeleteAsync(int PackageId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Package?PackageId="+PackageId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfBoolean>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get package details by packageId
		/// 
		/// Package_Get api/Package
		/// </summary>
		/// <param name="packageId">primary key of package entity</param>
		/// <returns>all the fields that related to the package</returns>
		public async Task<DefaultResponseDTOOfPackageDTO> Package_GetAsync(int packageId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Package?packageId="+packageId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfPackageDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Insert new package into the system
		/// 
		/// Package_Post api/Package
		/// </summary>
		/// <param name="requestBody">package object</param>
		public async Task Package_PostAsync(PackageDTO requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Package";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update existing package by its ID
		/// 
		/// Package_Put api/Package
		/// </summary>
		/// <param name="requestBody">package object</param>
		public async Task Package_PutAsync(PackageDTO requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Package";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search packages
		/// 
		/// Package_Search api/Package/Search
		/// </summary>
		/// <param name="searchText">part of package name</param>
		/// <param name="gymId">primary key of TL gym entity</param>
		/// <param name="type">filter package type.!-- default is 'all'</param>
		/// <param name="orderBy">order by column.!-- invalid column will give internal server error</param>
		/// <param name="limit">number of recode in result and default is 100. use negative numbers to order by desc</param>
		/// <param name="offset">number of recodes to skip</param>
		/// <param name="activeStatus">active status active : 1, inactive : 2, all 3, deafult : 1</param>
		/// <param name="categoryId">Packge Category Id</param>
		/// <param name="startpPrice">Start price of the price Range</param>
		/// <param name="endPrice">End Price of the price Range</param>
		/// <param name="requestSource">1 : MRM, 2 : Mobile </param>
		/// <returns>basic information of package entity</returns>
		public async Task<DefaultResponseDTOOfPackageSearchDTO[]> Package_SearchAsync(string searchText, int gymId, string type, string orderBy, int limit, int offset, int activeStatus, int categoryId, decimal startpPrice, decimal endPrice, int requestSource, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Package/Search?searchText=" + (searchText==null? "" : System.Uri.EscapeDataString(searchText))+"&gymId="+gymId+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&limit="+limit+"&offset="+offset+"&activeStatus="+activeStatus+"&categoryId="+categoryId+"&startpPrice="+startpPrice+"&endPrice="+endPrice+"&requestSource="+requestSource;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfPackageSearchDTO[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Status update of existing package
		/// Package_UpdateStatus api/Package/UpdateStatus
		/// </summary>
		/// <param name="packageId">package Id</param>
		/// <param name="status">status : 1 activate, 2 : deactivate</param>
		/// <param name="userName">Status updated User</param>
		/// <returns>status 1 : success, status 404 : package not found, status -2: package already in use </returns>
		public async Task<DefaultResponseDTOOfBoolean> Package_UpdateStatusAsync(int packageId, int status, string userName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Package/UpdateStatus?packageId="+packageId+"&status="+status+"&userName=" + (userName==null? "" : System.Uri.EscapeDataString(userName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DefaultResponseDTOOfBoolean>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the current status of message
		/// Status_Get api/Status
		/// </summary>
		/// <param name="messageId">respose of POST request</param>
		/// <returns>same response result will retrun with different status and messageText</returns>
		public async Task<MessageStatus> Status_GetAsync(string messageId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Status?messageId=" + (messageId==null? "" : System.Uri.EscapeDataString(messageId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<MessageStatus>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the all Test objects.
		/// 
		/// Test_get api/Test
		/// </summary>
		/// <returns>API Response with test objects as a list.</returns>
		public async Task<TestDTO> Test_getAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Test";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TestDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all Users detail
		/// This will return all properties related to User entity
		/// 
		/// User_Get api/User
		/// </summary>
		/// <returns>API Response with User entity</returns>
		public async Task<UserDTO> User_GetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/User";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserDTO>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Register a new User
		/// 
		/// User_registerUser api/User/registerUser
		/// </summary>
		/// <param name="UserId">Indentity number(primary key) for user object. Generated in DB table when inserting a record.
		///            </param>
		/// <param name="AccountNumber">Account number of the user.It can be any stakeholder of the application.even can be a gym.
		///            </param>
		/// <param name="GymNumber">If this user is a gym, then the gym number.
		///            </param>
		/// <param name="ExternalEntityNumber">Entity number that make a relationship with BOX API DB.
		///            </param>
		/// <param name="Name">Name of the user.
		///            </param>
		/// <param name="Number">Unique number maintain by application to idenify user.
		///            </param>
		/// <param name="IntroduceBy">If Someone introduced this user to the system, then that user's UserId.
		///            </param>
		/// <param name="Guardian">Gaurdian of the this user if he/she is under 18 years old.
		///            </param>
		/// <param name="TypeId">Type of the user.
		///            </param>
		/// <returns>API Response</returns>
		public async Task User_registerUserAsync(int UserId, string AccountNumber, string GymNumber, string ExternalEntityNumber, string Name, string Number, int IntroduceBy, int Guardian, int TypeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/User/registerUser?UserId="+UserId+"&AccountNumber=" + (AccountNumber==null? "" : System.Uri.EscapeDataString(AccountNumber))+"&GymNumber=" + (GymNumber==null? "" : System.Uri.EscapeDataString(GymNumber))+"&ExternalEntityNumber=" + (ExternalEntityNumber==null? "" : System.Uri.EscapeDataString(ExternalEntityNumber))+"&Name=" + (Name==null? "" : System.Uri.EscapeDataString(Name))+"&Number=" + (Number==null? "" : System.Uri.EscapeDataString(Number))+"&IntroduceBy="+IntroduceBy+"&Guardian="+Guardian+"&TypeId="+TypeId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update an exsisting User
		/// 
		/// User_updateUser api/User/updateuser
		/// </summary>
		/// <param name="UserId">Indentity number(primary key) for user object. Generated in DB table when inserting a record.
		///            </param>
		/// <param name="AccountNumber">Account number of the user.It can be any stakeholder of the application.even can be a gym.
		///            </param>
		/// <param name="GymNumber">If this user is a gym, then the gym number.
		///            </param>
		/// <param name="ExternalEntityNumber">Entity number that make a relationship with BOX API DB.
		///            </param>
		/// <param name="Name">Name of the user.
		///            </param>
		/// <param name="Number">Unique number maintain by application to idenify user.
		///            </param>
		/// <param name="IntroduceBy">If Someone introduced this user to the system, then that user's UserId.
		///            </param>
		/// <param name="Guardian">Gaurdian of the this user if he/she is under 18 years old.
		///            </param>
		/// <param name="TypeId">Type of the user.
		///            </param>
		/// <returns>API Response true or false</returns>
		public async Task User_updateUserAsync(int UserId, string AccountNumber, string GymNumber, string ExternalEntityNumber, string Name, string Number, int IntroduceBy, int Guardian, int TypeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/User/updateuser?UserId="+UserId+"&AccountNumber=" + (AccountNumber==null? "" : System.Uri.EscapeDataString(AccountNumber))+"&GymNumber=" + (GymNumber==null? "" : System.Uri.EscapeDataString(GymNumber))+"&ExternalEntityNumber=" + (ExternalEntityNumber==null? "" : System.Uri.EscapeDataString(ExternalEntityNumber))+"&Name=" + (Name==null? "" : System.Uri.EscapeDataString(Name))+"&Number=" + (Number==null? "" : System.Uri.EscapeDataString(Number))+"&IntroduceBy="+IntroduceBy+"&Guardian="+Guardian+"&TypeId="+TypeId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cancellationStatus")]
		public CancellationStatus CancellationStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CancellationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServiceException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelQuantumTaskResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cancellationStatus")]
		public CancellationStatus CancellationStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantumTaskArn")]
		public string QuantumTaskArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
	}
	
	/// <summary>
	/// The container image used to create an Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerImage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Contains information about the Python scripts used for entry and by an Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScriptModeConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="compressionType")]
		public CompressionType CompressionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entryPoint")]
		public string EntryPoint { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Uri")]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CompressionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GZIP = 1,
	}
	
	/// <summary>
	/// A list of parameters that specify the input channels, type of input data, and where it is located.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputFileConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="channelName")]
		public string ChannelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataSource")]
		public DataSource DataSource { get; set; }
	}
	
	/// <summary>
	/// Information about the source of the data used by the Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3DataSource")]
		public S3DataSource S3DataSource { get; set; }
	}
	
	/// <summary>
	/// Information about the data stored in Amazon S3 used by the Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3DataSource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Uri")]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m4.xlarge")]
		ml_m4_xlarge = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m4.2xlarge")]
		ml_m4_2xlarge = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m4.4xlarge")]
		ml_m4_4xlarge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m4.10xlarge")]
		ml_m4_10xlarge = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m4.16xlarge")]
		ml_m4_16xlarge = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.g4dn.xlarge")]
		ml_g4dn_xlarge = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.g4dn.2xlarge")]
		ml_g4dn_2xlarge = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.g4dn.4xlarge")]
		ml_g4dn_4xlarge = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.g4dn.8xlarge")]
		ml_g4dn_8xlarge = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.g4dn.12xlarge")]
		ml_g4dn_12xlarge = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.g4dn.16xlarge")]
		ml_g4dn_16xlarge = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m5.large")]
		ml_m5_large = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m5.xlarge")]
		ml_m5_xlarge = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m5.2xlarge")]
		ml_m5_2xlarge = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m5.4xlarge")]
		ml_m5_4xlarge = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m5.12xlarge")]
		ml_m5_12xlarge = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.m5.24xlarge")]
		ml_m5_24xlarge = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c4.xlarge")]
		ml_c4_xlarge = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c4.2xlarge")]
		ml_c4_2xlarge = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c4.4xlarge")]
		ml_c4_4xlarge = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c4.8xlarge")]
		ml_c4_8xlarge = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p2.xlarge")]
		ml_p2_xlarge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p2.8xlarge")]
		ml_p2_8xlarge = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p2.16xlarge")]
		ml_p2_16xlarge = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p3.2xlarge")]
		ml_p3_2xlarge = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p3.8xlarge")]
		ml_p3_8xlarge = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p3.16xlarge")]
		ml_p3_16xlarge = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p3dn.24xlarge")]
		ml_p3dn_24xlarge = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.p4d.24xlarge")]
		ml_p4d_24xlarge = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5.xlarge")]
		ml_c5_xlarge = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5.2xlarge")]
		ml_c5_2xlarge = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5.4xlarge")]
		ml_c5_4xlarge = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5.9xlarge")]
		ml_c5_9xlarge = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5.18xlarge")]
		ml_c5_18xlarge = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5n.xlarge")]
		ml_c5n_xlarge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5n.2xlarge")]
		ml_c5n_2xlarge = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5n.4xlarge")]
		ml_c5n_4xlarge = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5n.9xlarge")]
		ml_c5n_9xlarge = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ml.c5n.18xlarge")]
		ml_c5n_18xlarge = 38,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceRetiredException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQuantumTaskResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantumTaskArn")]
		public string QuantumTaskArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceOfflineException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDeviceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceArn")]
		public string DeviceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceCapabilities")]
		public string DeviceCapabilities { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceName")]
		public string DeviceName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceStatus")]
		public DeviceStatus DeviceStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public DeviceType DeviceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="providerName")]
		public string ProviderName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONLINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFFLINE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIRED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QPU = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIMULATOR = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJobResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="algorithmSpecification")]
		public AlgorithmSpecification AlgorithmSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="billableDuration")]
		public System.Nullable<System.Int32> BillableDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkpointConfig")]
		public JobCheckpointConfig CheckpointConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deviceConfig")]
		public DeviceConfig DeviceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endedAt")]
		public System.DateTimeOffset EndedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public JobEventDetails[] Events { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hyperParameters")]
		public HyperParameters HyperParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputDataConfig")]
		public InputFileConfig[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceConfig")]
		public InstanceConfig InstanceConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputDataConfig")]
		public JobOutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startedAt")]
		public System.DateTimeOffset StartedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public JobPrimaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stoppingCondition")]
		public JobStoppingCondition StoppingCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlgorithmSpecification
	{
		
		[System.Runtime.Serialization.DataMember(Name="containerImage")]
		public ContainerImage ContainerImage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scriptModeConfig")]
		public ScriptModeConfig ScriptModeConfig { get; set; }
	}
	
	/// <summary>
	/// Contains information about the output locations for job checkpoint data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobCheckpointConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="localPath")]
		public string LocalPath { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Uri")]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="device")]
		public string Device { get; set; }
	}
	
	/// <summary>
	/// Details about the type and time events occurred related to the Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobEventDetails
	{
		
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public JobEventType EventType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeOfEvent")]
		public System.DateTimeOffset TimeOfEvent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_PRIORITY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED_FOR_EXECUTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING_INSTANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOWNLOADING_DATA = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRIORITIZED_DUE_TO_INACTIVITY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPLOADING_RESULTS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX_RUNTIME_EXCEEDED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HyperParameters
	{
	}
	
	/// <summary>
	/// Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="instanceCount")]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public InstanceType InstanceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="volumeSizeInGb")]
		public int VolumeSizeInGb { get; set; }
	}
	
	/// <summary>
	/// Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobOutputDataConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="kmsKeyId")]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Path")]
		public string S3Path { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobPrimaryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 5,
	}
	
	/// <summary>
	/// Specifies limits for how long an Amazon Braket job can run. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobStoppingCondition
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxRuntimeInSeconds")]
		public System.Nullable<System.Int32> MaxRuntimeInSeconds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagsMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetQuantumTaskResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceArn")]
		public string DeviceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceParameters")]
		public string DeviceParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endedAt")]
		public System.DateTimeOffset EndedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3Bucket")]
		public string OutputS3Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3Directory")]
		public string OutputS3Directory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantumTaskArn")]
		public string QuantumTaskArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shots")]
		public int Shots { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public QuantumTaskStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QuantumTaskStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDevicesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="devices")]
		public DeviceSummary[] Devices { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Includes information about the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceArn")]
		public string DeviceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceName")]
		public string DeviceName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceStatus")]
		public DeviceStatus DeviceStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public DeviceType DeviceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="providerName")]
		public string ProviderName { get; set; }
	}
	
	/// <summary>
	/// The filter to use for searching devices.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDevicesFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public JobSummary[] Jobs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides summary information about an Amazon Braket job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="device")]
		public string Device { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endedAt")]
		public System.DateTimeOffset EndedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobArn")]
		public string JobArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startedAt")]
		public System.DateTimeOffset StartedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public JobPrimaryStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// A filter used to search for Amazon Braket jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchJobsFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public SearchJobsFilterOperator Operator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SearchJobsFilterOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETWEEN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQuantumTasksResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantumTasks")]
		public QuantumTaskSummary[] QuantumTasks { get; set; }
	}
	
	/// <summary>
	/// Includes information about a quantum task.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuantumTaskSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceArn")]
		public string DeviceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endedAt")]
		public System.DateTimeOffset EndedAt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3Bucket")]
		public string OutputS3Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3Directory")]
		public string OutputS3Directory { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantumTaskArn")]
		public string QuantumTaskArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shots")]
		public int Shots { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public QuantumTaskStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	/// <summary>
	/// A filter to use to search for tasks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQuantumTasksFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public SearchQuantumTasksFilterOperator Operator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SearchQuantumTasksFilterOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETWEEN = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelQuantumTaskRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="algorithmSpecification")]
		public AlgorithmSpecification AlgorithmSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkpointConfig")]
		public JobCheckpointConfig CheckpointConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceConfig")]
		public DeviceConfig DeviceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hyperParameters")]
		public HyperParameters HyperParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputDataConfig")]
		public InputFileConfig[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceConfig")]
		public InstanceConfig InstanceConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputDataConfig")]
		public JobOutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stoppingCondition")]
		public JobStoppingCondition StoppingCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQuantumTaskRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceArn")]
		public string DeviceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deviceParameters")]
		public string DeviceParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobToken")]
		public string JobToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3Bucket")]
		public string OutputS3Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3KeyPrefix")]
		public string OutputS3KeyPrefix { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shots")]
		public int Shots { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDeviceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetQuantumTaskRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDevicesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public SearchDevicesFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchJobsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public SearchJobsFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQuantumTasksRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public SearchQuantumTasksFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagsMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Cancels an Amazon Braket job.
		/// CancelJob job/{jobArn}/cancel
		/// </summary>
		/// <param name="jobArn">The ARN of the Amazon Braket job to cancel.</param>
		/// <returns>Success</returns>
		public async Task<CancelJobResponse> CancelJobAsync(string jobArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "job/"+ (jobArn==null? "" : System.Uri.EscapeDataString(jobArn))+"/cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels the specified task.
		/// CancelQuantumTask quantum-task/{quantumTaskArn}/cancel
		/// </summary>
		/// <param name="quantumTaskArn">The ARN of the task to cancel.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<CancelQuantumTaskResponse> CancelQuantumTaskAsync(string quantumTaskArn, CancelQuantumTaskPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quantum-task/"+ (quantumTaskArn==null? "" : System.Uri.EscapeDataString(quantumTaskArn))+"/cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelQuantumTaskResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon Braket job.
		/// CreateJob job
		/// </summary>
		public async Task CreateJobAsync(CreateJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "job";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a quantum task.
		/// CreateQuantumTask quantum-task
		/// </summary>
		public async Task CreateQuantumTaskAsync(CreateQuantumTaskPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quantum-task";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves the devices available in Amazon Braket.</p> <note> <p>For backwards compatibility with older versions of BraketSchemas, OpenQASM information is omitted from GetDevice API calls. To get this information the user-agent needs to present a recent version of the BraketSchemas (1.8.0 or later). The Braket SDK automatically reports this for you. If you do not see OpenQASM results in the GetDevice response when using a Braket SDK, you may need to set AWS_EXECUTION_ENV environment variable to configure user-agent. See the code examples provided below for how to do this for the AWS CLI, Boto3, and the Go, Java, and JavaScript/TypeScript SDKs.</p> </note>
		/// GetDevice device/{deviceArn}
		/// </summary>
		/// <param name="deviceArn">The ARN of the device to retrieve.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<GetDeviceResponse> GetDeviceAsync(string deviceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "device/"+ (deviceArn==null? "" : System.Uri.EscapeDataString(deviceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDeviceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the specified Amazon Braket job.
		/// GetJob job/{jobArn}
		/// </summary>
		/// <param name="jobArn">The ARN of the job to retrieve.</param>
		/// <returns>Success</returns>
		public async Task<GetJobResponse> GetJobAsync(string jobArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "job/"+ (jobArn==null? "" : System.Uri.EscapeDataString(jobArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the specified quantum task.
		/// GetQuantumTask quantum-task/{quantumTaskArn}
		/// </summary>
		/// <param name="quantumTaskArn">the ARN of the task to retrieve.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<GetQuantumTaskResponse> GetQuantumTaskAsync(string quantumTaskArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quantum-task/"+ (quantumTaskArn==null? "" : System.Uri.EscapeDataString(quantumTaskArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetQuantumTaskResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Shows the tags associated with this resource.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">Specify the <code>resourceArn</code> for the resource whose tags to display.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add a tag to the specified resource.
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">Specify the <code>resourceArn</code> of the resource to which a tag will be added.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches for devices using the specified filters.
		/// SearchDevices devices
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchDevicesResponse> SearchDevicesAsync(string maxResults, string nextToken, SearchDevicesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "devices?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchDevicesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches for Amazon Braket jobs that match the specified filter values.
		/// SearchJobs jobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchJobsResponse> SearchJobsAsync(string maxResults, string nextToken, SearchJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "jobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches for tasks that match the specified filter values.
		/// SearchQuantumTasks quantum-tasks
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchQuantumTasksResponse> SearchQuantumTasksAsync(string maxResults, string nextToken, SearchQuantumTasksPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quantum-tasks?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchQuantumTasksResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove tags from a resource.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">Specify the <code>resourceArn</code> for the resource from which to remove the tags.</param>
		/// <param name="tagKeys">Specify the keys for the tags to remove from the resource.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class CancelQuantumTaskPutBody
	{
		
		/// <summary>
		/// The client token associated with the request.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
	}
	
	public class CreateJobPostBody
	{
		
		/// <summary>
		/// Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="algorithmSpecification")]
		public CreateJobPostBodyAlgorithmSpecification AlgorithmSpecification { get; set; }
		
		/// <summary>
		/// Contains information about the output locations for job checkpoint data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkpointConfig")]
		public CreateJobPostBodyCheckpointConfig CheckpointConfig { get; set; }
		
		/// <summary>
		/// A unique token that guarantees that the call to this API is idempotent.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceConfig")]
		public CreateJobPostBodyDeviceConfig DeviceConfig { get; set; }
		
		/// <summary>
		/// Algorithm-specific parameters used by an Amazon Braket job that influence the quality of the training job. The values are set with a string of JSON key:value pairs, where the key is the name of the hyperparameter and the value is the value of th hyperparameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hyperParameters")]
		public System.Collections.Generic.Dictionary<string, string> HyperParameters { get; set; }
		
		/// <summary>
		/// A list of parameters that specify the name and type of input data and where it is located.
		/// Minimum items: 0
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputDataConfig")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public InputFileConfig[] InputDataConfig { get; set; }
		
		/// <summary>
		/// Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceConfig")]
		public CreateJobPostBodyInstanceConfig InstanceConfig { get; set; }
		
		/// <summary>
		/// The name of the Amazon Braket job.
		/// Required
		/// Min length: 1
		/// Max length: 50
		/// Pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$")]
		public string JobName { get; set; }
		
		/// <summary>
		/// Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputDataConfig")]
		public CreateJobPostBodyOutputDataConfig OutputDataConfig { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform tasks on behalf of a user. It can access user resources, run an Amazon Braket job container on behalf of user, and output resources to the users' s3 buckets.
		/// Required
		/// Pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Specifies limits for how long an Amazon Braket job can run. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stoppingCondition")]
		public CreateJobPostBodyStoppingCondition StoppingCondition { get; set; }
		
		/// <summary>
		/// A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateJobPostBodyAlgorithmSpecification
	{
		
		[System.Runtime.Serialization.DataMember(Name="containerImage")]
		public ContainerImage ContainerImage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scriptModeConfig")]
		public ScriptModeConfig ScriptModeConfig { get; set; }
	}
	
	public class CreateJobPostBodyCheckpointConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="localPath")]
		public string LocalPath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Uri")]
		public string S3Uri { get; set; }
	}
	
	public class CreateJobPostBodyDeviceConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="device")]
		public string Device { get; set; }
	}
	
	public class CreateJobPostBodyInstanceConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="instanceCount")]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public InstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeSizeInGb")]
		public System.Nullable<System.Int32> VolumeSizeInGb { get; set; }
	}
	
	public class CreateJobPostBodyOutputDataConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="kmsKeyId")]
		public string KmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Path")]
		public string S3Path { get; set; }
	}
	
	public class CreateJobPostBodyStoppingCondition
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxRuntimeInSeconds")]
		public System.Nullable<System.Int32> MaxRuntimeInSeconds { get; set; }
	}
	
	public class CreateQuantumTaskPostBody
	{
		
		/// <summary>
		/// The action associated with the task.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// The client token associated with the request.
		/// Required
		/// Min length: 1
		/// Max length: 64
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The ARN of the device to run the task on.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string DeviceArn { get; set; }
		
		/// <summary>
		/// The parameters for the device to run the task on.
		/// Min length: 1
		/// Max length: 48000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceParameters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(48000)]
		public string DeviceParameters { get; set; }
		
		/// <summary>
		/// The token for an Amazon Braket job that associates it with the quantum task.
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobToken")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string JobToken { get; set; }
		
		/// <summary>
		/// The S3 bucket to store task result files in.
		/// Required
		/// Min length: 3
		/// Max length: 63
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3Bucket")]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		public string OutputS3Bucket { get; set; }
		
		/// <summary>
		/// The key prefix for the location in the S3 bucket to store task results in.
		/// Required
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputS3KeyPrefix")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string OutputS3KeyPrefix { get; set; }
		
		/// <summary>
		/// The number of shots to use for the task.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shots")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Shots { get; set; }
		
		/// <summary>
		/// Tags to be added to the quantum task you're creating.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// Specify the tags to add to the resource.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class SearchDevicesPostBody
	{
		
		/// <summary>
		/// The filter values to use to search for a device.
		/// Required
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public SearchDevicesFilter[] Filters { get; set; }
		
		/// <summary>
		/// The maximum number of results to return in the response.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class SearchJobsPostBody
	{
		
		/// <summary>
		/// The filter values to use when searching for a job.
		/// Required
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public SearchJobsFilter[] Filters { get; set; }
		
		/// <summary>
		/// The maximum number of results to return in the response.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// A token used for pagination of results returned in the response. Use the token returned from the previous request to continue results where the previous request ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class SearchQuantumTasksPostBody
	{
		
		/// <summary>
		/// Array of <code>SearchQuantumTasksFilter</code> objects.
		/// Required
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public SearchQuantumTasksFilter[] Filters { get; set; }
		
		/// <summary>
		/// Maximum number of results to return in the response.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

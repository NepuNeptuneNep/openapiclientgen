//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Apiv1_0_SafeUnsafeImageWithTags_body
	{
		
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		public string Api_key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="base64_image")]
		public string Base64_image { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Inline_response_200
	{
		
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public System.Nullable<System.Int32> Error_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public Inline_response_200Predictions Predictions { get; set; }
	}
	
	public class Inline_response_200Predictions
	{
		
		[System.Runtime.Serialization.DataMember(Name="1girl")]
		public System.Nullable<System.Double> _1girl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="abs")]
		public System.Nullable<System.Double> Abs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="artificial-images")]
		public System.Nullable<System.Double> Artificial_images { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bikini")]
		public System.Nullable<System.Double> Bikini { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="black bikini")]
		public System.Nullable<System.Double> Black_bikini { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="black hair")]
		public System.Nullable<System.Double> Black_hair { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="breasts")]
		public System.Nullable<System.Double> Breasts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="choker")]
		public System.Nullable<System.Double> Choker { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="composition_one_female")]
		public System.Nullable<System.Double> Composition_one_female { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dark skin")]
		public System.Nullable<System.Double> Dark_skin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dark-skinned female")]
		public System.Nullable<System.Double> Dark_skinned_female { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="english commentary")]
		public System.Nullable<System.Double> English_commentary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forehead")]
		public System.Nullable<System.Double> Forehead { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jewelry")]
		public System.Nullable<System.Double> Jewelry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="large breasts")]
		public System.Nullable<System.Double> Large_breasts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lips")]
		public System.Nullable<System.Double> Lips { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="long hair")]
		public System.Nullable<System.Double> Long_hair { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="looking at viewer")]
		public System.Nullable<System.Double> Looking_at_viewer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="muscular")]
		public System.Nullable<System.Double> Muscular { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="muscular female")]
		public System.Nullable<System.Double> Muscular_female { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="navel")]
		public System.Nullable<System.Double> Navel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="original")]
		public System.Nullable<System.Double> Original { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="patreon username")]
		public System.Nullable<System.Double> Patreon_username { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="solo")]
		public System.Nullable<System.Double> Solo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="swimsuit")]
		public System.Nullable<System.Double> Swimsuit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="thighs")]
		public System.Nullable<System.Double> Thighs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="toned")]
		public System.Nullable<System.Double> Toned { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unsafe")]
		public System.Nullable<System.Double> Unsafe { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Auto generated using Swagger Inspector
		/// Api_v1_0SafeUnsafeImageWithTagsPost api-v1.0/SafeUnsafeImageWithTags
		/// </summary>
		/// <returns>Auto generated using Swagger Inspector</returns>
		public async Task<Inline_response_200> Api_v1_0SafeUnsafeImageWithTagsPostAsync(Apiv1_0_SafeUnsafeImageWithTags_body requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api-v1.0/SafeUnsafeImageWithTags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Inline_response_200>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

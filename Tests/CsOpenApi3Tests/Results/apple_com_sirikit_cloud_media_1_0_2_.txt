//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntent
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public AddMediaIntentClass Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaDestination")]
		public MediaDestination MediaDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaItems")]
		public MediaItem[] MediaItems { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaSearch")]
		public MediaSearch MediaSearch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntent")]
		AddMediaIntent = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MediaDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaDestinationType")]
		public MediaDestinationMediaDestinationType MediaDestinationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaDestinationMediaDestinationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="library")]
		library = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlist")]
		playlist = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MediaItem
	{
		
		/// <summary>
		/// Max length: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artist")]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string Artist { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 250
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Identifier { get; set; }
		
		/// <summary>
		/// Max length: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public MediaItemType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="song")]
		song = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="album")]
		album = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="artist")]
		artist = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="genre")]
		genre = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlist")]
		playlist = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="podcastShow")]
		podcastShow = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="podcastEpisode")]
		podcastEpisode = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="podcastPlaylist")]
		podcastPlaylist = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="musicStation")]
		musicStation = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="audioBook")]
		audioBook = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="movie")]
		movie = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tvShow")]
		tvShow = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tvShowEpisode")]
		tvShowEpisode = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="musicVideo")]
		musicVideo = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="podcastStation")]
		podcastStation = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="radioStation")]
		radioStation = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="station")]
		station = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="music")]
		music = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="algorithmicRadioStation")]
		algorithmicRadioStation = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="news")]
		news = 20,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MediaSearch
	{
		
		[System.Runtime.Serialization.DataMember(Name="albumName")]
		public string AlbumName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="artistName")]
		public string ArtistName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="genreNames")]
		public string[] GenreNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaIdentifier")]
		public string MediaIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaName")]
		public string MediaName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaType")]
		public MediaItemType MediaType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="moodNames")]
		public string[] MoodNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public System.Nullable<MediaSearchReference> Reference { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseDate")]
		public DateComponentsRange ReleaseDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sortOrder")]
		public System.Nullable<MediaSearchSortOrder> SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaSearchReference
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="currentlyPlaying")]
		currentlyPlaying = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="my")]
		my = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DateComponentsRange
	{
		
		[System.Runtime.Serialization.DataMember(Name="endDateComponents")]
		public DateComponents EndDateComponents { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startDateComponents")]
		public DateComponents StartDateComponents { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaSearchSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="newest")]
		newest = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="oldest")]
		oldest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="best")]
		best = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="worst")]
		worst = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="popular")]
		popular = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unpopular")]
		unpopular = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="trending")]
		trending = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="recommended")]
		recommended = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentHandlingConfirmInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public AddMediaIntentHandlingConfirmInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public AddMediaIntentHandlingConfirmInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentHandlingConfirmInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.confirm")]
		AddMediaIntentHandling_confirm = 0,
	}
	
	public class AddMediaIntentHandlingConfirmInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="response")]
		public AddMediaIntentResponse Response { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public AddMediaIntentResponseClass Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public AddMediaIntentResponseCode Code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentResponseClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentResponse")]
		AddMediaIntentResponse = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentResponseCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unspecified")]
		unspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ready")]
		ready = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inProgress")]
		inProgress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="success")]
		success = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failure")]
		failure = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failureRequiringAppLaunch")]
		failureRequiringAppLaunch = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentHandlingHandleInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public AddMediaIntentHandlingHandleInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public AddMediaIntentHandlingHandleInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentHandlingHandleInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.handle")]
		AddMediaIntentHandling_handle = 0,
	}
	
	public class AddMediaIntentHandlingHandleInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="response")]
		public AddMediaIntentResponse Response { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentHandlingInvocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public AddMediaIntentHandlingInvocationMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="params")]
		public AddMediaIntentHandlingInvocationParams Params { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentHandlingInvocationMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.resolveMediaItems")]
		AddMediaIntentHandling_resolveMediaItems = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.resolveMediaDestination")]
		AddMediaIntentHandling_resolveMediaDestination = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.confirm")]
		AddMediaIntentHandling_confirm = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.handle")]
		AddMediaIntentHandling_handle = 3,
	}
	
	public class AddMediaIntentHandlingInvocationParams
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="intent")]
		public AddMediaIntent Intent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentHandlingInvocationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentHandlingResolveMediaDestinationInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public AddMediaIntentHandlingResolveMediaDestinationInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public AddMediaIntentHandlingResolveMediaDestinationInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentHandlingResolveMediaDestinationInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.resolveMediaDestination")]
		AddMediaIntentHandling_resolveMediaDestination = 0,
	}
	
	public class AddMediaIntentHandlingResolveMediaDestinationInvocationResponseResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public AddMediaMediaDestinationResolutionResult ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaMediaDestinationResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<AddMediaMediaDestinationResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public AddMediaMediaDestinationResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="disambiguation")]
		public AddMediaMediaDestinationResolutionResultDisambiguation Disambiguation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public AddMediaMediaDestinationResolutionResultSuccess Success { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unsupported")]
		public AddMediaMediaDestinationResolutionResultUnsupported Unsupported { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaMediaDestinationResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaMediaDestinationResolutionResult")]
		AddMediaMediaDestinationResolutionResult = 0,
	}
	
	public class AddMediaMediaDestinationResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaDestinationToConfirm")]
		public MediaDestination MediaDestinationToConfirm { get; set; }
	}
	
	public class AddMediaMediaDestinationResolutionResultDisambiguation
	{
		
		/// <summary>
		/// Required
		/// Minimum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaDestinationsToDisambiguate")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public MediaDestination[] MediaDestinationsToDisambiguate { get; set; }
	}
	
	public class AddMediaMediaDestinationResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedMediaDestination")]
		public MediaDestination ResolvedMediaDestination { get; set; }
	}
	
	public class AddMediaMediaDestinationResolutionResultUnsupported
	{
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public System.Nullable<AddMediaMediaDestinationResolutionResultUnsupportedReason> Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaMediaDestinationResolutionResultUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlistNameNotFound")]
		playlistNameNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlistNotEditable")]
		playlistNotEditable = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaIntentHandlingResolveMediaItemsInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public AddMediaIntentHandlingResolveMediaItemsInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public AddMediaIntentHandlingResolveMediaItemsInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaIntentHandlingResolveMediaItemsInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaIntentHandling.resolveMediaItems")]
		AddMediaIntentHandling_resolveMediaItems = 0,
	}
	
	public class AddMediaIntentHandlingResolveMediaItemsInvocationResponseResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public AddMediaMediaItemResolutionResult[] ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddMediaMediaItemResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<AddMediaMediaItemResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public AddMediaMediaItemResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="disambiguation")]
		public AddMediaMediaItemResolutionResultDisambiguation Disambiguation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public AddMediaMediaItemResolutionResultSuccess Success { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unsupported")]
		public AddMediaMediaItemResolutionResultUnsupported Unsupported { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaMediaItemResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AddMediaMediaItemResolutionResult")]
		AddMediaMediaItemResolutionResult = 0,
	}
	
	public class AddMediaMediaItemResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaItemToConfirm")]
		public MediaItem MediaItemToConfirm { get; set; }
	}
	
	public class AddMediaMediaItemResolutionResultDisambiguation
	{
		
		/// <summary>
		/// Required
		/// Minimum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaItemsToDisambiguate")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public MediaItem[] MediaItemsToDisambiguate { get; set; }
	}
	
	public class AddMediaMediaItemResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedMediaItem")]
		public MediaItem ResolvedMediaItem { get; set; }
	}
	
	public class AddMediaMediaItemResolutionResultUnsupported
	{
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public System.Nullable<AddMediaMediaItemResolutionResultUnsupportedReason> Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaMediaItemResolutionResultUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="loginRequired")]
		loginRequired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="subscriptionRequired")]
		subscriptionRequired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unsupportedMediaType")]
		unsupportedMediaType = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="explicitContentSettings")]
		explicitContentSettings = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="restrictedContent")]
		restrictedContent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="regionRestriction")]
		regionRestriction = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaMediaDestinationUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlistNameNotFound")]
		playlistNameNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlistNotEditable")]
		playlistNotEditable = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddMediaMediaItemUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="loginRequired")]
		loginRequired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="subscriptionRequired")]
		subscriptionRequired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unsupportedMediaType")]
		unsupportedMediaType = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="explicitContentSettings")]
		explicitContentSettings = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="restrictedContent")]
		restrictedContent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="regionRestriction")]
		regionRestriction = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BooleanResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<BooleanResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public BooleanResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public BooleanResolutionResultSuccess Success { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum BooleanResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BooleanResolutionResult")]
		BooleanResolutionResult = 0,
	}
	
	public class BooleanResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="valueToConfirm")]
		public bool ValueToConfirm { get; set; }
	}
	
	public class BooleanResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedValue")]
		public bool ResolvedValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Constraints
	{
		
		[System.Runtime.Serialization.DataMember(Name="allowExplicitContent")]
		public System.Nullable<System.Boolean> AllowExplicitContent { get; set; }
		
		/// <summary>
		/// Minimum: 50
		/// Maximum: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximumQueueSegmentItemCount")]
		[System.ComponentModel.DataAnnotations.Range(50, 1000)]
		public System.Nullable<System.UInt32> MaximumQueueSegmentItemCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateUserTasteProfile")]
		public System.Nullable<System.Boolean> UpdateUserTasteProfile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Content
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public ContentAttributes Attributes { get; set; }
		
		[System.ComponentModel.DefaultValue("default")]
		[System.Runtime.Serialization.DataMember(Name="control")]
		public string Control { get; set; } = "default";
		
		/// <summary>
		/// Required
		/// Max length: 1000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isLive")]
		public System.Nullable<System.Boolean> IsLive { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playIndex")]
		public string PlayIndex { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ContentAttributes
	{
		
		/// <summary>
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="albumName")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string AlbumName { get; set; }
		
		/// <summary>
		/// Max length: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artistName")]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string ArtistName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="artwork")]
		public ContentAttributesArtwork Artwork { get; set; }
		
		/// <summary>
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="composerName")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string ComposerName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="durationInMillis")]
		public string DurationInMillis { get; set; }
		
		/// <summary>
		/// Maximum items: 30
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genreNames")]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] GenreNames { get; set; }
		
		/// <summary>
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trackNumber")]
		public System.Nullable<System.UInt32> TrackNumber { get; set; }
	}
	
	public class ContentAttributesArtwork
	{
		
		/// <summary>
		/// Max length: 2000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DateComponents
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExecutionMetrics
	{
		
		[System.Runtime.Serialization.DataMember(Name="completed")]
		public System.Nullable<System.DateTimeOffset> Completed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Single> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="received")]
		public System.Nullable<System.DateTimeOffset> Received { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExplicitDateComponents
	{
		
		[System.Runtime.Serialization.DataMember(Name="calendarIdentifier")]
		public string CalendarIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="era")]
		public System.Nullable<System.Int32> Era { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hour")]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minute")]
		public System.Nullable<System.Int32> Minute { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nanosecond")]
		public System.Nullable<System.Int32> Nanosecond { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="second")]
		public System.Nullable<System.Int32> Second { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExtensionConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="hdr")]
		public string Hdr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="intent")]
		public ExtensionConfigIntent Intent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="media")]
		public ExtensionConfigMedia Media { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string Url { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ([0-9]+[.]){2}[0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([0-9]+[.]){2}[0-9]+")]
		public string Version { get; set; }
	}
	
	public class ExtensionConfigIntent
	{
		
		[System.Runtime.Serialization.DataMember(Name="addMedia")]
		public ExtensionConfigIntentAddMedia AddMedia { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hdr")]
		public string Hdr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="playMedia")]
		public ExtensionConfigIntentPlayMedia PlayMedia { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateMediaAffinity")]
		public ExtensionConfigIntentUpdateMediaAffinity UpdateMediaAffinity { get; set; }
	}
	
	public class ExtensionConfigIntentAddMedia
	{
		
		[System.Runtime.Serialization.DataMember(Name="opt")]
		public string[] Opt { get; set; }
	}
	
	public class ExtensionConfigIntentPlayMedia
	{
		
		[System.Runtime.Serialization.DataMember(Name="opt")]
		public string[] Opt { get; set; }
	}
	
	public class ExtensionConfigIntentUpdateMediaAffinity
	{
		
		[System.Runtime.Serialization.DataMember(Name="opt")]
		public string[] Opt { get; set; }
	}
	
	public class ExtensionConfigMedia
	{
		
		[System.Runtime.Serialization.DataMember(Name="queues")]
		public ExtensionConfigMediaQueues Queues { get; set; }
	}
	
	public class ExtensionConfigMediaQueues
	{
		
		[System.Runtime.Serialization.DataMember(Name="hdr")]
		public string Hdr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playMedia")]
		public ExtensionConfigMediaQueuesPlayMedia PlayMedia { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateActivity")]
		public ExtensionConfigMediaQueuesUpdateActivity UpdateActivity { get; set; }
	}
	
	public class ExtensionConfigMediaQueuesPlayMedia
	{
		
		[System.Runtime.Serialization.DataMember(Name="hdr")]
		public string Hdr { get; set; }
		
		/// <summary>
		/// Max length: 4000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DefaultValue("/queues/playMedia")]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(4000)]
		public string Url { get; set; } = "/queues/playMedia";
	}
	
	public class ExtensionConfigMediaQueuesUpdateActivity
	{
		
		[System.Runtime.Serialization.DataMember(Name="hdr")]
		public string Hdr { get; set; }
		
		/// <summary>
		/// Max length: 4000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DefaultValue("/queues/updateActivity")]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(4000)]
		public string Url { get; set; } = "/queues/updateActivity";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExtensionEndpointConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="hdr")]
		public string Hdr { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Intent
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IntentResolutionResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="needsValue")]
		public string NeedsValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notRequired")]
		public string NotRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unsupported")]
		public string Unsupported { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IntentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userActivity")]
		public UserActivity UserActivity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UserActivity
	{
		
		/// <summary>
		/// Required
		/// Max length: 250
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="activityType")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string ActivityType { get; set; }
		
		/// <summary>
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="persistentIdentifier")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string PersistentIdentifier { get; set; }
		
		/// <summary>
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userInfo")]
		public string UserInfo { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 25
		/// Pattern: [0-9]+\.[0-9]+\.[0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]+\.[0-9]+\.[0-9]+")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Invocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public string Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="params")]
		public string Params { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="session")]
		public Session Session { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Session
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public Constraints Constraints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deadline")]
		public System.DateTimeOffset Deadline { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playerContext")]
		public PlayerContext PlayerContext { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="requested")]
		public System.DateTimeOffset Requested { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: [0-9]+\.[0-9]+\.[0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]+\.[0-9]+\.[0-9]+")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayerContext
	{
		
		/// <summary>
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activityIdentifier")]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string ActivityIdentifier { get; set; }
		
		/// <summary>
		/// Max length: 1000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentIdentifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string ContentIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="offsetInMillis")]
		public System.Nullable<System.Int64> OffsetInMillis { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playbackSpeed")]
		public System.Nullable<System.Double> PlaybackSpeed { get; set; }
		
		/// <summary>
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queueIdentifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string QueueIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvocationResponse
	{
		
		/// <summary>
		/// Max length: 2000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="debug")]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string Debug { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public string Method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public ExecutionMetrics Metrics { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public string Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaAffinityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="like")]
		like = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dislike")]
		dislike = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MediaAffinityTypeResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<MediaAffinityTypeResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public MediaAffinityTypeResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public MediaAffinityTypeResolutionResultSuccess Success { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaAffinityTypeResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MediaAffinityTypeResolutionResult")]
		MediaAffinityTypeResolutionResult = 0,
	}
	
	public class MediaAffinityTypeResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaAffinityTypeToConfirm")]
		public MediaAffinityType MediaAffinityTypeToConfirm { get; set; }
	}
	
	public class MediaAffinityTypeResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedMediaAffinityType")]
		public MediaAffinityType ResolvedMediaAffinityType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MediaDestinationLibrary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaDestinationType")]
		public MediaDestinationLibraryMediaDestinationType MediaDestinationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaDestinationLibraryMediaDestinationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="library")]
		library = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MediaDestinationPlaylist
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaDestinationType")]
		public MediaDestinationPlaylistMediaDestinationType MediaDestinationType { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 1000
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="playlistName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string PlaylistName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaDestinationPlaylistMediaDestinationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="playlist")]
		playlist = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaReference
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="currentlyPlaying")]
		currentlyPlaying = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="my")]
		my = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="newest")]
		newest = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="oldest")]
		oldest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="best")]
		best = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="worst")]
		worst = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="popular")]
		popular = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unpopular")]
		unpopular = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="trending")]
		trending = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="recommended")]
		recommended = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaControl
	{
		
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public PlayMediaControlActivity Activity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="commands")]
		public PlayMediaControlCommandSet Commands { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scheme")]
		public PlayMediaControlScheme Scheme { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaControlActivity
	{
		
		/// <summary>
		/// Minimum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="playElapsed")]
		[System.ComponentModel.DataAnnotations.Range(5, System.UInt32.MaxValue)]
		public System.Nullable<System.UInt32> PlayElapsed { get; set; }
		
		/// <summary>
		/// Minimum: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="playElapsedInterval")]
		[System.ComponentModel.DataAnnotations.Range(5, System.UInt32.MaxValue)]
		public System.Nullable<System.UInt32> PlayElapsedInterval { get; set; }
		
		/// <summary>
		/// Minimum: 5
		/// Maximum: 60
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="playPaused")]
		[System.ComponentModel.DataAnnotations.Range(5, 60)]
		public System.Nullable<System.UInt32> PlayPaused { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaControlCommandSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="bookmarkTrack")]
		public System.Nullable<System.Boolean> BookmarkTrack { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dislikeTrack")]
		public System.Nullable<System.Boolean> DislikeTrack { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="likeTrack")]
		public System.Nullable<System.Boolean> LikeTrack { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextTrack")]
		public System.Nullable<System.Boolean> NextTrack { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preferSkipBackward")]
		public System.Nullable<System.Boolean> PreferSkipBackward { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preferSkipForward")]
		public System.Nullable<System.Boolean> PreferSkipForward { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previousTrack")]
		public System.Nullable<System.Boolean> PreviousTrack { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seekToPlaybackPosition")]
		public System.Nullable<System.Boolean> SeekToPlaybackPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="skipBackward")]
		public System.Nullable<System.Boolean> SkipBackward { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="skipForward")]
		public System.Nullable<System.Boolean> SkipForward { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaControlScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="custom")]
		custom = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="onDemand")]
		onDemand = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="internetRadio")]
		internetRadio = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="liveStreaming")]
		liveStreaming = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="audioBook")]
		audioBook = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="podcast")]
		podcast = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="advertisement")]
		advertisement = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntent
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<PlayMediaIntentClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaItems")]
		public MediaItem[] MediaItems { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaSearch")]
		public MediaSearch MediaSearch { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playShuffled")]
		public System.Nullable<System.Boolean> PlayShuffled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playbackQueueLocation")]
		public System.Nullable<PlayMediaIntentPlaybackQueueLocation> PlaybackQueueLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playbackRepeatMode")]
		public System.Nullable<PlayMediaIntentPlaybackRepeatMode> PlaybackRepeatMode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playbackSpeed")]
		public System.Nullable<System.Double> PlaybackSpeed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resumePlayback")]
		public System.Nullable<System.Boolean> ResumePlayback { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntent")]
		PlayMediaIntent = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentPlaybackQueueLocation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="now")]
		now = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="next")]
		next = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="later")]
		later = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentPlaybackRepeatMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="none")]
		none = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="all")]
		all = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="one")]
		one = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingHandleInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingHandleInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PlayMediaIntentHandlingHandleInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingHandleInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.handle")]
		PlayMediaIntentHandling_handle = 0,
	}
	
	public class PlayMediaIntentHandlingHandleInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="response")]
		public PlayMediaIntentResponse Response { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public PlayMediaIntentResponseClass Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public PlayMediaIntentResponseCode Code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentResponseClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentResponse")]
		PlayMediaIntentResponse = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentResponseCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unspecified")]
		unspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="success")]
		success = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failure")]
		failure = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failureRequiringAppLaunch")]
		failureRequiringAppLaunch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failureUnknownMediaType")]
		failureUnknownMediaType = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failureNoUnplayedContent")]
		failureNoUnplayedContent = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failureRestrictedContent")]
		failureRestrictedContent = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingInvocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingInvocationMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="params")]
		public PlayMediaIntentHandlingInvocationParams Params { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingInvocationMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolveMediaItems")]
		PlayMediaIntentHandling_resolveMediaItems = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolvePlayShuffled")]
		PlayMediaIntentHandling_resolvePlayShuffled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolvePlaybackQueueLocation")]
		PlayMediaIntentHandling_resolvePlaybackQueueLocation = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolvePlaybackRepeatMode")]
		PlayMediaIntentHandling_resolvePlaybackRepeatMode = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolveResumePlayback")]
		PlayMediaIntentHandling_resolveResumePlayback = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.handle")]
		PlayMediaIntentHandling_handle = 5,
	}
	
	public class PlayMediaIntentHandlingInvocationParams
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="intent")]
		public PlayMediaIntent Intent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingInvocationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingResolveMediaItemsInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingResolveMediaItemsInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PlayMediaIntentHandlingResolveMediaItemsInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingResolveMediaItemsInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolveMediaItems")]
		PlayMediaIntentHandling_resolveMediaItems = 0,
	}
	
	public class PlayMediaIntentHandlingResolveMediaItemsInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public PlayMediaMediaItemResolutionResult[] ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaMediaItemResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<PlayMediaMediaItemResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public PlayMediaMediaItemResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="disambiguation")]
		public PlayMediaMediaItemResolutionResultDisambiguation Disambiguation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public PlayMediaMediaItemResolutionResultSuccess Success { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unsupported")]
		public PlayMediaMediaItemResolutionResultUnsupported Unsupported { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaMediaItemResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaMediaItemResolutionResult")]
		PlayMediaMediaItemResolutionResult = 0,
	}
	
	public class PlayMediaMediaItemResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaItemToConfirm")]
		public MediaItem MediaItemToConfirm { get; set; }
	}
	
	public class PlayMediaMediaItemResolutionResultDisambiguation
	{
		
		/// <summary>
		/// Required
		/// Minimum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaItemsToDisambiguate")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public MediaItem[] MediaItemsToDisambiguate { get; set; }
	}
	
	public class PlayMediaMediaItemResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedMediaItem")]
		public MediaItem ResolvedMediaItem { get; set; }
	}
	
	public class PlayMediaMediaItemResolutionResultUnsupported
	{
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public AddMediaMediaItemResolutionResultUnsupportedReason Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingResolvePlayShuffledInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PlayMediaIntentHandlingResolvePlayShuffledInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingResolvePlayShuffledInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolvePlayShuffled")]
		PlayMediaIntentHandling_resolvePlayShuffled = 0,
	}
	
	public class PlayMediaIntentHandlingResolvePlayShuffledInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public BooleanResolutionResult ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolvePlaybackQueueLocation")]
		PlayMediaIntentHandling_resolvePlaybackQueueLocation = 0,
	}
	
	public class PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public PlaybackQueueLocationResolutionResult ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlaybackQueueLocationResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<PlaybackQueueLocationResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public PlaybackQueueLocationResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public PlaybackQueueLocationResolutionResultSuccess Success { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlaybackQueueLocationResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlaybackQueueLocationResolutionResult")]
		PlaybackQueueLocationResolutionResult = 0,
	}
	
	public class PlaybackQueueLocationResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="playbackQueueLocationToConfirm")]
		public PlayMediaIntentPlaybackQueueLocation PlaybackQueueLocationToConfirm { get; set; }
	}
	
	public class PlaybackQueueLocationResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedPlaybackQueueLocation")]
		public PlayMediaIntentPlaybackQueueLocation ResolvedPlaybackQueueLocation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolvePlaybackRepeatMode")]
		PlayMediaIntentHandling_resolvePlaybackRepeatMode = 0,
	}
	
	public class PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public PlaybackRepeatModeResolutionResult ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlaybackRepeatModeResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<PlaybackRepeatModeResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public PlaybackRepeatModeResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public PlaybackRepeatModeResolutionResultSuccess Success { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlaybackRepeatModeResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlaybackRepeatModeResolutionResult")]
		PlaybackRepeatModeResolutionResult = 0,
	}
	
	public class PlaybackRepeatModeResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="playbackRepeatModeToConfirm")]
		public PlayMediaIntentPlaybackRepeatMode PlaybackRepeatModeToConfirm { get; set; }
	}
	
	public class PlaybackRepeatModeResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedPlaybackRepeatMode")]
		public PlayMediaIntentPlaybackRepeatMode ResolvedPlaybackRepeatMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PlayMediaIntentHandlingResolveResumePlaybackInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public PlayMediaIntentHandlingResolveResumePlaybackInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaIntentHandlingResolveResumePlaybackInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PlayMediaIntentHandling.resolveResumePlayback")]
		PlayMediaIntentHandling_resolveResumePlayback = 0,
	}
	
	public class PlayMediaIntentHandlingResolveResumePlaybackInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public BooleanResolutionResult ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlayMediaMediaItemUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="loginRequired")]
		loginRequired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="subscriptionRequired")]
		subscriptionRequired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unsupportedMediaType")]
		unsupportedMediaType = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="explicitContentSettings")]
		explicitContentSettings = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="restrictedContent")]
		restrictedContent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="regionRestriction")]
		regionRestriction = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PlayMediaRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public Constraints Constraints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userActivity")]
		public UserActivity UserActivity { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: [0-9]+\.[0-9]+\.[0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]+\.[0-9]+\.[0-9]+")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlaybackQueueLocation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="now")]
		now = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="next")]
		next = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="later")]
		later = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PlaybackRepeatMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unknown")]
		unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="none")]
		none = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="all")]
		all = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="one")]
		one = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProtocolException
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int64> Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="methodIndex")]
		public System.Nullable<System.UInt32> MethodIndex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="methodName")]
		public string MethodName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public ProtocolExceptionReason Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="retryWithDelay")]
		public System.Nullable<System.Single> RetryWithDelay { get; set; }
		
		/// <summary>
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trace")]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string[] Trace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ProtocolExceptionReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unsupported")]
		unsupported = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unauthorized")]
		unauthorized = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unexpected")]
		unexpected = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="invalid")]
		invalid = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unparseable")]
		unparseable = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="deprecated")]
		deprecated = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="internal")]
		_internal = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="complex")]
		complex = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="busy")]
		busy = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProtocolExceptionInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="exception")]
		public ProtocolException Exception { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public ProtocolExceptionInvocationResponseMethod Method { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ProtocolExceptionInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ProtocolException")]
		ProtocolException = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Queue
	{
		
		/// <summary>
		/// Required
		/// Maximum items: 1000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public Content[] Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentItemsCount")]
		public System.Nullable<System.UInt32> ContentItemsCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="controls")]
		public QueueControlMapping Controls { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 1024
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="insertPointer")]
		public QueueInsertPointer InsertPointer { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextContentUrl")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string NextContentUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="playPointer")]
		public QueuePlayPointer PlayPointer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prerollSeconds")]
		public System.Nullable<System.Double> PrerollSeconds { get; set; }
		
		/// <summary>
		/// Max length: 2000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousContentUrl")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string PreviousContentUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="skipsRemaining")]
		public System.Nullable<System.UInt32> SkipsRemaining { get; set; }
		
		/// <summary>
		/// Required
		/// Max length: 25
		/// Pattern: [0-9]+\.[0-9]+\.[0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.MaxLength(25)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]+\.[0-9]+\.[0-9]+")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueueControlMapping
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="default")]
		public PlayMediaControl Default { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueuePlayPointer
	{
		
		/// <summary>
		/// Max length: 1000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentIdentifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string ContentIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="offsetInMillis")]
		public System.Nullable<System.Int64> OffsetInMillis { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum QueueActivityReportEvent
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.elapsed")]
		local_playing_elapsed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.paused")]
		local_playing_paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.continued")]
		local_playing_continued = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.scrub")]
		local_playing_scrub = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.fastForward")]
		local_playing_fastForward = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.fastRewind")]
		local_playing_fastRewind = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.naturally")]
		local_playing_transitioned_naturally = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.skip_next")]
		local_playing_transitioned_skip_next = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.skip_previous")]
		local_playing_transitioned_skip_previous = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.queue_replaced")]
		local_playing_transitioned_queue_replaced = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.stopped.naturally")]
		local_stopped_naturally = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.stopped.skip_past_end")]
		local_stopped_skip_past_end = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.command.like")]
		local_command_like = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.command.dislike")]
		local_command_dislike = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.command.bookmark")]
		local_command_bookmark = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueueInsertPointer
	{
		
		/// <summary>
		/// Max length: 1000
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="afterIdentifier")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		public string AfterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="replace")]
		public System.Nullable<System.Boolean> Replace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateActivityRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public Constraints Constraints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nowPlaying")]
		public PlayerContext NowPlaying { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previouslyPlaying")]
		public PlayerContext PreviouslyPlaying { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report")]
		public UpdateActivityRequestReport Report { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userActivity")]
		public UserActivity UserActivity { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: [0-9]+\.[0-9]+\.[0-9]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]+\.[0-9]+\.[0-9]+")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateActivityRequestReport
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.elapsed")]
		local_playing_elapsed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.paused")]
		local_playing_paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.continued")]
		local_playing_continued = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.scrub")]
		local_playing_scrub = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.fastForward")]
		local_playing_fastForward = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.fastRewind")]
		local_playing_fastRewind = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.naturally")]
		local_playing_transitioned_naturally = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.skip_next")]
		local_playing_transitioned_skip_next = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.skip_previous")]
		local_playing_transitioned_skip_previous = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.playing.transitioned.queue_replaced")]
		local_playing_transitioned_queue_replaced = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.stopped.naturally")]
		local_stopped_naturally = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.stopped.skip_past_end")]
		local_stopped_skip_past_end = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.command.like")]
		local_command_like = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.command.dislike")]
		local_command_dislike = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="local.command.bookmark")]
		local_command_bookmark = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateActivityResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="queue")]
		public Queue Queue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userActivity")]
		public UserActivity UserActivity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntent
	{
		
		[System.Runtime.Serialization.DataMember(Name="affinityType")]
		public MediaAffinityType AffinityType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public UpdateMediaAffinityIntentClass Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaItems")]
		public MediaItem[] MediaItems { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mediaSearch")]
		public MediaSearch MediaSearch { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntent")]
		UpdateMediaAffinityIntent = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntentHandlingHandleInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public UpdateMediaAffinityIntentHandlingHandleInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public UpdateMediaAffinityIntentHandlingHandleInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentHandlingHandleInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentHandling.handle")]
		UpdateMediaAffinityIntentHandling_handle = 0,
	}
	
	public class UpdateMediaAffinityIntentHandlingHandleInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="response")]
		public UpdateMediaAffinityIntentResponse Response { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public UpdateMediaAffinityIntentResponseClass Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public UpdateMediaAffinityIntentResponseCode Code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentResponseClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentResponse")]
		UpdateMediaAffinityIntentResponse = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentResponseCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unspecified")]
		unspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inProgress")]
		inProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="success")]
		success = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failure")]
		failure = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="failureRequiringAppLaunch")]
		failureRequiringAppLaunch = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntentHandlingInvocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public UpdateMediaAffinityIntentHandlingInvocationMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="params")]
		public UpdateMediaAffinityIntentHandlingInvocationParams Params { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentHandlingInvocationMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentHandling.resolveMediaItems")]
		UpdateMediaAffinityIntentHandling_resolveMediaItems = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentHandling.resolveAffinityType")]
		UpdateMediaAffinityIntentHandling_resolveAffinityType = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentHandling.handle")]
		UpdateMediaAffinityIntentHandling_handle = 2,
	}
	
	public class UpdateMediaAffinityIntentHandlingInvocationParams
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="intent")]
		public UpdateMediaAffinityIntent Intent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntentHandlingInvocationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentHandling.resolveAffinityType")]
		UpdateMediaAffinityIntentHandling_resolveAffinityType = 0,
	}
	
	public class UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public MediaAffinityTypeResolutionResult ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponseMethod Method { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponseResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponseMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityIntentHandling.resolveMediaItems")]
		UpdateMediaAffinityIntentHandling_resolveMediaItems = 0,
	}
	
	public class UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponseResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolutionResult")]
		public UpdateMediaAffinityMediaItemResolutionResult[] ResolutionResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateMediaAffinityMediaItemResolutionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="class")]
		public System.Nullable<UpdateMediaAffinityMediaItemResolutionResultClass> Class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confirmationRequired")]
		public UpdateMediaAffinityMediaItemResolutionResultConfirmationRequired ConfirmationRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="disambiguation")]
		public UpdateMediaAffinityMediaItemResolutionResultDisambiguation Disambiguation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public UpdateMediaAffinityMediaItemResolutionResultSuccess Success { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unsupported")]
		public UpdateMediaAffinityMediaItemResolutionResultUnsupported Unsupported { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityMediaItemResolutionResultClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UpdateMediaAffinityMediaItemResolutionResult")]
		UpdateMediaAffinityMediaItemResolutionResult = 0,
	}
	
	public class UpdateMediaAffinityMediaItemResolutionResultConfirmationRequired
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaItemToConfirm")]
		public MediaItem MediaItemToConfirm { get; set; }
	}
	
	public class UpdateMediaAffinityMediaItemResolutionResultDisambiguation
	{
		
		/// <summary>
		/// Required
		/// Minimum items: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediaItemsToDisambiguate")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public MediaItem[] MediaItemsToDisambiguate { get; set; }
	}
	
	public class UpdateMediaAffinityMediaItemResolutionResultSuccess
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resolvedMediaItem")]
		public MediaItem ResolvedMediaItem { get; set; }
	}
	
	public class UpdateMediaAffinityMediaItemResolutionResultUnsupported
	{
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public System.Nullable<UpdateMediaAffinityMediaItemResolutionResultUnsupportedReason> Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityMediaItemResolutionResultUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="loginRequired")]
		loginRequired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="subscriptionRequired")]
		subscriptionRequired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unsupportedMediaType")]
		unsupportedMediaType = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="explicitContentSettings")]
		explicitContentSettings = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateMediaAffinityMediaItemUnsupportedReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="loginRequired")]
		loginRequired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="subscriptionRequired")]
		subscriptionRequired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unsupportedMediaType")]
		unsupportedMediaType = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="explicitContentSettings")]
		explicitContentSettings = 3,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Configuration Resource
		/// ExtensionConfiguration configuration
		/// </summary>
		public async Task ExtensionConfigurationAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// addMedia
		/// AddMediaIntentHandling intent/addMedia
		/// </summary>
		public async Task<AddMediaIntentHandlingInvocationResponse[]> AddMediaIntentHandlingAsync(AddMediaIntentHandlingInvocation[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intent/addMedia";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AddMediaIntentHandlingInvocationResponse[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// playMedia
		/// PlayMediaIntentHandling intent/playMedia
		/// </summary>
		public async Task<PlayMediaIntentHandlingInvocationResponse[]> PlayMediaIntentHandlingAsync(PlayMediaIntentHandlingInvocation[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intent/playMedia";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PlayMediaIntentHandlingInvocationResponse[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// updateMediaAffinity
		/// UpdateMediaAffinityIntentHandling intent/updateMediaAffinity
		/// </summary>
		public async Task<UpdateMediaAffinityIntentHandlingInvocationResponse[]> UpdateMediaAffinityIntentHandlingAsync(UpdateMediaAffinityIntentHandlingInvocation[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intent/updateMediaAffinity";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateMediaAffinityIntentHandlingInvocationResponse[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// playMedia
		/// PlayMediaOnQueue queues/playMedia
		/// </summary>
		public async Task<Queue> PlayMediaOnQueueAsync(PlayMediaRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/playMedia";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Queue>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// updateActivity
		/// UpdateActivityOnQueue queues/updateActivity
		/// </summary>
		public async Task<UpdateActivityResponse> UpdateActivityOnQueueAsync(UpdateActivityRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/updateActivity";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateActivityResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

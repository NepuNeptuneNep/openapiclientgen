//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateEncryptionConfigResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	/// <summary>
	/// An object representing an asynchronous update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Update
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UpdateStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public UpdateType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="params")]
		public UpdateParam[] Params { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public ErrorDetail[] Errors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Successful = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VersionUpdate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EndpointAccessUpdate = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoggingUpdate = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConfigUpdate = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AssociateIdentityProviderConfig = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DisassociateIdentityProviderConfig = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AssociateEncryptionConfig = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AddonUpdate = 7,
	}
	
	/// <summary>
	/// An object representing the details of an update request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateParam
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public UpdateParamType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateParamType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Version = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PlatformVersion = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EndpointPrivateAccess = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EndpointPublicAccess = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClusterLogging = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DesiredSize = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LabelsToAdd = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LabelsToRemove = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TaintsToAdd = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TaintsToRemove = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxSize = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MinSize = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReleaseVersion = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PublicAccessCidrs = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchTemplateName = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchTemplateVersion = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IdentityProviderConfig = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EncryptionConfig = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AddonVersion = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceAccountRoleArn = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResolveConflicts = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxUnavailable = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MaxUnavailablePercentage = 22,
	}
	
	/// <summary>
	/// An object representing an error when an asynchronous operation fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public ErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceIds")]
		public string[] ResourceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecurityGroupNotFound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EniLimitReached = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IpNotAvailable = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OperationNotPermitted = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VpcIdNotFound = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NodeCreationFailure = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PodEvictionFailure = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientFreeAddresses = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClusterUnreachable = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientNumberOfReplicas = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConfigurationConflict = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AdmissionRequestDenied = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnsupportedAddonModification = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		K8sResourceNotFound = 16,
	}
	
	/// <summary>
	/// The encryption configuration for the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptionConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public string[] Resources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public Provider Provider { get; set; }
	}
	
	/// <summary>
	/// Identifies the Key Management Service (KMS) key used to encrypt the secrets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Provider
	{
		
		[System.Runtime.Serialization.DataMember(Name="keyArn")]
		public string KeyArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidParameterException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInUseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateIdentityProviderConfigResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequiredClaimsMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAddonResponse
	{
		
		/// <summary>
		/// An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addon")]
		public Addon Addon { get; set; }
	}
	
	/// <summary>
	/// An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Addon
	{
		
		[System.Runtime.Serialization.DataMember(Name="addonName")]
		public string AddonName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clusterName")]
		public string ClusterName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AddonStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="health")]
		public AddonHealth Health { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addonArn")]
		public string AddonArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modifiedAt")]
		public System.DateTimeOffset ModifiedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceAccountRoleArn")]
		public string ServiceAccountRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketplaceInformation")]
		public MarketplaceInformation MarketplaceInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationValues")]
		public string ConfigurationValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddonStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEGRADED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 7,
	}
	
	/// <summary>
	/// The health of the add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddonHealth
	{
		
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public AddonIssue[] Issues { get; set; }
	}
	
	/// <summary>
	/// An issue related to an add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddonIssue
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public AddonIssueCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceIds")]
		public string[] ResourceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddonIssueCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailure = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClusterUnreachable = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientNumberOfReplicas = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConfigurationConflict = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AdmissionRequestDenied = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnsupportedAddonModification = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		K8sResourceNotFound = 7,
	}
	
	/// <summary>
	/// Information about an Amazon EKS add-on from the Amazon Web Services Marketplace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MarketplaceInformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="productUrl")]
		public string ProductUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateClusterResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="cluster")]
		public Cluster Cluster { get; set; }
	}
	
	/// <summary>
	/// An object representing an Amazon EKS cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cluster
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourcesVpcConfig")]
		public VpcConfigResponse ResourcesVpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kubernetesNetworkConfig")]
		public KubernetesNetworkConfigResponse KubernetesNetworkConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logging")]
		public Logging Logging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public Identity Identity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ClusterStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificateAuthority")]
		public Certificate CertificateAuthority { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platformVersion")]
		public string PlatformVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encryptionConfig")]
		public EncryptionConfig[] EncryptionConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorConfig")]
		public ConnectorConfigResponse ConnectorConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="health")]
		public ClusterHealth Health { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outpostConfig")]
		public OutpostConfigResponse OutpostConfig { get; set; }
	}
	
	/// <summary>
	/// An object representing an Amazon EKS cluster VPC configuration response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="subnetIds")]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clusterSecurityGroupId")]
		public string ClusterSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpcId")]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPublicAccess")]
		public System.Nullable<System.Boolean> EndpointPublicAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPrivateAccess")]
		public System.Nullable<System.Boolean> EndpointPrivateAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicAccessCidrs")]
		public string[] PublicAccessCidrs { get; set; }
	}
	
	/// <summary>
	/// The Kubernetes network configuration for the cluster. The response contains a value for <b>serviceIpv6Cidr</b> or <b>serviceIpv4Cidr</b>, but not both. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KubernetesNetworkConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceIpv4Cidr")]
		public string ServiceIpv4Cidr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceIpv6Cidr")]
		public string ServiceIpv6Cidr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ipFamily")]
		public IpFamily IpFamily { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IpFamily
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ipv4 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ipv6 = 1,
	}
	
	/// <summary>
	/// An object representing the logging configuration for resources in your cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Logging
	{
		
		[System.Runtime.Serialization.DataMember(Name="clusterLogging")]
		public LogSetup[] ClusterLogging { get; set; }
	}
	
	/// <summary>
	/// An object representing the enabled or disabled Kubernetes control plane logs for your cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogSetup
	{
		
		[System.Runtime.Serialization.DataMember(Name="types")]
		public LogType[] Types { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		audit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		authenticator = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		controllerManager = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scheduler = 4,
	}
	
	/// <summary>
	/// An object representing an identity provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Identity
	{
		
		[System.Runtime.Serialization.DataMember(Name="oidc")]
		public OIDC Oidc { get; set; }
	}
	
	/// <summary>
	/// An object representing the <a href="https://openid.net/connect/">OpenID Connect</a> (OIDC) identity provider information for the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OIDC
	{
		
		[System.Runtime.Serialization.DataMember(Name="issuer")]
		public string Issuer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClusterStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 5,
	}
	
	/// <summary>
	/// An object representing the <code>certificate-authority-data</code> for your cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Certificate
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
	}
	
	/// <summary>
	/// The full description of your connected cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectorConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="activationId")]
		public string ActivationId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="activationCode")]
		public string ActivationCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="activationExpiry")]
		public System.DateTimeOffset ActivationExpiry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// An object representing the health of your local Amazon EKS cluster on an Amazon Web Services Outpost. You can't use this API with an Amazon EKS cluster on the Amazon Web Services cloud. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterHealth
	{
		
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public ClusterIssue[] Issues { get; set; }
	}
	
	/// <summary>
	/// An issue with your local Amazon EKS cluster on an Amazon Web Services Outpost. You can't use this API with an Amazon EKS cluster on the Amazon Web Services cloud.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterIssue
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public ClusterIssueCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceIds")]
		public string[] ResourceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClusterIssueCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClusterUnreachable = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConfigurationConflict = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailure = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceLimitExceeded = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceNotFound = 5,
	}
	
	/// <summary>
	/// An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. This API isn't available for Amazon EKS clusters on the Amazon Web Services cloud.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutpostConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outpostArns")]
		public string[] OutpostArns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="controlPlaneInstanceType")]
		public string ControlPlaneInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="controlPlanePlacement")]
		public ControlPlanePlacementResponse ControlPlanePlacement { get; set; }
	}
	
	/// <summary>
	/// The placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html">Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ControlPlanePlacementResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="groupName")]
		public string GroupName { get; set; }
	}
	
	/// <summary>
	/// The placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html">Capacity considerations</a> in the <i>Amazon EKS User Guide</i> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ControlPlanePlacementRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="groupName")]
		public string GroupName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceLimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnsupportedAvailabilityZoneException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFargateProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fargateProfile")]
		public FargateProfile FargateProfile { get; set; }
	}
	
	/// <summary>
	/// An object representing an Fargate profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FargateProfile
	{
		
		[System.Runtime.Serialization.DataMember(Name="fargateProfileName")]
		public string FargateProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fargateProfileArn")]
		public string FargateProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clusterName")]
		public string ClusterName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="podExecutionRoleArn")]
		public string PodExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="selectors")]
		public FargateProfileSelector[] Selectors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public FargateProfileStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// An object representing an Fargate profile selector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FargateProfileSelector
	{
		
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public FargateProfileLabel Labels { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FargateProfileLabel
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FargateProfileStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNodegroupResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nodegroup")]
		public Nodegroup Nodegroup { get; set; }
	}
	
	/// <summary>
	/// An object representing an Amazon EKS managed node group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Nodegroup
	{
		
		[System.Runtime.Serialization.DataMember(Name="nodegroupName")]
		public string NodegroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodegroupArn")]
		public string NodegroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clusterName")]
		public string ClusterName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modifiedAt")]
		public System.DateTimeOffset ModifiedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public NodegroupStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="capacityType")]
		public CapacityTypes CapacityType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scalingConfig")]
		public NodegroupScalingConfig ScalingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="remoteAccess")]
		public RemoteAccessConfig RemoteAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amiType")]
		public AMITypes AmiType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nodeRole")]
		public string NodeRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public LabelsMap Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="taints")]
		public Taint[] Taints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public NodegroupResources Resources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="diskSize")]
		public System.Nullable<System.Int32> DiskSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="health")]
		public NodegroupHealth Health { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateConfig")]
		public NodegroupUpdateConfig UpdateConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NodegroupStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEGRADED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CapacityTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_DEMAND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT = 1,
	}
	
	/// <summary>
	/// An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group. When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodegroupScalingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="minSize")]
		public System.Nullable<System.Int32> MinSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxSize")]
		public System.Nullable<System.Int32> MaxSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredSize")]
		public System.Nullable<System.Int32> DesiredSize { get; set; }
	}
	
	/// <summary>
	/// An object representing the remote access configuration for the managed node group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoteAccessConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="ec2SshKey")]
		public string Ec2SshKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceSecurityGroups")]
		public string[] SourceSecurityGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AMITypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AL2_x86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AL2_x86_64_GPU = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AL2_ARM_64 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTLEROCKET_ARM_64 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTLEROCKET_x86_64 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTLEROCKET_ARM_64_NVIDIA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTLEROCKET_x86_64_NVIDIA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS_CORE_2019_x86_64 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS_FULL_2019_x86_64 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS_CORE_2022_x86_64 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS_FULL_2022_x86_64 = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LabelsMap
	{
	}
	
	/// <summary>
	/// A property that allows a node to repel a set of pods. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Taint
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effect")]
		public TaintEffect Effect { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaintEffect
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_SCHEDULE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_EXECUTE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREFER_NO_SCHEDULE = 2,
	}
	
	/// <summary>
	/// An object representing the resources associated with the node group, such as Auto Scaling groups and security groups for remote access.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodegroupResources
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScalingGroups")]
		public AutoScalingGroup[] AutoScalingGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="remoteAccessSecurityGroup")]
		public string RemoteAccessSecurityGroup { get; set; }
	}
	
	/// <summary>
	/// An Auto Scaling group that is associated with an Amazon EKS managed node group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoScalingGroup
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An object representing the health status of the node group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodegroupHealth
	{
		
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public Issue[] Issues { get; set; }
	}
	
	/// <summary>
	/// An object representing an issue with an Amazon EKS resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Issue
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public NodegroupIssueCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceIds")]
		public string[] ResourceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NodegroupIssueCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupNotFound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupInvalidConfiguration = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2SecurityGroupNotFound = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2SecurityGroupDeletionFailure = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2LaunchTemplateNotFound = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2LaunchTemplateVersionMismatch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2SubnetNotFound = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2SubnetInvalidConfiguration = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IamInstanceProfileNotFound = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2SubnetMissingIpv6Assignment = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IamLimitExceeded = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IamNodeRoleNotFound = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NodeCreationFailure = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AsgInstanceLaunchFailures = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceLimitExceeded = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientFreeAddresses = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailure = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClusterUnreachable = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AmiIdNotFound = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupOptInRequired = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupRateLimitExceeded = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2LaunchTemplateDeletionFailure = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2LaunchTemplateInvalidConfiguration = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2LaunchTemplateMaxLimitExceeded = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2SubnetListTooLong = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IamThrottling = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NodeTerminationFailure = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PodEvictionFailure = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SourceEc2LaunchTemplateNotFound = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitExceeded = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupInstanceRefreshActive = 32,
	}
	
	/// <summary>
	/// The node group update configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodegroupUpdateConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxUnavailable")]
		public System.Nullable<System.Int32> MaxUnavailable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxUnavailablePercentage")]
		public System.Nullable<System.Int32> MaxUnavailablePercentage { get; set; }
	}
	
	/// <summary>
	/// <p>An object representing a node group launch template specification. The launch template can't include <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"> <code>SubnetId</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"> <code>IamInstanceProfile</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html"> <code>RequestSpotInstances</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html"> <code>HibernationOptions</code> </a>, or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html"> <code>TerminateInstances</code> </a>, or the node group deployment or update will fail. For more information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html"> <code>CreateLaunchTemplate</code> </a> in the Amazon EC2 API Reference. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p> <p>You must specify either the launch template ID or the launch template name in the request, but not both.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LaunchTemplateSpecification
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAddonResponse
	{
		
		/// <summary>
		/// An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addon")]
		public Addon Addon { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteClusterResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="cluster")]
		public Cluster Cluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFargateProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fargateProfile")]
		public FargateProfile FargateProfile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNodegroupResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nodegroup")]
		public Nodegroup Nodegroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterClusterResponse
	{
		
		/// <summary>
		/// An object representing an Amazon EKS cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cluster")]
		public Cluster Cluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAddonResponse
	{
		
		/// <summary>
		/// An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addon")]
		public Addon Addon { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAddonConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="addonName")]
		public string AddonName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationSchema")]
		public string ConfigurationSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAddonVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="addons")]
		public AddonInfo[] Addons { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about an add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddonInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="addonName")]
		public string AddonName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addonVersions")]
		public AddonVersionInfo[] AddonVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketplaceInformation")]
		public MarketplaceInformation MarketplaceInformation { get; set; }
	}
	
	/// <summary>
	/// Information about an add-on version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddonVersionInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="architecture")]
		public string[] Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compatibilities")]
		public Compatibility[] Compatibilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requiresConfiguration")]
		public System.Nullable<System.Boolean> RequiresConfiguration { get; set; }
	}
	
	/// <summary>
	/// Compatibility information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Compatibility
	{
		
		[System.Runtime.Serialization.DataMember(Name="clusterVersion")]
		public string ClusterVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platformVersions")]
		public string[] PlatformVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="defaultVersion")]
		public System.Nullable<System.Boolean> DefaultVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeClusterResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="cluster")]
		public Cluster Cluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFargateProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fargateProfile")]
		public FargateProfile FargateProfile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIdentityProviderConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfig")]
		public IdentityProviderConfigResponse IdentityProviderConfig { get; set; }
	}
	
	/// <summary>
	/// The full description of your identity configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityProviderConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="oidc")]
		public OidcIdentityProviderConfig Oidc { get; set; }
	}
	
	/// <summary>
	/// An object representing the configuration for an OpenID Connect (OIDC) identity provider. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OidcIdentityProviderConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfigName")]
		public string IdentityProviderConfigName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfigArn")]
		public string IdentityProviderConfigArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clusterName")]
		public string ClusterName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="issuerUrl")]
		public string IssuerUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usernameClaim")]
		public string UsernameClaim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usernamePrefix")]
		public string UsernamePrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupsClaim")]
		public string GroupsClaim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupsPrefix")]
		public string GroupsPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requiredClaims")]
		public RequiredClaimsMap RequiredClaims { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ConfigStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfigStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNodegroupResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nodegroup")]
		public Nodegroup Nodegroup { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUpdateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateIdentityProviderConfigResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAddonsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="addons")]
		public string[] Addons { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListClustersResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="clusters")]
		public string[] Clusters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFargateProfilesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fargateProfileNames")]
		public string[] FargateProfileNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIdentityProviderConfigsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfigs")]
		public IdentityProviderConfig[] IdentityProviderConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object representing an identity provider configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityProviderConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListNodegroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nodegroups")]
		public string[] Nodegroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUpdatesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="updateIds")]
		public string[] UpdateIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterClusterResponse
	{
		
		/// <summary>
		/// An object representing an Amazon EKS cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cluster")]
		public Cluster Cluster { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConnectorConfigProvider
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EKS_ANYWHERE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANTHOS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AKS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPENSHIFT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TANZU = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANCHER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourcePropagationDelayException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAddonResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateClusterConfigResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateClusterVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNodegroupConfigResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNodegroupVersionResponse
	{
		
		/// <summary>
		/// An object representing an asynchronous update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public Update Update { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateEncryptionConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="encryptionConfig")]
		public EncryptionConfig[] EncryptionConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// An object representing an OpenID Connect (OIDC) configuration. Before associating an OIDC identity provider to your cluster, review the considerations in <a href="https://docs.aws.amazon.com/eks/latest/userguide/authenticate-oidc-identity-provider.html">Authenticating users for your cluster from an OpenID Connect identity provider</a> in the <i>Amazon EKS User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OidcIdentityProviderConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfigName")]
		public string IdentityProviderConfigName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="issuerUrl")]
		public string IssuerUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usernameClaim")]
		public string UsernameClaim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usernamePrefix")]
		public string UsernamePrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupsClaim")]
		public string GroupsClaim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupsPrefix")]
		public string GroupsPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requiredClaims")]
		public RequiredClaimsMap RequiredClaims { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateIdentityProviderConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="oidc")]
		public OidcIdentityProviderConfigRequest Oidc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// The configuration sent to a cluster for configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectorConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public ConnectorConfigProvider Provider { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResolveConflicts
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERWRITE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESERVE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAddonRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addonName")]
		public string AddonName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceAccountRoleArn")]
		public string ServiceAccountRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resolveConflicts")]
		public ResolveConflicts ResolveConflicts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationValues")]
		public string ConfigurationValues { get; set; }
	}
	
	/// <summary>
	/// An object representing the VPC configuration to use for an Amazon EKS cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="subnetIds")]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPublicAccess")]
		public System.Nullable<System.Boolean> EndpointPublicAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPrivateAccess")]
		public System.Nullable<System.Boolean> EndpointPrivateAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicAccessCidrs")]
		public string[] PublicAccessCidrs { get; set; }
	}
	
	/// <summary>
	/// The Kubernetes network configuration for the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KubernetesNetworkConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceIpv4Cidr")]
		public string ServiceIpv4Cidr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ipFamily")]
		public IpFamily IpFamily { get; set; }
	}
	
	/// <summary>
	/// The configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a cluster on an Outpost, review <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html">Creating a local cluster on an Outpost</a> in the <i>Amazon EKS User Guide</i>. This API isn't available for Amazon EKS clusters on the Amazon Web Services cloud.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutpostConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outpostArns")]
		public string[] OutpostArns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="controlPlaneInstanceType")]
		public string ControlPlaneInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="controlPlanePlacement")]
		public ControlPlanePlacementRequest ControlPlanePlacement { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateClusterRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourcesVpcConfig")]
		public VpcConfigRequest ResourcesVpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kubernetesNetworkConfig")]
		public KubernetesNetworkConfigRequest KubernetesNetworkConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logging")]
		public Logging Logging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encryptionConfig")]
		public EncryptionConfig[] EncryptionConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outpostConfig")]
		public OutpostConfigRequest OutpostConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFargateProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fargateProfileName")]
		public string FargateProfileName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="podExecutionRoleArn")]
		public string PodExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="selectors")]
		public FargateProfileSelector[] Selectors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNodegroupRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nodegroupName")]
		public string NodegroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scalingConfig")]
		public NodegroupScalingConfig ScalingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="diskSize")]
		public System.Nullable<System.Int32> DiskSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="amiType")]
		public AMITypes AmiType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="remoteAccess")]
		public RemoteAccessConfig RemoteAccess { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nodeRole")]
		public string NodeRole { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public LabelsMap Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="taints")]
		public Taint[] Taints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateConfig")]
		public NodegroupUpdateConfig UpdateConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="capacityType")]
		public CapacityTypes CapacityType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAddonRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteClusterRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFargateProfileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNodegroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterClusterRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAddonConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAddonRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAddonVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeClusterRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFargateProfileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIdentityProviderConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfig")]
		public IdentityProviderConfig IdentityProviderConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNodegroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUpdateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateIdentityProviderConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfig")]
		public IdentityProviderConfig IdentityProviderConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAddonsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListClustersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFargateProfilesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIdentityProviderConfigsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListNodegroupsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUpdatesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterClusterRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorConfig")]
		public ConnectorConfigRequest ConnectorConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAddonRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceAccountRoleArn")]
		public string ServiceAccountRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resolveConflicts")]
		public ResolveConflicts ResolveConflicts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="configurationValues")]
		public string ConfigurationValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateClusterConfigRequest
	{
		
		/// <summary>
		/// An object representing the VPC configuration to use for an Amazon EKS cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesVpcConfig")]
		public VpcConfigRequest ResourcesVpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logging")]
		public Logging Logging { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateClusterVersionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// An object representing a Kubernetes label change for a managed node group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLabelsPayload
	{
		
		[System.Runtime.Serialization.DataMember(Name="addOrUpdateLabels")]
		public LabelsMap AddOrUpdateLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removeLabels")]
		public string[] RemoveLabels { get; set; }
	}
	
	/// <summary>
	/// An object representing the details of an update to a taints payload. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaintsPayload
	{
		
		[System.Runtime.Serialization.DataMember(Name="addOrUpdateTaints")]
		public Taint[] AddOrUpdateTaints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removeTaints")]
		public Taint[] RemoveTaints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNodegroupConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public UpdateLabelsPayload Labels { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="taints")]
		public UpdateTaintsPayload Taints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scalingConfig")]
		public NodegroupScalingConfig ScalingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updateConfig")]
		public NodegroupUpdateConfig UpdateConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNodegroupVersionRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public LaunchTemplateSpecification LaunchTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Associate encryption configuration to an existing cluster.</p> <p>You can use this API to enable encryption on existing clusters which do not have encryption already enabled. This allows you to implement a defense-in-depth security strategy without migrating applications to new Amazon EKS clusters.</p>
		/// AssociateEncryptionConfig clusters/{name}/encryption-config/associate
		/// </summary>
		/// <param name="name">The name of the cluster that you are associating with encryption configuration.</param>
		/// <returns>Success</returns>
		public async Task<AssociateEncryptionConfigResponse> AssociateEncryptionConfigAsync(string name, AssociateEncryptionConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/encryption-config/associate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociateEncryptionConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Associate an identity provider configuration to a cluster.</p> <p>If you want to authenticate identities using an identity provider, you can create an identity provider configuration and associate it to your cluster. After configuring authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code> to assign permissions to the roles, and then bind the roles to the identities using Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using RBAC Authorization</a> in the Kubernetes documentation.</p>
		/// AssociateIdentityProviderConfig clusters/{name}/identity-provider-configs/associate
		/// </summary>
		/// <param name="name">The name of the cluster to associate the configuration to.</param>
		/// <returns>Success</returns>
		public async Task<AssociateIdentityProviderConfigResponse> AssociateIdentityProviderConfigAsync(string name, AssociateIdentityProviderConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/identity-provider-configs/associate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociateIdentityProviderConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon EKS add-on.</p> <p>Amazon EKS add-ons help to automate the provisioning and lifecycle management of common operational software for Amazon EKS clusters. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.</p>
		/// CreateAddon clusters/{name}/addons
		/// </summary>
		/// <param name="name">The name of the cluster to create the add-on for.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateAddonResponse> CreateAddonAsync(string name, CreateAddonPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/addons";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAddonResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the available add-ons.
		/// ListAddons clusters/{name}/addons
		/// </summary>
		/// <param name="name">The name of the cluster.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="maxResults">The maximum number of add-on results returned by <code>ListAddonsRequest</code> in paginated output. When you use this parameter, <code>ListAddonsRequest</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListAddonsRequest</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListAddonsRequest</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken"><p>The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note> <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p> </note></param>
		/// <returns>Success</returns>
		public async Task<ListAddonsResponse> ListAddonsAsync(string name, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/addons&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAddonsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as <code>etcd</code> and the API server. The control plane runs in an account managed by Amazon Web Services, and the Kubernetes API is exposed by the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single tenant and unique. It runs on its own set of Amazon EC2 instances.</p> <p>The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code> data flows).</p> <p>Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's control plane over the Kubernetes API server endpoint and a certificate file that is created for your cluster.</p> <p>In most cases, it takes several minutes to create a cluster. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.</p>
		/// CreateCluster clusters
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateClusterResponse> CreateClusterAsync(CreateClusterPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateClusterResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Amazon EKS clusters in your Amazon Web Services account in the specified Region.
		/// ListClusters clusters
		/// </summary>
		/// <param name="maxResults">The maximum number of cluster results returned by <code>ListClusters</code> in paginated output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListClusters</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken"><p>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note> <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p> </note></param>
		/// <param name="include">Indicates whether external clusters are included in the returned list. Use '<code>all</code>' to return connected clusters, or blank to return only Amazon EKS clusters. '<code>all</code>' must be in lowercase otherwise an error occurs.</param>
		/// <returns>Success</returns>
		public async Task<ListClustersResponse> ListClustersAsync(int maxResults, string nextToken, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListClustersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an Fargate profile for your Amazon EKS cluster. You must have at least one Fargate profile in a cluster to be able to run pods on Fargate.</p> <p>The Fargate profile allows an administrator to declare which pods run on Fargate and specify which pods run on which Fargate profile. This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and labels. A namespace is required for every selector. The label field consists of multiple optional key-value pairs. Pods that match the selectors are scheduled on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is run on Fargate.</p> <p>When you create a Fargate profile, you must specify a pod execution role to use with the pods that are scheduled with the profile. This role is added to the cluster's Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that is running on the Fargate infrastructure can register with your Amazon EKS cluster so that it can appear in your cluster as a node. The pod execution role also provides IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.</p> <p>Fargate profiles are immutable. However, you can create a new updated profile to replace an existing profile and then delete the original after the updated profile has finished creating.</p> <p>If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you must wait for that Fargate profile to finish deleting before you can create any other profiles in that cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate Profile</a> in the <i>Amazon EKS User Guide</i>.</p>
		/// CreateFargateProfile clusters/{name}/fargate-profiles
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster to apply the Fargate profile to.</param>
		/// <returns>Success</returns>
		public async Task<CreateFargateProfileResponse> CreateFargateProfileAsync(string name, CreateFargateProfilePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/fargate-profiles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateFargateProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Fargate profiles associated with the specified cluster in your Amazon Web Services account in the specified Region.
		/// ListFargateProfiles clusters/{name}/fargate-profiles
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster that you would like to list Fargate profiles in.</param>
		/// <param name="maxResults">The maximum number of Fargate profile results returned by <code>ListFargateProfiles</code> in paginated output. When you use this parameter, <code>ListFargateProfiles</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListFargateProfiles</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListFargateProfiles</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">The <code>nextToken</code> value returned from a previous paginated <code>ListFargateProfiles</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</param>
		/// <returns>Success</returns>
		public async Task<ListFargateProfilesResponse> ListFargateProfilesAsync(string name, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/fargate-profiles&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFargateProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a managed node group for an Amazon EKS cluster. You can only create a node group for your cluster that is equal to the current Kubernetes version for the cluster. All node groups are created with the latest AMI release version for the respective minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a>.</p> <p>An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed node groups</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>Windows AMI types are only supported for commercial Regions that support Windows Amazon EKS.</p> </note>
		/// CreateNodegroup clusters/{name}/node-groups
		/// </summary>
		/// <param name="name">The name of the cluster to create the node group in.</param>
		/// <returns>Success</returns>
		public async Task<CreateNodegroupResponse> CreateNodegroupAsync(string name, CreateNodegroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/node-groups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateNodegroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Amazon EKS managed node groups associated with the specified cluster in your Amazon Web Services account in the specified Region. Self-managed node groups are not listed.
		/// ListNodegroups clusters/{name}/node-groups
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster that you would like to list node groups in.</param>
		/// <param name="maxResults">The maximum number of node group results returned by <code>ListNodegroups</code> in paginated output. When you use this parameter, <code>ListNodegroups</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListNodegroups</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListNodegroups</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">The <code>nextToken</code> value returned from a previous paginated <code>ListNodegroups</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</param>
		/// <returns>Success</returns>
		public async Task<ListNodegroupsResponse> ListNodegroupsAsync(string name, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/node-groups&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListNodegroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Delete an Amazon EKS add-on.</p> <p>When you remove the add-on, it will also be deleted from the cluster. You can always manually start an add-on on the cluster using the Kubernetes API.</p>
		/// DeleteAddon clusters/{name}/addons/{addonName}
		/// </summary>
		/// <param name="name">The name of the cluster to delete the add-on from.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="addonName">The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</param>
		/// <param name="preserve">Specifying this option preserves the add-on software on your cluster but Amazon EKS stops managing any settings for the add-on. If an IAM account is associated with the add-on, it isn't removed.</param>
		/// <returns>Success</returns>
		public async Task<DeleteAddonResponse> DeleteAddonAsync(string name, string addonName, bool preserve, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/addons/"+ (addonName==null? "" : System.Uri.EscapeDataString(addonName))+"&preserve="+preserve;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteAddonResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes an Amazon EKS add-on.
		/// DescribeAddon clusters/{name}/addons/{addonName}
		/// </summary>
		/// <param name="name">The name of the cluster.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="addonName">The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</param>
		/// <returns>Success</returns>
		public async Task<DescribeAddonResponse> DescribeAddonAsync(string name, string addonName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/addons/"+ (addonName==null? "" : System.Uri.EscapeDataString(addonName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAddonResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the Amazon EKS cluster control plane.</p> <p>If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting a Cluster</a> in the <i>Amazon EKS User Guide</i>.</p> <p>If you have managed node groups or Fargate profiles attached to the cluster, you must delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.</p>
		/// DeleteCluster clusters/{name}
		/// </summary>
		/// <param name="name">The name of the cluster to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteClusterResponse> DeleteClusterAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteClusterResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns descriptive information about an Amazon EKS cluster.</p> <p>The API server endpoint and certificate authority data returned by this operation are required for <code>kubelet</code> and <code>kubectl</code> to communicate with your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create a kubeconfig for Amazon EKS</a>.</p> <note> <p>The API server endpoint and certificate authority data aren't available until the cluster reaches the <code>ACTIVE</code> state.</p> </note>
		/// DescribeCluster clusters/{name}
		/// </summary>
		/// <param name="name">The name of the cluster to describe.</param>
		/// <returns>Success</returns>
		public async Task<DescribeClusterResponse> DescribeClusterAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeClusterResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an Fargate profile.</p> <p>When you delete a Fargate profile, any pods running on Fargate that were created with the profile are deleted. If those pods match another Fargate profile, then they are scheduled on Fargate with that profile. If they no longer match any Fargate profiles, then they are not scheduled on Fargate and they may remain in a pending state.</p> <p>Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at a time. You must wait for a Fargate profile to finish deleting before you can delete any other profiles in that cluster.</p>
		/// DeleteFargateProfile clusters/{name}/fargate-profiles/{fargateProfileName}
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster associated with the Fargate profile to delete.</param>
		/// <param name="fargateProfileName">The name of the Fargate profile to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteFargateProfileResponse> DeleteFargateProfileAsync(string name, string fargateProfileName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/fargate-profiles/"+ (fargateProfileName==null? "" : System.Uri.EscapeDataString(fargateProfileName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteFargateProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns descriptive information about an Fargate profile.
		/// DescribeFargateProfile clusters/{name}/fargate-profiles/{fargateProfileName}
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster associated with the Fargate profile.</param>
		/// <param name="fargateProfileName">The name of the Fargate profile to describe.</param>
		/// <returns>Success</returns>
		public async Task<DescribeFargateProfileResponse> DescribeFargateProfileAsync(string name, string fargateProfileName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/fargate-profiles/"+ (fargateProfileName==null? "" : System.Uri.EscapeDataString(fargateProfileName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeFargateProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon EKS node group for a cluster.
		/// DeleteNodegroup clusters/{name}/node-groups/{nodegroupName}
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster that is associated with your node group.</param>
		/// <param name="nodegroupName">The name of the node group to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteNodegroupResponse> DeleteNodegroupAsync(string name, string nodegroupName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/node-groups/"+ (nodegroupName==null? "" : System.Uri.EscapeDataString(nodegroupName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteNodegroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns descriptive information about an Amazon EKS node group.
		/// DescribeNodegroup clusters/{name}/node-groups/{nodegroupName}
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster associated with the node group.</param>
		/// <param name="nodegroupName">The name of the node group to describe.</param>
		/// <returns>Success</returns>
		public async Task<DescribeNodegroupResponse> DescribeNodegroupAsync(string name, string nodegroupName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/node-groups/"+ (nodegroupName==null? "" : System.Uri.EscapeDataString(nodegroupName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeNodegroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deregisters a connected cluster to remove it from the Amazon EKS control plane.
		/// DeregisterCluster cluster-registrations/{name}
		/// </summary>
		/// <param name="name">The name of the connected cluster to deregister.</param>
		/// <returns>Success</returns>
		public async Task<DeregisterClusterResponse> DeregisterClusterAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cluster-registrations/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeregisterClusterResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns configuration options.
		/// DescribeAddonConfiguration addons/configuration-schemas#addonName&addonVersion
		/// </summary>
		/// <param name="addonName">The name of the add-on. The name must match one of the names that <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a> returns.</param>
		/// <param name="addonVersion">The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.</param>
		/// <returns>Success</returns>
		public async Task<DescribeAddonConfigurationResponse> DescribeAddonConfigurationAsync(string addonName, string addonVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "addons/configuration-schemas#addonName&addonVersion?addonName=" + (addonName==null? "" : System.Uri.EscapeDataString(addonName))+"&addonVersion=" + (addonVersion==null? "" : System.Uri.EscapeDataString(addonVersion));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAddonConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the versions for an add-on. Information such as the Kubernetes versions that you can use the add-on with, the <code>owner</code>, <code>publisher</code>, and the <code>type</code> of the add-on are returned.
		/// DescribeAddonVersions addons/supported-versions
		/// </summary>
		/// <param name="kubernetesVersion">The Kubernetes versions that you can use the add-on with.</param>
		/// <param name="maxResults">The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken"><p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeAddonVersionsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note> <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p> </note></param>
		/// <param name="addonName">The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</param>
		/// <param name="types">The type of the add-on. For valid <code>types</code>, don't specify a value for this property.</param>
		/// <param name="publishers">The publisher of the add-on. For valid <code>publishers</code>, don't specify a value for this property.</param>
		/// <param name="owners">The owner of the add-on. For valid <code>owners</code>, don't specify a value for this property.</param>
		/// <returns>Success</returns>
		public async Task<DescribeAddonVersionsResponse> DescribeAddonVersionsAsync(string kubernetesVersion, int maxResults, string nextToken, string addonName, string[] types, string[] publishers, string[] owners, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "addons/supported-versions?kubernetesVersion=" + (kubernetesVersion==null? "" : System.Uri.EscapeDataString(kubernetesVersion))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&addonName=" + (addonName==null? "" : System.Uri.EscapeDataString(addonName))+"&"+string.Join("&", types.Select(z => $"types={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", publishers.Select(z => $"publishers={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", owners.Select(z => $"owners={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAddonVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns descriptive information about an identity provider configuration.
		/// DescribeIdentityProviderConfig clusters/{name}/identity-provider-configs/describe
		/// </summary>
		/// <param name="name">The cluster name that the identity provider configuration is associated to.</param>
		/// <returns>Success</returns>
		public async Task<DescribeIdentityProviderConfigResponse> DescribeIdentityProviderConfigAsync(string name, DescribeIdentityProviderConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/identity-provider-configs/describe";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeIdentityProviderConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns descriptive information about an update against your Amazon EKS cluster or associated managed node group or Amazon EKS add-on.</p> <p>When the status of the update is <code>Succeeded</code>, the update is complete. If an update fails, the status is <code>Failed</code>, and an error detail explains the reason for the failure.</p>
		/// DescribeUpdate clusters/{name}/updates/{updateId}
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster associated with the update.</param>
		/// <param name="updateId">The ID of the update to describe.</param>
		/// <param name="nodegroupName">The name of the Amazon EKS node group associated with the update. This parameter is required if the update is a node group update.</param>
		/// <param name="addonName">The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>. This parameter is required if the update is an add-on update.</param>
		/// <returns>Success</returns>
		public async Task<DescribeUpdateResponse> DescribeUpdateAsync(string name, string updateId, string nodegroupName, string addonName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/updates/"+ (updateId==null? "" : System.Uri.EscapeDataString(updateId))+"&nodegroupName=" + (nodegroupName==null? "" : System.Uri.EscapeDataString(nodegroupName))+"&addonName=" + (addonName==null? "" : System.Uri.EscapeDataString(addonName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeUpdateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates an identity provider configuration from a cluster. If you disassociate an identity provider from your cluster, users included in the provider can no longer access the cluster. However, you can still access the cluster with Amazon Web Services IAM users.
		/// DisassociateIdentityProviderConfig clusters/{name}/identity-provider-configs/disassociate
		/// </summary>
		/// <param name="name">The name of the cluster to disassociate an identity provider from.</param>
		/// <returns>Success</returns>
		public async Task<DisassociateIdentityProviderConfigResponse> DisassociateIdentityProviderConfigAsync(string name, DisassociateIdentityProviderConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/identity-provider-configs/disassociate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DisassociateIdentityProviderConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// A list of identity provider configurations.
		/// ListIdentityProviderConfigs clusters/{name}/identity-provider-configs
		/// </summary>
		/// <param name="name">The cluster name that you want to list identity provider configurations for.</param>
		/// <param name="maxResults">The maximum number of identity provider configurations returned by <code>ListIdentityProviderConfigs</code> in paginated output. When you use this parameter, <code>ListIdentityProviderConfigs</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListIdentityProviderConfigs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListIdentityProviderConfigs</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">The <code>nextToken</code> value returned from a previous paginated <code>IdentityProviderConfigsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</param>
		/// <returns>Success</returns>
		public async Task<ListIdentityProviderConfigsResponse> ListIdentityProviderConfigsAsync(string name, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/identity-provider-configs&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListIdentityProviderConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the tags for an Amazon EKS resource.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well. Tags that you create for Amazon EKS resources do not propagate to any other resources associated with the cluster. For example, if you tag a cluster with this operation, that tag does not automatically propagate to the subnets and nodes associated with the cluster.
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the updates associated with an Amazon EKS cluster or managed node group in your Amazon Web Services account, in the specified Region.
		/// ListUpdates clusters/{name}/updates
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster to list updates for.</param>
		/// <param name="nodegroupName">The name of the Amazon EKS managed node group to list updates for.</param>
		/// <param name="addonName">The names of the installed add-ons that have available updates.</param>
		/// <param name="nextToken">The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</param>
		/// <param name="maxResults">The maximum number of update results returned by <code>ListUpdates</code> in paginated output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListUpdates</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to 100 results and a <code>nextToken</code> value if applicable.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListUpdatesResponse> ListUpdatesAsync(string name, string nodegroupName, string addonName, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/updates&nodegroupName=" + (nodegroupName==null? "" : System.Uri.EscapeDataString(nodegroupName))+"&addonName=" + (addonName==null? "" : System.Uri.EscapeDataString(addonName))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListUpdatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p> <p>If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes versions must match the cluster’s Kubernetes version in order to update the cluster to a new Kubernetes version.</p>
		/// UpdateClusterVersion clusters/{name}/updates
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster to update.</param>
		/// <returns>Success</returns>
		public async Task<UpdateClusterVersionResponse> UpdateClusterVersionAsync(string name, UpdateClusterVersionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/updates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateClusterVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Connects a Kubernetes cluster to the Amazon EKS control plane. </p> <p>Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current information about the cluster and its nodes. </p> <p>Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a> </code> to add it to the Amazon EKS control plane.</p> <p>Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a> containing the <code>activationID</code> and <code>activationCode</code> must be applied to the Kubernetes cluster through it's native provider to provide visibility.</p> <p>After the Manifest is updated and applied, then the connected cluster is visible to the Amazon EKS control plane. If the Manifest is not applied within three days, then the connected cluster will no longer be visible and must be deregistered. See <a>DeregisterCluster</a>.</p>
		/// RegisterCluster cluster-registrations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterClusterResponse> RegisterClusterAsync(RegisterClusterPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cluster-registrations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterClusterResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes specified tags from a resource.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.</param>
		/// <param name="tagKeys">The keys of the tags to be removed.
		/// Minimum items: 1
		/// Maximum items: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an Amazon EKS add-on.
		/// UpdateAddon clusters/{name}/addons/{addonName}/update
		/// </summary>
		/// <param name="name">The name of the cluster.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="addonName">The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</param>
		/// <returns>Success</returns>
		public async Task<UpdateAddonResponse> UpdateAddonAsync(string name, string addonName, UpdateAddonPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/addons/"+ (addonName==null? "" : System.Uri.EscapeDataString(addonName))+"/update";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAddonResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an Amazon EKS cluster configuration. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>You can use this API operation to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch Pricing</a>.</p> </note> <p>You can also use this API operation to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>. </p> <important> <p>You can't update the subnets or security group IDs for an existing cluster.</p> </important> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p>
		/// UpdateClusterConfig clusters/{name}/update-config
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster to update.</param>
		/// <returns>Success</returns>
		public async Task<UpdateClusterConfigResponse> UpdateClusterConfigAsync(string name, UpdateClusterConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/update-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateClusterConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an Amazon EKS managed node group configuration. Your node group continues to function during the update. The response output includes an update ID that you can use to track the status of your node group update with the <a>DescribeUpdate</a> API operation. Currently you can update the Kubernetes labels for a node group or the scaling configuration.
		/// UpdateNodegroupConfig clusters/{name}/node-groups/{nodegroupName}/update-config
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster that the managed node group resides in.</param>
		/// <param name="nodegroupName">The name of the managed node group to update.</param>
		/// <returns>Success</returns>
		public async Task<UpdateNodegroupConfigResponse> UpdateNodegroupConfigAsync(string name, string nodegroupName, UpdateNodegroupConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/node-groups/"+ (nodegroupName==null? "" : System.Uri.EscapeDataString(nodegroupName))+"/update-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateNodegroupConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.</p> <p>You can update a node group using a launch template only if the node group was originally deployed with a launch template. If you need to update a custom AMI in a node group that was deployed with a launch template, then update your custom AMI, specify the new ID in a new version of the launch template, and then update the node group to the new version of the launch template.</p> <p>If you update without a launch template, then you can update to the latest available AMI version of a node group's current Kubernetes version by not specifying a Kubernetes version in the request. You can update to the latest AMI version of your cluster's current Kubernetes version by specifying your cluster's Kubernetes version in the request. For information about Linux versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS optimized Amazon Linux AMI versions</a> in the <i>Amazon EKS User Guide</i>. For information about Windows versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html">Amazon EKS optimized Windows AMI versions</a> in the <i>Amazon EKS User Guide</i>. </p> <p>You cannot roll back a node group to an earlier Kubernetes version or AMI version.</p> <p>When a node in a managed node group is terminated due to a scaling action or update, the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully and will fail if it is unable to do so. You can <code>force</code> the update if Amazon EKS is unable to drain the nodes as a result of a pod disruption budget issue.</p>
		/// UpdateNodegroupVersion clusters/{name}/node-groups/{nodegroupName}/update-version
		/// </summary>
		/// <param name="name">The name of the Amazon EKS cluster that is associated with the managed node group to update.</param>
		/// <param name="nodegroupName">The name of the managed node group to update.</param>
		/// <returns>Success</returns>
		public async Task<UpdateNodegroupVersionResponse> UpdateNodegroupVersionAsync(string name, string nodegroupName, UpdateNodegroupVersionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "clusters/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/node-groups/"+ (nodegroupName==null? "" : System.Uri.EscapeDataString(nodegroupName))+"/update-version";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateNodegroupVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class AssociateEncryptionConfigPostBody
	{
		
		/// <summary>
		/// The configuration you are using for encryption.
		/// Required
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="encryptionConfig")]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public EncryptionConfig[] EncryptionConfig { get; set; }
		
		/// <summary>
		/// The client request token you are using with the encryption configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class AssociateIdentityProviderConfigPostBody
	{
		
		/// <summary>
		/// An object representing an OpenID Connect (OIDC) configuration. Before associating an OIDC identity provider to your cluster, review the considerations in <a href="https://docs.aws.amazon.com/eks/latest/userguide/authenticate-oidc-identity-provider.html">Authenticating users for your cluster from an OpenID Connect identity provider</a> in the <i>Amazon EKS User Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="oidc")]
		public AssociateIdentityProviderConfigPostBodyOidc Oidc { get; set; }
		
		/// <summary>
		/// The metadata to apply to the configuration to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class AssociateIdentityProviderConfigPostBodyOidc
	{
		
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfigName")]
		public string IdentityProviderConfigName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="issuerUrl")]
		public string IssuerUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usernameClaim")]
		public string UsernameClaim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usernamePrefix")]
		public string UsernamePrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupsClaim")]
		public string GroupsClaim { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupsPrefix")]
		public string GroupsPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requiredClaims")]
		public RequiredClaimsMap RequiredClaims { get; set; }
	}
	
	public class CreateAddonPostBody
	{
		
		/// <summary>
		/// The name of the add-on. The name must match one of the names that <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a> returns.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addonName")]
		public string AddonName { get; set; }
		
		/// <summary>
		/// The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>
		/// Min length: 1
		/// Max length: 255
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccountRoleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string ServiceAccountRoleArn { get; set; }
		
		/// <summary>
		/// <p>How to resolve field value conflicts for an Amazon EKS add-on. Conflicts are handled based on the value you choose:</p> <ul> <li> <p> <b>None</b> – If the self-managed version of the add-on is installed on your cluster, Amazon EKS doesn't change the value. Creation of the add-on might fail.</p> </li> <li> <p> <b>Overwrite</b> – If the self-managed version of the add-on is installed on your cluster and the Amazon EKS default value is different than the existing value, Amazon EKS changes the value to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Not supported. You can set this value when updating an add-on though. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html">UpdateAddon</a>.</p> </li> </ul> <p>If you don't currently have the self-managed version of the add-on installed on your cluster, the Amazon EKS add-on is installed. Amazon EKS sets all values to default values, regardless of the option that you specify.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resolveConflicts")]
		public ResolveConflicts ResolveConflicts { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html"> <code>DescribeAddonConfiguration</code> </a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurationValues")]
		public string ConfigurationValues { get; set; }
	}
	
	public class CreateClusterPostBody
	{
		
		/// <summary>
		/// The unique name to give to your cluster.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z][A-Za-z0-9\-_]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// <p>The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used.</p> <note> <p>The default version might not be the latest version available.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// An object representing the VPC configuration to use for an Amazon EKS cluster.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourcesVpcConfig")]
		public CreateClusterPostBodyResourcesVpcConfig ResourcesVpcConfig { get; set; }
		
		/// <summary>
		/// The Kubernetes network configuration for the cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kubernetesNetworkConfig")]
		public CreateClusterPostBodyKubernetesNetworkConfig KubernetesNetworkConfig { get; set; }
		
		/// <summary>
		/// An object representing the logging configuration for resources in your cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logging")]
		public CreateClusterPostBodyLogging Logging { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The encryption configuration for the cluster.
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionConfig")]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public EncryptionConfig[] EncryptionConfig { get; set; }
		
		/// <summary>
		/// The configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a cluster on an Outpost, review <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html">Creating a local cluster on an Outpost</a> in the <i>Amazon EKS User Guide</i>. This API isn't available for Amazon EKS clusters on the Amazon Web Services cloud.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outpostConfig")]
		public CreateClusterPostBodyOutpostConfig OutpostConfig { get; set; }
	}
	
	public class CreateClusterPostBodyResourcesVpcConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="subnetIds")]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPublicAccess")]
		public System.Nullable<System.Boolean> EndpointPublicAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPrivateAccess")]
		public System.Nullable<System.Boolean> EndpointPrivateAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicAccessCidrs")]
		public string[] PublicAccessCidrs { get; set; }
	}
	
	public class CreateClusterPostBodyKubernetesNetworkConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceIpv4Cidr")]
		public string ServiceIpv4Cidr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ipFamily")]
		public IpFamily IpFamily { get; set; }
	}
	
	public class CreateClusterPostBodyLogging
	{
		
		[System.Runtime.Serialization.DataMember(Name="clusterLogging")]
		public LogSetup[] ClusterLogging { get; set; }
	}
	
	public class CreateClusterPostBodyOutpostConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="outpostArns")]
		public string[] OutpostArns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="controlPlaneInstanceType")]
		public string ControlPlaneInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="controlPlanePlacement")]
		public ControlPlanePlacementRequest ControlPlanePlacement { get; set; }
	}
	
	public class CreateFargateProfilePostBody
	{
		
		/// <summary>
		/// The name of the Fargate profile.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fargateProfileName")]
		public string FargateProfileName { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="podExecutionRoleArn")]
		public string PodExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The IDs of subnets to launch your pods into. At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		/// <summary>
		/// The selectors to match for pods to use this Fargate profile. Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectors")]
		public FargateProfileSelector[] Selectors { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The metadata to apply to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateNodegroupPostBody
	{
		
		/// <summary>
		/// The unique name to give your node group.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nodegroupName")]
		public string NodegroupName { get; set; }
		
		/// <summary>
		/// An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group. When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scalingConfig")]
		public CreateNodegroupPostBodyScalingConfig ScalingConfig { get; set; }
		
		/// <summary>
		/// The root device disk size (in GiB) for your node group instances. The default disk size is 20 GiB for Linux and Bottlerocket. The default disk size is 50 GiB for Windows. If you specify <code>launchTemplate</code>, then don't specify <code>diskSize</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSize")]
		public System.Nullable<System.Int32> DiskSize { get; set; }
		
		/// <summary>
		/// The subnets to use for the Auto Scaling group that is created for your node group. If you specify <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"> <code>SubnetId</code> </a> in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
		
		/// <summary>
		/// Specify the instance types for a node group. If you specify a GPU instance type, make sure to also specify an applicable GPU AMI type with the <code>amiType</code> parameter. If you specify <code>launchTemplate</code>, then you can specify zero or one instance type in your launch template <i>or</i> you can specify 0-20 instance types for <code>instanceTypes</code>. If however, you specify an instance type in your launch template <i>and</i> specify any <code>instanceTypes</code>, the node group deployment will fail. If you don't specify an instance type in a launch template or for <code>instanceTypes</code>, then <code>t3.medium</code> is used, by default. If you specify <code>Spot</code> for <code>capacityType</code>, then we recommend specifying multiple values for <code>instanceTypes</code>. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types">Managed node group capacity types</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceTypes")]
		public string[] InstanceTypes { get; set; }
		
		/// <summary>
		/// The AMI type for your node group. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>amiType</code>, or the node group deployment will fail. If your launch template uses a Windows custom AMI, then add <code>eks:kube-proxy-windows</code> to your Windows nodes <code>rolearn</code> in the <code>aws-auth</code> <code>ConfigMap</code>. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amiType")]
		public AMITypes AmiType { get; set; }
		
		/// <summary>
		/// An object representing the remote access configuration for the managed node group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remoteAccess")]
		public CreateNodegroupPostBodyRemoteAccess RemoteAccess { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker node <code>kubelet</code> daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i> <i>Amazon EKS User Guide</i> </i>. If you specify <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"> <code>IamInstanceProfile</code> </a> in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nodeRole")]
		public string NodeRole { get; set; }
		
		/// <summary>
		/// The Kubernetes labels to be applied to the nodes in the node group when they are created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The Kubernetes taints to be applied to the nodes in the node group. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taints")]
		public Taint[] Taints { get; set; }
		
		/// <summary>
		/// The metadata to apply to the node group to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// <p>An object representing a node group launch template specification. The launch template can't include <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"> <code>SubnetId</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"> <code>IamInstanceProfile</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html"> <code>RequestSpotInstances</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html"> <code>HibernationOptions</code> </a>, or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html"> <code>TerminateInstances</code> </a>, or the node group deployment or update will fail. For more information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html"> <code>CreateLaunchTemplate</code> </a> in the Amazon EC2 API Reference. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p> <p>You must specify either the launch template ID or the launch template name in the request, but not both.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public CreateNodegroupPostBodyLaunchTemplate LaunchTemplate { get; set; }
		
		/// <summary>
		/// The node group update configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateConfig")]
		public CreateNodegroupPostBodyUpdateConfig UpdateConfig { get; set; }
		
		/// <summary>
		/// The capacity type for your node group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacityType")]
		public CapacityTypes CapacityType { get; set; }
		
		/// <summary>
		/// The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>version</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// <p>The AMI version of the Amazon EKS optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For information about Linux versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS optimized Amazon Linux AMI versions</a> in the <i>Amazon EKS User Guide</i>. Amazon EKS managed node groups support the November 2022 and later releases of the Windows AMIs. For information about Windows versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html">Amazon EKS optimized Windows AMI versions</a> in the <i>Amazon EKS User Guide</i>.</p> <p>If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>releaseVersion</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
	}
	
	public class CreateNodegroupPostBodyScalingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="minSize")]
		public System.Nullable<System.Int32> MinSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxSize")]
		public System.Nullable<System.Int32> MaxSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredSize")]
		public System.Nullable<System.Int32> DesiredSize { get; set; }
	}
	
	public class CreateNodegroupPostBodyRemoteAccess
	{
		
		[System.Runtime.Serialization.DataMember(Name="ec2SshKey")]
		public string Ec2SshKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceSecurityGroups")]
		public string[] SourceSecurityGroups { get; set; }
	}
	
	public class CreateNodegroupPostBodyLaunchTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	public class CreateNodegroupPostBodyUpdateConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxUnavailable")]
		public System.Nullable<System.Int32> MaxUnavailable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxUnavailablePercentage")]
		public System.Nullable<System.Int32> MaxUnavailablePercentage { get; set; }
	}
	
	public class DescribeIdentityProviderConfigPostBody
	{
		
		/// <summary>
		/// An object representing an identity provider configuration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfig")]
		public DescribeIdentityProviderConfigPostBodyIdentityProviderConfig IdentityProviderConfig { get; set; }
	}
	
	public class DescribeIdentityProviderConfigPostBodyIdentityProviderConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class DisassociateIdentityProviderConfigPostBody
	{
		
		/// <summary>
		/// An object representing an identity provider configuration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identityProviderConfig")]
		public DisassociateIdentityProviderConfigPostBodyIdentityProviderConfig IdentityProviderConfig { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class DisassociateIdentityProviderConfigPostBodyIdentityProviderConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The tags to add to the resource. A tag is an array of key-value pairs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class UpdateClusterVersionPostBody
	{
		
		/// <summary>
		/// The desired Kubernetes version following a successful update.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class RegisterClusterPostBody
	{
		
		/// <summary>
		/// Define a unique name for this cluster for your Region.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z][A-Za-z0-9\-_]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The configuration sent to a cluster for configuration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorConfig")]
		public RegisterClusterPostBodyConnectorConfig ConnectorConfig { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags do not propagate to any other resources associated with the cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class RegisterClusterPostBodyConnectorConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public ConnectorConfigProvider Provider { get; set; }
	}
	
	public class UpdateAddonPostBody
	{
		
		/// <summary>
		/// The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonVersion")]
		public string AddonVersion { get; set; }
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>
		/// Min length: 1
		/// Max length: 255
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccountRoleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string ServiceAccountRoleArn { get; set; }
		
		/// <summary>
		/// <p>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:</p> <ul> <li> <p> <b>None</b> – Amazon EKS doesn't change the value. The update might fail.</p> </li> <li> <p> <b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resolveConflicts")]
		public ResolveConflicts ResolveConflicts { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html">DescribeAddonConfiguration</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurationValues")]
		public string ConfigurationValues { get; set; }
	}
	
	public class UpdateClusterConfigPostBody
	{
		
		/// <summary>
		/// An object representing the VPC configuration to use for an Amazon EKS cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesVpcConfig")]
		public UpdateClusterConfigPostBodyResourcesVpcConfig ResourcesVpcConfig { get; set; }
		
		/// <summary>
		/// An object representing the logging configuration for resources in your cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logging")]
		public UpdateClusterConfigPostBodyLogging Logging { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class UpdateClusterConfigPostBodyResourcesVpcConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="subnetIds")]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityGroupIds")]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPublicAccess")]
		public System.Nullable<System.Boolean> EndpointPublicAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endpointPrivateAccess")]
		public System.Nullable<System.Boolean> EndpointPrivateAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicAccessCidrs")]
		public string[] PublicAccessCidrs { get; set; }
	}
	
	public class UpdateClusterConfigPostBodyLogging
	{
		
		[System.Runtime.Serialization.DataMember(Name="clusterLogging")]
		public LogSetup[] ClusterLogging { get; set; }
	}
	
	public class UpdateNodegroupConfigPostBody
	{
		
		/// <summary>
		/// An object representing a Kubernetes label change for a managed node group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public UpdateNodegroupConfigPostBodyLabels Labels { get; set; }
		
		/// <summary>
		/// An object representing the details of an update to a taints payload. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taints")]
		public UpdateNodegroupConfigPostBodyTaints Taints { get; set; }
		
		/// <summary>
		/// An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group. When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scalingConfig")]
		public UpdateNodegroupConfigPostBodyScalingConfig ScalingConfig { get; set; }
		
		/// <summary>
		/// The node group update configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateConfig")]
		public UpdateNodegroupConfigPostBodyUpdateConfig UpdateConfig { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class UpdateNodegroupConfigPostBodyLabels
	{
		
		[System.Runtime.Serialization.DataMember(Name="addOrUpdateLabels")]
		public LabelsMap AddOrUpdateLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removeLabels")]
		public string[] RemoveLabels { get; set; }
	}
	
	public class UpdateNodegroupConfigPostBodyTaints
	{
		
		[System.Runtime.Serialization.DataMember(Name="addOrUpdateTaints")]
		public Taint[] AddOrUpdateTaints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removeTaints")]
		public Taint[] RemoveTaints { get; set; }
	}
	
	public class UpdateNodegroupConfigPostBodyScalingConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="minSize")]
		public System.Nullable<System.Int32> MinSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxSize")]
		public System.Nullable<System.Int32> MaxSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="desiredSize")]
		public System.Nullable<System.Int32> DesiredSize { get; set; }
	}
	
	public class UpdateNodegroupConfigPostBodyUpdateConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxUnavailable")]
		public System.Nullable<System.Int32> MaxUnavailable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxUnavailablePercentage")]
		public System.Nullable<System.Int32> MaxUnavailablePercentage { get; set; }
	}
	
	public class UpdateNodegroupVersionPostBody
	{
		
		/// <summary>
		/// The Kubernetes version to update to. If no version is specified, then the Kubernetes version of the node group does not change. You can specify the Kubernetes version of the cluster to update the node group to the latest AMI version of the cluster's Kubernetes version. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>version</code>, or the node group update will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// <p>The AMI version of the Amazon EKS optimized AMI to use for the update. By default, the latest available AMI version for the node group's Kubernetes version is used. For information about Linux versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS optimized Amazon Linux AMI versions</a> in the <i>Amazon EKS User Guide</i>. Amazon EKS managed node groups support the November 2022 and later releases of the Windows AMIs. For information about Windows versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html">Amazon EKS optimized Windows AMI versions</a> in the <i>Amazon EKS User Guide</i>.</p> <p>If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>releaseVersion</code>, or the node group update will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
		
		/// <summary>
		/// <p>An object representing a node group launch template specification. The launch template can't include <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"> <code>SubnetId</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"> <code>IamInstanceProfile</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html"> <code>RequestSpotInstances</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html"> <code>HibernationOptions</code> </a>, or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html"> <code>TerminateInstances</code> </a>, or the node group deployment or update will fail. For more information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html"> <code>CreateLaunchTemplate</code> </a> in the Amazon EC2 API Reference. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p> <p>You must specify either the launch template ID or the launch template name in the request, but not both.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchTemplate")]
		public UpdateNodegroupVersionPostBodyLaunchTemplate LaunchTemplate { get; set; }
		
		/// <summary>
		/// Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
	}
	
	public class UpdateNodegroupVersionPostBodyLaunchTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

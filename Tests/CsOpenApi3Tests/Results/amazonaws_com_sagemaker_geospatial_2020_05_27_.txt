//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEarthObservationJobOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVectorEnrichmentJobOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportEarthObservationJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ExportSourceImages { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobExportStatus ExportStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputConfigInput OutputConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EarthObservationJobExportStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	/// <summary>
	/// The response structure for an OutputConfig returned by an ExportEarthObservationJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputConfigInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportS3DataInput S3Data { get; set; }
	}
	
	/// <summary>
	/// The structure containing the Amazon S3 path to export the Earth Observation job output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportS3DataInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportVectorEnrichmentJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobExportStatus ExportStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportVectorEnrichmentJobOutputConfig OutputConfig { get; set; }
	}
	
	/// <summary>
	/// An object containing information about the output file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportVectorEnrichmentJobOutputConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobS3Data S3Data { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 data for the Vector Enrichment job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VectorEnrichmentJobS3Data
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEarthObservationJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobErrorDetails ErrorDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportErrorDetails ExportErrorDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobExportStatus ExportStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputConfigOutput InputConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobConfigInput JobConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputBand[] OutputBands { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The structure representing the errors in an EarthObservationJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EarthObservationJobErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobErrorType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EarthObservationJobErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 1,
	}
	
	/// <summary>
	/// The structure for returning the export error details in a GetEarthObservationJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportErrorDetailsOutput ExportResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportErrorDetailsOutput ExportSourceImages { get; set; }
	}
	
	/// <summary>
	/// The structure representing the errors in an export EarthObservationJob operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportErrorDetailsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobErrorType Type { get; set; }
	}
	
	/// <summary>
	/// The InputConfig for an EarthObservationJob response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputConfigOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PreviousEarthObservationJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RasterDataCollectionQueryOutput RasterDataCollectionQuery { get; set; }
	}
	
	/// <summary>
	/// The output structure contains the Raster Data Collection Query input along with some additional metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RasterDataCollectionQueryOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AreaOfInterest AreaOfInterest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyFilters PropertyFilters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RasterDataCollectionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RasterDataCollectionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilterOutput TimeRangeFilter { get; set; }
	}
	
	/// <summary>
	/// The geographic extent of the Earth Observation job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AreaOfInterest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AreaOfInterestGeometry AreaOfInterestGeometry { get; set; }
	}
	
	/// <summary>
	/// A GeoJSON object representing the geographic extent in the coordinate space.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AreaOfInterestGeometry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MultiPolygonGeometryInput MultiPolygonGeometry { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PolygonGeometryInput PolygonGeometry { get; set; }
	}
	
	/// <summary>
	/// The structure representing Polygon Geometry based on the <a href="https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6">GeoJson spec</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MultiPolygonGeometryInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double[][][][] Coordinates { get; set; }
	}
	
	/// <summary>
	/// The structure representing Polygon Geometry based on the <a href="https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6">GeoJson spec</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PolygonGeometryInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double[][][] Coordinates { get; set; }
	}
	
	/// <summary>
	/// A list of PropertyFilter objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PropertyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LogicalOperator LogicalOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyFilter[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogicalOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AND = 0,
	}
	
	/// <summary>
	/// The structure representing a single PropertyFilter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PropertyFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Property Property { get; set; }
	}
	
	/// <summary>
	/// Represents a single searchable property to search on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Property
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EoCloudCoverInput EoCloudCover { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LandsatCloudCoverLandInput LandsatCloudCoverLand { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlatformInput Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ViewOffNadirInput ViewOffNadir { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ViewSunAzimuthInput ViewSunAzimuth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ViewSunElevationInput ViewSunElevation { get; set; }
	}
	
	/// <summary>
	/// The structure representing the EoCloudCover filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EoCloudCoverInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float LowerBound { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float UpperBound { get; set; }
	}
	
	/// <summary>
	/// The structure representing Land Cloud Cover property for Landsat data collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LandsatCloudCoverLandInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float LowerBound { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float UpperBound { get; set; }
	}
	
	/// <summary>
	/// The input structure for specifying Platform. Platform refers to the unique name of the specific platform the instrument is attached to. For satellites it is the name of the satellite, eg. landsat-8 (Landsat-8), sentinel-2a.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlatformInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComparisonOperator ComparisonOperator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUALS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTS_WITH = 2,
	}
	
	/// <summary>
	/// The input structure for specifying ViewOffNadir property filter. ViewOffNadir refers to the angle from the sensor between nadir (straight down) and the scene center. Measured in degrees (0-90).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ViewOffNadirInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float LowerBound { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float UpperBound { get; set; }
	}
	
	/// <summary>
	/// The input structure for specifying ViewSunAzimuth property filter. ViewSunAzimuth refers to the Sun azimuth angle. From the scene center point on the ground, this is the angle between truth north and the sun. Measured clockwise in degrees (0-360).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ViewSunAzimuthInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float LowerBound { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float UpperBound { get; set; }
	}
	
	/// <summary>
	/// The input structure for specifying ViewSunElevation angle property filter. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ViewSunElevationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float LowerBound { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float UpperBound { get; set; }
	}
	
	/// <summary>
	/// The output structure of the time range filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRangeFilterOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
	}
	
	/// <summary>
	/// The input structure for the JobConfig in an EarthObservationJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BandMathConfigInput BandMathConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudMaskingConfigInput CloudMaskingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudRemovalConfigInput CloudRemovalConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeoMosaicConfigInput GeoMosaicConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LandCoverSegmentationConfigInput LandCoverSegmentationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResamplingConfigInput ResamplingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigInput StackConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemporalStatisticsConfigInput TemporalStatisticsConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZonalStatisticsConfigInput ZonalStatisticsConfig { get; set; }
	}
	
	/// <summary>
	/// Input structure for the BandMath operation type. Defines Predefined and CustomIndices to be computed using BandMath.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BandMathConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomIndicesInput CustomIndices { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PredefinedIndices { get; set; }
	}
	
	/// <summary>
	/// Input object defining the custom BandMath indices to compute.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomIndicesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Operation[] Operations { get; set; }
	}
	
	/// <summary>
	/// Represents an arithmetic operation to compute spectral index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Equation { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputType OutputType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OutputType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INT32 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLOAT32 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INT16 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLOAT64 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UINT16 = 4,
	}
	
	/// <summary>
	/// Input structure for CloudMasking operation type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudMaskingConfigInput
	{
	}
	
	/// <summary>
	/// Input structure for Cloud Removal Operation type
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRemovalConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmNameCloudRemoval AlgorithmName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InterpolationValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetBands { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlgorithmNameCloudRemoval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERPOLATION = 0,
	}
	
	/// <summary>
	/// Input configuration information for the geomosaic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeoMosaicConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmNameGeoMosaic AlgorithmName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetBands { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlgorithmNameGeoMosaic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILINEAR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUBIC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUBICSPLINE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LANCZOS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RMS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Q1 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Q3 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 13,
	}
	
	/// <summary>
	/// The input structure for Land Cover Operation type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LandCoverSegmentationConfigInput
	{
	}
	
	/// <summary>
	/// The structure representing input for resampling operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResamplingConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AlgorithmNameGeoMosaic AlgorithmName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputResolutionResamplingInput OutputResolution { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetBands { get; set; }
	}
	
	/// <summary>
	/// OutputResolution Configuration indicating the target resolution for the output of Resampling operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputResolutionResamplingInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserDefined UserDefined { get; set; }
	}
	
	/// <summary>
	/// The output resolution (in target georeferenced units) of the result of the operation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserDefined
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Unit Unit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public float Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METERS = 0,
	}
	
	/// <summary>
	/// The input structure for Stacking Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutputResolutionStackInput OutputResolution { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetBands { get; set; }
	}
	
	/// <summary>
	/// The input structure representing Output Resolution for Stacking Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputResolutionStackInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PredefinedResolution Predefined { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserDefined UserDefined { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PredefinedResolution
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGHEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOWEST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 2,
	}
	
	/// <summary>
	/// The structure representing the configuration for Temporal Statistics operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemporalStatisticsConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GroupBy GroupBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemporalStatistics[] Statistics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetBands { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GroupBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEARLY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TemporalStatistics
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEAN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIAN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_DEVIATION = 2,
	}
	
	/// <summary>
	/// The structure representing input configuration of ZonalStatistics operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZonalStatisticsConfigInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ZonalStatistics[] Statistics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetBands { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ZoneS3Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ZoneS3PathKmsKeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ZonalStatistics
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEAN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIAN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_DEVIATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 5,
	}
	
	/// <summary>
	/// A single EarthObservationJob output band.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputBand
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BandName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputType OutputDataType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EarthObservationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tags
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRasterDataCollectionOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DescriptionPageUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ImageSourceBands { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Filter[] SupportedFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataCollectionType Type { get; set; }
	}
	
	/// <summary>
	/// The structure representing the filters supported by a RasterDataCollection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public float Maximum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float Minimum { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataCollectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREMIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTileOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BinaryFile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetVectorEnrichmentJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DurationInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobErrorDetails ErrorDetails { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobExportErrorDetails ExportErrorDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobExportStatus ExportStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobConfig JobConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobType Type { get; set; }
	}
	
	/// <summary>
	/// VectorEnrichmentJob error details in response from GetVectorEnrichmentJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VectorEnrichmentJobErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobErrorType ErrorType { get; set; }
	}
	
	/// <summary>
	/// VectorEnrichmentJob export error details in response from GetVectorEnrichmentJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VectorEnrichmentJobExportErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobErrorType Type { get; set; }
	}
	
	/// <summary>
	/// The input structure for the InputConfig in a VectorEnrichmentJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VectorEnrichmentJobInputConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobDataSourceConfigInput DataSourceConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobDocumentType DocumentType { get; set; }
	}
	
	/// <summary>
	/// The input structure for the data source that represents the storage type of the input data objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VectorEnrichmentJobDataSourceConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobS3Data S3Data { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VectorEnrichmentJobDocumentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
	}
	
	/// <summary>
	/// It contains configs such as ReverseGeocodingConfig and MapMatchingConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VectorEnrichmentJobConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapMatchingConfig MapMatchingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReverseGeocodingConfig ReverseGeocodingConfig { get; set; }
	}
	
	/// <summary>
	/// The input structure for Map Matching operation type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapMatchingConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IdAttributeName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TimestampAttributeName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string XAttributeName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string YAttributeName { get; set; }
	}
	
	/// <summary>
	/// The input structure for Reverse Geocoding operation type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReverseGeocodingConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string XAttributeName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string YAttributeName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VectorEnrichmentJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VectorEnrichmentJobType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVERSE_GEOCODING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAP_MATCHING = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEarthObservationJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListEarthObservationJobOutputConfig[] EarthObservationJobSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object containing information about the output file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEarthObservationJobOutputConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DurationInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRasterDataCollectionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RasterDataCollectionMetadata[] RasterDataCollectionSummaries { get; set; }
	}
	
	/// <summary>
	/// Response object containing details for a specific RasterDataCollection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RasterDataCollectionMetadata
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DescriptionPageUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Filter[] SupportedFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataCollectionType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVectorEnrichmentJobOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListVectorEnrichmentJobOutputConfig[] VectorEnrichmentJobSummaries { get; set; }
	}
	
	/// <summary>
	/// An object containing information about the output file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVectorEnrichmentJobOutputConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DurationInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchRasterDataCollectionOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ApproximateResultCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemSource[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The structure representing the items in the response for SearchRasterDataCollection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetsMap Assets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Geometry Geometry { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Properties Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetsMap
	{
	}
	
	/// <summary>
	/// The structure representing a Geometry in terms of Type and Coordinates as per GeoJson spec.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Geometry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double[][][] Coordinates { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Properties associated with the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Properties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public float EoCloudCover { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float LandsatCloudCoverLand { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float ViewOffNadir { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float ViewSunAzimuth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float ViewSunElevation { get; set; }
	}
	
	/// <summary>
	/// The input for the time-range filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRangeFilterInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartEarthObservationJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DurationInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputConfigOutput InputConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobConfigInput JobConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The input structure for Raster Data Collection Query containing the Area of Interest, TimeRange Filters, and Property Filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RasterDataCollectionQueryInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AreaOfInterest AreaOfInterest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyFilters PropertyFilters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RasterDataCollectionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilterInput TimeRangeFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartVectorEnrichmentJobOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DurationInSeconds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobConfig JobConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopEarthObservationJobOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopVectorEnrichmentJobOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlgorithmNameResampling
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILINEAR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUBIC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUBICSPLINE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LANCZOS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RMS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Q1 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Q3 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 13,
	}
	
	/// <summary>
	/// The structure containing the asset properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Href { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEarthObservationJobInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVectorEnrichmentJobInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportEarthObservationJobInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ExportSourceImages { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutputConfigInput OutputConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExportErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportVectorEnrichmentJobInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportVectorEnrichmentJobOutputConfig OutputConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VectorEnrichmentJobExportStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEarthObservationJobInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRasterDataCollectionInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INPUT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTPUT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTileInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetVectorEnrichmentJobInput
	{
	}
	
	/// <summary>
	/// Input configuration information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputConfigInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PreviousEarthObservationJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RasterDataCollectionQueryInput RasterDataCollectionQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASCENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCENDING = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEarthObservationJobInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobStatus StatusEquals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRasterDataCollectionsInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVectorEnrichmentJobInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusEquals { get; set; }
	}
	
	/// <summary>
	/// This is a RasterDataCollectionQueryInput containing AreaOfInterest, Time Range filter and Property filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RasterDataCollectionQueryWithBandFilterInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AreaOfInterest AreaOfInterest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BandFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyFilters PropertyFilters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilterInput TimeRangeFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchRasterDataCollectionInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RasterDataCollectionQueryWithBandFilterInput RasterDataCollectionQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartEarthObservationJobInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputConfigInput InputConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobConfigInput JobConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartVectorEnrichmentJobInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobConfig JobConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopEarthObservationJobInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopVectorEnrichmentJobInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VectorEnrichmentJobErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VectorEnrichmentJobExportErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 1,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Use this operation to delete an Earth Observation job.
		/// DeleteEarthObservationJob earth-observation-jobs/{Arn}
		/// </summary>
		/// <param name="Arn">The Amazon Resource Name (ARN) of the Earth Observation job being deleted.</param>
		/// <returns>Success</returns>
		public async Task<DeleteEarthObservationJobOutput> DeleteEarthObservationJobAsync(string Arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "earth-observation-jobs/"+ (Arn==null? "" : System.Uri.EscapeDataString(Arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteEarthObservationJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get the details for a previously initiated Earth Observation job.
		/// GetEarthObservationJob earth-observation-jobs/{Arn}
		/// </summary>
		/// <param name="Arn">The Amazon Resource Name (ARN) of the Earth Observation job.</param>
		/// <returns>Success</returns>
		public async Task<GetEarthObservationJobOutput> GetEarthObservationJobAsync(string Arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "earth-observation-jobs/"+ (Arn==null? "" : System.Uri.EscapeDataString(Arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetEarthObservationJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to delete a Vector Enrichment job.
		/// DeleteVectorEnrichmentJob vector-enrichment-jobs/{Arn}
		/// </summary>
		/// <param name="Arn">The Amazon Resource Name (ARN) of the Vector Enrichment job being deleted.</param>
		/// <returns>Success</returns>
		public async Task<DeleteVectorEnrichmentJobOutput> DeleteVectorEnrichmentJobAsync(string Arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vector-enrichment-jobs/"+ (Arn==null? "" : System.Uri.EscapeDataString(Arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteVectorEnrichmentJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves details of a Vector Enrichment Job for a given job Amazon Resource Name (ARN).
		/// GetVectorEnrichmentJob vector-enrichment-jobs/{Arn}
		/// </summary>
		/// <param name="Arn">The Amazon Resource Name (ARN) of the Vector Enrichment job.</param>
		/// <returns>Success</returns>
		public async Task<GetVectorEnrichmentJobOutput> GetVectorEnrichmentJobAsync(string Arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vector-enrichment-jobs/"+ (Arn==null? "" : System.Uri.EscapeDataString(Arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetVectorEnrichmentJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to export results of an Earth Observation job and optionally source images used as input to the EOJ to an Amazon S3 location.
		/// ExportEarthObservationJob export-earth-observation-job
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportEarthObservationJobOutput> ExportEarthObservationJobAsync(ExportEarthObservationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "export-earth-observation-job";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ExportEarthObservationJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to copy results of a Vector Enrichment job to an Amazon S3 location.
		/// ExportVectorEnrichmentJob export-vector-enrichment-jobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportVectorEnrichmentJobOutput> ExportVectorEnrichmentJobAsync(ExportVectorEnrichmentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "export-vector-enrichment-jobs";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ExportVectorEnrichmentJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to get details of a specific raster data collection.
		/// GetRasterDataCollection raster-data-collection/{Arn}
		/// </summary>
		/// <param name="Arn">The Amazon Resource Name (ARN) of the raster data collection.</param>
		/// <returns>Success</returns>
		public async Task<GetRasterDataCollectionOutput> GetRasterDataCollectionAsync(string Arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "raster-data-collection/"+ (Arn==null? "" : System.Uri.EscapeDataString(Arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetRasterDataCollectionOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets a web mercator tile for the given Earth Observation job.
		/// GetTile tile/{z}/{x}/{y}#Arn&ImageAssets&Target
		/// </summary>
		/// <param name="Arn">The Amazon Resource Name (ARN) of the tile operation.</param>
		/// <param name="ExecutionRoleArn">The Amazon Resource Name (ARN) of the IAM role that you specify.
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="ImageAssets">The particular assets or bands to tile.
		/// Minimum items: 1
		// </param>
		/// <param name="ImageMask">Determines whether or not to return a valid data mask.</param>
		/// <param name="OutputDataType">The output data type of the tile operation.</param>
		/// <param name="OutputFormat">The data format of the output tile. The formats include .npy, .png and .jpg.</param>
		/// <param name="PropertyFilters">Property filters for the imagery to tile.</param>
		/// <param name="Target">Determines what part of the Earth Observation job to tile. 'INPUT' or 'OUTPUT' are the valid options.</param>
		/// <param name="TimeRangeFilter">Time range filter applied to imagery to find the images to tile.</param>
		/// <param name="x">The x coordinate of the tile input.</param>
		/// <param name="y">The y coordinate of the tile input.</param>
		/// <param name="z">The z coordinate of the tile input.</param>
		/// <returns>Success</returns>
		public async Task<GetTileOutput> GetTileAsync(string Arn, string ExecutionRoleArn, string[] ImageAssets, bool ImageMask, OutputType OutputDataType, string OutputFormat, string PropertyFilters, TargetOptions Target, string TimeRangeFilter, int x, int y, int z, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tile/"+z+"/"+x+"/"+y+"#Arn&ImageAssets&Target?Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&ExecutionRoleArn=" + (ExecutionRoleArn==null? "" : System.Uri.EscapeDataString(ExecutionRoleArn))+"&"+string.Join("&", ImageAssets.Select(z => $"ImageAssets={System.Uri.EscapeDataString(z.ToString())}"))+"&ImageMask="+ImageMask+"&OutputDataType=" + OutputDataType+"&OutputFormat=" + (OutputFormat==null? "" : System.Uri.EscapeDataString(OutputFormat))+"&PropertyFilters=" + (PropertyFilters==null? "" : System.Uri.EscapeDataString(PropertyFilters))+"&Target=" + Target+"&TimeRangeFilter=" + (TimeRangeFilter==null? "" : System.Uri.EscapeDataString(TimeRangeFilter));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetTileOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to get a list of the Earth Observation jobs associated with the calling Amazon Web Services account.
		/// ListEarthObservationJobs list-earth-observation-jobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEarthObservationJobOutput> ListEarthObservationJobsAsync(string MaxResults, string NextToken, ListEarthObservationJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-earth-observation-jobs?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListEarthObservationJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to get raster data collections.
		/// ListRasterDataCollections raster-data-collections
		/// </summary>
		/// <param name="MaxResults">The total number of items to return.
		/// Minimum: 1
		/// Maximum: 20
		// </param>
		/// <param name="NextToken">If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.
		/// Min length: 0
		/// Max length: 8192
		// </param>
		/// <returns>Success</returns>
		public async Task<ListRasterDataCollectionsOutput> ListRasterDataCollectionsAsync(int MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "raster-data-collections?MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListRasterDataCollectionsOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the tags attached to the resource.
		/// ListTagsForResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource you want to tag.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// The resource you want to tag.
		/// TagResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource you want to tag.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string ResourceArn, TagResourcePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a list of vector enrichment jobs.
		/// ListVectorEnrichmentJobs list-vector-enrichment-jobs
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListVectorEnrichmentJobOutput> ListVectorEnrichmentJobsAsync(string MaxResults, string NextToken, ListVectorEnrichmentJobsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-vector-enrichment-jobs?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVectorEnrichmentJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows you run image query on a specific raster data collection to get a list of the satellite imagery matching the selected filters.
		/// SearchRasterDataCollection search-raster-data-collection
		/// </summary>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchRasterDataCollectionOutput> SearchRasterDataCollectionAsync(string NextToken, SearchRasterDataCollectionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-raster-data-collection?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchRasterDataCollectionOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to create an Earth observation job.
		/// StartEarthObservationJob earth-observation-jobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartEarthObservationJobOutput> StartEarthObservationJobAsync(StartEarthObservationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "earth-observation-jobs";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartEarthObservationJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a Vector Enrichment job for the supplied job type. Currently, there are two supported job types: reverse geocoding and map matching.
		/// StartVectorEnrichmentJob vector-enrichment-jobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartVectorEnrichmentJobOutput> StartVectorEnrichmentJobAsync(StartVectorEnrichmentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vector-enrichment-jobs";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartVectorEnrichmentJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use this operation to stop an existing earth observation job.
		/// StopEarthObservationJob earth-observation-jobs/stop
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopEarthObservationJobOutput> StopEarthObservationJobAsync(StopEarthObservationJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "earth-observation-jobs/stop";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StopEarthObservationJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Stops the Vector Enrichment job for a given job ARN.
		/// StopVectorEnrichmentJob vector-enrichment-jobs/stop
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopVectorEnrichmentJobOutput> StopVectorEnrichmentJobAsync(StopVectorEnrichmentJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vector-enrichment-jobs/stop";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StopVectorEnrichmentJobOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// The resource you want to untag.
		/// UntagResource tags/{ResourceArn}#tagKeys
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource you want to untag.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="tagKeys">Keys of the tags you want to remove.
		/// Minimum items: 1
		/// Maximum items: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string ResourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class ExportEarthObservationJobPostBody
	{
		
		/// <summary>
		/// The input Amazon Resource Name (ARN) of the Earth Observation job being exported.
		/// Required
		/// Pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:earth-observation-job/[a-z0-9]{12,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:earth-observation-job/[a-z0-9]{12,}$")]
		public string Arn { get; set; }
		
		/// <summary>
		/// A unique token that guarantees that the call to this API is idempotent.
		/// Min length: 36
		/// Max length: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM role that you specified for the job.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The source images provided to the Earth Observation job being exported.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ExportSourceImages { get; set; }
		
		/// <summary>
		/// The response structure for an OutputConfig returned by an ExportEarthObservationJob.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportEarthObservationJobPostBodyOutputConfig OutputConfig { get; set; }
	}
	
	public class ExportEarthObservationJobPostBodyOutputConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportS3DataInput S3Data { get; set; }
	}
	
	public class ExportVectorEnrichmentJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Vector Enrichment job.
		/// Required
		/// Pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:vector-enrichment-job/[a-z0-9]{12,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:vector-enrichment-job/[a-z0-9]{12,}$")]
		public string Arn { get; set; }
		
		/// <summary>
		/// A unique token that guarantees that the call to this API is idempotent.
		/// Min length: 36
		/// Max length: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM rolewith permission to upload to the location in OutputConfig.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// An object containing information about the output file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportVectorEnrichmentJobPostBodyOutputConfig OutputConfig { get; set; }
	}
	
	public class ExportVectorEnrichmentJobPostBodyOutputConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobS3Data S3Data { get; set; }
	}
	
	public class ListEarthObservationJobsPostBody
	{
		
		/// <summary>
		/// The total number of items to return.
		/// Minimum: 1
		/// Maximum: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 20)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.
		/// Min length: 0
		/// Max length: 8192
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The parameter by which to sort the results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortBy { get; set; }
		
		/// <summary>
		/// An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
		
		/// <summary>
		/// A filter that retrieves only jobs with a specific status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EarthObservationJobStatus StatusEquals { get; set; }
	}
	
	public class TagResourcePutBody
	{
		
		/// <summary>
		/// Each tag consists of a key and a value.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class ListVectorEnrichmentJobsPostBody
	{
		
		/// <summary>
		/// The maximum number of items to return.
		/// Minimum: 1
		/// Maximum: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 20)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.
		/// Min length: 0
		/// Max length: 8192
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The parameter by which to sort the results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SortBy { get; set; }
		
		/// <summary>
		/// An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
		
		/// <summary>
		/// A filter that retrieves only jobs with a specific status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string StatusEquals { get; set; }
	}
	
	public class SearchRasterDataCollectionPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the raster data collection.
		/// Required
		/// Pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:raster-data-collection/(public|premium|user)/[a-z0-9]{12,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:raster-data-collection/(public|premium|user)/[a-z0-9]{12,}$")]
		public string Arn { get; set; }
		
		/// <summary>
		/// If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.
		/// Min length: 0
		/// Max length: 8192
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(8192)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// This is a RasterDataCollectionQueryInput containing AreaOfInterest, Time Range filter and Property filters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SearchRasterDataCollectionPostBodyRasterDataCollectionQuery RasterDataCollectionQuery { get; set; }
	}
	
	public class SearchRasterDataCollectionPostBodyRasterDataCollectionQuery
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AreaOfInterest AreaOfInterest { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BandFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyFilters PropertyFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilterInput TimeRangeFilter { get; set; }
	}
	
	public class StartEarthObservationJobPostBody
	{
		
		/// <summary>
		/// A unique token that guarantees that the call to this API is idempotent.
		/// Min length: 36
		/// Max length: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM role that you specified for the job.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Input configuration information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartEarthObservationJobPostBodyInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// The input structure for the JobConfig in an EarthObservationJob.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartEarthObservationJobPostBodyJobConfig JobConfig { get; set; }
		
		/// <summary>
		/// The Key Management Service key ID for server-side encryption.
		/// Min length: 0
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// The name of the Earth Observation job.
		/// Required
		/// Min length: 0
		/// Max length: 200
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public string Name { get; set; }
		
		/// <summary>
		/// Each tag consists of a key and a value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class StartEarthObservationJobPostBodyInputConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PreviousEarthObservationJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RasterDataCollectionQueryInput RasterDataCollectionQuery { get; set; }
	}
	
	public class StartEarthObservationJobPostBodyJobConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BandMathConfigInput BandMathConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudMaskingConfigInput CloudMaskingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudRemovalConfigInput CloudRemovalConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeoMosaicConfigInput GeoMosaicConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LandCoverSegmentationConfigInput LandCoverSegmentationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResamplingConfigInput ResamplingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigInput StackConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemporalStatisticsConfigInput TemporalStatisticsConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZonalStatisticsConfigInput ZonalStatisticsConfig { get; set; }
	}
	
	public class StartVectorEnrichmentJobPostBody
	{
		
		/// <summary>
		/// A unique token that guarantees that the call to this API is idempotent.
		/// Min length: 36
		/// Max length: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM role that you specified for the job.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$")]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The input structure for the InputConfig in a VectorEnrichmentJob.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartVectorEnrichmentJobPostBodyInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// It contains configs such as ReverseGeocodingConfig and MapMatchingConfig.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartVectorEnrichmentJobPostBodyJobConfig JobConfig { get; set; }
		
		/// <summary>
		/// The Key Management Service key ID for server-side encryption.
		/// Min length: 0
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		public string KmsKeyId { get; set; }
		
		/// <summary>
		/// The name of the Vector Enrichment job.
		/// Required
		/// Min length: 0
		/// Max length: 200
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		public string Name { get; set; }
		
		/// <summary>
		/// Each tag consists of a key and a value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class StartVectorEnrichmentJobPostBodyInputConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobDataSourceConfigInput DataSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VectorEnrichmentJobDocumentType DocumentType { get; set; }
	}
	
	public class StartVectorEnrichmentJobPostBodyJobConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapMatchingConfig MapMatchingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReverseGeocodingConfig ReverseGeocodingConfig { get; set; }
	}
	
	public class StopEarthObservationJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Earth Observation job being stopped.
		/// Required
		/// Pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:earth-observation-job/[a-z0-9]{12,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:earth-observation-job/[a-z0-9]{12,}$")]
		public string Arn { get; set; }
	}
	
	public class StopVectorEnrichmentJobPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the Vector Enrichment job.
		/// Required
		/// Pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:vector-enrichment-job/[a-z0-9]{12,}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:vector-enrichment-job/[a-z0-9]{12,}$")]
		public string Arn { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

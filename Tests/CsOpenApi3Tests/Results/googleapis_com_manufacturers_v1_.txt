//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Attributes of the product. For more information, see https://support.google.com/manufacturers/answer/6124116.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attributes
	{
		
		/// <summary>
		/// The additional images of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#addlimage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalImageLink")]
		public Image[] AdditionalImageLink { get; set; }
		
		/// <summary>
		/// The target age group of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#agegroup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ageGroup")]
		public string AgeGroup { get; set; }
		
		/// <summary>
		/// The brand name of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#brand.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brand")]
		public string Brand { get; set; }
		
		/// <summary>
		/// The capacity of a product. For more information, see https://support.google.com/manufacturers/answer/6124116#capacity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public Capacity Capacity { get; set; }
		
		/// <summary>
		/// Optional. List of certifications claimed by this product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certification")]
		public GoogleShoppingManufacturersV1ProductCertification[] Certification { get; set; }
		
		/// <summary>
		/// The color of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="color")]
		public string Color { get; set; }
		
		/// <summary>
		/// The number of products in a single package. For more information, see https://support.google.com/manufacturers/answer/6124116#count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public Count Count { get; set; }
		
		/// <summary>
		/// The description of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The disclosure date of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#disclosure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disclosureDate")]
		public string DisclosureDate { get; set; }
		
		/// <summary>
		/// A list of excluded destinations such as "ClientExport", "ClientShoppingCatalog" or "PartnerShoppingCatalog". For more information, see https://support.google.com/manufacturers/answer/7443550
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludedDestination")]
		public string[] ExcludedDestination { get; set; }
		
		/// <summary>
		/// The rich format description of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#featuredesc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureDescription")]
		public FeatureDescription[] FeatureDescription { get; set; }
		
		/// <summary>
		/// The flavor of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#flavor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flavor")]
		public string Flavor { get; set; }
		
		/// <summary>
		/// The format of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		/// <summary>
		/// The target gender of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#gender.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public string Gender { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="grocery")]
		public Grocery Grocery { get; set; }
		
		/// <summary>
		/// The Global Trade Item Number (GTIN) of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#gtin.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gtin")]
		public string[] Gtin { get; set; }
		
		/// <summary>
		/// An image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageLink")]
		public Image ImageLink { get; set; }
		
		/// <summary>
		/// A list of included destinations such as "ClientExport", "ClientShoppingCatalog" or "PartnerShoppingCatalog". For more information, see https://support.google.com/manufacturers/answer/7443550
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includedDestination")]
		public string[] IncludedDestination { get; set; }
		
		/// <summary>
		/// The item group id of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#itemgroupid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemGroupId")]
		public string ItemGroupId { get; set; }
		
		/// <summary>
		/// The material of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#material.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="material")]
		public string Material { get; set; }
		
		/// <summary>
		/// The Manufacturer Part Number (MPN) of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#mpn.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mpn")]
		public string Mpn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nutrition")]
		public Nutrition Nutrition { get; set; }
		
		/// <summary>
		/// The pattern of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#pattern.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pattern")]
		public string Pattern { get; set; }
		
		/// <summary>
		/// The details of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productdetail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productDetail")]
		public ProductDetail[] ProductDetail { get; set; }
		
		/// <summary>
		/// The product highlights. For more information, see https://support.google.com/manufacturers/answer/10066942
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productHighlight")]
		public string[] ProductHighlight { get; set; }
		
		/// <summary>
		/// The name of the group of products related to the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productLine")]
		public string ProductLine { get; set; }
		
		/// <summary>
		/// The canonical name of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productname.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productName")]
		public string ProductName { get; set; }
		
		/// <summary>
		/// The URL of the detail page of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productpage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productPageUrl")]
		public string ProductPageUrl { get; set; }
		
		/// <summary>
		/// The type or category of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#producttype.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productType")]
		public string[] ProductType { get; set; }
		
		/// <summary>
		/// The release date of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseDate")]
		public string ReleaseDate { get; set; }
		
		/// <summary>
		/// Rich product content. For more information, see https://support.google.com/manufacturers/answer/9389865
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="richProductContent")]
		public string[] RichProductContent { get; set; }
		
		/// <summary>
		/// The scent of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#scent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scent")]
		public string Scent { get; set; }
		
		/// <summary>
		/// The size of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#size.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
		
		/// <summary>
		/// The size system of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#sizesystem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeSystem")]
		public string SizeSystem { get; set; }
		
		/// <summary>
		/// The size type of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#sizetype.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeType")]
		public string[] SizeType { get; set; }
		
		/// <summary>
		/// A price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestedRetailPrice")]
		public Price SuggestedRetailPrice { get; set; }
		
		/// <summary>
		/// The target client id. Should only be used in the accounts of the data partners. For more information, see https://support.google.com/manufacturers/answer/10857344
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetClientId")]
		public string TargetClientId { get; set; }
		
		/// <summary>
		/// The theme of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#theme.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="theme")]
		public string Theme { get; set; }
		
		/// <summary>
		/// The title of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The videos of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoLink")]
		public string[] VideoLink { get; set; }
		
		/// <summary>
		/// Virtual Model (3d) asset link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualModelLink")]
		public string VirtualModelLink { get; set; }
	}
	
	/// <summary>
	/// An image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Image
	{
		
		/// <summary>
		/// The URL of the image. For crawled images, this is the provided URL. For uploaded images, this is a serving URL from Google if the image has been processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageUrl")]
		public string ImageUrl { get; set; }
		
		/// <summary>
		/// The status of the image. @OutputOnly
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ImageStatus> Status { get; set; }
		
		/// <summary>
		/// The type of the image, i.e., crawled or uploaded. @OutputOnly
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ImageType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ImageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_CRAWL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROBOTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XROBOTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRAWL_ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_ERROR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECODING_ERROR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOO_BIG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRAWL_SKIPPED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOSTLOADED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_404 = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ImageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRAWLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPLOADED = 2,
	}
	
	/// <summary>
	/// The capacity of a product. For more information, see https://support.google.com/manufacturers/answer/6124116#capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Capacity
	{
		
		/// <summary>
		/// The unit of the capacity, i.e., MB, GB, or TB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// The numeric value of the capacity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Description of a certification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleShoppingManufacturersV1ProductCertification
	{
		
		/// <summary>
		/// Required. Name of the certification body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authority")]
		public string Authority { get; set; }
		
		/// <summary>
		/// Required. A unique code to identify the certification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Required. Name of the certification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The number of products in a single package. For more information, see https://support.google.com/manufacturers/answer/6124116#count.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Count
	{
		
		/// <summary>
		/// The unit in which these products are counted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// The numeric value of the number of products in a package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// A feature description of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#featuredesc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeatureDescription
	{
		
		/// <summary>
		/// A short description of the feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headline")]
		public string Headline { get; set; }
		
		/// <summary>
		/// An image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public Image Image { get; set; }
		
		/// <summary>
		/// A detailed description of the feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Grocery
	{
		
		/// <summary>
		/// Active ingredients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activeIngredients")]
		public string ActiveIngredients { get; set; }
		
		/// <summary>
		/// Alcohol by volume.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alcoholByVolume")]
		public System.Nullable<System.Double> AlcoholByVolume { get; set; }
		
		/// <summary>
		/// Allergens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allergens")]
		public string Allergens { get; set; }
		
		/// <summary>
		/// Derived nutrition claim.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="derivedNutritionClaim")]
		public string[] DerivedNutritionClaim { get; set; }
		
		/// <summary>
		/// Directions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="directions")]
		public string Directions { get; set; }
		
		/// <summary>
		/// Indications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indications")]
		public string Indications { get; set; }
		
		/// <summary>
		/// Ingredients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ingredients")]
		public string Ingredients { get; set; }
		
		/// <summary>
		/// Nutrition claim.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nutritionClaim")]
		public string[] NutritionClaim { get; set; }
		
		/// <summary>
		/// Storage instructions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageInstructions")]
		public string StorageInstructions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Nutrition
	{
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addedSugars")]
		public FloatUnit AddedSugars { get; set; }
		
		/// <summary>
		/// Added sugars daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addedSugarsDailyPercentage")]
		public System.Nullable<System.Double> AddedSugarsDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calcium")]
		public FloatUnit Calcium { get; set; }
		
		/// <summary>
		/// Calcium daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calciumDailyPercentage")]
		public System.Nullable<System.Double> CalciumDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cholesterol")]
		public FloatUnit Cholesterol { get; set; }
		
		/// <summary>
		/// Cholesterol daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cholesterolDailyPercentage")]
		public System.Nullable<System.Double> CholesterolDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dietaryFiber")]
		public FloatUnit DietaryFiber { get; set; }
		
		/// <summary>
		/// Dietary fiber daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dietaryFiberDailyPercentage")]
		public System.Nullable<System.Double> DietaryFiberDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="energy")]
		public FloatUnit Energy { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="energyFromFat")]
		public FloatUnit EnergyFromFat { get; set; }
		
		/// <summary>
		/// Folate daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folateDailyPercentage")]
		public System.Nullable<System.Double> FolateDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folateFolicAcid")]
		public FloatUnit FolateFolicAcid { get; set; }
		
		/// <summary>
		/// Folate mcg DFE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folateMcgDfe")]
		public System.Nullable<System.Double> FolateMcgDfe { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iron")]
		public FloatUnit Iron { get; set; }
		
		/// <summary>
		/// Iron daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ironDailyPercentage")]
		public System.Nullable<System.Double> IronDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monounsaturatedFat")]
		public FloatUnit MonounsaturatedFat { get; set; }
		
		/// <summary>
		/// Nutrition fact measure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nutritionFactMeasure")]
		public string NutritionFactMeasure { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="polyols")]
		public FloatUnit Polyols { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="polyunsaturatedFat")]
		public FloatUnit PolyunsaturatedFat { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="potassium")]
		public FloatUnit Potassium { get; set; }
		
		/// <summary>
		/// Potassium daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="potassiumDailyPercentage")]
		public System.Nullable<System.Double> PotassiumDailyPercentage { get; set; }
		
		/// <summary>
		/// Prepared size description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preparedSizeDescription")]
		public string PreparedSizeDescription { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protein")]
		public FloatUnit Protein { get; set; }
		
		/// <summary>
		/// Protein daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proteinDailyPercentage")]
		public System.Nullable<System.Double> ProteinDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturatedFat")]
		public FloatUnit SaturatedFat { get; set; }
		
		/// <summary>
		/// Saturated fat daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturatedFatDailyPercentage")]
		public System.Nullable<System.Double> SaturatedFatDailyPercentage { get; set; }
		
		/// <summary>
		/// Food Serving Size. Serving size description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servingSizeDescription")]
		public string ServingSizeDescription { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servingSizeMeasure")]
		public FloatUnit ServingSizeMeasure { get; set; }
		
		/// <summary>
		/// Servings per container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servingsPerContainer")]
		public string ServingsPerContainer { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sodium")]
		public FloatUnit Sodium { get; set; }
		
		/// <summary>
		/// Sodium daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sodiumDailyPercentage")]
		public System.Nullable<System.Double> SodiumDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starch")]
		public FloatUnit Starch { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCarbohydrate")]
		public FloatUnit TotalCarbohydrate { get; set; }
		
		/// <summary>
		/// Total carbohydrate daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCarbohydrateDailyPercentage")]
		public System.Nullable<System.Double> TotalCarbohydrateDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalFat")]
		public FloatUnit TotalFat { get; set; }
		
		/// <summary>
		/// Total fat daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalFatDailyPercentage")]
		public System.Nullable<System.Double> TotalFatDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSugars")]
		public FloatUnit TotalSugars { get; set; }
		
		/// <summary>
		/// Total sugars daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSugarsDailyPercentage")]
		public System.Nullable<System.Double> TotalSugarsDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transFat")]
		public FloatUnit TransFat { get; set; }
		
		/// <summary>
		/// Trans fat daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transFatDailyPercentage")]
		public System.Nullable<System.Double> TransFatDailyPercentage { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vitaminD")]
		public FloatUnit VitaminD { get; set; }
		
		/// <summary>
		/// Vitamin D daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vitaminDDailyPercentage")]
		public System.Nullable<System.Double> VitaminDDailyPercentage { get; set; }
		
		/// <summary>
		/// Voluntary nutrition fact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voluntaryNutritionFact")]
		public VoluntaryNutritionFact[] VoluntaryNutritionFact { get; set; }
	}
	
	/// <summary>
	/// Combination of float amount and unit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FloatUnit
	{
		
		/// <summary>
		/// amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// Voluntary Nutrition Facts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoluntaryNutritionFact
	{
		
		/// <summary>
		/// Daily percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dailyPercentage")]
		public System.Nullable<System.Double> DailyPercentage { get; set; }
		
		/// <summary>
		/// Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Combination of float amount and unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public FloatUnit Value { get; set; }
	}
	
	/// <summary>
	/// A product detail of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#productdetail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProductDetail
	{
		
		/// <summary>
		/// The name of the attribute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributeName")]
		public string AttributeName { get; set; }
		
		/// <summary>
		/// The value of the attribute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributeValue")]
		public string AttributeValue { get; set; }
		
		/// <summary>
		/// A short section name that can be reused between multiple product details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sectionName")]
		public string SectionName { get; set; }
	}
	
	/// <summary>
	/// A price.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Price
	{
		
		/// <summary>
		/// The numeric value of the price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The currency in which the price is denoted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
	}
	
	/// <summary>
	/// Description of a certification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Certification
	{
		
		/// <summary>
		/// Required. Name of the certification body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authority")]
		public string Authority { get; set; }
		
		/// <summary>
		/// Required. A unique code to identify the certification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Optional. A URL link to the certification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// Optional. A URL link to the certification logo.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo")]
		public string Logo { get; set; }
		
		/// <summary>
		/// Required. Name of the certification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. The expiration date (UTC).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validUntil")]
		public string ValidUntil { get; set; }
		
		/// <summary>
		/// Optional. A custom value of the certification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The destination status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DestinationStatus
	{
		
		/// <summary>
		/// The name of the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public string Destination { get; set; }
		
		/// <summary>
		/// The status of the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DestinationStatusStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DestinationStatusStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISAPPROVED = 3,
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// Product issue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Issue
	{
		
		/// <summary>
		/// If present, the attribute that triggered the issue. For more information about attributes, see https://support.google.com/manufacturers/answer/6124116.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attribute")]
		public string Attribute { get; set; }
		
		/// <summary>
		/// Longer description of the issue focused on how to resolve it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The destination this issue applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public string Destination { get; set; }
		
		/// <summary>
		/// What needs to happen to resolve the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resolution")]
		public System.Nullable<IssueResolution> Resolution { get; set; }
		
		/// <summary>
		/// The severity of the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<IssueSeverity> Severity { get; set; }
		
		/// <summary>
		/// The timestamp when this issue appeared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		/// <summary>
		/// Short title describing the nature of the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The server-generated type of the issue, for example, “INCORRECT_TEXT_FORMATTING”, “IMAGE_NOT_SERVEABLE”, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IssueResolution
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLUTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_ACTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_PROCESSING = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IssueSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVERITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 3,
	}
	
	/// <summary>
	/// Response for ListProductCertifications method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProductCertificationsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The product certifications from the specified certification body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productCertifications")]
		public ProductCertification[] ProductCertifications { get; set; }
	}
	
	/// <summary>
	/// Product certification data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProductCertification
	{
		
		/// <summary>
		/// Required. This is the product's brand name. The brand is used to help identify your product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brand")]
		public string Brand { get; set; }
		
		/// <summary>
		/// Required. A list of certifications to link to the described product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certification")]
		public Certification[] Certification { get; set; }
		
		/// <summary>
		/// Optional. A 2-letter country code (ISO 3166-1 Alpha 2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="countryCode")]
		public string[] CountryCode { get; set; }
		
		/// <summary>
		/// Output only. The statuses of the destinations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationStatuses")]
		public DestinationStatus[] DestinationStatuses { get; set; }
		
		/// <summary>
		/// Output only. A server-generated list of issues associated with the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public Issue[] Issues { get; set; }
		
		/// <summary>
		/// Optional. These are the Manufacturer Part Numbers (MPN). MPNs are used to uniquely identify a specific product among all products from the same manufacturer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mpn")]
		public string[] Mpn { get; set; }
		
		/// <summary>
		/// Required. The unique name identifier of a product certification Format: accounts/{account}/languages/{language_code}/productCertifications/{id} Where `id` is a some unique identifier and `language_code` is a 2-letter ISO 639-1 code of a Shopping supported language according to https://support.google.com/merchants/answer/160637.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. Another name for GTIN.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productCode")]
		public string[] ProductCode { get; set; }
		
		/// <summary>
		/// Optional. These are your own product categorization system in your product data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productType")]
		public string[] ProductType { get; set; }
		
		/// <summary>
		/// Required. This is to clearly identify the product you are certifying.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProductsResponse
	{
		
		/// <summary>
		/// The token for the retrieval of the next page of product statuses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of the products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public Product[] Products { get; set; }
	}
	
	/// <summary>
	/// Product data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Product
	{
		
		/// <summary>
		/// Attributes of the product. For more information, see https://support.google.com/manufacturers/answer/6124116.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public Attributes Attributes { get; set; }
		
		/// <summary>
		/// The content language of the product as a two-letter ISO 639-1 language code (for example, en).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentLanguage")]
		public string ContentLanguage { get; set; }
		
		/// <summary>
		/// The status of the destinations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationStatuses")]
		public DestinationStatus[] DestinationStatuses { get; set; }
		
		/// <summary>
		/// A server-generated list of issues associated with the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public Issue[] Issues { get; set; }
		
		/// <summary>
		/// Name in the format `{target_country}:{content_language}:{product_id}`. `target_country` - The target country of the product as a CLDR territory code (for example, US). `content_language` - The content language of the product as a two-letter ISO 639-1 language code (for example, en). `product_id` - The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Parent ID in the format `accounts/{account_id}`. `account_id` - The ID of the Manufacturer Center account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		/// <summary>
		/// The target country of the product as a CLDR territory code (for example, US).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetCountry")]
		public string TargetCountry { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a product certification by its name. This method can only be called by certification bodies.
		/// Manufacturers_accounts_languages_productCertifications_delete v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the product certification to delete. Format: accounts/{account}/languages/{language_code}/productCertifications/{id}</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Manufacturers_accounts_languages_productCertifications_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a product certification by its name. This method can only be called by certification bodies.
		/// Manufacturers_accounts_languages_productCertifications_get v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the product certification to get. Format: accounts/{account}/languages/{language_code}/productCertifications/{id}</param>
		/// <returns>Successful response</returns>
		public async Task<ProductCertification> Manufacturers_accounts_languages_productCertifications_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ProductCertification>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates (or creates if allow_missing = true) a product certification which links certifications with products. This method can only be called by certification bodies.
		/// Manufacturers_accounts_languages_productCertifications_patch v1/{name}
		/// </summary>
		/// <param name="name">Required. The unique name identifier of a product certification Format: accounts/{account}/languages/{language_code}/productCertifications/{id} Where `id` is a some unique identifier and `language_code` is a 2-letter ISO 639-1 code of a Shopping supported language according to https://support.google.com/merchants/answer/160637.</param>
		/// <param name="updateMask">Optional. The list of fields to update according to aip.dev/134. However, only full update is supported as of right now. Therefore, it can be either ignored or set to "*". Setting any other values will returns UNIMPLEMENTED error.</param>
		/// <returns>Successful response</returns>
		public async Task<ProductCertification> Manufacturers_accounts_languages_productCertifications_patchAsync(string name, string updateMask, ProductCertification requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ProductCertification>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists product certifications from a specified certification body. This method can only be called by certification bodies.
		/// Manufacturers_accounts_languages_productCertifications_list v1/{parent}/productCertifications
		/// </summary>
		/// <param name="parent">Required. The parent, which owns this collection of product certifications. Format: accounts/{account}/languages/{language_code}</param>
		/// <param name="pageSize">Optional. The maximum number of product certifications to return. The service may return fewer than this value. If unspecified, at most 50 product certifications will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListProductCertifications` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListProductCertifications` must match the call that provided the page token. Required if requesting the second or higher page.</param>
		/// <returns>Successful response</returns>
		public async Task<ListProductCertificationsResponse> Manufacturers_accounts_languages_productCertifications_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/productCertifications&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListProductCertificationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the products in a Manufacturer Center account.
		/// Manufacturers_accounts_products_list v1/{parent}/products
		/// </summary>
		/// <param name="parent">Parent ID in the format `accounts/{account_id}`. `account_id` - The ID of the Manufacturer Center account.</param>
		/// <param name="include">The information to be included in the response. Only sections listed here will be returned.</param>
		/// <param name="pageSize">Maximum number of product statuses to return in the response, used for paging.</param>
		/// <param name="pageToken">The token returned by the previous request.</param>
		/// <returns>Successful response</returns>
		public async Task<ListProductsResponse> Manufacturers_accounts_products_listAsync(string parent, string[] include, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/products&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListProductsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the product from a Manufacturer Center account.
		/// Manufacturers_accounts_products_delete v1/{parent}/products/{name}
		/// </summary>
		/// <param name="parent">Parent ID in the format `accounts/{account_id}`. `account_id` - The ID of the Manufacturer Center account.</param>
		/// <param name="name">Name in the format `{target_country}:{content_language}:{product_id}`. `target_country` - The target country of the product as a CLDR territory code (for example, US). `content_language` - The content language of the product as a two-letter ISO 639-1 language code (for example, en). `product_id` - The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Manufacturers_accounts_products_deleteAsync(string parent, string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/products/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the product from a Manufacturer Center account, including product issues. A recently updated product takes around 15 minutes to process. Changes are only visible after it has been processed. While some issues may be available once the product has been processed, other issues may take days to appear.
		/// Manufacturers_accounts_products_get v1/{parent}/products/{name}
		/// </summary>
		/// <param name="parent">Parent ID in the format `accounts/{account_id}`. `account_id` - The ID of the Manufacturer Center account.</param>
		/// <param name="name">Name in the format `{target_country}:{content_language}:{product_id}`. `target_country` - The target country of the product as a CLDR territory code (for example, US). `content_language` - The content language of the product as a two-letter ISO 639-1 language code (for example, en). `product_id` - The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.</param>
		/// <param name="include">The information to be included in the response. Only sections listed here will be returned.</param>
		/// <returns>Successful response</returns>
		public async Task<Product> Manufacturers_accounts_products_getAsync(string parent, string name, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/products/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Product>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Inserts or updates the attributes of the product in a Manufacturer Center account. Creates a product with the provided attributes. If the product already exists, then all attributes are replaced with the new ones. The checks at upload time are minimal. All required attributes need to be present for a product to be valid. Issues may show up later after the API has accepted a new upload for a product and it is possible to overwrite an existing valid product with an invalid product. To detect this, you should retrieve the product and check it for issues once the new version is available. Uploaded attributes first need to be processed before they can be retrieved. Until then, new products will be unavailable, and retrieval of previously uploaded products will return the original state of the product.
		/// Manufacturers_accounts_products_update v1/{parent}/products/{name}
		/// </summary>
		/// <param name="parent">Parent ID in the format `accounts/{account_id}`. `account_id` - The ID of the Manufacturer Center account.</param>
		/// <param name="name">Name in the format `{target_country}:{content_language}:{product_id}`. `target_country` - The target country of the product as a CLDR territory code (for example, US). `content_language` - The content language of the product as a two-letter ISO 639-1 language code (for example, en). `product_id` - The ID of the product. For more information, see https://support.google.com/manufacturers/answer/6124116#id.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Manufacturers_accounts_products_updateAsync(string parent, string name, Attributes requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/products/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

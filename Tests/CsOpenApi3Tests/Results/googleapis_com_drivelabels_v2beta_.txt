//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The color derived from BadgeConfig and changed to the closest recommended supported color.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaBadgeColors
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backgroundColor")]
		public GoogleTypeColor BackgroundColor { get; set; }
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="foregroundColor")]
		public GoogleTypeColor ForegroundColor { get; set; }
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="soloColor")]
		public GoogleTypeColor SoloColor { get; set; }
	}
	
	/// <summary>
	/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeColor
	{
		
		/// <summary>
		/// The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alpha")]
		public System.Nullable<System.Single> Alpha { get; set; }
		
		/// <summary>
		/// The amount of blue in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blue")]
		public System.Nullable<System.Single> Blue { get; set; }
		
		/// <summary>
		/// The amount of green in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="green")]
		public System.Nullable<System.Single> Green { get; set; }
		
		/// <summary>
		/// The amount of red in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="red")]
		public System.Nullable<System.Single> Red { get; set; }
	}
	
	/// <summary>
	/// Badge status of the label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaBadgeConfig
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="color")]
		public GoogleTypeColor Color { get; set; }
		
		/// <summary>
		/// Override the default global priority of this badge. When set to 0, the default priority heuristic is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priorityOverride")]
		public string PriorityOverride { get; set; }
	}
	
	/// <summary>
	/// Deletes one of more Label Permissions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest
	{
		
		/// <summary>
		/// Required. The request message specifying the resources to update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest[] Requests { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the DeleteLabelPermissionRequest messages must either be empty or match this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
	}
	
	/// <summary>
	/// Deletes a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest
	{
		
		/// <summary>
		/// Required. Label Permission resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
	}
	
	/// <summary>
	/// Updates one or more Label Permissions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest
	{
		
		/// <summary>
		/// Required. The request message specifying the resources to update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest[] Requests { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the UpdateLabelPermissionRequest messages must either be empty or match this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
	}
	
	/// <summary>
	/// Updates a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest
	{
		
		/// <summary>
		/// The permission that applies to a principal (user, group, audience) on a label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelPermission")]
		public GoogleAppsDriveLabelsV2betaLabelPermission LabelPermission { get; set; }
		
		/// <summary>
		/// Required. The parent Label resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
	}
	
	/// <summary>
	/// The permission that applies to a principal (user, group, audience) on a label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelPermission
	{
		
		/// <summary>
		/// Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the Label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audience")]
		public string Audience { get; set; }
		
		/// <summary>
		/// Specifies the email address for a user or group pricinpal. Not populated for audience principals. User and Group permissions may only be inserted using email address. On update requests, if email address is specified, no principal should be specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Group resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// Resource name of this permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Person resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="person")]
		public string Person { get; set; }
		
		/// <summary>
		/// The role the principal should have.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaLabelPermissionRole> Role { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaLabelPermissionRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LABEL_ROLE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLIER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORGANIZER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EDITOR = 4,
	}
	
	/// <summary>
	/// Response for updating one or more Label Permissions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse
	{
		
		/// <summary>
		/// Required. Permissions updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public GoogleAppsDriveLabelsV2betaLabelPermission[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Limits for date Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDateLimits
	{
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public GoogleTypeDate MaxValue { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public GoogleTypeDate MinValue { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// The set of requests for updating aspects of a Label. If any request is not valid, no requests will be applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest
	{
		
		/// <summary>
		/// The BCP-47 language code to use for evaluating localized Field labels when `include_label_in_response` is `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// A list of updates to apply to the Label. Requests will be applied in the order they are specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest[] Requests { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
		
		/// <summary>
		/// When specified, only certain fields belonging to the indicated view will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="view")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestView> View { get; set; }
		
		/// <summary>
		/// Provides control over how write requests are executed. When not specified, the last write wins.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeControl")]
		public GoogleAppsDriveLabelsV2betaWriteControl WriteControl { get; set; }
	}
	
	/// <summary>
	/// A single kind of update to apply to a Label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest
	{
		
		/// <summary>
		/// Request to create a Field within a Label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest CreateField { get; set; }
		
		/// <summary>
		/// Request to create a Selection Choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest CreateSelectionChoice { get; set; }
		
		/// <summary>
		/// Request to delete the Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest DeleteField { get; set; }
		
		/// <summary>
		/// Request to delete a Choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest DeleteSelectionChoice { get; set; }
		
		/// <summary>
		/// Request to disable the Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest DisableField { get; set; }
		
		/// <summary>
		/// Request to disable a Choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest DisableSelectionChoice { get; set; }
		
		/// <summary>
		/// Request to enable the Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest EnableField { get; set; }
		
		/// <summary>
		/// Request to enable a Choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest EnableSelectionChoice { get; set; }
		
		/// <summary>
		/// Request to update Field properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest UpdateField { get; set; }
		
		/// <summary>
		/// Request to change the type of a Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateFieldType")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest UpdateFieldType { get; set; }
		
		/// <summary>
		/// Updates basic properties of a Label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateLabel")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest UpdateLabel { get; set; }
		
		/// <summary>
		/// Request to update a Choice properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateSelectionChoiceProperties")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest UpdateSelectionChoiceProperties { get; set; }
	}
	
	/// <summary>
	/// Request to create a Field within a Label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest
	{
		
		/// <summary>
		/// Defines a field that has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public GoogleAppsDriveLabelsV2betaField Field { get; set; }
	}
	
	/// <summary>
	/// Defines a field that has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaField
	{
		
		/// <summary>
		/// The capabilities related to this field on applied metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedCapabilities")]
		public GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities AppliedCapabilities { get; set; }
		
		/// <summary>
		/// Output only. The time this field was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public GoogleAppsDriveLabelsV2betaUserInfo Creator { get; set; }
		
		/// <summary>
		/// Options for the date field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateOptions")]
		public GoogleAppsDriveLabelsV2betaFieldDateOptions DateOptions { get; set; }
		
		/// <summary>
		/// Output only. The time this field was disabled. This value has no meaning when the field is not disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableTime")]
		public string DisableTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabler")]
		public GoogleAppsDriveLabelsV2betaUserInfo Disabler { get; set; }
		
		/// <summary>
		/// UI display hints for rendering a field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayHints")]
		public GoogleAppsDriveLabelsV2betaFieldDisplayHints DisplayHints { get; set; }
		
		/// <summary>
		/// Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Options for the Integer field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerOptions")]
		public GoogleAppsDriveLabelsV2betaFieldIntegerOptions IntegerOptions { get; set; }
		
		/// <summary>
		/// The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lifecycle")]
		public GoogleAppsDriveLabelsV2betaLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// Contains information about whether a label component should be considered locked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lockStatus")]
		public GoogleAppsDriveLabelsV2betaLockStatus LockStatus { get; set; }
		
		/// <summary>
		/// The basic properties of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleAppsDriveLabelsV2betaFieldProperties Properties { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public GoogleAppsDriveLabelsV2betaUserInfo Publisher { get; set; }
		
		/// <summary>
		/// Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, "`{query_key}` > 2001-01-01".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryKey")]
		public string QueryKey { get; set; }
		
		/// <summary>
		/// The capabilities related to this field when editing the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaCapabilities")]
		public GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities SchemaCapabilities { get; set; }
		
		/// <summary>
		/// Options for the selection field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectionOptions")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptions SelectionOptions { get; set; }
		
		/// <summary>
		/// Options for the Text field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textOptions")]
		public GoogleAppsDriveLabelsV2betaFieldTextOptions TextOptions { get; set; }
		
		/// <summary>
		/// Output only. The time this field was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updater")]
		public GoogleAppsDriveLabelsV2betaUserInfo Updater { get; set; }
		
		/// <summary>
		/// Options for the user field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userOptions")]
		public GoogleAppsDriveLabelsV2betaFieldUserOptions UserOptions { get; set; }
	}
	
	/// <summary>
	/// The capabilities related to this field on applied metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities
	{
		
		/// <summary>
		/// Whether the user can read related applied metadata on items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canRead")]
		public System.Nullable<System.Boolean> CanRead { get; set; }
		
		/// <summary>
		/// Whether the user can search for Drive items referencing this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canSearch")]
		public System.Nullable<System.Boolean> CanSearch { get; set; }
		
		/// <summary>
		/// Whether the user can set this field on Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canWrite")]
		public System.Nullable<System.Boolean> CanWrite { get; set; }
	}
	
	/// <summary>
	/// Information about a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaUserInfo
	{
		
		/// <summary>
		/// The identifier for this user that can be used with the People API to get more information. For example, people/12345678.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="person")]
		public string Person { get; set; }
	}
	
	/// <summary>
	/// Options for the date field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldDateOptions
	{
		
		/// <summary>
		/// Output only. ICU date format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateFormat")]
		public string DateFormat { get; set; }
		
		/// <summary>
		/// Localized date formatting option. Field values are rendered in this format according to their locale.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateFormatType")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaFieldDateOptionsDateFormatType> DateFormatType { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public GoogleTypeDate MaxValue { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public GoogleTypeDate MinValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaFieldDateOptionsDateFormatType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_DATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHORT_DATE = 2,
	}
	
	/// <summary>
	/// UI display hints for rendering a field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldDisplayHints
	{
		
		/// <summary>
		/// Whether the field should be shown in the UI as disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabled")]
		public System.Nullable<System.Boolean> Disabled { get; set; }
		
		/// <summary>
		/// This field should be hidden in the search menu when searching for Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hiddenInSearch")]
		public System.Nullable<System.Boolean> HiddenInSearch { get; set; }
		
		/// <summary>
		/// Whether the field should be shown as required in the UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// This field should be shown in the apply menu when applying values to a Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shownInApply")]
		public System.Nullable<System.Boolean> ShownInApply { get; set; }
	}
	
	/// <summary>
	/// Options for the Integer field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldIntegerOptions
	{
		
		/// <summary>
		/// Output only. The maximum valid value for the integer field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public string MaxValue { get; set; }
		
		/// <summary>
		/// Output only. The minimum valid value for the integer field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public string MinValue { get; set; }
	}
	
	/// <summary>
	/// The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLifecycle
	{
		
		/// <summary>
		/// The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledPolicy")]
		public GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy DisabledPolicy { get; set; }
		
		/// <summary>
		/// Output only. Whether the object associated with this lifecycle has unpublished changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasUnpublishedChanges")]
		public System.Nullable<System.Boolean> HasUnpublishedChanges { get; set; }
		
		/// <summary>
		/// Output only. The state of the object associated with this lifecycle.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaLifecycleState> State { get; set; }
	}
	
	/// <summary>
	/// The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy
	{
		
		/// <summary>
		/// Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hideInSearch")]
		public System.Nullable<System.Boolean> HideInSearch { get; set; }
		
		/// <summary>
		/// Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="showInApply")]
		public System.Nullable<System.Boolean> ShowInApply { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaLifecycleState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNPUBLISHED_DRAFT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 4,
	}
	
	/// <summary>
	/// Contains information about whether a label component should be considered locked.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLockStatus
	{
		
		/// <summary>
		/// Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public System.Nullable<System.Boolean> Locked { get; set; }
	}
	
	/// <summary>
	/// The basic properties of the field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldProperties
	{
		
		/// <summary>
		/// Required. The display text to show in the UI identifying this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insertBeforeField")]
		public string InsertBeforeField { get; set; }
		
		/// <summary>
		/// Whether the field should be marked as required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
	}
	
	/// <summary>
	/// The capabilities related to this field when editing the field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities
	{
		
		/// <summary>
		/// Whether the user can delete this field. The user must have permission and the field must be deprecated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canDelete")]
		public System.Nullable<System.Boolean> CanDelete { get; set; }
		
		/// <summary>
		/// Whether the user can disable this field. The user must have permission and this field must not already be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canDisable")]
		public System.Nullable<System.Boolean> CanDisable { get; set; }
		
		/// <summary>
		/// Whether the user can enable this field. The user must have permission and this field must be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canEnable")]
		public System.Nullable<System.Boolean> CanEnable { get; set; }
		
		/// <summary>
		/// Whether the user can change this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canUpdate")]
		public System.Nullable<System.Boolean> CanUpdate { get; set; }
	}
	
	/// <summary>
	/// Options for the selection field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSelectionOptions
	{
		
		/// <summary>
		/// The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice[] Choices { get; set; }
		
		/// <summary>
		/// Options for a multi-valued variant of an associated field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listOptions")]
		public GoogleAppsDriveLabelsV2betaFieldListOptions ListOptions { get; set; }
	}
	
	/// <summary>
	/// Selection field choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice
	{
		
		/// <summary>
		/// The capabilities related to this choice on applied metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedCapabilities")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities AppliedCapabilities { get; set; }
		
		/// <summary>
		/// Output only. The time this choice was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public GoogleAppsDriveLabelsV2betaUserInfo Creator { get; set; }
		
		/// <summary>
		/// Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableTime")]
		public string DisableTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabler")]
		public GoogleAppsDriveLabelsV2betaUserInfo Disabler { get; set; }
		
		/// <summary>
		/// UI display hints for rendering an option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayHints")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints DisplayHints { get; set; }
		
		/// <summary>
		/// The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lifecycle")]
		public GoogleAppsDriveLabelsV2betaLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// Contains information about whether a label component should be considered locked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lockStatus")]
		public GoogleAppsDriveLabelsV2betaLockStatus LockStatus { get; set; }
		
		/// <summary>
		/// Basic properties of the choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties Properties { get; set; }
		
		/// <summary>
		/// Output only. The time this choice was published. This value has no meaning when the choice is not published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishTime")]
		public string PublishTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public GoogleAppsDriveLabelsV2betaUserInfo Publisher { get; set; }
		
		/// <summary>
		/// The capabilities related to this choice when editing the choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaCapabilities")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities SchemaCapabilities { get; set; }
		
		/// <summary>
		/// Output only. The time this choice was updated last.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updater")]
		public GoogleAppsDriveLabelsV2betaUserInfo Updater { get; set; }
	}
	
	/// <summary>
	/// The capabilities related to this choice on applied metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities
	{
		
		/// <summary>
		/// Whether the user can read related applied metadata on items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canRead")]
		public System.Nullable<System.Boolean> CanRead { get; set; }
		
		/// <summary>
		/// Whether the user can use this choice in search queries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canSearch")]
		public System.Nullable<System.Boolean> CanSearch { get; set; }
		
		/// <summary>
		/// Whether the user can select this choice on an item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canSelect")]
		public System.Nullable<System.Boolean> CanSelect { get; set; }
	}
	
	/// <summary>
	/// UI display hints for rendering an option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints
	{
		
		/// <summary>
		/// The color derived from BadgeConfig and changed to the closest recommended supported color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="badgeColors")]
		public GoogleAppsDriveLabelsV2betaBadgeColors BadgeColors { get; set; }
		
		/// <summary>
		/// The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="badgePriority")]
		public string BadgePriority { get; set; }
		
		/// <summary>
		/// The color derived from BadgeConfig and changed to the closest recommended supported color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="darkBadgeColors")]
		public GoogleAppsDriveLabelsV2betaBadgeColors DarkBadgeColors { get; set; }
		
		/// <summary>
		/// Whether the option should be shown in the UI as disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabled")]
		public System.Nullable<System.Boolean> Disabled { get; set; }
		
		/// <summary>
		/// This option should be hidden in the search menu when searching for Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hiddenInSearch")]
		public System.Nullable<System.Boolean> HiddenInSearch { get; set; }
		
		/// <summary>
		/// This option should be shown in the apply menu when applying values to a Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shownInApply")]
		public System.Nullable<System.Boolean> ShownInApply { get; set; }
	}
	
	/// <summary>
	/// Basic properties of the choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties
	{
		
		/// <summary>
		/// Badge status of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="badgeConfig")]
		public GoogleAppsDriveLabelsV2betaBadgeConfig BadgeConfig { get; set; }
		
		/// <summary>
		/// The description of this label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display text to show in the UI identifying this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insertBeforeChoice")]
		public string InsertBeforeChoice { get; set; }
	}
	
	/// <summary>
	/// The capabilities related to this choice when editing the choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities
	{
		
		/// <summary>
		/// Whether the user can delete this choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canDelete")]
		public System.Nullable<System.Boolean> CanDelete { get; set; }
		
		/// <summary>
		/// Whether the user can disable this choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canDisable")]
		public System.Nullable<System.Boolean> CanDisable { get; set; }
		
		/// <summary>
		/// Whether the user can enable this choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canEnable")]
		public System.Nullable<System.Boolean> CanEnable { get; set; }
		
		/// <summary>
		/// Whether the user can update this choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canUpdate")]
		public System.Nullable<System.Boolean> CanUpdate { get; set; }
	}
	
	/// <summary>
	/// Options for a multi-valued variant of an associated field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldListOptions
	{
		
		/// <summary>
		/// Maximum number of entries permitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxEntries")]
		public System.Nullable<System.Int32> MaxEntries { get; set; }
	}
	
	/// <summary>
	/// Options for the Text field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldTextOptions
	{
		
		/// <summary>
		/// Output only. The maximum valid length of values for the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxLength")]
		public System.Nullable<System.Int32> MaxLength { get; set; }
		
		/// <summary>
		/// Output only. The minimum valid length of values for the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minLength")]
		public System.Nullable<System.Int32> MinLength { get; set; }
	}
	
	/// <summary>
	/// Options for the user field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldUserOptions
	{
		
		/// <summary>
		/// Options for a multi-valued variant of an associated field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listOptions")]
		public GoogleAppsDriveLabelsV2betaFieldListOptions ListOptions { get; set; }
	}
	
	/// <summary>
	/// Request to create a Selection Choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest
	{
		
		/// <summary>
		/// Selection field choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choice")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice Choice { get; set; }
		
		/// <summary>
		/// Required. The Selection Field in which a Choice will be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
	}
	
	/// <summary>
	/// Request to delete the Field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest
	{
		
		/// <summary>
		/// Required. ID of the Field to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Request to delete a Choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest
	{
		
		/// <summary>
		/// Required. The Selection Field from which a Choice will be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required. Choice to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Request to disable the Field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest
	{
		
		/// <summary>
		/// The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledPolicy")]
		public GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy DisabledPolicy { get; set; }
		
		/// <summary>
		/// Required. Key of the Field to disable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request to disable a Choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest
	{
		
		/// <summary>
		/// The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledPolicy")]
		public GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy DisabledPolicy { get; set; }
		
		/// <summary>
		/// Required. The Selection Field in which a Choice will be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required. Choice to disable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request to enable the Field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest
	{
		
		/// <summary>
		/// Required. ID of the Field to enable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Request to enable a Choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest
	{
		
		/// <summary>
		/// Required. The Selection Field in which a Choice will be enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required. Choice to enable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Request to update Field properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest
	{
		
		/// <summary>
		/// Required. The Field to update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The basic properties of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleAppsDriveLabelsV2betaFieldProperties Properties { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request to change the type of a Field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest
	{
		
		/// <summary>
		/// Options for the date field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateOptions")]
		public GoogleAppsDriveLabelsV2betaFieldDateOptions DateOptions { get; set; }
		
		/// <summary>
		/// Required. The Field to update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Options for the Integer field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerOptions")]
		public GoogleAppsDriveLabelsV2betaFieldIntegerOptions IntegerOptions { get; set; }
		
		/// <summary>
		/// Options for the selection field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectionOptions")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptions SelectionOptions { get; set; }
		
		/// <summary>
		/// Options for the Text field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textOptions")]
		public GoogleAppsDriveLabelsV2betaFieldTextOptions TextOptions { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root of `type_options` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
		
		/// <summary>
		/// Options for the user field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userOptions")]
		public GoogleAppsDriveLabelsV2betaFieldUserOptions UserOptions { get; set; }
	}
	
	/// <summary>
	/// Updates basic properties of a Label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest
	{
		
		/// <summary>
		/// Basic properties of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleAppsDriveLabelsV2betaLabelProperties Properties { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root `label_properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Basic properties of the label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelProperties
	{
		
		/// <summary>
		/// The description of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Title of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Request to update a Choice properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest
	{
		
		/// <summary>
		/// Required. The Selection Field to update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required. The Choice to update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Basic properties of the choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties Properties { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LABEL_VIEW_BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LABEL_VIEW_FULL = 1,
	}
	
	/// <summary>
	/// Provides control over how write requests are executed. When not specified, the last write wins.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaWriteControl
	{
		
		/// <summary>
		/// The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requiredRevisionId")]
		public string RequiredRevisionId { get; set; }
	}
	
	/// <summary>
	/// Response for Label update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse
	{
		
		/// <summary>
		/// The reply of the updates. This maps 1:1 with the updates, although responses to some requests may be empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responses")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse[] Responses { get; set; }
		
		/// <summary>
		/// A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedLabel")]
		public GoogleAppsDriveLabelsV2betaLabel UpdatedLabel { get; set; }
	}
	
	/// <summary>
	/// A single response from an update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse
	{
		
		/// <summary>
		/// Response following Field create.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse CreateField { get; set; }
		
		/// <summary>
		/// Response following Selection Choice create.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse CreateSelectionChoice { get; set; }
		
		/// <summary>
		/// Response following Field delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse DeleteField { get; set; }
		
		/// <summary>
		/// Response following Choice delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse DeleteSelectionChoice { get; set; }
		
		/// <summary>
		/// Response following Field disable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse DisableField { get; set; }
		
		/// <summary>
		/// Response following Choice disable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse DisableSelectionChoice { get; set; }
		
		/// <summary>
		/// Response following Field enable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse EnableField { get; set; }
		
		/// <summary>
		/// Response following Choice enable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSelectionChoice")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse EnableSelectionChoice { get; set; }
		
		/// <summary>
		/// Response following update to Field properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateField")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse UpdateField { get; set; }
		
		/// <summary>
		/// Response following update to Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateFieldType")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse UpdateFieldType { get; set; }
		
		/// <summary>
		/// Response following update to Label properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateLabel")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse UpdateLabel { get; set; }
		
		/// <summary>
		/// Response following update to Selection Choice properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateSelectionChoiceProperties")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse UpdateSelectionChoiceProperties { get; set; }
	}
	
	/// <summary>
	/// Response following Field create.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse
	{
		
		/// <summary>
		/// The field of the created field. When left blank in a create request, a key will be autogenerated and can be identified here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The priority of the created field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	/// <summary>
	/// Response following Selection Choice create.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse
	{
		
		/// <summary>
		/// The server-generated id of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// The server-generated ID of the created choice within the Field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Response following Field delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse
	{
	}
	
	/// <summary>
	/// Response following Choice delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse
	{
	}
	
	/// <summary>
	/// Response following Field disable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse
	{
	}
	
	/// <summary>
	/// Response following Choice disable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse
	{
	}
	
	/// <summary>
	/// Response following Field enable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse
	{
	}
	
	/// <summary>
	/// Response following Choice enable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse
	{
	}
	
	/// <summary>
	/// Response following update to Field properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse
	{
		
		/// <summary>
		/// The priority of the updated field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	/// <summary>
	/// Response following update to Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse
	{
	}
	
	/// <summary>
	/// Response following update to Label properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse
	{
	}
	
	/// <summary>
	/// Response following update to Selection Choice properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse
	{
		
		/// <summary>
		/// The priority of the updated choice. The priority may change from what was specified to assure contiguous priorities between choices (1-n).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	/// <summary>
	/// A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabel
	{
		
		/// <summary>
		/// The capabilities a user has on this label's applied metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedCapabilities")]
		public GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities AppliedCapabilities { get; set; }
		
		/// <summary>
		/// Behavior of this label when it's applied to Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedLabelPolicy")]
		public GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy AppliedLabelPolicy { get; set; }
		
		/// <summary>
		/// Output only. The time this label was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public GoogleAppsDriveLabelsV2betaUserInfo Creator { get; set; }
		
		/// <summary>
		/// Output only. The customer this label belongs to. For example: "customers/123abc789."
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Output only. The time this label was disabled. This value has no meaning when the label is not disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableTime")]
		public string DisableTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabler")]
		public GoogleAppsDriveLabelsV2betaUserInfo Disabler { get; set; }
		
		/// <summary>
		/// UI display hints for rendering the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayHints")]
		public GoogleAppsDriveLabelsV2betaLabelDisplayHints DisplayHints { get; set; }
		
		/// <summary>
		/// List of fields in descending priority order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public GoogleAppsDriveLabelsV2betaField[] Fields { get; set; }
		
		/// <summary>
		/// Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required. The type of label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelType")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaLabelLabelType> LabelType { get; set; }
		
		/// <summary>
		/// Custom URL to present to users to allow them to learn more about this label and how it should be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="learnMoreUri")]
		public string LearnMoreUri { get; set; }
		
		/// <summary>
		/// The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lifecycle")]
		public GoogleAppsDriveLabelsV2betaLifecycle Lifecycle { get; set; }
		
		/// <summary>
		/// Contains information about whether a label component should be considered locked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lockStatus")]
		public GoogleAppsDriveLabelsV2betaLockStatus LockStatus { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Basic properties of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleAppsDriveLabelsV2betaLabelProperties Properties { get; set; }
		
		/// <summary>
		/// Output only. The time this label was published. This value has no meaning when the label is not published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishTime")]
		public string PublishTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public GoogleAppsDriveLabelsV2betaUserInfo Publisher { get; set; }
		
		/// <summary>
		/// Output only. The time this label revision was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreateTime")]
		public string RevisionCreateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreator")]
		public GoogleAppsDriveLabelsV2betaUserInfo RevisionCreator { get; set; }
		
		/// <summary>
		/// Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// The capabilities related to this label when editing the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaCapabilities")]
		public GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities SchemaCapabilities { get; set; }
	}
	
	/// <summary>
	/// The capabilities a user has on this label's applied metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities
	{
		
		/// <summary>
		/// Whether the user can apply this label to items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canApply")]
		public System.Nullable<System.Boolean> CanApply { get; set; }
		
		/// <summary>
		/// Whether the user can read applied metadata related to this label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canRead")]
		public System.Nullable<System.Boolean> CanRead { get; set; }
		
		/// <summary>
		/// Whether the user can remove this label from items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canRemove")]
		public System.Nullable<System.Boolean> CanRemove { get; set; }
	}
	
	/// <summary>
	/// Behavior of this label when it's applied to Drive items.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy
	{
		
		/// <summary>
		/// Indicates how the applied label and field values should be copied when a Drive item is copied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyMode")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicyCopyMode> CopyMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicyCopyMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOT_COPY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALWAYS_COPY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_APPLIABLE = 3,
	}
	
	/// <summary>
	/// UI display hints for rendering the label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelDisplayHints
	{
		
		/// <summary>
		/// Whether the label should be shown in the UI as disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabled")]
		public System.Nullable<System.Boolean> Disabled { get; set; }
		
		/// <summary>
		/// This label should be hidden in the search menu when searching for Drive items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hiddenInSearch")]
		public System.Nullable<System.Boolean> HiddenInSearch { get; set; }
		
		/// <summary>
		/// Order to display label in a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public string Priority { get; set; }
		
		/// <summary>
		/// This label should be shown in the apply menu when applying values to a Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shownInApply")]
		public System.Nullable<System.Boolean> ShownInApply { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaLabelLabelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LABEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_APP = 3,
	}
	
	/// <summary>
	/// The capabilities related to this label when editing the label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities
	{
		
		/// <summary>
		/// Whether the user can delete this label. The user must have permission and the label must be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canDelete")]
		public System.Nullable<System.Boolean> CanDelete { get; set; }
		
		/// <summary>
		/// Whether the user can disable this label. The user must have permission and this label must not already be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canDisable")]
		public System.Nullable<System.Boolean> CanDisable { get; set; }
		
		/// <summary>
		/// Whether the user can enable this label. The user must have permission and this label must be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canEnable")]
		public System.Nullable<System.Boolean> CanEnable { get; set; }
		
		/// <summary>
		/// Whether the user can change this label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canUpdate")]
		public System.Nullable<System.Boolean> CanUpdate { get; set; }
	}
	
	/// <summary>
	/// Request to deprecate a published Label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaDisableLabelRequest
	{
		
		/// <summary>
		/// The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledPolicy")]
		public GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy DisabledPolicy { get; set; }
		
		/// <summary>
		/// The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
		
		/// <summary>
		/// Provides control over how write requests are executed. When not specified, the last write wins.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeControl")]
		public GoogleAppsDriveLabelsV2betaWriteControl WriteControl { get; set; }
	}
	
	/// <summary>
	/// Request to enable a label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaEnableLabelRequest
	{
		
		/// <summary>
		/// The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
		
		/// <summary>
		/// Provides control over how write requests are executed. When not specified, the last write wins.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeControl")]
		public GoogleAppsDriveLabelsV2betaWriteControl WriteControl { get; set; }
	}
	
	/// <summary>
	/// Field constants governing the structure of a Field; such as, the maximum title length, minimum and maximum field values or length, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaFieldLimits
	{
		
		/// <summary>
		/// Limits for date Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateLimits")]
		public GoogleAppsDriveLabelsV2betaDateLimits DateLimits { get; set; }
		
		/// <summary>
		/// Limits for integer Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerLimits")]
		public GoogleAppsDriveLabelsV2betaIntegerLimits IntegerLimits { get; set; }
		
		/// <summary>
		/// Limits for long text Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longTextLimits")]
		public GoogleAppsDriveLabelsV2betaLongTextLimits LongTextLimits { get; set; }
		
		/// <summary>
		/// Limits for Field description, also called help text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDescriptionLength")]
		public System.Nullable<System.Int32> MaxDescriptionLength { get; set; }
		
		/// <summary>
		/// Limits for Field title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDisplayNameLength")]
		public System.Nullable<System.Int32> MaxDisplayNameLength { get; set; }
		
		/// <summary>
		/// Max length for the id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxIdLength")]
		public System.Nullable<System.Int32> MaxIdLength { get; set; }
		
		/// <summary>
		/// Limits for selection Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectionLimits")]
		public GoogleAppsDriveLabelsV2betaSelectionLimits SelectionLimits { get; set; }
		
		/// <summary>
		/// Limits for text Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textLimits")]
		public GoogleAppsDriveLabelsV2betaTextLimits TextLimits { get; set; }
		
		/// <summary>
		/// Limits for Field.Type.USER.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userLimits")]
		public GoogleAppsDriveLabelsV2betaUserLimits UserLimits { get; set; }
	}
	
	/// <summary>
	/// Limits for integer Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaIntegerLimits
	{
		
		/// <summary>
		/// Maximum value for an integer Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public string MaxValue { get; set; }
		
		/// <summary>
		/// Minimum value for an integer Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public string MinValue { get; set; }
	}
	
	/// <summary>
	/// Limits for long text Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLongTextLimits
	{
		
		/// <summary>
		/// Maximum length allowed for a long text Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxLength")]
		public System.Nullable<System.Int32> MaxLength { get; set; }
		
		/// <summary>
		/// Minimum length allowed for a long text Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minLength")]
		public System.Nullable<System.Int32> MinLength { get; set; }
	}
	
	/// <summary>
	/// Limits for selection Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaSelectionLimits
	{
		
		/// <summary>
		/// Limits for list-variant of a Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listLimits")]
		public GoogleAppsDriveLabelsV2betaListLimits ListLimits { get; set; }
		
		/// <summary>
		/// The max number of choices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxChoices")]
		public System.Nullable<System.Int32> MaxChoices { get; set; }
		
		/// <summary>
		/// Maximum number of deleted choices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDeletedChoices")]
		public System.Nullable<System.Int32> MaxDeletedChoices { get; set; }
		
		/// <summary>
		/// Maximum length for display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDisplayNameLength")]
		public System.Nullable<System.Int32> MaxDisplayNameLength { get; set; }
		
		/// <summary>
		/// Maximum ID length for a selection options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxIdLength")]
		public System.Nullable<System.Int32> MaxIdLength { get; set; }
	}
	
	/// <summary>
	/// Limits for list-variant of a Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaListLimits
	{
		
		/// <summary>
		/// Maximum number of values allowed for the Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxEntries")]
		public System.Nullable<System.Int32> MaxEntries { get; set; }
	}
	
	/// <summary>
	/// Limits for text Field type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaTextLimits
	{
		
		/// <summary>
		/// Maximum length allowed for a text Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxLength")]
		public System.Nullable<System.Int32> MaxLength { get; set; }
		
		/// <summary>
		/// Minimum length allowed for a text Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minLength")]
		public System.Nullable<System.Int32> MinLength { get; set; }
	}
	
	/// <summary>
	/// Limits for Field.Type.USER.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaUserLimits
	{
		
		/// <summary>
		/// Limits for list-variant of a Field type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listLimits")]
		public GoogleAppsDriveLabelsV2betaListLimits ListLimits { get; set; }
	}
	
	/// <summary>
	/// Label constraints governing the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelLimits
	{
		
		/// <summary>
		/// Field constants governing the structure of a Field; such as, the maximum title length, minimum and maximum field values or length, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldLimits")]
		public GoogleAppsDriveLabelsV2betaFieldLimits FieldLimits { get; set; }
		
		/// <summary>
		/// The maximum number of published Fields that can be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDeletedFields")]
		public System.Nullable<System.Int32> MaxDeletedFields { get; set; }
		
		/// <summary>
		/// The maximum number of characters allowed for the description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDescriptionLength")]
		public System.Nullable<System.Int32> MaxDescriptionLength { get; set; }
		
		/// <summary>
		/// The maximum number of draft revisions that will be kept before deleting old drafts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDraftRevisions")]
		public System.Nullable<System.Int32> MaxDraftRevisions { get; set; }
		
		/// <summary>
		/// The maximum number of Fields allowed within the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFields")]
		public System.Nullable<System.Int32> MaxFields { get; set; }
		
		/// <summary>
		/// The maximum number of characters allowed for the title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxTitleLength")]
		public System.Nullable<System.Int32> MaxTitleLength { get; set; }
		
		/// <summary>
		/// Resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A Lock that can be applied to a Label, Field, or Choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelLock
	{
		
		/// <summary>
		/// A description of a user's capabilities on a LabelLock.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public GoogleAppsDriveLabelsV2betaLabelLockCapabilities Capabilities { get; set; }
		
		/// <summary>
		/// The ID of the Selection Field Choice that should be locked. If present, `field_id` must also be present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choiceId")]
		public string ChoiceId { get; set; }
		
		/// <summary>
		/// Output only. The time this LabelLock was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Information about a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public GoogleAppsDriveLabelsV2betaUserInfo Creator { get; set; }
		
		/// <summary>
		/// Output only. A timestamp indicating when this LabelLock was scheduled for deletion. This will be present only if this LabelLock is in the DELETING state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteTime")]
		public string DeleteTime { get; set; }
		
		/// <summary>
		/// The ID of the Field that should be locked. Empty if the whole Label should be locked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Output only. Resource name of this LabelLock.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. This LabelLock's state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleAppsDriveLabelsV2betaLabelLockState> State { get; set; }
	}
	
	/// <summary>
	/// A description of a user's capabilities on a LabelLock.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaLabelLockCapabilities
	{
		
		/// <summary>
		/// True if the user is authorized to view the policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canViewPolicy")]
		public System.Nullable<System.Boolean> CanViewPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAppsDriveLabelsV2betaLabelLockState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
	}
	
	/// <summary>
	/// The response to a ListLabelLocksRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaListLabelLocksResponse
	{
		
		/// <summary>
		/// LabelLocks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelLocks")]
		public GoogleAppsDriveLabelsV2betaLabelLock[] LabelLocks { get; set; }
		
		/// <summary>
		/// The token of the next page in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for listing the permissions on a Label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse
	{
		
		/// <summary>
		/// Label permissions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelPermissions")]
		public GoogleAppsDriveLabelsV2betaLabelPermission[] LabelPermissions { get; set; }
		
		/// <summary>
		/// The token of the next page in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for listing Labels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaListLabelsResponse
	{
		
		/// <summary>
		/// Labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public GoogleAppsDriveLabelsV2betaLabel[] Labels { get; set; }
		
		/// <summary>
		/// The token of the next page in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Request to publish a label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaPublishLabelRequest
	{
		
		/// <summary>
		/// The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
		
		/// <summary>
		/// Provides control over how write requests are executed. When not specified, the last write wins.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeControl")]
		public GoogleAppsDriveLabelsV2betaWriteControl WriteControl { get; set; }
	}
	
	/// <summary>
	/// Request to update the `CopyMode` of the given Label. Changes to this policy are not revisioned, do not require publishing, and take effect immediately. \
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest
	{
		
		/// <summary>
		/// Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyMode")]
		public GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicyCopyMode CopyMode { get; set; }
		
		/// <summary>
		/// The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useAdminAccess")]
		public System.Nullable<System.Boolean> UseAdminAccess { get; set; }
		
		/// <summary>
		/// When specified, only certain fields belonging to the indicated view will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="view")]
		public GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestView View { get; set; }
	}
	
	/// <summary>
	/// The capabilities of a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsDriveLabelsV2betaUserCapabilities
	{
		
		/// <summary>
		/// Output only. Whether the user is allowed access to the label manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canAccessLabelManager")]
		public System.Nullable<System.Boolean> CanAccessLabelManager { get; set; }
		
		/// <summary>
		/// Output only. Whether the user is an administrator for the shared labels feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canAdministrateLabels")]
		public System.Nullable<System.Boolean> CanAdministrateLabels { get; set; }
		
		/// <summary>
		/// Output only. Whether the user is allowed to create new admin labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canCreateAdminLabels")]
		public System.Nullable<System.Boolean> CanCreateAdminLabels { get; set; }
		
		/// <summary>
		/// Output only. Whether the user is allowed to create new shared labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canCreateSharedLabels")]
		public System.Nullable<System.Boolean> CanCreateSharedLabels { get; set; }
		
		/// <summary>
		/// Output only. Resource name for the user capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List labels.
		/// Drivelabels_labels_list v2beta/labels
		/// </summary>
		/// <param name="customer">The customer to scope this list request to. For example: "customers/abcd1234". If unset, will return all labels within the current customer.</param>
		/// <param name="languageCode">The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used.</param>
		/// <param name="minimumRole">Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.</param>
		/// <param name="pageSize">Maximum number of labels to return per page. Default: 50. Max: 200.</param>
		/// <param name="pageToken">The token of the page to return.</param>
		/// <param name="publishedOnly">Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`).</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer.</param>
		/// <param name="view">When specified, only certain fields belonging to the indicated view are returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaListLabelsResponse> Drivelabels_labels_listAsync(string customer, string languageCode, GoogleAppsDriveLabelsV2betaLabelPermissionRole minimumRole, int pageSize, string pageToken, bool publishedOnly, bool useAdminAccess, GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/labels?customer=" + (customer==null? "" : System.Uri.EscapeDataString(customer))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&minimumRole=" + minimumRole+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&publishedOnly="+publishedOnly+"&useAdminAccess="+useAdminAccess+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaListLabelsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Label.
		/// Drivelabels_labels_create v2beta/labels
		/// </summary>
		/// <param name="languageCode">The BCP-47 language code to use for evaluating localized Field labels in response. When not specified, values in the default configured language will be used.</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabel> Drivelabels_labels_createAsync(string languageCode, bool useAdminAccess, GoogleAppsDriveLabelsV2betaLabel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/labels?languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&useAdminAccess="+useAdminAccess;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabel>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the constraints on the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.
		/// Drivelabels_limits_getLabel v2beta/limits/label
		/// </summary>
		/// <param name="name">Required. Label revision resource name Must be: "limits/label"</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabelLimits> Drivelabels_limits_getLabelAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/limits/label?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabelLimits>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Label's permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
		/// Drivelabels_labels_revisions_permissions_delete v2beta/{name}
		/// </summary>
		/// <param name="name">Required. Label Permission resource name.</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.</param>
		/// <param name="writeControl_requiredRevisionId">The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Drivelabels_labels_revisions_permissions_deleteAsync(string name, bool useAdminAccess, string writeControl_requiredRevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&useAdminAccess="+useAdminAccess+"&writeControl.requiredRevisionId=" + (writeControl_requiredRevisionId==null? "" : System.Uri.EscapeDataString(writeControl_requiredRevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleProtobufEmpty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the user capabilities.
		/// Drivelabels_users_getCapabilities v2beta/{name}
		/// </summary>
		/// <param name="name">Required. The resource name of the user. Only "users/me/capabilities" is supported.</param>
		/// <param name="customer">The customer to scope this request to. For example: "customers/abcd1234". If unset, will return settings within the current customer.</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin credentials. The server verifies that the user is an admin for the label before allowing access.</param>
		/// <param name="view">When specified, only certain fields belonging to the indicated view are returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaUserCapabilities> Drivelabels_users_getCapabilitiesAsync(string name, string customer, bool useAdminAccess, GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&customer=" + (customer==null? "" : System.Uri.EscapeDataString(customer))+"&useAdminAccess="+useAdminAccess+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaUserCapabilities>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a single Label by applying a set of update requests resulting in a new draft revision. The batch update is all-or-nothing: If any of the update requests are invalid, no changes are applied. The resulting draft revision must be published before the changes may be used with Drive Items.
		/// Drivelabels_labels_delta v2beta/{name}:delta
		/// </summary>
		/// <param name="name">Required. The resource name of the Label to update.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse> Drivelabels_labels_deltaAsync(string name, GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":delta";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disable a published Label. Disabling a Label will result in a new disabled published revision based on the current published revision. If there is a draft revision, a new disabled draft revision will be created based on the latest draft revision. Older draft revisions will be deleted. Once disabled, a label may be deleted with `DeleteLabel`.
		/// Drivelabels_labels_disable v2beta/{name}:disable
		/// </summary>
		/// <param name="name">Required. Label resource name.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabel> Drivelabels_labels_disableAsync(string name, GoogleAppsDriveLabelsV2betaDisableLabelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":disable";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabel>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enable a disabled Label and restore it to its published state. This will result in a new published revision based on the current disabled published revision. If there is an existing disabled draft revision, a new revision will be created based on that draft and will be enabled.
		/// Drivelabels_labels_enable v2beta/{name}:enable
		/// </summary>
		/// <param name="name">Required. Label resource name.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabel> Drivelabels_labels_enableAsync(string name, GoogleAppsDriveLabelsV2betaEnableLabelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":enable";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabel>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Publish all draft changes to the Label. Once published, the Label may not return to its draft state. See `google.apps.drive.labels.v2.Lifecycle` for more information. Publishing a Label will result in a new published revision. All previous draft revisions will be deleted. Previous published revisions will be kept but are subject to automated deletion as needed. Once published, some changes are no longer permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the Label will be rejected. For example, the following changes to a Label will be rejected after the Label is published: * The label cannot be directly deleted. It must be disabled first, then deleted. * Field.FieldType cannot be changed. * Changes to Field validation options cannot reject something that was previously accepted. * Reducing the max entries.
		/// Drivelabels_labels_publish v2beta/{name}:publish
		/// </summary>
		/// <param name="name">Required. Label resource name.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabel> Drivelabels_labels_publishAsync(string name, GoogleAppsDriveLabelsV2betaPublishLabelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":publish";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabel>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do not require publishing, and take effect immediately.
		/// Drivelabels_labels_updateLabelCopyMode v2beta/{name}:updateLabelCopyMode
		/// </summary>
		/// <param name="name">Required. The resource name of the Label to update.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabel> Drivelabels_labels_updateLabelCopyModeAsync(string name, GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":updateLabelCopyMode";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabel>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the LabelLocks on a Label.
		/// Drivelabels_labels_revisions_locks_list v2beta/{parent}/locks
		/// </summary>
		/// <param name="parent">Required. Label on which Locks are applied. Format: labels/{label}</param>
		/// <param name="pageSize">Maximum number of Locks to return per page. Default: 100. Max: 200.</param>
		/// <param name="pageToken">The token of the page to return.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaListLabelLocksResponse> Drivelabels_labels_revisions_locks_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/locks&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaListLabelLocksResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists a Label's permissions.
		/// Drivelabels_labels_revisions_permissions_list v2beta/{parent}/permissions
		/// </summary>
		/// <param name="parent">Required. The parent Label resource name on which Label Permission are listed. Format: labels/{label}</param>
		/// <param name="pageSize">Maximum number of permissions to return per page. Default: 50. Max: 200.</param>
		/// <param name="pageToken">The token of the page to return.</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse> Drivelabels_labels_revisions_permissions_listAsync(string parent, int pageSize, string pageToken, bool useAdminAccess, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/permissions&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&useAdminAccess="+useAdminAccess;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
		/// Drivelabels_labels_revisions_updatePermissions v2beta/{parent}/permissions
		/// </summary>
		/// <param name="parent">Required. The parent Label resource name.</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabelPermission> Drivelabels_labels_revisions_updatePermissionsAsync(string parent, bool useAdminAccess, GoogleAppsDriveLabelsV2betaLabelPermission requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/permissions&useAdminAccess="+useAdminAccess;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabelPermission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
		/// Drivelabels_labels_revisions_permissions_create v2beta/{parent}/permissions
		/// </summary>
		/// <param name="parent">Required. The parent Label resource name on the Label Permission is created. Format: labels/{label}</param>
		/// <param name="useAdminAccess">Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaLabelPermission> Drivelabels_labels_revisions_permissions_createAsync(string parent, bool useAdminAccess, GoogleAppsDriveLabelsV2betaLabelPermission requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/permissions&useAdminAccess="+useAdminAccess;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaLabelPermission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes Label permissions. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
		/// Drivelabels_labels_revisions_permissions_batchDelete v2beta/{parent}/permissions:batchDelete
		/// </summary>
		/// <param name="parent">Required. The parent Label resource name shared by all permissions being deleted. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Drivelabels_labels_revisions_permissions_batchDeleteAsync(string parent, GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/permissions:batchDelete";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleProtobufEmpty>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates Label permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.
		/// Drivelabels_labels_revisions_permissions_batchUpdate v2beta/{parent}/permissions:batchUpdate
		/// </summary>
		/// <param name="parent">Required. The parent Label resource name shared by all permissions being updated. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse> Drivelabels_labels_revisions_permissions_batchUpdateAsync(string parent, GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/permissions:batchUpdate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The analysis resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1Analysis
	{
		
		/// <summary>
		/// The result of an analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisResult")]
		public GoogleCloudContactcenterinsightsV1AnalysisResult AnalysisResult { get; set; }
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Output only. The time at which the analysis was created, which occurs when the long-running operation completes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The time at which the analysis was requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestTime")]
		public string RequestTime { get; set; }
	}
	
	/// <summary>
	/// The result of an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1AnalysisResult
	{
		
		/// <summary>
		/// Call-specific metadata created during analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callAnalysisMetadata")]
		public GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata CallAnalysisMetadata { get; set; }
		
		/// <summary>
		/// The time at which the analysis ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
	}
	
	/// <summary>
	/// Call-specific metadata created during analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata
	{
		
		/// <summary>
		/// A list of call annotations that apply to this call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public GoogleCloudContactcenterinsightsV1CallAnnotation[] Annotations { get; set; }
		
		/// <summary>
		/// All the entities in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1Entity> Entities { get; set; }
		
		/// <summary>
		/// All the matched intents in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intents")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1Intent> Intents { get; set; }
		
		/// <summary>
		/// Issue Modeling result on a conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModelResult")]
		public GoogleCloudContactcenterinsightsV1IssueModelResult IssueModelResult { get; set; }
		
		/// <summary>
		/// All the matched phrase matchers in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchers")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1PhraseMatchData> PhraseMatchers { get; set; }
		
		/// <summary>
		/// Overall conversation-level sentiment for each channel of the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiments")]
		public GoogleCloudContactcenterinsightsV1ConversationLevelSentiment[] Sentiments { get; set; }
	}
	
	/// <summary>
	/// A piece of metadata that applies to a window of a call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CallAnnotation
	{
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationEndBoundary")]
		public GoogleCloudContactcenterinsightsV1AnnotationBoundary AnnotationEndBoundary { get; set; }
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationStartBoundary")]
		public GoogleCloudContactcenterinsightsV1AnnotationBoundary AnnotationStartBoundary { get; set; }
		
		/// <summary>
		/// The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelTag")]
		public System.Nullable<System.Int32> ChannelTag { get; set; }
		
		/// <summary>
		/// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityMentionData")]
		public GoogleCloudContactcenterinsightsV1EntityMentionData EntityMentionData { get; set; }
		
		/// <summary>
		/// The data for a hold annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holdData")]
		public GoogleCloudContactcenterinsightsV1HoldData HoldData { get; set; }
		
		/// <summary>
		/// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intentMatchData")]
		public GoogleCloudContactcenterinsightsV1IntentMatchData IntentMatchData { get; set; }
		
		/// <summary>
		/// The data for an interruption annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interruptionData")]
		public GoogleCloudContactcenterinsightsV1InterruptionData InterruptionData { get; set; }
		
		/// <summary>
		/// The data for an issue match annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueMatchData")]
		public GoogleCloudContactcenterinsightsV1IssueMatchData IssueMatchData { get; set; }
		
		/// <summary>
		/// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchData")]
		public GoogleCloudContactcenterinsightsV1PhraseMatchData PhraseMatchData { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentData")]
		public GoogleCloudContactcenterinsightsV1SentimentData SentimentData { get; set; }
		
		/// <summary>
		/// The data for a silence annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="silenceData")]
		public GoogleCloudContactcenterinsightsV1SilenceData SilenceData { get; set; }
	}
	
	/// <summary>
	/// A point in a conversation that marks the start or the end of an annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1AnnotationBoundary
	{
		
		/// <summary>
		/// The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptIndex")]
		public System.Nullable<System.Int32> TranscriptIndex { get; set; }
		
		/// <summary>
		/// The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wordIndex")]
		public System.Nullable<System.Int32> WordIndex { get; set; }
	}
	
	/// <summary>
	/// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1EntityMentionData
	{
		
		/// <summary>
		/// The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityUniqueId")]
		public string EntityUniqueId { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public GoogleCloudContactcenterinsightsV1SentimentData Sentiment { get; set; }
		
		/// <summary>
		/// The type of the entity mention.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1EntityMentionDataType> Type { get; set; }
	}
	
	/// <summary>
	/// The data for a sentiment annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1SentimentData
	{
		
		/// <summary>
		/// A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="magnitude")]
		public System.Nullable<System.Single> Magnitude { get; set; }
		
		/// <summary>
		/// The sentiment score between -1.0 (negative) and 1.0 (positive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1EntityMentionDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MENTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROPER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMON = 2,
	}
	
	/// <summary>
	/// The data for a hold annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1HoldData
	{
	}
	
	/// <summary>
	/// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IntentMatchData
	{
		
		/// <summary>
		/// The id of the matched intent. Can be used to retrieve the corresponding intent information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intentUniqueId")]
		public string IntentUniqueId { get; set; }
	}
	
	/// <summary>
	/// The data for an interruption annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1InterruptionData
	{
	}
	
	/// <summary>
	/// The data for an issue match annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueMatchData
	{
		
		/// <summary>
		/// Information about the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueAssignment")]
		public GoogleCloudContactcenterinsightsV1IssueAssignment IssueAssignment { get; set; }
	}
	
	/// <summary>
	/// Information about the issue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueAssignment
	{
		
		/// <summary>
		/// Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name of the assigned issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issue")]
		public string Issue { get; set; }
		
		/// <summary>
		/// Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
	}
	
	/// <summary>
	/// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1PhraseMatchData
	{
		
		/// <summary>
		/// The human-readable name of the phrase matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The unique identifier (the resource name) of the phrase matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatcher")]
		public string PhraseMatcher { get; set; }
	}
	
	/// <summary>
	/// The data for a silence annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1SilenceData
	{
	}
	
	/// <summary>
	/// The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1Entity
	{
		
		/// <summary>
		/// The representative name for the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salience")]
		public System.Nullable<System.Single> Salience { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public GoogleCloudContactcenterinsightsV1SentimentData Sentiment { get; set; }
		
		/// <summary>
		/// The entity type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1EntityType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1EntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORGANIZATION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORK_OF_ART = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSUMER_GOOD = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHONE_NUMBER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDRESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRICE = 12,
	}
	
	/// <summary>
	/// The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1Intent
	{
		
		/// <summary>
		/// The human-readable name of the intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The unique identifier of the intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Issue Modeling result on a conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueModelResult
	{
		
		/// <summary>
		/// Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModel")]
		public string IssueModel { get; set; }
		
		/// <summary>
		/// All the matched issues.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public GoogleCloudContactcenterinsightsV1IssueAssignment[] Issues { get; set; }
	}
	
	/// <summary>
	/// One channel of conversation-level sentiment data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationLevelSentiment
	{
		
		/// <summary>
		/// The channel of the audio that the data applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelTag")]
		public System.Nullable<System.Int32> ChannelTag { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentData")]
		public GoogleCloudContactcenterinsightsV1SentimentData SentimentData { get; set; }
	}
	
	/// <summary>
	/// Selector of all available annotators and phrase matchers to run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1AnnotatorSelector
	{
		
		/// <summary>
		/// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModels")]
		public string[] IssueModels { get; set; }
		
		/// <summary>
		/// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchers")]
		public string[] PhraseMatchers { get; set; }
		
		/// <summary>
		/// Whether to run the entity annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runEntityAnnotator")]
		public System.Nullable<System.Boolean> RunEntityAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the intent annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runIntentAnnotator")]
		public System.Nullable<System.Boolean> RunIntentAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the interruption annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runInterruptionAnnotator")]
		public System.Nullable<System.Boolean> RunInterruptionAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runIssueModelAnnotator")]
		public System.Nullable<System.Boolean> RunIssueModelAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the active phrase matcher annotator(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runPhraseMatcherAnnotator")]
		public System.Nullable<System.Boolean> RunPhraseMatcherAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the sentiment annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runSentimentAnnotator")]
		public System.Nullable<System.Boolean> RunSentimentAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the silence annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runSilenceAnnotator")]
		public System.Nullable<System.Boolean> RunSilenceAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the summarization annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runSummarizationAnnotator")]
		public System.Nullable<System.Boolean> RunSummarizationAnnotator { get; set; }
		
		/// <summary>
		/// Configuration for summarization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarizationConfig")]
		public GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig SummarizationConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for summarization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
	{
		
		/// <summary>
		/// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationProfile")]
		public string ConversationProfile { get; set; }
		
		/// <summary>
		/// Default summarization model to be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarizationModel")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModel> SummarizationModel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUMMARIZATION_MODEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASELINE_MODEL = 1,
	}
	
	/// <summary>
	/// The feedback that the customer has about a certain answer in the conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1AnswerFeedback
	{
		
		/// <summary>
		/// Indicates whether an answer or item was clicked by the human agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicked")]
		public System.Nullable<System.Boolean> Clicked { get; set; }
		
		/// <summary>
		/// The correctness level of an answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctnessLevel")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1AnswerFeedbackCorrectnessLevel> CorrectnessLevel { get; set; }
		
		/// <summary>
		/// Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayed")]
		public System.Nullable<System.Boolean> Displayed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1AnswerFeedbackCorrectnessLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CORRECTNESS_LEVEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CORRECT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIALLY_CORRECT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULLY_CORRECT = 3,
	}
	
	/// <summary>
	/// Agent Assist Article Suggestion data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ArticleSuggestionData
	{
		
		/// <summary>
		/// The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Single> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the Article Suggestion and the document that it originates from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Article title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Article URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// The metadata for a bulk analyze conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsMetadata
	{
		
		/// <summary>
		/// The number of requested analyses that have completed successfully so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completedAnalysesCount")]
		public System.Nullable<System.Int32> CompletedAnalysesCount { get; set; }
		
		/// <summary>
		/// The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The number of requested analyses that have failed so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedAnalysesCount")]
		public System.Nullable<System.Int32> FailedAnalysesCount { get; set; }
		
		/// <summary>
		/// Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to analyze conversations in bulk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest Request { get; set; }
		
		/// <summary>
		/// Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalRequestedAnalysesCount")]
		public System.Nullable<System.Int32> TotalRequestedAnalysesCount { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The request to analyze conversations in bulk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
	{
		
		/// <summary>
		/// Required. Percentage of selected conversation to analyze, between [0, 100].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisPercentage")]
		public System.Nullable<System.Single> AnalysisPercentage { get; set; }
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Required. Filter used to select the subset of conversations to analyze.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Required. The parent resource to create analyses in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The response for a bulk analyze conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsResponse
	{
		
		/// <summary>
		/// Count of failed analyses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedAnalysisCount")]
		public System.Nullable<System.Int32> FailedAnalysisCount { get; set; }
		
		/// <summary>
		/// Count of successful analyses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulAnalysisCount")]
		public System.Nullable<System.Int32> SuccessfulAnalysisCount { get; set; }
	}
	
	/// <summary>
	/// The metadata for a bulk delete conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1BulkDeleteConversationsMetadata
	{
		
		/// <summary>
		/// The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to delete conversations in bulk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to delete conversations in bulk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest
	{
		
		/// <summary>
		/// Filter used to select the subset of conversations to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
		
		/// <summary>
		/// Maximum number of conversations to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDeleteCount")]
		public System.Nullable<System.Int32> MaxDeleteCount { get; set; }
		
		/// <summary>
		/// Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The response for a bulk delete conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1BulkDeleteConversationsResponse
	{
	}
	
	/// <summary>
	/// Response of querying an issue model's statistics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse
	{
		
		/// <summary>
		/// Aggregated statistics about an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentStats")]
		public GoogleCloudContactcenterinsightsV1IssueModelLabelStats CurrentStats { get; set; }
	}
	
	/// <summary>
	/// Aggregated statistics about an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueModelLabelStats
	{
		
		/// <summary>
		/// Number of conversations the issue model has analyzed at this point in time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyzedConversationsCount")]
		public string AnalyzedConversationsCount { get; set; }
		
		/// <summary>
		/// Statistics on each issue. Key is the issue's resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueStats")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> IssueStats { get; set; }
		
		/// <summary>
		/// Number of analyzed conversations for which no issue was applicable at this point in time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unclassifiedConversationsCount")]
		public string UnclassifiedConversationsCount { get; set; }
	}
	
	/// <summary>
	/// Aggregated statistics about an issue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
	{
		
		/// <summary>
		/// Display name of the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issue")]
		public string Issue { get; set; }
		
		/// <summary>
		/// Number of conversations attached to the issue at this point in time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labeledConversationsCount")]
		public string LabeledConversationsCount { get; set; }
	}
	
	/// <summary>
	/// The response for calculating conversation statistics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CalculateStatsResponse
	{
		
		/// <summary>
		/// The average duration of all conversations. The average is calculated using only conversations that have a time duration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="averageDuration")]
		public string AverageDuration { get; set; }
		
		/// <summary>
		/// The average number of turns per conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="averageTurnCount")]
		public System.Nullable<System.Int32> AverageTurnCount { get; set; }
		
		/// <summary>
		/// The total number of conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationCount")]
		public System.Nullable<System.Int32> ConversationCount { get; set; }
		
		/// <summary>
		/// A time series representing conversations over time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationCountTimeSeries")]
		public GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries ConversationCountTimeSeries { get; set; }
		
		/// <summary>
		/// A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customHighlighterMatches")]
		public System.Collections.Generic.Dictionary<string, int> CustomHighlighterMatches { get; set; }
		
		/// <summary>
		/// A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueMatches")]
		public System.Collections.Generic.Dictionary<string, int> IssueMatches { get; set; }
		
		/// <summary>
		/// A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueMatchesStats")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats> IssueMatchesStats { get; set; }
		
		/// <summary>
		/// A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartHighlighterMatches")]
		public System.Collections.Generic.Dictionary<string, int> SmartHighlighterMatches { get; set; }
	}
	
	/// <summary>
	/// A time series representing conversations over time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
	{
		
		/// <summary>
		/// The duration of each interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intervalDuration")]
		public string IntervalDuration { get; set; }
		
		/// <summary>
		/// An ordered list of intervals from earliest to latest, where each interval represents the number of conversations that transpired during the time window.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="points")]
		public GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval[] Points { get; set; }
	}
	
	/// <summary>
	/// A single interval in a time series.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeriesInterval
	{
		
		/// <summary>
		/// The number of conversations created in this interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationCount")]
		public System.Nullable<System.Int32> ConversationCount { get; set; }
		
		/// <summary>
		/// The start time of this interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// The conversation resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1Conversation
	{
		
		/// <summary>
		/// An opaque, user-specified string representing the human agent who handled the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentId")]
		public string AgentId { get; set; }
		
		/// <summary>
		/// Call-specific metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callMetadata")]
		public GoogleCloudContactcenterinsightsV1ConversationCallMetadata CallMetadata { get; set; }
		
		/// <summary>
		/// Output only. The time at which the conversation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The conversation source, which is a combination of transcript and audio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSource")]
		public GoogleCloudContactcenterinsightsV1ConversationDataSource DataSource { get; set; }
		
		/// <summary>
		/// Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowIntents")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1DialogflowIntent> DialogflowIntents { get; set; }
		
		/// <summary>
		/// Output only. The duration of the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// A user-specified language code for the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The analysis resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestAnalysis")]
		public GoogleCloudContactcenterinsightsV1Analysis LatestAnalysis { get; set; }
		
		/// <summary>
		/// Conversation summarization suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestSummary")]
		public GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData LatestSummary { get; set; }
		
		/// <summary>
		/// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1ConversationMedium> Medium { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Obfuscated user ID which the customer sent to us.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="obfuscatedUserId")]
		public string ObfuscatedUserId { get; set; }
		
		/// <summary>
		/// Conversation metadata related to quality management.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualityMetadata")]
		public GoogleCloudContactcenterinsightsV1ConversationQualityMetadata QualityMetadata { get; set; }
		
		/// <summary>
		/// Output only. The annotations that were generated during the customer and agent interaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeAnnotations")]
		public GoogleCloudContactcenterinsightsV1RuntimeAnnotation[] RuntimeAnnotations { get; set; }
		
		/// <summary>
		/// The time at which the conversation started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// A message representing the transcript of a conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcript")]
		public GoogleCloudContactcenterinsightsV1ConversationTranscript Transcript { get; set; }
		
		/// <summary>
		/// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ttl")]
		public string Ttl { get; set; }
		
		/// <summary>
		/// Output only. The number of turns in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="turnCount")]
		public System.Nullable<System.Int32> TurnCount { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the conversation was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Call-specific metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationCallMetadata
	{
		
		/// <summary>
		/// The audio channel that contains the agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentChannel")]
		public System.Nullable<System.Int32> AgentChannel { get; set; }
		
		/// <summary>
		/// The audio channel that contains the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerChannel")]
		public System.Nullable<System.Int32> CustomerChannel { get; set; }
	}
	
	/// <summary>
	/// The conversation source, which is a combination of transcript and audio.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationDataSource
	{
		
		/// <summary>
		/// A Dialogflow source of conversation data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowSource")]
		public GoogleCloudContactcenterinsightsV1DialogflowSource DialogflowSource { get; set; }
		
		/// <summary>
		/// A Cloud Storage source of conversation data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudContactcenterinsightsV1GcsSource GcsSource { get; set; }
	}
	
	/// <summary>
	/// A Dialogflow source of conversation data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DialogflowSource
	{
		
		/// <summary>
		/// Cloud Storage URI that points to a file that contains the conversation audio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audioUri")]
		public string AudioUri { get; set; }
		
		/// <summary>
		/// Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowConversation")]
		public string DialogflowConversation { get; set; }
	}
	
	/// <summary>
	/// A Cloud Storage source of conversation data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1GcsSource
	{
		
		/// <summary>
		/// Cloud Storage URI that points to a file that contains the conversation audio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audioUri")]
		public string AudioUri { get; set; }
		
		/// <summary>
		/// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptUri")]
		public string TranscriptUri { get; set; }
	}
	
	/// <summary>
	/// The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DialogflowIntent
	{
		
		/// <summary>
		/// The human-readable name of the intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Conversation summarization suggestion data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData
	{
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answerRecord")]
		public string AnswerRecord { get; set; }
		
		/// <summary>
		/// The confidence score of the summarization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationModel")]
		public string ConversationModel { get; set; }
		
		/// <summary>
		/// A map that contains metadata about the summarization and the document from which it originates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The summarization content that is concatenated into one string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSections")]
		public System.Collections.Generic.Dictionary<string, string> TextSections { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1ConversationMedium
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHONE_CALL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHAT = 2,
	}
	
	/// <summary>
	/// Conversation metadata related to quality management.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationQualityMetadata
	{
		
		/// <summary>
		/// Information about agents involved in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentInfo")]
		public GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo[] AgentInfo { get; set; }
		
		/// <summary>
		/// An arbitrary integer value indicating the customer's satisfaction rating.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerSatisfactionRating")]
		public System.Nullable<System.Int32> CustomerSatisfactionRating { get; set; }
		
		/// <summary>
		/// An arbitrary string value specifying the menu path the customer took.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="menuPath")]
		public string MenuPath { get; set; }
		
		/// <summary>
		/// The amount of time the customer waited to connect with an agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waitDuration")]
		public string WaitDuration { get; set; }
	}
	
	/// <summary>
	/// Information about an agent involved in the conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo
	{
		
		/// <summary>
		/// A user-specified string representing the agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentId")]
		public string AgentId { get; set; }
		
		/// <summary>
		/// The agent's name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A user-provided string indicating the outcome of the agent's segment of the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dispositionCode")]
		public string DispositionCode { get; set; }
		
		/// <summary>
		/// A user-specified string representing the agent's team.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="team")]
		public string Team { get; set; }
	}
	
	/// <summary>
	/// An annotation that was generated during the customer and agent interaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1RuntimeAnnotation
	{
		
		/// <summary>
		/// The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationId")]
		public string AnnotationId { get; set; }
		
		/// <summary>
		/// The feedback that the customer has about a certain answer in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answerFeedback")]
		public GoogleCloudContactcenterinsightsV1AnswerFeedback AnswerFeedback { get; set; }
		
		/// <summary>
		/// Agent Assist Article Suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="articleSuggestion")]
		public GoogleCloudContactcenterinsightsV1ArticleSuggestionData ArticleSuggestion { get; set; }
		
		/// <summary>
		/// Conversation summarization suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationSummarizationSuggestion")]
		public GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData ConversationSummarizationSuggestion { get; set; }
		
		/// <summary>
		/// The time at which this annotation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Dialogflow interaction data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowInteraction")]
		public GoogleCloudContactcenterinsightsV1DialogflowInteractionData DialogflowInteraction { get; set; }
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endBoundary")]
		public GoogleCloudContactcenterinsightsV1AnnotationBoundary EndBoundary { get; set; }
		
		/// <summary>
		/// Agent Assist frequently-asked-question answer data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="faqAnswer")]
		public GoogleCloudContactcenterinsightsV1FaqAnswerData FaqAnswer { get; set; }
		
		/// <summary>
		/// Agent Assist Smart Compose suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartComposeSuggestion")]
		public GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData SmartComposeSuggestion { get; set; }
		
		/// <summary>
		/// Agent Assist Smart Reply data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartReply")]
		public GoogleCloudContactcenterinsightsV1SmartReplyData SmartReply { get; set; }
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startBoundary")]
		public GoogleCloudContactcenterinsightsV1AnnotationBoundary StartBoundary { get; set; }
	}
	
	/// <summary>
	/// Dialogflow interaction data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DialogflowInteractionData
	{
		
		/// <summary>
		/// The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowIntentId")]
		public string DialogflowIntentId { get; set; }
	}
	
	/// <summary>
	/// Agent Assist frequently-asked-question answer data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1FaqAnswerData
	{
		
		/// <summary>
		/// The piece of text from the `source` knowledge base document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answer")]
		public string Answer { get; set; }
		
		/// <summary>
		/// The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Single> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the FAQ answer and the document that it originates from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The corresponding FAQ question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="question")]
		public string Question { get; set; }
		
		/// <summary>
		/// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
	}
	
	/// <summary>
	/// Agent Assist Smart Compose suggestion data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData
	{
		
		/// <summary>
		/// The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Double> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The content of the suggestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestion")]
		public string Suggestion { get; set; }
	}
	
	/// <summary>
	/// Agent Assist Smart Reply data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1SmartReplyData
	{
		
		/// <summary>
		/// The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Double> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the Smart Reply and the document from which it originates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The content of the reply.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply")]
		public string Reply { get; set; }
	}
	
	/// <summary>
	/// A message representing the transcript of a conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationTranscript
	{
		
		/// <summary>
		/// A list of sequential transcript segments that comprise the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptSegments")]
		public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment[] TranscriptSegments { get; set; }
	}
	
	/// <summary>
	/// A segment of a full transcript.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment
	{
		
		/// <summary>
		/// For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelTag")]
		public System.Nullable<System.Int32> ChannelTag { get; set; }
		
		/// <summary>
		/// A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Metadata from Dialogflow relating to the current transcript segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowSegmentMetadata")]
		public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata DialogflowSegmentMetadata { get; set; }
		
		/// <summary>
		/// The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The time that the message occurred, if provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageTime")]
		public string MessageTime { get; set; }
		
		/// <summary>
		/// The call participant speaking for a given utterance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segmentParticipant")]
		public GoogleCloudContactcenterinsightsV1ConversationParticipant SegmentParticipant { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public GoogleCloudContactcenterinsightsV1SentimentData Sentiment { get; set; }
		
		/// <summary>
		/// The text of this segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// A list of the word-specific information for each word in the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="words")]
		public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo[] Words { get; set; }
	}
	
	/// <summary>
	/// Metadata from Dialogflow relating to the current transcript segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
	{
		
		/// <summary>
		/// Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartReplyAllowlistCovered")]
		public System.Nullable<System.Boolean> SmartReplyAllowlistCovered { get; set; }
	}
	
	/// <summary>
	/// The call participant speaking for a given utterance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationParticipant
	{
		
		/// <summary>
		/// Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowParticipant")]
		public string DialogflowParticipant { get; set; }
		
		/// <summary>
		/// The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowParticipantName")]
		public string DialogflowParticipantName { get; set; }
		
		/// <summary>
		/// Obfuscated user ID from Dialogflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="obfuscatedExternalUserId")]
		public string ObfuscatedExternalUserId { get; set; }
		
		/// <summary>
		/// The role of the participant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1ConversationParticipantRole> Role { get; set; }
		
		/// <summary>
		/// A user-specified ID representing the participant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1ConversationParticipantRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUMAN_AGENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATED_AGENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		END_USER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY_AGENT = 4,
	}
	
	/// <summary>
	/// Word-level info for words in a transcript.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo
	{
		
		/// <summary>
		/// A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Time offset of the end of this word relative to the beginning of the total conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOffset")]
		public string EndOffset { get; set; }
		
		/// <summary>
		/// Time offset of the start of this word relative to the beginning of the total conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOffset")]
		public string StartOffset { get; set; }
		
		/// <summary>
		/// The word itself. Includes punctuation marks that surround the word.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="word")]
		public string Word { get; set; }
	}
	
	/// <summary>
	/// Metadata for a create analysis operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CreateAnalysisOperationMetadata
	{
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Output only. The Conversation that this Analysis Operation belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation")]
		public string Conversation { get; set; }
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
	}
	
	/// <summary>
	/// Metadata for creating an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CreateIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to create an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1CreateIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to create an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1CreateIssueModelRequest
	{
		
		/// <summary>
		/// The issue model resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModel")]
		public GoogleCloudContactcenterinsightsV1IssueModel IssueModel { get; set; }
		
		/// <summary>
		/// Required. The parent resource of the issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The issue model resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueModel
	{
		
		/// <summary>
		/// Output only. The time at which this issue model was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The representative name for the issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Configs for the input data used to create the issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputDataConfig")]
		public GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// Output only. Number of issues in this issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueCount")]
		public string IssueCount { get; set; }
		
		/// <summary>
		/// Language of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Type of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1IssueModelModelType> ModelType { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. State of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1IssueModelState> State { get; set; }
		
		/// <summary>
		/// Aggregated statistics about an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingStats")]
		public GoogleCloudContactcenterinsightsV1IssueModelLabelStats TrainingStats { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the issue model was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Configs for the input data used to create the issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
	{
		
		/// <summary>
		/// A filter to reduce the conversations used for training the model to a specific subset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public GoogleCloudContactcenterinsightsV1ConversationMedium Medium { get; set; }
		
		/// <summary>
		/// Output only. Number of conversations used in training. Output only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingConversationsCount")]
		public string TrainingConversationsCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1IssueModelModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_V1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_V2 = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1IssueModelState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDEPLOYED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDEPLOYING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
	}
	
	/// <summary>
	/// Metadata for deleting an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DeleteIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to delete an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to delete an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DeleteIssueModelRequest
	{
		
		/// <summary>
		/// Required. The name of the issue model to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Metadata for deploying an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DeployIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to deploy an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1DeployIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to deploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
	{
		
		/// <summary>
		/// Required. The issue model to deploy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response to deploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1DeployIssueModelResponse
	{
	}
	
	/// <summary>
	/// Exact match configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ExactMatchConfig
	{
		
		/// <summary>
		/// Whether to consider case sensitivity when performing an exact match.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caseSensitive")]
		public System.Nullable<System.Boolean> CaseSensitive { get; set; }
	}
	
	/// <summary>
	/// Metadata for an export insights operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ExportInsightsDataMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Partial errors during export operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to export insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to export insights.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
	{
		
		/// <summary>
		/// A BigQuery Table Reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryDestination")]
		public GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination BigQueryDestination { get; set; }
		
		/// <summary>
		/// A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsKey")]
		public string KmsKey { get; set; }
		
		/// <summary>
		/// Required. The parent resource to export data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Options for what to do if the destination table already exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeDisposition")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestWriteDisposition> WriteDisposition { get; set; }
	}
	
	/// <summary>
	/// A BigQuery Table Reference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestBigQueryDestination
	{
		
		/// <summary>
		/// Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public string Table { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestWriteDisposition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE_DISPOSITION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE_TRUNCATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRITE_APPEND = 2,
	}
	
	/// <summary>
	/// Response for an export insights operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ExportInsightsDataResponse
	{
	}
	
	/// <summary>
	/// The metadata for an IngestConversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Statistics for IngestConversations operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ingestConversationsStats")]
		public GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats IngestConversationsStats { get; set; }
		
		/// <summary>
		/// Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to ingest conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1IngestConversationsRequest Request { get; set; }
	}
	
	/// <summary>
	/// Statistics for IngestConversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats
	{
		
		/// <summary>
		/// Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duplicatesSkippedCount")]
		public System.Nullable<System.Int32> DuplicatesSkippedCount { get; set; }
		
		/// <summary>
		/// Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedIngestCount")]
		public System.Nullable<System.Int32> FailedIngestCount { get; set; }
		
		/// <summary>
		/// Output only. The number of objects processed during the ingest operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processedObjectCount")]
		public System.Nullable<System.Int32> ProcessedObjectCount { get; set; }
		
		/// <summary>
		/// Output only. The number of new conversations added during this ingest operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulIngestCount")]
		public System.Nullable<System.Int32> SuccessfulIngestCount { get; set; }
	}
	
	/// <summary>
	/// The request to ingest conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsRequest
	{
		
		/// <summary>
		/// Configuration that applies to all conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationConfig")]
		public GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig ConversationConfig { get; set; }
		
		/// <summary>
		/// Configuration for Cloud Storage bucket sources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Required. The parent resource for new conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionConfig")]
		public GoogleCloudContactcenterinsightsV1RedactionConfig RedactionConfig { get; set; }
		
		/// <summary>
		/// Speech-to-Text configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechConfig")]
		public GoogleCloudContactcenterinsightsV1SpeechConfig SpeechConfig { get; set; }
		
		/// <summary>
		/// Configuration for processing transcript objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptObjectConfig")]
		public GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig TranscriptObjectConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration that applies to all conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig
	{
		
		/// <summary>
		/// Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for audio conversations to be properly displayed and analyzed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentChannel")]
		public System.Nullable<System.Int32> AgentChannel { get; set; }
		
		/// <summary>
		/// An opaque, user-specified string representing the human agent who handled the conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentId")]
		public string AgentId { get; set; }
		
		/// <summary>
		/// Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the customer. Note that this must be set for audio conversations to be properly displayed and analyzed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerChannel")]
		public System.Nullable<System.Int32> CustomerChannel { get; set; }
	}
	
	/// <summary>
	/// Configuration for Cloud Storage bucket sources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource
	{
		
		/// <summary>
		/// Optional. Specifies the type of the objects in `bucket_uri`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketObjectType")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSourceBucketObjectType> BucketObjectType { get; set; }
		
		/// <summary>
		/// Required. The Cloud Storage bucket containing source objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketUri")]
		public string BucketUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSourceBucketObjectType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BUCKET_OBJECT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSCRIPT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUDIO = 2,
	}
	
	/// <summary>
	/// DLP resources used for redaction while ingesting conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1RedactionConfig
	{
		
		/// <summary>
		/// The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplate")]
		public string DeidentifyTemplate { get; set; }
		
		/// <summary>
		/// The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplate")]
		public string InspectTemplate { get; set; }
	}
	
	/// <summary>
	/// Speech-to-Text configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1SpeechConfig
	{
		
		/// <summary>
		/// The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechRecognizer")]
		public string SpeechRecognizer { get; set; }
	}
	
	/// <summary>
	/// Configuration for processing transcript objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig
	{
		
		/// <summary>
		/// Required. The medium transcript objects represent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public GoogleCloudContactcenterinsightsV1ConversationMedium Medium { get; set; }
	}
	
	/// <summary>
	/// The response to an IngestConversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1IngestConversationsResponse
	{
	}
	
	/// <summary>
	/// The issue resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1Issue
	{
		
		/// <summary>
		/// Output only. The time at which this issue was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The representative name for the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the issue. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Resource names of the sample representative utterances that match to this issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleUtterances")]
		public string[] SampleUtterances { get; set; }
		
		/// <summary>
		/// Output only. The most recent time that this issue was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The response to list analyses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ListAnalysesResponse
	{
		
		/// <summary>
		/// The analyses that match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyses")]
		public GoogleCloudContactcenterinsightsV1Analysis[] Analyses { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response of listing conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ListConversationsResponse
	{
		
		/// <summary>
		/// The conversations that match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversations")]
		public GoogleCloudContactcenterinsightsV1Conversation[] Conversations { get; set; }
		
		/// <summary>
		/// A token which can be sent as `page_token` to retrieve the next page. If this field is set, it means there is another page available. If it is not set, it means no other pages are available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response of listing issue models.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ListIssueModelsResponse
	{
		
		/// <summary>
		/// The issue models that match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModels")]
		public GoogleCloudContactcenterinsightsV1IssueModel[] IssueModels { get; set; }
	}
	
	/// <summary>
	/// The response of listing issues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ListIssuesResponse
	{
		
		/// <summary>
		/// The issues that match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public GoogleCloudContactcenterinsightsV1Issue[] Issues { get; set; }
	}
	
	/// <summary>
	/// The response of listing phrase matchers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The phrase matchers that match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchers")]
		public GoogleCloudContactcenterinsightsV1PhraseMatcher[] PhraseMatchers { get; set; }
	}
	
	/// <summary>
	/// The phrase matcher resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1PhraseMatcher
	{
		
		/// <summary>
		/// Output only. The most recent time at which the activation status was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activationUpdateTime")]
		public string ActivationUpdateTime { get; set; }
		
		/// <summary>
		/// Applies the phrase matcher only when it is active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// The human-readable name of the phrase matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of phase match rule groups that are included in this matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchRuleGroups")]
		public GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup[] PhraseMatchRuleGroups { get; set; }
		
		/// <summary>
		/// Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreateTime")]
		public string RevisionCreateTime { get; set; }
		
		/// <summary>
		/// Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roleMatch")]
		public GoogleCloudContactcenterinsightsV1ConversationParticipantRole RoleMatch { get; set; }
		
		/// <summary>
		/// Required. The type of this phrase matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1PhraseMatcherType> Type { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the phrase matcher was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionTag")]
		public string VersionTag { get; set; }
	}
	
	/// <summary>
	/// A message representing a rule in the phrase matcher.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup
	{
		
		/// <summary>
		/// A list of phrase match rules that are included in this group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchRules")]
		public GoogleCloudContactcenterinsightsV1PhraseMatchRule[] PhraseMatchRules { get; set; }
		
		/// <summary>
		/// Required. The type of this phrase match rule group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupType> Type { get; set; }
	}
	
	/// <summary>
	/// The data for a phrase match rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1PhraseMatchRule
	{
		
		/// <summary>
		/// Configuration information of a phrase match rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig Config { get; set; }
		
		/// <summary>
		/// Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="negated")]
		public System.Nullable<System.Boolean> Negated { get; set; }
		
		/// <summary>
		/// Required. The phrase to be matched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
	}
	
	/// <summary>
	/// Configuration information of a phrase match rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
	{
		
		/// <summary>
		/// Exact match configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactMatchConfig")]
		public GoogleCloudContactcenterinsightsV1ExactMatchConfig ExactMatchConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_OF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY_OF = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudContactcenterinsightsV1PhraseMatcherType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHRASE_MATCHER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_OF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY_OF = 2,
	}
	
	/// <summary>
	/// The response of listing views.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1ListViewsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The views that match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="views")]
		public GoogleCloudContactcenterinsightsV1View[] Views { get; set; }
	}
	
	/// <summary>
	/// The View resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1View
	{
		
		/// <summary>
		/// Output only. The time at which this view was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The human-readable display name of the view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the view was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// String with specific view properties, must be non-empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The settings resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1Settings
	{
		
		/// <summary>
		/// Default configuration when creating Analyses in Insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisConfig")]
		public GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig AnalysisConfig { get; set; }
		
		/// <summary>
		/// The default TTL for newly-created conversations. If a conversation has a specified expiration, that value will be used instead. Changing this value will not change the expiration of existing conversations. Conversations with no expire time persist until they are deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationTtl")]
		public string ConversationTtl { get; set; }
		
		/// <summary>
		/// Output only. The time at which the settings was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A language code to be applied to each transcript segment unless the segment already specifies a language code. Language code defaults to "en-US" if it is neither specified on the segment nor here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the settings resource. Format: projects/{project}/locations/{location}/settings
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A map that maps a notification trigger to a Pub/Sub topic. Each time a specified trigger occurs, Insights will notify the corresponding Pub/Sub topic. Keys are notification triggers. Supported keys are: * "all-triggers": Notify each time any of the supported triggers occurs. * "create-analysis": Notify each time an analysis is created. * "create-conversation": Notify each time a conversation is created. * "export-insights-data": Notify each time an export is complete. * "update-conversation": Notify each time a conversation is updated via UpdateConversation. Values are Pub/Sub topics. The format of each Pub/Sub topic is: projects/{project}/topics/{topic}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pubsubNotificationSettings")]
		public System.Collections.Generic.Dictionary<string, string> PubsubNotificationSettings { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionConfig")]
		public GoogleCloudContactcenterinsightsV1RedactionConfig RedactionConfig { get; set; }
		
		/// <summary>
		/// Speech-to-Text configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechConfig")]
		public GoogleCloudContactcenterinsightsV1SpeechConfig SpeechConfig { get; set; }
		
		/// <summary>
		/// Output only. The time at which the settings were last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Default configuration when creating Analyses in Insights.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig
	{
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Percentage of conversations created using Dialogflow runtime integration to analyze automatically, between [0, 100].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeIntegrationAnalysisPercentage")]
		public System.Nullable<System.Double> RuntimeIntegrationAnalysisPercentage { get; set; }
		
		/// <summary>
		/// Percentage of conversations created using the UploadConversation endpoint to analyze automatically, between [0, 100].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uploadConversationAnalysisPercentage")]
		public System.Nullable<System.Double> UploadConversationAnalysisPercentage { get; set; }
	}
	
	/// <summary>
	/// Metadata for undeploying an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1UndeployIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to undeploy an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to undeploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
	{
		
		/// <summary>
		/// Required. The issue model to undeploy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response to undeploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1UndeployIssueModelResponse
	{
	}
	
	/// <summary>
	/// The metadata for an UploadConversation operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1UploadConversationMetadata
	{
		
		/// <summary>
		/// Output only. The operation name for a successfully created analysis operation, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisOperation")]
		public string AnalysisOperation { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedRedactionConfig")]
		public GoogleCloudContactcenterinsightsV1RedactionConfig AppliedRedactionConfig { get; set; }
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Request to upload a conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1UploadConversationRequest Request { get; set; }
	}
	
	/// <summary>
	/// Request to upload a conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1UploadConversationRequest
	{
		
		/// <summary>
		/// The conversation resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation")]
		public GoogleCloudContactcenterinsightsV1Conversation Conversation { get; set; }
		
		/// <summary>
		/// Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationId")]
		public string ConversationId { get; set; }
		
		/// <summary>
		/// Required. The parent resource of the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionConfig")]
		public GoogleCloudContactcenterinsightsV1RedactionConfig RedactionConfig { get; set; }
		
		/// <summary>
		/// Speech-to-Text configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechConfig")]
		public GoogleCloudContactcenterinsightsV1SpeechConfig SpeechConfig { get; set; }
	}
	
	/// <summary>
	/// The analysis resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1Analysis
	{
		
		/// <summary>
		/// The result of an analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisResult")]
		public GoogleCloudContactcenterinsightsV1alpha1AnalysisResult AnalysisResult { get; set; }
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Output only. The time at which the analysis was created, which occurs when the long-running operation completes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The time at which the analysis was requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestTime")]
		public string RequestTime { get; set; }
	}
	
	/// <summary>
	/// The result of an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1AnalysisResult
	{
		
		/// <summary>
		/// Call-specific metadata created during analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callAnalysisMetadata")]
		public GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata CallAnalysisMetadata { get; set; }
		
		/// <summary>
		/// The time at which the analysis ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
	}
	
	/// <summary>
	/// Call-specific metadata created during analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1AnalysisResultCallAnalysisMetadata
	{
		
		/// <summary>
		/// A list of call annotations that apply to this call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public GoogleCloudContactcenterinsightsV1alpha1CallAnnotation[] Annotations { get; set; }
		
		/// <summary>
		/// All the entities in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1alpha1Entity> Entities { get; set; }
		
		/// <summary>
		/// All the matched intents in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intents")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1alpha1Intent> Intents { get; set; }
		
		/// <summary>
		/// Issue Modeling result on a conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModelResult")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueModelResult IssueModelResult { get; set; }
		
		/// <summary>
		/// All the matched phrase matchers in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchers")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData> PhraseMatchers { get; set; }
		
		/// <summary>
		/// Overall conversation-level sentiment for each channel of the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiments")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment[] Sentiments { get; set; }
	}
	
	/// <summary>
	/// A piece of metadata that applies to a window of a call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
	{
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationEndBoundary")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary AnnotationEndBoundary { get; set; }
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationStartBoundary")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary AnnotationStartBoundary { get; set; }
		
		/// <summary>
		/// The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelTag")]
		public System.Nullable<System.Int32> ChannelTag { get; set; }
		
		/// <summary>
		/// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityMentionData")]
		public GoogleCloudContactcenterinsightsV1alpha1EntityMentionData EntityMentionData { get; set; }
		
		/// <summary>
		/// The data for a hold annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holdData")]
		public GoogleCloudContactcenterinsightsV1alpha1HoldData HoldData { get; set; }
		
		/// <summary>
		/// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intentMatchData")]
		public GoogleCloudContactcenterinsightsV1alpha1IntentMatchData IntentMatchData { get; set; }
		
		/// <summary>
		/// The data for an interruption annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interruptionData")]
		public GoogleCloudContactcenterinsightsV1alpha1InterruptionData InterruptionData { get; set; }
		
		/// <summary>
		/// The data for an issue match annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueMatchData")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueMatchData IssueMatchData { get; set; }
		
		/// <summary>
		/// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchData")]
		public GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData PhraseMatchData { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentData")]
		public GoogleCloudContactcenterinsightsV1alpha1SentimentData SentimentData { get; set; }
		
		/// <summary>
		/// The data for a silence annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="silenceData")]
		public GoogleCloudContactcenterinsightsV1alpha1SilenceData SilenceData { get; set; }
	}
	
	/// <summary>
	/// A point in a conversation that marks the start or the end of an annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary
	{
		
		/// <summary>
		/// The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptIndex")]
		public System.Nullable<System.Int32> TranscriptIndex { get; set; }
		
		/// <summary>
		/// The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wordIndex")]
		public System.Nullable<System.Int32> WordIndex { get; set; }
	}
	
	/// <summary>
	/// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1EntityMentionData
	{
		
		/// <summary>
		/// The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityUniqueId")]
		public string EntityUniqueId { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public GoogleCloudContactcenterinsightsV1alpha1SentimentData Sentiment { get; set; }
		
		/// <summary>
		/// The type of the entity mention.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudContactcenterinsightsV1EntityMentionDataType Type { get; set; }
	}
	
	/// <summary>
	/// The data for a sentiment annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1SentimentData
	{
		
		/// <summary>
		/// A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="magnitude")]
		public System.Nullable<System.Single> Magnitude { get; set; }
		
		/// <summary>
		/// The sentiment score between -1.0 (negative) and 1.0 (positive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	/// <summary>
	/// The data for a hold annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1HoldData
	{
	}
	
	/// <summary>
	/// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IntentMatchData
	{
		
		/// <summary>
		/// The id of the matched intent. Can be used to retrieve the corresponding intent information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intentUniqueId")]
		public string IntentUniqueId { get; set; }
	}
	
	/// <summary>
	/// The data for an interruption annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1InterruptionData
	{
	}
	
	/// <summary>
	/// The data for an issue match annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueMatchData
	{
		
		/// <summary>
		/// Information about the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueAssignment")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueAssignment IssueAssignment { get; set; }
	}
	
	/// <summary>
	/// Information about the issue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueAssignment
	{
		
		/// <summary>
		/// Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name of the assigned issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issue")]
		public string Issue { get; set; }
		
		/// <summary>
		/// Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
	}
	
	/// <summary>
	/// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData
	{
		
		/// <summary>
		/// The human-readable name of the phrase matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The unique identifier (the resource name) of the phrase matcher.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatcher")]
		public string PhraseMatcher { get; set; }
	}
	
	/// <summary>
	/// The data for a silence annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1SilenceData
	{
	}
	
	/// <summary>
	/// The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1Entity
	{
		
		/// <summary>
		/// The representative name for the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salience")]
		public System.Nullable<System.Single> Salience { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public GoogleCloudContactcenterinsightsV1alpha1SentimentData Sentiment { get; set; }
		
		/// <summary>
		/// The entity type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudContactcenterinsightsV1EntityType Type { get; set; }
	}
	
	/// <summary>
	/// The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1Intent
	{
		
		/// <summary>
		/// The human-readable name of the intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The unique identifier of the intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Issue Modeling result on a conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueModelResult
	{
		
		/// <summary>
		/// Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModel")]
		public string IssueModel { get; set; }
		
		/// <summary>
		/// All the matched issues.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issues")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueAssignment[] Issues { get; set; }
	}
	
	/// <summary>
	/// One channel of conversation-level sentiment data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationLevelSentiment
	{
		
		/// <summary>
		/// The channel of the audio that the data applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelTag")]
		public System.Nullable<System.Int32> ChannelTag { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentData")]
		public GoogleCloudContactcenterinsightsV1alpha1SentimentData SentimentData { get; set; }
	}
	
	/// <summary>
	/// Selector of all available annotators and phrase matchers to run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector
	{
		
		/// <summary>
		/// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModels")]
		public string[] IssueModels { get; set; }
		
		/// <summary>
		/// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phraseMatchers")]
		public string[] PhraseMatchers { get; set; }
		
		/// <summary>
		/// Whether to run the entity annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runEntityAnnotator")]
		public System.Nullable<System.Boolean> RunEntityAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the intent annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runIntentAnnotator")]
		public System.Nullable<System.Boolean> RunIntentAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the interruption annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runInterruptionAnnotator")]
		public System.Nullable<System.Boolean> RunInterruptionAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runIssueModelAnnotator")]
		public System.Nullable<System.Boolean> RunIssueModelAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the active phrase matcher annotator(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runPhraseMatcherAnnotator")]
		public System.Nullable<System.Boolean> RunPhraseMatcherAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the sentiment annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runSentimentAnnotator")]
		public System.Nullable<System.Boolean> RunSentimentAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the silence annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runSilenceAnnotator")]
		public System.Nullable<System.Boolean> RunSilenceAnnotator { get; set; }
		
		/// <summary>
		/// Whether to run the summarization annotator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runSummarizationAnnotator")]
		public System.Nullable<System.Boolean> RunSummarizationAnnotator { get; set; }
		
		/// <summary>
		/// Configuration for summarization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarizationConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig SummarizationConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for summarization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelectorSummarizationConfig
	{
		
		/// <summary>
		/// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationProfile")]
		public string ConversationProfile { get; set; }
		
		/// <summary>
		/// Default summarization model to be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarizationModel")]
		public GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModel SummarizationModel { get; set; }
	}
	
	/// <summary>
	/// The feedback that the customer has about a certain answer in the conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback
	{
		
		/// <summary>
		/// Indicates whether an answer or item was clicked by the human agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicked")]
		public System.Nullable<System.Boolean> Clicked { get; set; }
		
		/// <summary>
		/// The correctness level of an answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctnessLevel")]
		public GoogleCloudContactcenterinsightsV1AnswerFeedbackCorrectnessLevel CorrectnessLevel { get; set; }
		
		/// <summary>
		/// Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayed")]
		public System.Nullable<System.Boolean> Displayed { get; set; }
	}
	
	/// <summary>
	/// Agent Assist Article Suggestion data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData
	{
		
		/// <summary>
		/// The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Single> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the Article Suggestion and the document that it originates from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Article title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Article URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// The metadata for a bulk analyze conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsMetadata
	{
		
		/// <summary>
		/// The number of requested analyses that have completed successfully so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completedAnalysesCount")]
		public System.Nullable<System.Int32> CompletedAnalysesCount { get; set; }
		
		/// <summary>
		/// The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The number of requested analyses that have failed so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedAnalysesCount")]
		public System.Nullable<System.Int32> FailedAnalysesCount { get; set; }
		
		/// <summary>
		/// Output only. Partial errors during bulk analyze operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to analyze conversations in bulk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest Request { get; set; }
		
		/// <summary>
		/// Total number of analyses requested. Computed by the number of conversations returned by `filter` multiplied by `analysis_percentage` in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalRequestedAnalysesCount")]
		public System.Nullable<System.Int32> TotalRequestedAnalysesCount { get; set; }
	}
	
	/// <summary>
	/// The request to analyze conversations in bulk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsRequest
	{
		
		/// <summary>
		/// Required. Percentage of selected conversation to analyze, between [0, 100].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisPercentage")]
		public System.Nullable<System.Single> AnalysisPercentage { get; set; }
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Required. Filter used to select the subset of conversations to analyze.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Required. The parent resource to create analyses in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The response for a bulk analyze conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1BulkAnalyzeConversationsResponse
	{
		
		/// <summary>
		/// Count of failed analyses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedAnalysisCount")]
		public System.Nullable<System.Int32> FailedAnalysisCount { get; set; }
		
		/// <summary>
		/// Count of successful analyses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulAnalysisCount")]
		public System.Nullable<System.Int32> SuccessfulAnalysisCount { get; set; }
	}
	
	/// <summary>
	/// The metadata for a bulk delete conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsMetadata
	{
		
		/// <summary>
		/// The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Partial errors during bulk delete conversations operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to delete conversations in bulk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to delete conversations in bulk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsRequest
	{
		
		/// <summary>
		/// Filter used to select the subset of conversations to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
		
		/// <summary>
		/// Maximum number of conversations to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDeleteCount")]
		public System.Nullable<System.Int32> MaxDeleteCount { get; set; }
		
		/// <summary>
		/// Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The response for a bulk delete conversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1BulkDeleteConversationsResponse
	{
	}
	
	/// <summary>
	/// The conversation resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1Conversation
	{
		
		/// <summary>
		/// An opaque, user-specified string representing the human agent who handled the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentId")]
		public string AgentId { get; set; }
		
		/// <summary>
		/// Call-specific metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callMetadata")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata CallMetadata { get; set; }
		
		/// <summary>
		/// Output only. The time at which the conversation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The conversation source, which is a combination of transcript and audio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSource")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource DataSource { get; set; }
		
		/// <summary>
		/// Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowIntents")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent> DialogflowIntents { get; set; }
		
		/// <summary>
		/// Output only. The duration of the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// A user-specified language code for the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The analysis resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestAnalysis")]
		public GoogleCloudContactcenterinsightsV1alpha1Analysis LatestAnalysis { get; set; }
		
		/// <summary>
		/// Conversation summarization suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestSummary")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData LatestSummary { get; set; }
		
		/// <summary>
		/// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public GoogleCloudContactcenterinsightsV1ConversationMedium Medium { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Obfuscated user ID which the customer sent to us.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="obfuscatedUserId")]
		public string ObfuscatedUserId { get; set; }
		
		/// <summary>
		/// Conversation metadata related to quality management.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualityMetadata")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata QualityMetadata { get; set; }
		
		/// <summary>
		/// Output only. The annotations that were generated during the customer and agent interaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeAnnotations")]
		public GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation[] RuntimeAnnotations { get; set; }
		
		/// <summary>
		/// The time at which the conversation started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// A message representing the transcript of a conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcript")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript Transcript { get; set; }
		
		/// <summary>
		/// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ttl")]
		public string Ttl { get; set; }
		
		/// <summary>
		/// Output only. The number of turns in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="turnCount")]
		public System.Nullable<System.Int32> TurnCount { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the conversation was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Call-specific metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationCallMetadata
	{
		
		/// <summary>
		/// The audio channel that contains the agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentChannel")]
		public System.Nullable<System.Int32> AgentChannel { get; set; }
		
		/// <summary>
		/// The audio channel that contains the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerChannel")]
		public System.Nullable<System.Int32> CustomerChannel { get; set; }
	}
	
	/// <summary>
	/// The conversation source, which is a combination of transcript and audio.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationDataSource
	{
		
		/// <summary>
		/// A Dialogflow source of conversation data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowSource")]
		public GoogleCloudContactcenterinsightsV1alpha1DialogflowSource DialogflowSource { get; set; }
		
		/// <summary>
		/// A Cloud Storage source of conversation data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudContactcenterinsightsV1alpha1GcsSource GcsSource { get; set; }
	}
	
	/// <summary>
	/// A Dialogflow source of conversation data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DialogflowSource
	{
		
		/// <summary>
		/// Cloud Storage URI that points to a file that contains the conversation audio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audioUri")]
		public string AudioUri { get; set; }
		
		/// <summary>
		/// Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowConversation")]
		public string DialogflowConversation { get; set; }
	}
	
	/// <summary>
	/// A Cloud Storage source of conversation data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1GcsSource
	{
		
		/// <summary>
		/// Cloud Storage URI that points to a file that contains the conversation audio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audioUri")]
		public string AudioUri { get; set; }
		
		/// <summary>
		/// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptUri")]
		public string TranscriptUri { get; set; }
	}
	
	/// <summary>
	/// The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DialogflowIntent
	{
		
		/// <summary>
		/// The human-readable name of the intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Conversation summarization suggestion data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData
	{
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answerRecord")]
		public string AnswerRecord { get; set; }
		
		/// <summary>
		/// The confidence score of the summarization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationModel")]
		public string ConversationModel { get; set; }
		
		/// <summary>
		/// A map that contains metadata about the summarization and the document from which it originates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The summarization content that is concatenated into one string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSections")]
		public System.Collections.Generic.Dictionary<string, string> TextSections { get; set; }
	}
	
	/// <summary>
	/// Conversation metadata related to quality management.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadata
	{
		
		/// <summary>
		/// Information about agents involved in the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentInfo")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo[] AgentInfo { get; set; }
		
		/// <summary>
		/// An arbitrary integer value indicating the customer's satisfaction rating.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerSatisfactionRating")]
		public System.Nullable<System.Int32> CustomerSatisfactionRating { get; set; }
		
		/// <summary>
		/// An arbitrary string value specifying the menu path the customer took.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="menuPath")]
		public string MenuPath { get; set; }
		
		/// <summary>
		/// The amount of time the customer waited to connect with an agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waitDuration")]
		public string WaitDuration { get; set; }
	}
	
	/// <summary>
	/// Information about an agent involved in the conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationQualityMetadataAgentInfo
	{
		
		/// <summary>
		/// A user-specified string representing the agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentId")]
		public string AgentId { get; set; }
		
		/// <summary>
		/// The agent's name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A user-provided string indicating the outcome of the agent's segment of the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dispositionCode")]
		public string DispositionCode { get; set; }
		
		/// <summary>
		/// A user-specified string representing the agent's team.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="team")]
		public string Team { get; set; }
	}
	
	/// <summary>
	/// An annotation that was generated during the customer and agent interaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1RuntimeAnnotation
	{
		
		/// <summary>
		/// The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationId")]
		public string AnnotationId { get; set; }
		
		/// <summary>
		/// The feedback that the customer has about a certain answer in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answerFeedback")]
		public GoogleCloudContactcenterinsightsV1alpha1AnswerFeedback AnswerFeedback { get; set; }
		
		/// <summary>
		/// Agent Assist Article Suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="articleSuggestion")]
		public GoogleCloudContactcenterinsightsV1alpha1ArticleSuggestionData ArticleSuggestion { get; set; }
		
		/// <summary>
		/// Conversation summarization suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationSummarizationSuggestion")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationSummarizationSuggestionData ConversationSummarizationSuggestion { get; set; }
		
		/// <summary>
		/// The time at which this annotation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Dialogflow interaction data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowInteraction")]
		public GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData DialogflowInteraction { get; set; }
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endBoundary")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary EndBoundary { get; set; }
		
		/// <summary>
		/// Agent Assist frequently-asked-question answer data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="faqAnswer")]
		public GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData FaqAnswer { get; set; }
		
		/// <summary>
		/// Agent Assist Smart Compose suggestion data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartComposeSuggestion")]
		public GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData SmartComposeSuggestion { get; set; }
		
		/// <summary>
		/// Agent Assist Smart Reply data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartReply")]
		public GoogleCloudContactcenterinsightsV1alpha1SmartReplyData SmartReply { get; set; }
		
		/// <summary>
		/// A point in a conversation that marks the start or the end of an annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startBoundary")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary StartBoundary { get; set; }
	}
	
	/// <summary>
	/// Dialogflow interaction data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DialogflowInteractionData
	{
		
		/// <summary>
		/// The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowIntentId")]
		public string DialogflowIntentId { get; set; }
	}
	
	/// <summary>
	/// Agent Assist frequently-asked-question answer data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1FaqAnswerData
	{
		
		/// <summary>
		/// The piece of text from the `source` knowledge base document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answer")]
		public string Answer { get; set; }
		
		/// <summary>
		/// The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Single> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the FAQ answer and the document that it originates from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The corresponding FAQ question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="question")]
		public string Question { get; set; }
		
		/// <summary>
		/// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
	}
	
	/// <summary>
	/// Agent Assist Smart Compose suggestion data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1SmartComposeSuggestionData
	{
		
		/// <summary>
		/// The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Double> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The content of the suggestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestion")]
		public string Suggestion { get; set; }
	}
	
	/// <summary>
	/// Agent Assist Smart Reply data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1SmartReplyData
	{
		
		/// <summary>
		/// The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceScore")]
		public System.Nullable<System.Double> ConfidenceScore { get; set; }
		
		/// <summary>
		/// Map that contains metadata about the Smart Reply and the document from which it originates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryRecord")]
		public string QueryRecord { get; set; }
		
		/// <summary>
		/// The content of the reply.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply")]
		public string Reply { get; set; }
	}
	
	/// <summary>
	/// A message representing the transcript of a conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationTranscript
	{
		
		/// <summary>
		/// A list of sequential transcript segments that comprise the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptSegments")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment[] TranscriptSegments { get; set; }
	}
	
	/// <summary>
	/// A segment of a full transcript.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegment
	{
		
		/// <summary>
		/// For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelTag")]
		public System.Nullable<System.Int32> ChannelTag { get; set; }
		
		/// <summary>
		/// A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Metadata from Dialogflow relating to the current transcript segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowSegmentMetadata")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata DialogflowSegmentMetadata { get; set; }
		
		/// <summary>
		/// The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The time that the message occurred, if provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageTime")]
		public string MessageTime { get; set; }
		
		/// <summary>
		/// The call participant speaking for a given utterance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segmentParticipant")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant SegmentParticipant { get; set; }
		
		/// <summary>
		/// The data for a sentiment annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public GoogleCloudContactcenterinsightsV1alpha1SentimentData Sentiment { get; set; }
		
		/// <summary>
		/// The text of this segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// A list of the word-specific information for each word in the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="words")]
		public GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo[] Words { get; set; }
	}
	
	/// <summary>
	/// Metadata from Dialogflow relating to the current transcript segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata
	{
		
		/// <summary>
		/// Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smartReplyAllowlistCovered")]
		public System.Nullable<System.Boolean> SmartReplyAllowlistCovered { get; set; }
	}
	
	/// <summary>
	/// The call participant speaking for a given utterance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationParticipant
	{
		
		/// <summary>
		/// Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowParticipant")]
		public string DialogflowParticipant { get; set; }
		
		/// <summary>
		/// The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowParticipantName")]
		public string DialogflowParticipantName { get; set; }
		
		/// <summary>
		/// Obfuscated user ID from Dialogflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="obfuscatedExternalUserId")]
		public string ObfuscatedExternalUserId { get; set; }
		
		/// <summary>
		/// The role of the participant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public GoogleCloudContactcenterinsightsV1ConversationParticipantRole Role { get; set; }
		
		/// <summary>
		/// A user-specified ID representing the participant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
	}
	
	/// <summary>
	/// Word-level info for words in a transcript.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ConversationTranscriptTranscriptSegmentWordInfo
	{
		
		/// <summary>
		/// A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// Time offset of the end of this word relative to the beginning of the total conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOffset")]
		public string EndOffset { get; set; }
		
		/// <summary>
		/// Time offset of the start of this word relative to the beginning of the total conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOffset")]
		public string StartOffset { get; set; }
		
		/// <summary>
		/// The word itself. Includes punctuation marks that surround the word.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="word")]
		public string Word { get; set; }
	}
	
	/// <summary>
	/// Metadata for a create analysis operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1CreateAnalysisOperationMetadata
	{
		
		/// <summary>
		/// Selector of all available annotators and phrase matchers to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatorSelector")]
		public GoogleCloudContactcenterinsightsV1alpha1AnnotatorSelector AnnotatorSelector { get; set; }
		
		/// <summary>
		/// Output only. The Conversation that this Analysis Operation belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation")]
		public string Conversation { get; set; }
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
	}
	
	/// <summary>
	/// Metadata for creating an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to create an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to create an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1CreateIssueModelRequest
	{
		
		/// <summary>
		/// The issue model resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueModel")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueModel IssueModel { get; set; }
		
		/// <summary>
		/// Required. The parent resource of the issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The issue model resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueModel
	{
		
		/// <summary>
		/// Output only. The time at which this issue model was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The representative name for the issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Configs for the input data used to create the issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputDataConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// Output only. Number of issues in this issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueCount")]
		public string IssueCount { get; set; }
		
		/// <summary>
		/// Language of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Type of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public GoogleCloudContactcenterinsightsV1IssueModelModelType ModelType { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the issue model. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. State of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudContactcenterinsightsV1IssueModelState State { get; set; }
		
		/// <summary>
		/// Aggregated statistics about an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingStats")]
		public GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats TrainingStats { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the issue model was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Configs for the input data used to create the issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueModelInputDataConfig
	{
		
		/// <summary>
		/// A filter to reduce the conversations used for training the model to a specific subset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public GoogleCloudContactcenterinsightsV1ConversationMedium Medium { get; set; }
		
		/// <summary>
		/// Output only. Number of conversations used in training. Output only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingConversationsCount")]
		public string TrainingConversationsCount { get; set; }
	}
	
	/// <summary>
	/// Aggregated statistics about an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats
	{
		
		/// <summary>
		/// Number of conversations the issue model has analyzed at this point in time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyzedConversationsCount")]
		public string AnalyzedConversationsCount { get; set; }
		
		/// <summary>
		/// Statistics on each issue. Key is the issue's resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issueStats")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats> IssueStats { get; set; }
		
		/// <summary>
		/// Number of analyzed conversations for which no issue was applicable at this point in time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unclassifiedConversationsCount")]
		public string UnclassifiedConversationsCount { get; set; }
	}
	
	/// <summary>
	/// Aggregated statistics about an issue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats
	{
		
		/// <summary>
		/// Display name of the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issue")]
		public string Issue { get; set; }
		
		/// <summary>
		/// Number of conversations attached to the issue at this point in time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labeledConversationsCount")]
		public string LabeledConversationsCount { get; set; }
	}
	
	/// <summary>
	/// Metadata for deleting an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to delete an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to delete an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DeleteIssueModelRequest
	{
		
		/// <summary>
		/// Required. The name of the issue model to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Metadata for deploying an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to deploy an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to deploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelRequest
	{
		
		/// <summary>
		/// Required. The issue model to deploy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response to deploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1DeployIssueModelResponse
	{
	}
	
	/// <summary>
	/// Metadata for an export insights operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Partial errors during export operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to export insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to export insights.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest
	{
		
		/// <summary>
		/// A BigQuery Table Reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryDestination")]
		public GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination BigQueryDestination { get; set; }
		
		/// <summary>
		/// A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsKey")]
		public string KmsKey { get; set; }
		
		/// <summary>
		/// Required. The parent resource to export data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Options for what to do if the destination table already exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeDisposition")]
		public GoogleCloudContactcenterinsightsV1ExportInsightsDataRequestWriteDisposition WriteDisposition { get; set; }
	}
	
	/// <summary>
	/// A BigQuery Table Reference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
	{
		
		/// <summary>
		/// Required. The name of the BigQuery dataset that the snapshot result should be exported to. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// A project ID or number. If specified, then export will attempt to write data to this project instead of the resource project. Otherwise, the resource project will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// The BigQuery table name to which the insights data should be written. If this table does not exist, the export call returns an INVALID_ARGUMENT error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="table")]
		public string Table { get; set; }
	}
	
	/// <summary>
	/// Response for an export insights operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataResponse
	{
	}
	
	/// <summary>
	/// The metadata for an IngestConversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Statistics for IngestConversations operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ingestConversationsStats")]
		public GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats IngestConversationsStats { get; set; }
		
		/// <summary>
		/// Output only. Partial errors during ingest operation that might cause the operation output to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleRpcStatus[] PartialErrors { get; set; }
		
		/// <summary>
		/// The request to ingest conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest Request { get; set; }
	}
	
	/// <summary>
	/// Statistics for IngestConversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsMetadataIngestConversationsStats
	{
		
		/// <summary>
		/// Output only. The number of objects skipped because another conversation with the same transcript uri had already been ingested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duplicatesSkippedCount")]
		public System.Nullable<System.Int32> DuplicatesSkippedCount { get; set; }
		
		/// <summary>
		/// Output only. The number of objects which were unable to be ingested due to errors. The errors are populated in the partial_errors field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedIngestCount")]
		public System.Nullable<System.Int32> FailedIngestCount { get; set; }
		
		/// <summary>
		/// Output only. The number of objects processed during the ingest operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processedObjectCount")]
		public System.Nullable<System.Int32> ProcessedObjectCount { get; set; }
		
		/// <summary>
		/// Output only. The number of new conversations added during this ingest operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulIngestCount")]
		public System.Nullable<System.Int32> SuccessfulIngestCount { get; set; }
	}
	
	/// <summary>
	/// The request to ingest conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequest
	{
		
		/// <summary>
		/// Configuration that applies to all conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig ConversationConfig { get; set; }
		
		/// <summary>
		/// Configuration for Cloud Storage bucket sources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Required. The parent resource for new conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1RedactionConfig RedactionConfig { get; set; }
		
		/// <summary>
		/// Speech-to-Text configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1SpeechConfig SpeechConfig { get; set; }
		
		/// <summary>
		/// Configuration for processing transcript objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transcriptObjectConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig TranscriptObjectConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration that applies to all conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestConversationConfig
	{
		
		/// <summary>
		/// Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the agent. Note that this must be set for audio conversations to be properly displayed and analyzed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentChannel")]
		public System.Nullable<System.Int32> AgentChannel { get; set; }
		
		/// <summary>
		/// An opaque, user-specified string representing the human agent who handled the conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentId")]
		public string AgentId { get; set; }
		
		/// <summary>
		/// Optional. For audio conversations, this field indicates which of the channels, 1 or 2, contains the customer. Note that this must be set for audio conversations to be properly displayed and analyzed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerChannel")]
		public System.Nullable<System.Int32> CustomerChannel { get; set; }
	}
	
	/// <summary>
	/// Configuration for Cloud Storage bucket sources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestGcsSource
	{
		
		/// <summary>
		/// Optional. Specifies the type of the objects in `bucket_uri`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketObjectType")]
		public GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSourceBucketObjectType BucketObjectType { get; set; }
		
		/// <summary>
		/// Required. The Cloud Storage bucket containing source objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketUri")]
		public string BucketUri { get; set; }
	}
	
	/// <summary>
	/// DLP resources used for redaction while ingesting conversations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1RedactionConfig
	{
		
		/// <summary>
		/// The fully-qualified DLP deidentify template resource name. Format: `projects/{project}/deidentifyTemplates/{template}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deidentifyTemplate")]
		public string DeidentifyTemplate { get; set; }
		
		/// <summary>
		/// The fully-qualified DLP inspect template resource name. Format: `projects/{project}/locations/{location}/inspectTemplates/{template}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectTemplate")]
		public string InspectTemplate { get; set; }
	}
	
	/// <summary>
	/// Speech-to-Text configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1SpeechConfig
	{
		
		/// <summary>
		/// The fully-qualified Speech Recognizer resource name. Format: `projects/{project_id}/locations/{location}/recognizer/{recognizer}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechRecognizer")]
		public string SpeechRecognizer { get; set; }
	}
	
	/// <summary>
	/// Configuration for processing transcript objects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsRequestTranscriptObjectConfig
	{
		
		/// <summary>
		/// Required. The medium transcript objects represent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public GoogleCloudContactcenterinsightsV1ConversationMedium Medium { get; set; }
	}
	
	/// <summary>
	/// The response to an IngestConversations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1IngestConversationsResponse
	{
	}
	
	/// <summary>
	/// Metadata for undeploying an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelMetadata
	{
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The request to undeploy an issue model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest Request { get; set; }
	}
	
	/// <summary>
	/// The request to undeploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelRequest
	{
		
		/// <summary>
		/// Required. The issue model to undeploy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response to undeploy an issue model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1UndeployIssueModelResponse
	{
	}
	
	/// <summary>
	/// The metadata for an UploadConversation operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1UploadConversationMetadata
	{
		
		/// <summary>
		/// Output only. The operation name for a successfully created analysis operation, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisOperation")]
		public string AnalysisOperation { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedRedactionConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1RedactionConfig AppliedRedactionConfig { get; set; }
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Request to upload a conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest Request { get; set; }
	}
	
	/// <summary>
	/// Request to upload a conversation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudContactcenterinsightsV1alpha1UploadConversationRequest
	{
		
		/// <summary>
		/// The conversation resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation")]
		public GoogleCloudContactcenterinsightsV1alpha1Conversation Conversation { get; set; }
		
		/// <summary>
		/// Optional. A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversationId")]
		public string ConversationId { get; set; }
		
		/// <summary>
		/// Required. The parent resource of the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// DLP resources used for redaction while ingesting conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redactionConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1RedactionConfig RedactionConfig { get; set; }
		
		/// <summary>
		/// Speech-to-Text configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speechConfig")]
		public GoogleCloudContactcenterinsightsV1alpha1SpeechConfig SpeechConfig { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Gets an issue model's statistics.
		/// Contactcenterinsights_projects_locations_issueModels_calculateIssueModelStats v1/{issueModel}:calculateIssueModelStats
		/// </summary>
		/// <param name="issueModel">Required. The resource name of the issue model to query against.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse> Contactcenterinsights_projects_locations_issueModels_calculateIssueModelStatsAsync(string issueModel, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (issueModel==null? "" : System.Uri.EscapeDataString(issueModel))+":calculateIssueModelStats";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets conversation statistics.
		/// Contactcenterinsights_projects_locations_conversations_calculateStats v1/{location}/conversations:calculateStats
		/// </summary>
		/// <param name="location">Required. The location of the conversations.</param>
		/// <param name="filter">A filter to reduce results to a specific subset. This field is useful for getting statistics about conversations with specific properties.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1CalculateStatsResponse> Contactcenterinsights_projects_locations_conversations_calculateStatsAsync(string location, string filter, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/conversations:calculateStats&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1CalculateStatsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a view.
		/// Contactcenterinsights_projects_locations_views_delete v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the view to delete.</param>
		/// <param name="force">If set to true, all of this conversation's analyses will also be deleted. Otherwise, the request will only succeed if the conversation has no analyses.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Contactcenterinsights_projects_locations_views_deleteAsync(string name, bool force, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&force="+force;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a view.
		/// Contactcenterinsights_projects_locations_views_get v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the view to get.</param>
		/// <param name="view">The level of details of the conversation. Default is `FULL`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1View> Contactcenterinsights_projects_locations_views_getAsync(string name, Contactcenterinsights_projects_locations_views_getView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1View>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a view.
		/// Contactcenterinsights_projects_locations_views_patch v1/{name}
		/// </summary>
		/// <param name="name">Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}</param>
		/// <param name="updateMask">The list of fields to be updated.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1View> Contactcenterinsights_projects_locations_views_patchAsync(string name, string updateMask, GoogleCloudContactcenterinsightsV1View requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1View>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Contactcenterinsights_projects_locations_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Contactcenterinsights_projects_locations_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Contactcenterinsights_projects_locations_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Contactcenterinsights_projects_locations_operations_cancelAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.
		/// Contactcenterinsights_projects_locations_issueModels_deploy v1/{name}:deploy
		/// </summary>
		/// <param name="name">Required. The issue model to deploy.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_issueModels_deployAsync(string name, GoogleCloudContactcenterinsightsV1DeployIssueModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":deploy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.
		/// Contactcenterinsights_projects_locations_issueModels_undeploy v1/{name}:undeploy
		/// </summary>
		/// <param name="name">Required. The issue model to undeploy.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_issueModels_undeployAsync(string name, GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":undeploy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists analyses.
		/// Contactcenterinsights_projects_locations_conversations_analyses_list v1/{parent}/analyses
		/// </summary>
		/// <param name="parent">Required. The parent resource of the analyses.</param>
		/// <param name="filter">A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.</param>
		/// <param name="pageSize">The maximum number of analyses to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.</param>
		/// <param name="pageToken">The value returned by the last `ListAnalysesResponse`; indicates that this is a continuation of a prior `ListAnalyses` call and the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1ListAnalysesResponse> Contactcenterinsights_projects_locations_conversations_analyses_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analyses&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1ListAnalysesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an analysis. The long running operation is done when the analysis has completed.
		/// Contactcenterinsights_projects_locations_conversations_analyses_create v1/{parent}/analyses
		/// </summary>
		/// <param name="parent">Required. The parent resource of the analysis.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_conversations_analyses_createAsync(string parent, GoogleCloudContactcenterinsightsV1Analysis requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analyses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists conversations.
		/// Contactcenterinsights_projects_locations_conversations_list v1/{parent}/conversations
		/// </summary>
		/// <param name="parent">Required. The parent resource of the conversation.</param>
		/// <param name="filter">A filter to reduce results to a specific subset. Useful for querying conversations with specific properties.</param>
		/// <param name="pageSize">The maximum number of conversations to return in the response. A valid page size ranges from 0 to 1,000 inclusive. If the page size is zero or unspecified, a default page size of 100 will be chosen. Note that a call might return fewer results than the requested page size.</param>
		/// <param name="pageToken">The value returned by the last `ListConversationsResponse`. This value indicates that this is a continuation of a prior `ListConversations` call and that the system should return the next page of data.</param>
		/// <param name="view">The level of details of the conversation. Default is `BASIC`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1ListConversationsResponse> Contactcenterinsights_projects_locations_conversations_listAsync(string parent, string filter, int pageSize, string pageToken, Contactcenterinsights_projects_locations_views_getView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1ListConversationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a conversation.
		/// Contactcenterinsights_projects_locations_conversations_create v1/{parent}/conversations
		/// </summary>
		/// <param name="parent">Required. The parent resource of the conversation.</param>
		/// <param name="conversationId">A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1Conversation> Contactcenterinsights_projects_locations_conversations_createAsync(string parent, string conversationId, GoogleCloudContactcenterinsightsV1Conversation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations&conversationId=" + (conversationId==null? "" : System.Uri.EscapeDataString(conversationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1Conversation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Analyzes multiple conversations in a single request.
		/// Contactcenterinsights_projects_locations_conversations_bulkAnalyze v1/{parent}/conversations:bulkAnalyze
		/// </summary>
		/// <param name="parent">Required. The parent resource to create analyses in.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_conversations_bulkAnalyzeAsync(string parent, GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations:bulkAnalyze";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes multiple conversations in a single request.
		/// Contactcenterinsights_projects_locations_conversations_bulkDelete v1/{parent}/conversations:bulkDelete
		/// </summary>
		/// <param name="parent">Required. The parent resource to delete conversations from. Format: projects/{project}/locations/{location}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_conversations_bulkDeleteAsync(string parent, GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations:bulkDelete";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Imports conversations and processes them according to the user's configuration.
		/// Contactcenterinsights_projects_locations_conversations_ingest v1/{parent}/conversations:ingest
		/// </summary>
		/// <param name="parent">Required. The parent resource for new conversations.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_conversations_ingestAsync(string parent, GoogleCloudContactcenterinsightsV1IngestConversationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations:ingest";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Create a longrunning conversation upload operation. This method differs from CreateConversation by allowing audio transcription and optional DLP redaction.
		/// Contactcenterinsights_projects_locations_conversations_upload v1/{parent}/conversations:upload
		/// </summary>
		/// <param name="parent">Required. The parent resource of the conversation.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_conversations_uploadAsync(string parent, GoogleCloudContactcenterinsightsV1UploadConversationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations:upload";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Export insights data to a destination defined in the request body.
		/// Contactcenterinsights_projects_locations_insightsdata_export v1/{parent}/insightsdata:export
		/// </summary>
		/// <param name="parent">Required. The parent resource to export data from.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_insightsdata_exportAsync(string parent, GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/insightsdata:export";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists issue models.
		/// Contactcenterinsights_projects_locations_issueModels_list v1/{parent}/issueModels
		/// </summary>
		/// <param name="parent">Required. The parent resource of the issue model.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1ListIssueModelsResponse> Contactcenterinsights_projects_locations_issueModels_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/issueModels";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1ListIssueModelsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an issue model.
		/// Contactcenterinsights_projects_locations_issueModels_create v1/{parent}/issueModels
		/// </summary>
		/// <param name="parent">Required. The parent resource of the issue model.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Contactcenterinsights_projects_locations_issueModels_createAsync(string parent, GoogleCloudContactcenterinsightsV1IssueModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/issueModels";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists issues.
		/// Contactcenterinsights_projects_locations_issueModels_issues_list v1/{parent}/issues
		/// </summary>
		/// <param name="parent">Required. The parent resource of the issue.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1ListIssuesResponse> Contactcenterinsights_projects_locations_issueModels_issues_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/issues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1ListIssuesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists phrase matchers.
		/// Contactcenterinsights_projects_locations_phraseMatchers_list v1/{parent}/phraseMatchers
		/// </summary>
		/// <param name="parent">Required. The parent resource of the phrase matcher.</param>
		/// <param name="filter">A filter to reduce results to a specific subset. Useful for querying phrase matchers with specific properties.</param>
		/// <param name="pageSize">The maximum number of phrase matchers to return in the response. If this value is zero, the service will select a default size. A call might return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.</param>
		/// <param name="pageToken">The value returned by the last `ListPhraseMatchersResponse`. This value indicates that this is a continuation of a prior `ListPhraseMatchers` call and that the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse> Contactcenterinsights_projects_locations_phraseMatchers_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/phraseMatchers&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a phrase matcher.
		/// Contactcenterinsights_projects_locations_phraseMatchers_create v1/{parent}/phraseMatchers
		/// </summary>
		/// <param name="parent">Required. The parent resource of the phrase matcher. Required. The location to create a phrase matcher for. Format: `projects//locations/` or `projects//locations/`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1PhraseMatcher> Contactcenterinsights_projects_locations_phraseMatchers_createAsync(string parent, GoogleCloudContactcenterinsightsV1PhraseMatcher requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/phraseMatchers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1PhraseMatcher>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists views.
		/// Contactcenterinsights_projects_locations_views_list v1/{parent}/views
		/// </summary>
		/// <param name="parent">Required. The parent resource of the views.</param>
		/// <param name="pageSize">The maximum number of views to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available.</param>
		/// <param name="pageToken">The value returned by the last `ListViewsResponse`; indicates that this is a continuation of a prior `ListViews` call and the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1ListViewsResponse> Contactcenterinsights_projects_locations_views_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/views&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1ListViewsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a view.
		/// Contactcenterinsights_projects_locations_views_create v1/{parent}/views
		/// </summary>
		/// <param name="parent">Required. The parent resource of the view. Required. The location to create a view for. Format: `projects//locations/` or `projects//locations/`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudContactcenterinsightsV1View> Contactcenterinsights_projects_locations_views_createAsync(string parent, GoogleCloudContactcenterinsightsV1View requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/views";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudContactcenterinsightsV1View>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum Contactcenterinsights_projects_locations_views_getView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERSATION_VIEW_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

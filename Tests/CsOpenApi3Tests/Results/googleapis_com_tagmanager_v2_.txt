//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Represents a Google Tag Manager Account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Account
	{
		
		/// <summary>
		/// The Account ID uniquely identifies the GTM Account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="features")]
		public AccountFeatures Features { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// GTM Account's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shareData")]
		public System.Nullable<System.Boolean> ShareData { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountFeatures
	{
		
		/// <summary>
		/// Whether this Account supports multiple Containers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportMultipleContainers")]
		public System.Nullable<System.Boolean> SupportMultipleContainers { get; set; }
		
		/// <summary>
		/// Whether this Account supports user permissions managed by GTM.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportUserPermissions")]
		public System.Nullable<System.Boolean> SupportUserPermissions { get; set; }
	}
	
	/// <summary>
	/// Defines the Google Tag Manager Account access permissions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountAccess
	{
		
		/// <summary>
		/// Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission")]
		public System.Nullable<AccountAccessPermission> Permission { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountAccessPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accountPermissionUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		noAccess = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		user = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		admin = 3,
	}
	
	/// <summary>
	/// Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuiltInVariable
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// Name of the built-in variable to be used to refer to the built-in variable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// GTM BuiltInVariable's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<BuiltInVariableType> Type { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuiltInVariableType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		builtInVariableTypeUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pageUrl = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pageHostname = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pagePath = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		referrer = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickElement = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickClasses = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickId = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickTarget = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickUrl = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickText = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firstPartyServingUrl = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formElement = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formClasses = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formId = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formTarget = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formUrl = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formText = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		errorMessage = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		errorUrl = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		errorLine = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newHistoryUrl = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oldHistoryUrl = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newHistoryFragment = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oldHistoryFragment = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newHistoryState = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oldHistoryState = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		historySource = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		containerVersion = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debugMode = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		randomNumber = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		containerId = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appId = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appName = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appVersionCode = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appVersionName = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		language = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		osVersion = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		platform = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sdkVersion = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deviceName = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resolution = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		advertiserId = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		advertisingTrackingEnabled = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		htmlId = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		environmentName = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampBrowserLanguage = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampCanonicalPath = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampCanonicalUrl = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampCanonicalHost = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampReferrer = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampTitle = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientId = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientTimezone = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientTimestamp = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScreenWidth = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScreenHeight = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScrollX = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScrollY = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientMaxScrollX = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientMaxScrollY = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampTotalEngagedTime = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampPageViewId = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampPageLoadTime = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampPageDownloadTime = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampGtmEvent = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eventName = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaign = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignAclid = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignAnid = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignClickTimestamp = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignContent = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignCp1 = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignGclid = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignSource = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignTerm = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCurrency = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterDynamicLinkAcceptTime = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterDynamicLinkLinkid = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageDeviceTime = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageId = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageName = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageTime = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationTopic = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterPreviousAppVersion = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterPreviousOsVersion = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterPrice = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterProductId = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterQuantity = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterValue = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoProvider = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoUrl = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoTitle = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoDuration = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoPercent = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoVisible = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoStatus = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoCurrentTime = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepthThreshold = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepthUnits = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepthDirection = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityRatio = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityTime = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityFirstTime = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityRecentTime = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		requestPath = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		requestMethod = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clientName = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		queryString = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageLocationUrl = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageLocationPath = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageLocationHostname = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		visitorRegion = 113,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Client
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// The Client ID uniquely identifies the GTM client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// Parent folder id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentFolderId")]
		public string ParentFolderId { get; set; }
		
		/// <summary>
		/// GTM client's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parameter
	{
		
		/// <summary>
		/// Whether or not a reference type parameter is strongly or weakly referenced. Only used by Transformations. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isWeakReference")]
		public System.Nullable<System.Boolean> IsWeakReference { get; set; }
		
		/// <summary>
		/// The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list")]
		public Parameter[] List { get; set; }
		
		/// <summary>
		/// This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="map")]
		public Parameter[] Map { get; set; }
		
		/// <summary>
		/// The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ParameterType> Type { get; set; }
		
		/// <summary>
		/// A parameter's value (may contain variable references such as "{{myVariable}}") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		typeUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		template = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		integer = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		boolean = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		list = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		map = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		triggerReference = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tagReference = 7,
	}
	
	/// <summary>
	/// Represents a predicate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Condition
	{
		
		/// <summary>
		/// A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ConditionType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConditionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		conditionTypeUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		equals = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		contains = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		startsWith = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		endsWith = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		matchRegex = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		greater = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		greaterOrEquals = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		less = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lessOrEquals = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cssSelector = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		urlMatches = 11,
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Container
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// The Container ID uniquely identifies the GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domainName")]
		public string[] DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="features")]
		public ContainerFeatures Features { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// GTM Container's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Container Public ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicId")]
		public string PublicId { get; set; }
		
		/// <summary>
		/// All Tag IDs that refer to this Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagIds")]
		public string[] TagIds { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taggingServerUrls")]
		public string[] TaggingServerUrls { get; set; }
		
		/// <summary>
		/// List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageContext")]
		public string[] UsageContext { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerFeatures
	{
		
		/// <summary>
		/// Whether this Container supports built-in variables
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportBuiltInVariables")]
		public System.Nullable<System.Boolean> SupportBuiltInVariables { get; set; }
		
		/// <summary>
		/// Whether this Container supports clients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportClients")]
		public System.Nullable<System.Boolean> SupportClients { get; set; }
		
		/// <summary>
		/// Whether this Container supports environments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportEnvironments")]
		public System.Nullable<System.Boolean> SupportEnvironments { get; set; }
		
		/// <summary>
		/// Whether this Container supports folders.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportFolders")]
		public System.Nullable<System.Boolean> SupportFolders { get; set; }
		
		/// <summary>
		/// Whether this Container supports Google tag config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportGtagConfigs")]
		public System.Nullable<System.Boolean> SupportGtagConfigs { get; set; }
		
		/// <summary>
		/// Whether this Container supports tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportTags")]
		public System.Nullable<System.Boolean> SupportTags { get; set; }
		
		/// <summary>
		/// Whether this Container supports templates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportTemplates")]
		public System.Nullable<System.Boolean> SupportTemplates { get; set; }
		
		/// <summary>
		/// Whether this Container supports transformations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportTransformations")]
		public System.Nullable<System.Boolean> SupportTransformations { get; set; }
		
		/// <summary>
		/// Whether this Container supports triggers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportTriggers")]
		public System.Nullable<System.Boolean> SupportTriggers { get; set; }
		
		/// <summary>
		/// Whether this Container supports user permissions managed by GTM.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportUserPermissions")]
		public System.Nullable<System.Boolean> SupportUserPermissions { get; set; }
		
		/// <summary>
		/// Whether this Container supports variables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportVariables")]
		public System.Nullable<System.Boolean> SupportVariables { get; set; }
		
		/// <summary>
		/// Whether this Container supports Container versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportVersions")]
		public System.Nullable<System.Boolean> SupportVersions { get; set; }
		
		/// <summary>
		/// Whether this Container supports workspaces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportWorkspaces")]
		public System.Nullable<System.Boolean> SupportWorkspaces { get; set; }
		
		/// <summary>
		/// Whether this Container supports zones.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportZones")]
		public System.Nullable<System.Boolean> SupportZones { get; set; }
	}
	
	/// <summary>
	/// Defines the Google Tag Manager Container access permissions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerAccess
	{
		
		/// <summary>
		/// GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission")]
		public System.Nullable<ContainerAccessPermission> Permission { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContainerAccessPermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		containerPermissionUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		noAccess = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		read = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		edit = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approve = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		publish = 5,
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Container Version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerVersion
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// The built-in variables in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="builtInVariable")]
		public BuiltInVariable[] BuiltInVariable { get; set; }
		
		/// <summary>
		/// The clients in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public Client[] Client { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="container")]
		public Container Container { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The Container Version ID uniquely identifies the GTM Container Version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersionId")]
		public string ContainerVersionId { get; set; }
		
		/// <summary>
		/// The custom templates in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTemplate")]
		public CustomTemplate[] CustomTemplate { get; set; }
		
		/// <summary>
		/// A value of true indicates this container version has been deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// Container version description. @mutable tagmanager.accounts.containers.versions.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// The folders in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public Folder[] Folder { get; set; }
		
		/// <summary>
		/// The Google tag configs in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gtagConfig")]
		public GtagConfig[] GtagConfig { get; set; }
		
		/// <summary>
		/// Container version display name. @mutable tagmanager.accounts.containers.versions.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// GTM Container Version's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// The tags in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public Tag[] Tag { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// The transformations in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformation")]
		public Transformation[] Transformation { get; set; }
		
		/// <summary>
		/// The triggers in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger")]
		public Trigger[] Trigger { get; set; }
		
		/// <summary>
		/// The variables in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variable")]
		public Variable[] Variable { get; set; }
		
		/// <summary>
		/// The zones in the container that this version was taken from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public Zone[] Zone { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Custom Template's contents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomTemplate
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Represents the link between a custom template and an entry on the Community Template Gallery site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="galleryReference")]
		public GalleryReference GalleryReference { get; set; }
		
		/// <summary>
		/// Custom Template display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// GTM Custom Template's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// The custom template in text format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateData")]
		public string TemplateData { get; set; }
		
		/// <summary>
		/// The Custom Template ID uniquely identifies the GTM custom template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateId")]
		public string TemplateId { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	/// <summary>
	/// Represents the link between a custom template and an entry on the Community Template Gallery site.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GalleryReference
	{
		
		/// <summary>
		/// The name of the host for the community gallery template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// If a user has manually edited the community gallery template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isModified")]
		public System.Nullable<System.Boolean> IsModified { get; set; }
		
		/// <summary>
		/// The name of the owner for the community gallery template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// The name of the repository for the community gallery template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repository")]
		public string Repository { get; set; }
		
		/// <summary>
		/// The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signature")]
		public string Signature { get; set; }
		
		/// <summary>
		/// The version of the community gallery template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Folder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Folder
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// The Folder ID uniquely identifies the GTM Folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folderId")]
		public string FolderId { get; set; }
		
		/// <summary>
		/// Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// GTM Folder's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	/// <summary>
	/// Represents a Google tag configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GtagConfig
	{
		
		/// <summary>
		/// Google tag account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Google tag container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// The ID uniquely identifies the Google tag config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gtagConfigId")]
		public string GtagConfigId { get; set; }
		
		/// <summary>
		/// The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// Google tag config's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockingRuleId")]
		public string[] BlockingRuleId { get; set; }
		
		/// <summary>
		/// Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockingTriggerId")]
		public string[] BlockingTriggerId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="consentSettings")]
		public TagConsentSetting ConsentSettings { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firingRuleId")]
		public string[] FiringRuleId { get; set; }
		
		/// <summary>
		/// Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firingTriggerId")]
		public string[] FiringTriggerId { get; set; }
		
		/// <summary>
		/// If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="liveOnly")]
		public System.Nullable<System.Boolean> LiveOnly { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoringMetadata")]
		public Parameter MonitoringMetadata { get; set; }
		
		/// <summary>
		/// If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoringMetadataTagNameKey")]
		public string MonitoringMetadataTagNameKey { get; set; }
		
		/// <summary>
		/// Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// Parent folder id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentFolderId")]
		public string ParentFolderId { get; set; }
		
		/// <summary>
		/// GTM Tag's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paused")]
		public System.Nullable<System.Boolean> Paused { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public Parameter Priority { get; set; }
		
		/// <summary>
		/// The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleEndMs")]
		public string ScheduleEndMs { get; set; }
		
		/// <summary>
		/// The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleStartMs")]
		public string ScheduleStartMs { get; set; }
		
		/// <summary>
		/// The list of setup tags. Currently we only allow one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="setupTag")]
		public SetupTag[] SetupTag { get; set; }
		
		/// <summary>
		/// Option to fire this tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagFiringOption")]
		public System.Nullable<TagTagFiringOption> TagFiringOption { get; set; }
		
		/// <summary>
		/// The Tag ID uniquely identifies the GTM Tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagId")]
		public string TagId { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// The list of teardown tags. Currently we only allow one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="teardownTag")]
		public TeardownTag[] TeardownTag { get; set; }
		
		/// <summary>
		/// GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagConsentSetting
	{
		
		/// <summary>
		/// The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consentStatus")]
		public System.Nullable<TagConsentSettingConsentStatus> ConsentStatus { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consentType")]
		public Parameter ConsentType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TagConsentSettingConsentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		notSet = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		notNeeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		needed = 2,
	}
	
	/// <summary>
	/// Represents a reference to atag that fires before another tag in order to set up dependencies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetupTag
	{
		
		/// <summary>
		/// If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stopOnSetupFailure")]
		public System.Nullable<System.Boolean> StopOnSetupFailure { get; set; }
		
		/// <summary>
		/// The name of the setup tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagName")]
		public string TagName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TagTagFiringOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tagFiringOptionUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unlimited = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oncePerEvent = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oncePerLoad = 3,
	}
	
	/// <summary>
	/// Represents a tag that fires after another tag in order to tear down dependencies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TeardownTag
	{
		
		/// <summary>
		/// If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stopTeardownOnFailure")]
		public System.Nullable<System.Boolean> StopTeardownOnFailure { get; set; }
		
		/// <summary>
		/// The name of the teardown tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagName")]
		public string TagName { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Transformation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Transformation
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Transformation as computed at storage time. This value is recomputed whenever the transformation is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Transformation display name. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this transformation in the container. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The transformation's parameters. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// Parent folder id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentFolderId")]
		public string ParentFolderId { get; set; }
		
		/// <summary>
		/// GTM transformation's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// The Transformation ID uniquely identifies the GTM transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformationId")]
		public string TransformationId { get; set; }
		
		/// <summary>
		/// Transformation type. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Trigger
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Trigger
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autoEventFilter")]
		public Condition[] AutoEventFilter { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkValidation")]
		public Parameter CheckValidation { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="continuousTimeMinMilliseconds")]
		public Parameter ContinuousTimeMinMilliseconds { get; set; }
		
		/// <summary>
		/// Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customEventFilter")]
		public Condition[] CustomEventFilter { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventName")]
		public Parameter EventName { get; set; }
		
		/// <summary>
		/// The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public Condition[] Filter { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="horizontalScrollPercentageList")]
		public Parameter HorizontalScrollPercentageList { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interval")]
		public Parameter Interval { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intervalSeconds")]
		public Parameter IntervalSeconds { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public Parameter Limit { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxTimerLengthSeconds")]
		public Parameter MaxTimerLengthSeconds { get; set; }
		
		/// <summary>
		/// Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// Parent folder id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentFolderId")]
		public string ParentFolderId { get; set; }
		
		/// <summary>
		/// GTM Trigger's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selector")]
		public Parameter Selector { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalTimeMinMilliseconds")]
		public Parameter TotalTimeMinMilliseconds { get; set; }
		
		/// <summary>
		/// The Trigger ID uniquely identifies the GTM Trigger.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggerId")]
		public string TriggerId { get; set; }
		
		/// <summary>
		/// Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<TriggerType> Type { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uniqueTriggerId")]
		public Parameter UniqueTriggerId { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verticalScrollPercentageList")]
		public Parameter VerticalScrollPercentageList { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibilitySelector")]
		public Parameter VisibilitySelector { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visiblePercentageMax")]
		public Parameter VisiblePercentageMax { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visiblePercentageMin")]
		public Parameter VisiblePercentageMin { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waitForTags")]
		public Parameter WaitForTags { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waitForTagsTimeout")]
		public Parameter WaitForTagsTimeout { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TriggerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eventTypeUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pageview = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		domReady = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		windowLoaded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customEvent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		triggerGroup = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		init = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consentInit = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageview = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		always = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseAppException = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseAppUpdate = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseCampaign = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseFirstOpen = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseInAppPurchase = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseNotificationDismiss = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseNotificationForeground = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseNotificationOpen = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseNotificationReceive = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseOsUpdate = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseSessionStart = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseUserEngagement = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formSubmission = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		click = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		linkClick = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jsError = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		historyChange = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		timer = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClick = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampTimer = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampScroll = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampVisibility = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		youTubeVideo = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepth = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibility = 34,
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Variable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Variable
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disablingTriggerId")]
		public string[] DisablingTriggerId { get; set; }
		
		/// <summary>
		/// For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enablingTriggerId")]
		public string[] EnablingTriggerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="formatValue")]
		public VariableFormatValue FormatValue { get; set; }
		
		/// <summary>
		/// Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public Parameter[] Parameter { get; set; }
		
		/// <summary>
		/// Parent folder id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentFolderId")]
		public string ParentFolderId { get; set; }
		
		/// <summary>
		/// GTM Variable's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleEndMs")]
		public string ScheduleEndMs { get; set; }
		
		/// <summary>
		/// The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleStartMs")]
		public string ScheduleStartMs { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The Variable ID uniquely identifies the GTM Variable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variableId")]
		public string VariableId { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VariableFormatValue
	{
		
		/// <summary>
		/// The option to convert a string-type variable value to either lowercase or uppercase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caseConversionType")]
		public System.Nullable<VariableFormatValueCaseConversionType> CaseConversionType { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="convertFalseToValue")]
		public Parameter ConvertFalseToValue { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="convertNullToValue")]
		public Parameter ConvertNullToValue { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="convertTrueToValue")]
		public Parameter ConvertTrueToValue { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="convertUndefinedToValue")]
		public Parameter ConvertUndefinedToValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VariableFormatValueCaseConversionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lowercase = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		uppercase = 2,
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Zone's contents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Zone
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Represents a Zone's boundaries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundary")]
		public ZoneBoundary Boundary { get; set; }
		
		/// <summary>
		/// Containers that are children of this Zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childContainer")]
		public ZoneChildContainer[] ChildContainer { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Zone display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User notes on how to apply this zone in the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// GTM Zone's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// Represents a Zone's type restrictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="typeRestriction")]
		public ZoneTypeRestriction TypeRestriction { get; set; }
		
		/// <summary>
		/// GTM Workspace ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
		
		/// <summary>
		/// The Zone ID uniquely identifies the GTM Zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zoneId")]
		public string ZoneId { get; set; }
	}
	
	/// <summary>
	/// Represents a Zone's boundaries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZoneBoundary
	{
		
		/// <summary>
		/// The conditions that, when conjoined, make up the boundary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public Condition[] Condition { get; set; }
		
		/// <summary>
		/// Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customEvaluationTriggerId")]
		public string[] CustomEvaluationTriggerId { get; set; }
	}
	
	/// <summary>
	/// Represents a child container of a Zone.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZoneChildContainer
	{
		
		/// <summary>
		/// The zone's nickname for the child container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nickname")]
		public string Nickname { get; set; }
		
		/// <summary>
		/// The child container's public id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicId")]
		public string PublicId { get; set; }
	}
	
	/// <summary>
	/// Represents a Zone's type restrictions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZoneTypeRestriction
	{
		
		/// <summary>
		/// True if type restrictions have been enabled for this Zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable")]
		public System.Nullable<System.Boolean> Enable { get; set; }
		
		/// <summary>
		/// List of type public ids that have been whitelisted for use in this Zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="whitelistedTypeId")]
		public string[] WhitelistedTypeId { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Container Version Header.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContainerVersionHeader
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// The Container Version ID uniquely identifies the GTM Container Version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersionId")]
		public string ContainerVersionId { get; set; }
		
		/// <summary>
		/// A value of true indicates this container version has been deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// Container version display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Number of clients in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numClients")]
		public string NumClients { get; set; }
		
		/// <summary>
		/// Number of custom templates in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numCustomTemplates")]
		public string NumCustomTemplates { get; set; }
		
		/// <summary>
		/// Number of Google tag configs in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numGtagConfigs")]
		public string NumGtagConfigs { get; set; }
		
		/// <summary>
		/// Number of macros in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numMacros")]
		public string NumMacros { get; set; }
		
		/// <summary>
		/// Number of rules in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numRules")]
		public string NumRules { get; set; }
		
		/// <summary>
		/// Number of tags in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numTags")]
		public string NumTags { get; set; }
		
		/// <summary>
		/// Number of transformations in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numTransformations")]
		public string NumTransformations { get; set; }
		
		/// <summary>
		/// Number of triggers in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numTriggers")]
		public string NumTriggers { get; set; }
		
		/// <summary>
		/// Number of variables in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numVariables")]
		public string NumVariables { get; set; }
		
		/// <summary>
		/// Number of zones in the container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numZones")]
		public string NumZones { get; set; }
		
		/// <summary>
		/// GTM Container Version's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBuiltInVariableResponse
	{
		
		/// <summary>
		/// List of created built-in variables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="builtInVariable")]
		public BuiltInVariable[] BuiltInVariable { get; set; }
	}
	
	/// <summary>
	/// Options for new container versions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContainerVersionRequestVersionOptions
	{
		
		/// <summary>
		/// The name of the container version to be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The notes of the container version to be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
	}
	
	/// <summary>
	/// Create container versions response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContainerVersionResponse
	{
		
		/// <summary>
		/// Compiler errors or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compilerError")]
		public System.Nullable<System.Boolean> CompilerError { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Container Version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersion")]
		public ContainerVersion ContainerVersion { get; set; }
		
		/// <summary>
		/// Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newWorkspacePath")]
		public string NewWorkspacePath { get; set; }
		
		/// <summary>
		/// The status of a workspace after synchronization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syncStatus")]
		public SyncStatus SyncStatus { get; set; }
	}
	
	/// <summary>
	/// The status of a workspace after synchronization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SyncStatus
	{
		
		/// <summary>
		/// Synchornization operation detected a merge conflict.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mergeConflict")]
		public System.Nullable<System.Boolean> MergeConflict { get; set; }
		
		/// <summary>
		/// An error occurred during the synchronization operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syncError")]
		public System.Nullable<System.Boolean> SyncError { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Destination
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// Destination ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationId")]
		public string DestinationId { get; set; }
		
		/// <summary>
		/// The Destination link ID uniquely identifies the Destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationLinkId")]
		public string DestinationLinkId { get; set; }
		
		/// <summary>
		/// The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Destination display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Destination's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
	}
	
	/// <summary>
	/// A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Entity
	{
		
		/// <summary>
		/// Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="builtInVariable")]
		public BuiltInVariable BuiltInVariable { get; set; }
		
		/// <summary>
		/// Represents how the entity has been changed in the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changeStatus")]
		public System.Nullable<EntityChangeStatus> ChangeStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="client")]
		public Client Client { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Custom Template's contents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTemplate")]
		public CustomTemplate CustomTemplate { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public Folder Folder { get; set; }
		
		/// <summary>
		/// Represents a Google tag configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gtagConfig")]
		public GtagConfig GtagConfig { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public Tag Tag { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformation")]
		public Transformation Transformation { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Trigger
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger")]
		public Trigger Trigger { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Variable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variable")]
		public Variable Variable { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Zone's contents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public Zone Zone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityChangeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		changeStatusUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		added = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated = 4,
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Environment
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// The environment authorization code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizationCode")]
		public string AuthorizationCode { get; set; }
		
		/// <summary>
		/// The last update time-stamp for the authorization code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizationTimestamp")]
		public string AuthorizationTimestamp { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// Represents a link to a container version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersionId")]
		public string ContainerVersionId { get; set; }
		
		/// <summary>
		/// The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableDebug")]
		public System.Nullable<System.Boolean> EnableDebug { get; set; }
		
		/// <summary>
		/// GTM Environment ID uniquely identifies the GTM Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// GTM Environment's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// The type of this environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<EnvironmentType> Type { get; set; }
		
		/// <summary>
		/// Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Represents a link to a quick preview of a workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnvironmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		user = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		live = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		latest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		workspace = 3,
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Folder's contents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FolderEntities
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of tags inside the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public Tag[] Tag { get; set; }
		
		/// <summary>
		/// The list of triggers inside the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger")]
		public Trigger[] Trigger { get; set; }
		
		/// <summary>
		/// The list of variables inside the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variable")]
		public Variable[] Variable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContainerSnippetResponse
	{
		
		/// <summary>
		/// Tagging snippet for a Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snippet")]
		public string Snippet { get; set; }
	}
	
	/// <summary>
	/// The changes that have occurred in the workspace since the base container version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetWorkspaceStatusResponse
	{
		
		/// <summary>
		/// The merge conflict after sync.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mergeConflict")]
		public MergeConflict[] MergeConflict { get; set; }
		
		/// <summary>
		/// Entities that have been changed in the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceChange")]
		public Entity[] WorkspaceChange { get; set; }
	}
	
	/// <summary>
	/// Represents a merge conflict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MergeConflict
	{
		
		/// <summary>
		/// A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityInBaseVersion")]
		public Entity EntityInBaseVersion { get; set; }
		
		/// <summary>
		/// A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityInWorkspace")]
		public Entity EntityInWorkspace { get; set; }
	}
	
	/// <summary>
	/// List Accounts Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAccountsResponse
	{
		
		/// <summary>
		/// List of GTM Accounts that a user has access to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account")]
		public Account[] Account { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListClientsResponse
	{
		
		/// <summary>
		/// All GTM Clients of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public Client[] Client { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// List container versions response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContainerVersionsResponse
	{
		
		/// <summary>
		/// All container version headers of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersionHeader")]
		public ContainerVersionHeader[] ContainerVersionHeader { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// List Containers Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContainersResponse
	{
		
		/// <summary>
		/// All Containers of a GTM Account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="container")]
		public Container[] Container { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDestinationsResponse
	{
		
		/// <summary>
		/// All Destinations linked to a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public Destination[] Destination { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A list of enabled built-in variables.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEnabledBuiltInVariablesResponse
	{
		
		/// <summary>
		/// All GTM BuiltInVariables of a GTM container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="builtInVariable")]
		public BuiltInVariable[] BuiltInVariable { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// List Environments Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEnvironmentsResponse
	{
		
		/// <summary>
		/// All Environments of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public Environment[] Environment { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// List Folders Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFoldersResponse
	{
		
		/// <summary>
		/// All GTM Folders of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public Folder[] Folder { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGtagConfigResponse
	{
		
		/// <summary>
		/// All Google tag configs in a Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gtagConfig")]
		public GtagConfig[] GtagConfig { get; set; }
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// List Tags Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM Tags of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public Tag[] Tag { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplatesResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM Custom Templates of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public CustomTemplate[] Template { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTransformationsResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM Transformations of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformation")]
		public Transformation[] Transformation { get; set; }
	}
	
	/// <summary>
	/// List triggers response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTriggersResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM Triggers of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger")]
		public Trigger[] Trigger { get; set; }
	}
	
	/// <summary>
	/// List user permissions response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUserPermissionsResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM UserPermissions of a GTM Account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userPermission")]
		public UserPermission[] UserPermission { get; set; }
	}
	
	/// <summary>
	/// Represents a user's permissions to an account and its container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserPermission
	{
		
		/// <summary>
		/// Defines the Google Tag Manager Account access permissions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountAccess")]
		public AccountAccess AccountAccess { get; set; }
		
		/// <summary>
		/// The Account ID uniquely identifies the GTM Account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerAccess")]
		public ContainerAccess[] ContainerAccess { get; set; }
		
		/// <summary>
		/// User's email address. @mutable tagmanager.accounts.permissions.create
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailAddress")]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// GTM UserPermission's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	/// <summary>
	/// List Variables Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVariablesResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM Variables of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variable")]
		public Variable[] Variable { get; set; }
	}
	
	/// <summary>
	/// A list of workspaces in a container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListWorkspacesResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All Workspaces of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspace")]
		public Workspace[] Workspace { get; set; }
	}
	
	/// <summary>
	/// Represents a Google Tag Manager Container Workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Workspace
	{
		
		/// <summary>
		/// GTM Account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// GTM Container ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerId")]
		public string ContainerId { get; set; }
		
		/// <summary>
		/// Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// GTM Workspace's API relative path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Auto generated link to the tag manager UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagManagerUrl")]
		public string TagManagerUrl { get; set; }
		
		/// <summary>
		/// The Workspace ID uniquely identifies the GTM Workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workspaceId")]
		public string WorkspaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListZonesResponse
	{
		
		/// <summary>
		/// Continuation token for fetching the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// All GTM Zones of a GTM Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public Zone[] Zone { get; set; }
	}
	
	/// <summary>
	/// Publish container version response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishContainerVersionResponse
	{
		
		/// <summary>
		/// Compiler errors or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compilerError")]
		public System.Nullable<System.Boolean> CompilerError { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Container Version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersion")]
		public ContainerVersion ContainerVersion { get; set; }
	}
	
	/// <summary>
	/// Response to quick previewing a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickPreviewResponse
	{
		
		/// <summary>
		/// Were there compiler errors or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compilerError")]
		public System.Nullable<System.Boolean> CompilerError { get; set; }
		
		/// <summary>
		/// Represents a Google Tag Manager Container Version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerVersion")]
		public ContainerVersion ContainerVersion { get; set; }
		
		/// <summary>
		/// The status of a workspace after synchronization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syncStatus")]
		public SyncStatus SyncStatus { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a built-in variable in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertBuiltInVariableResponse
	{
		
		/// <summary>
		/// Whether the built-in variable is enabled after reversion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a client in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertClientResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="client")]
		public Client Client { get; set; }
	}
	
	/// <summary>
	/// The result of reverting folder changes in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertFolderResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public Folder Folder { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a tag in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertTagResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public Tag Tag { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a template in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertTemplateResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Custom Template's contents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public CustomTemplate Template { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a transformation in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertTransformationResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Transformation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformation")]
		public Transformation Transformation { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a trigger in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertTriggerResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Trigger
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger")]
		public Trigger Trigger { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a variable in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertVariableResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Variable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variable")]
		public Variable Variable { get; set; }
	}
	
	/// <summary>
	/// The result of reverting a zone in a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevertZoneResponse
	{
		
		/// <summary>
		/// Represents a Google Tag Manager Zone's contents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public Zone Zone { get; set; }
	}
	
	/// <summary>
	/// A response after synchronizing the workspace to the latest container version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SyncWorkspaceResponse
	{
		
		/// <summary>
		/// The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mergeConflict")]
		public MergeConflict[] MergeConflict { get; set; }
		
		/// <summary>
		/// The status of a workspace after synchronization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syncStatus")]
		public SyncStatus SyncStatus { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists all GTM Accounts that a user has access to.
		/// Tagmanager_accounts_list tagmanager/v2/accounts
		/// </summary>
		/// <param name="includeGoogleTags">Also retrieve accounts associated with Google Tag when true.</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAccountsResponse> Tagmanager_accounts_listAsync(bool includeGoogleTags, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/accounts?includeGoogleTags="+includeGoogleTags+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAccountsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Looks up a Container by destination ID.
		/// Tagmanager_accounts_containers_lookup tagmanager/v2/accounts/containers:lookup
		/// </summary>
		/// <param name="destinationId">Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}.</param>
		/// <returns>Successful response</returns>
		public async Task<Container> Tagmanager_accounts_containers_lookupAsync(string destinationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/accounts/containers:lookup?destinationId=" + (destinationId==null? "" : System.Uri.EscapeDataString(destinationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Container>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the enabled Built-In Variables of a GTM Container.
		/// Tagmanager_accounts_containers_workspaces_built_in_variables_list tagmanager/v2/{parent}/built_in_variables
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListEnabledBuiltInVariablesResponse> Tagmanager_accounts_containers_workspaces_built_in_variables_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/built_in_variables&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEnabledBuiltInVariablesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates one or more GTM Built-In Variables.
		/// Tagmanager_accounts_containers_workspaces_built_in_variables_create tagmanager/v2/{parent}/built_in_variables
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="type">The types of built-in variables to enable.</param>
		/// <returns>Successful response</returns>
		public async Task<CreateBuiltInVariableResponse> Tagmanager_accounts_containers_workspaces_built_in_variables_createAsync(string parent, string[] type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/built_in_variables&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateBuiltInVariableResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Clients of a GTM container workspace.
		/// Tagmanager_accounts_containers_workspaces_clients_list tagmanager/v2/{parent}/clients
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListClientsResponse> Tagmanager_accounts_containers_workspaces_clients_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/clients&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListClientsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Client.
		/// Tagmanager_accounts_containers_workspaces_clients_create tagmanager/v2/{parent}/clients
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Client> Tagmanager_accounts_containers_workspaces_clients_createAsync(string parent, Client requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/clients";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Client>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Containers that belongs to a GTM Account.
		/// Tagmanager_accounts_containers_list tagmanager/v2/{parent}/containers
		/// </summary>
		/// <param name="parent">GTM Account's API relative path. Example: accounts/{account_id}.</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListContainersResponse> Tagmanager_accounts_containers_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/containers&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContainersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Container.
		/// Tagmanager_accounts_containers_create tagmanager/v2/{parent}/containers
		/// </summary>
		/// <param name="parent">GTM Account's API relative path. Example: accounts/{account_id}.</param>
		/// <returns>Successful response</returns>
		public async Task<Container> Tagmanager_accounts_containers_createAsync(string parent, Container requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/containers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Container>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Destinations linked to a GTM Container.
		/// Tagmanager_accounts_containers_destinations_list tagmanager/v2/{parent}/destinations
		/// </summary>
		/// <param name="parent">GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <returns>Successful response</returns>
		public async Task<ListDestinationsResponse> Tagmanager_accounts_containers_destinations_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/destinations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDestinationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a Destination to this Container and removes it from the Container to which it is currently linked.
		/// Tagmanager_accounts_containers_destinations_link tagmanager/v2/{parent}/destinations:link
		/// </summary>
		/// <param name="parent">GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <param name="allowUserPermissionFeatureUpdate">Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.</param>
		/// <param name="destinationId">Destination ID to be linked to the current container.</param>
		/// <returns>Successful response</returns>
		public async Task<Destination> Tagmanager_accounts_containers_destinations_linkAsync(string parent, bool allowUserPermissionFeatureUpdate, string destinationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/destinations:link&allowUserPermissionFeatureUpdate="+allowUserPermissionFeatureUpdate+"&destinationId=" + (destinationId==null? "" : System.Uri.EscapeDataString(destinationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Destination>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Environments of a GTM Container.
		/// Tagmanager_accounts_containers_environments_list tagmanager/v2/{parent}/environments
		/// </summary>
		/// <param name="parent">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListEnvironmentsResponse> Tagmanager_accounts_containers_environments_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/environments&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEnvironmentsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Environment.
		/// Tagmanager_accounts_containers_environments_create tagmanager/v2/{parent}/environments
		/// </summary>
		/// <param name="parent">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Environment> Tagmanager_accounts_containers_environments_createAsync(string parent, Environment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/environments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Environment>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Folders of a Container.
		/// Tagmanager_accounts_containers_workspaces_folders_list tagmanager/v2/{parent}/folders
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListFoldersResponse> Tagmanager_accounts_containers_workspaces_folders_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/folders&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFoldersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Folder.
		/// Tagmanager_accounts_containers_workspaces_folders_create tagmanager/v2/{parent}/folders
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Folder> Tagmanager_accounts_containers_workspaces_folders_createAsync(string parent, Folder requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/folders";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Folder>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Google tag configs in a Container.
		/// Tagmanager_accounts_containers_workspaces_gtag_config_list tagmanager/v2/{parent}/gtag_config
		/// </summary>
		/// <param name="parent">Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListGtagConfigResponse> Tagmanager_accounts_containers_workspaces_gtag_config_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/gtag_config&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListGtagConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Google tag config.
		/// Tagmanager_accounts_containers_workspaces_gtag_config_create tagmanager/v2/{parent}/gtag_config
		/// </summary>
		/// <param name="parent">Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GtagConfig> Tagmanager_accounts_containers_workspaces_gtag_config_createAsync(string parent, GtagConfig requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/gtag_config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GtagConfig>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Tags of a Container.
		/// Tagmanager_accounts_containers_workspaces_tags_list tagmanager/v2/{parent}/tags
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListTagsResponse> Tagmanager_accounts_containers_workspaces_tags_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Tag.
		/// Tagmanager_accounts_containers_workspaces_tags_create tagmanager/v2/{parent}/tags
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Tag> Tagmanager_accounts_containers_workspaces_tags_createAsync(string parent, Tag requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Tag>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Templates of a GTM container workspace.
		/// Tagmanager_accounts_containers_workspaces_templates_list tagmanager/v2/{parent}/templates
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListTemplatesResponse> Tagmanager_accounts_containers_workspaces_templates_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/templates&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Custom Template.
		/// Tagmanager_accounts_containers_workspaces_templates_create tagmanager/v2/{parent}/templates
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<CustomTemplate> Tagmanager_accounts_containers_workspaces_templates_createAsync(string parent, CustomTemplate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/templates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CustomTemplate>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Transformations of a GTM container workspace.
		/// Tagmanager_accounts_containers_workspaces_transformations_list tagmanager/v2/{parent}/transformations
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListTransformationsResponse> Tagmanager_accounts_containers_workspaces_transformations_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/transformations&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTransformationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Transformation.
		/// Tagmanager_accounts_containers_workspaces_transformations_create tagmanager/v2/{parent}/transformations
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Transformation> Tagmanager_accounts_containers_workspaces_transformations_createAsync(string parent, Transformation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/transformations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Transformation>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Triggers of a Container.
		/// Tagmanager_accounts_containers_workspaces_triggers_list tagmanager/v2/{parent}/triggers
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListTriggersResponse> Tagmanager_accounts_containers_workspaces_triggers_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/triggers&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTriggersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Trigger.
		/// Tagmanager_accounts_containers_workspaces_triggers_create tagmanager/v2/{parent}/triggers
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Trigger> Tagmanager_accounts_containers_workspaces_triggers_createAsync(string parent, Trigger requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/triggers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Trigger>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all users that have access to the account along with Account and Container user access granted to each of them.
		/// Tagmanager_accounts_user_permissions_list tagmanager/v2/{parent}/user_permissions
		/// </summary>
		/// <param name="parent">GTM Account's API relative path. Example: accounts/{account_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListUserPermissionsResponse> Tagmanager_accounts_user_permissions_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/user_permissions&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListUserPermissionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a user's Account & Container access.
		/// Tagmanager_accounts_user_permissions_create tagmanager/v2/{parent}/user_permissions
		/// </summary>
		/// <param name="parent">GTM Account's API relative path. Example: accounts/{account_id}</param>
		/// <returns>Successful response</returns>
		public async Task<UserPermission> Tagmanager_accounts_user_permissions_createAsync(string parent, UserPermission requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/user_permissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserPermission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Variables of a Container.
		/// Tagmanager_accounts_containers_workspaces_variables_list tagmanager/v2/{parent}/variables
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListVariablesResponse> Tagmanager_accounts_containers_workspaces_variables_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/variables&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListVariablesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Variable.
		/// Tagmanager_accounts_containers_workspaces_variables_create tagmanager/v2/{parent}/variables
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Variable> Tagmanager_accounts_containers_workspaces_variables_createAsync(string parent, Variable requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/variables";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Variable>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Container Versions of a GTM Container.
		/// Tagmanager_accounts_containers_version_headers_list tagmanager/v2/{parent}/version_headers
		/// </summary>
		/// <param name="parent">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <param name="includeDeleted">Also retrieve deleted (archived) versions when true.</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListContainerVersionsResponse> Tagmanager_accounts_containers_version_headers_listAsync(string parent, bool includeDeleted, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/version_headers&includeDeleted="+includeDeleted+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContainerVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the latest container version header
		/// Tagmanager_accounts_containers_version_headers_latest tagmanager/v2/{parent}/version_headers:latest
		/// </summary>
		/// <param name="parent">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <returns>Successful response</returns>
		public async Task<ContainerVersionHeader> Tagmanager_accounts_containers_version_headers_latestAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/version_headers:latest";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ContainerVersionHeader>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the live (i.e. published) container version
		/// Tagmanager_accounts_containers_versions_live tagmanager/v2/{parent}/versions:live
		/// </summary>
		/// <param name="parent">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <returns>Successful response</returns>
		public async Task<ContainerVersion> Tagmanager_accounts_containers_versions_liveAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/versions:live";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ContainerVersion>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all Workspaces that belong to a GTM Container.
		/// Tagmanager_accounts_containers_workspaces_list tagmanager/v2/{parent}/workspaces
		/// </summary>
		/// <param name="parent">GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListWorkspacesResponse> Tagmanager_accounts_containers_workspaces_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/workspaces&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListWorkspacesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Workspace.
		/// Tagmanager_accounts_containers_workspaces_create tagmanager/v2/{parent}/workspaces
		/// </summary>
		/// <param name="parent">GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Workspace> Tagmanager_accounts_containers_workspaces_createAsync(string parent, Workspace requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/workspaces";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Workspace>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all GTM Zones of a GTM container workspace.
		/// Tagmanager_accounts_containers_workspaces_zones_list tagmanager/v2/{parent}/zones
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<ListZonesResponse> Tagmanager_accounts_containers_workspaces_zones_listAsync(string parent, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/zones&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListZonesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a GTM Zone.
		/// Tagmanager_accounts_containers_workspaces_zones_create tagmanager/v2/{parent}/zones
		/// </summary>
		/// <param name="parent">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Zone> Tagmanager_accounts_containers_workspaces_zones_createAsync(string parent, Zone requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/zones";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Zone>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a user from the account, revoking access to it and all of its containers.
		/// Tagmanager_accounts_user_permissions_delete tagmanager/v2/{path}
		/// </summary>
		/// <param name="path">GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}</param>
		/// <param name="type">The types of built-in variables to delete.</param>
		/// <returns>Successful response</returns>
		public async Task Tagmanager_accounts_user_permissions_deleteAsync(string path, string[] type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a user's Account & Container access.
		/// Tagmanager_accounts_user_permissions_get tagmanager/v2/{path}
		/// </summary>
		/// <param name="path">GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}</param>
		/// <param name="containerVersionId">The GTM ContainerVersion ID. Specify published to retrieve the currently published version.</param>
		/// <returns>Successful response</returns>
		public async Task<UserPermission> Tagmanager_accounts_user_permissions_getAsync(string path, string containerVersionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+"&containerVersionId=" + (containerVersionId==null? "" : System.Uri.EscapeDataString(containerVersionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserPermission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a user's Account & Container access.
		/// Tagmanager_accounts_user_permissions_update tagmanager/v2/{path}
		/// </summary>
		/// <param name="path">GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}</param>
		/// <param name="fingerprint">When provided, this fingerprint must match the fingerprint of the zone in storage.</param>
		/// <returns>Successful response</returns>
		public async Task<UserPermission> Tagmanager_accounts_user_permissions_updateAsync(string path, string fingerprint, UserPermission requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+"&fingerprint=" + (fingerprint==null? "" : System.Uri.EscapeDataString(fingerprint));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserPermission>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Reverts changes to a GTM Built-In Variables in a GTM Workspace.
		/// Tagmanager_accounts_containers_workspaces_built_in_variables_revert tagmanager/v2/{path}/built_in_variables:revert
		/// </summary>
		/// <param name="path">GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables</param>
		/// <param name="type">The type of built-in variable to revert.</param>
		/// <returns>Successful response</returns>
		public async Task<RevertBuiltInVariableResponse> Tagmanager_accounts_containers_workspaces_built_in_variables_revertAsync(string path, Tagmanager_accounts_containers_workspaces_built_in_variables_revertType type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+"/built_in_variables:revert&type=" + type;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RevertBuiltInVariableResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Finds conflicting and modified entities in the workspace.
		/// Tagmanager_accounts_containers_workspaces_getStatus tagmanager/v2/{path}/status
		/// </summary>
		/// <param name="path">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<GetWorkspaceStatusResponse> Tagmanager_accounts_containers_workspaces_getStatusAsync(string path, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+"/status";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetWorkspaceStatusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Combines Containers.
		/// Tagmanager_accounts_containers_combine tagmanager/v2/{path}:combine
		/// </summary>
		/// <param name="path">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <param name="allowUserPermissionFeatureUpdate">Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.</param>
		/// <param name="containerId">ID of container that will be merged into the current container.</param>
		/// <param name="settingSource">Specify the source of config setting after combine</param>
		/// <returns>Successful response</returns>
		public async Task<Container> Tagmanager_accounts_containers_combineAsync(string path, bool allowUserPermissionFeatureUpdate, string containerId, Tagmanager_accounts_containers_combineSettingSource settingSource, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":combine&allowUserPermissionFeatureUpdate="+allowUserPermissionFeatureUpdate+"&containerId=" + (containerId==null? "" : System.Uri.EscapeDataString(containerId))+"&settingSource=" + settingSource;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Container>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.
		/// Tagmanager_accounts_containers_workspaces_create_version tagmanager/v2/{path}:create_version
		/// </summary>
		/// <param name="path">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<CreateContainerVersionResponse> Tagmanager_accounts_containers_workspaces_create_versionAsync(string path, CreateContainerVersionRequestVersionOptions requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":create_version";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateContainerVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all entities in a GTM Folder.
		/// Tagmanager_accounts_containers_workspaces_folders_entities tagmanager/v2/{path}:entities
		/// </summary>
		/// <param name="path">GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}</param>
		/// <param name="pageToken">Continuation token for fetching the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task<FolderEntities> Tagmanager_accounts_containers_workspaces_folders_entitiesAsync(string path, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":entities&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FolderEntities>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Moves entities to a GTM Folder. If {folder_id} in the request path equals 0, this will instead move entities out of the folder they currently belong to.
		/// Tagmanager_accounts_containers_workspaces_folders_move_entities_to_folder tagmanager/v2/{path}:move_entities_to_folder
		/// </summary>
		/// <param name="path">GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}</param>
		/// <param name="tagId">The tags to be moved to the folder.</param>
		/// <param name="triggerId">The triggers to be moved to the folder.</param>
		/// <param name="variableId">The variables to be moved to the folder.</param>
		/// <returns>Successful response</returns>
		public async Task Tagmanager_accounts_containers_workspaces_folders_move_entities_to_folderAsync(string path, string[] tagId, string[] triggerId, string[] variableId, Folder requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":move_entities_to_folder&"+string.Join("&", tagId.Select(z => $"tagId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", triggerId.Select(z => $"triggerId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", variableId.Select(z => $"variableId={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Move Tag ID out of a Container.
		/// Tagmanager_accounts_containers_move_tag_id tagmanager/v2/{path}:move_tag_id
		/// </summary>
		/// <param name="path">GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}</param>
		/// <param name="allowUserPermissionFeatureUpdate">Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.</param>
		/// <param name="copySettings">Whether or not to copy tag settings from this tag to the new tag.</param>
		/// <param name="copyTermsOfService">Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail.</param>
		/// <param name="copyUsers">Whether or not to copy users from this tag to the new tag.</param>
		/// <param name="tagId">Tag ID to be removed from the current Container.</param>
		/// <param name="tagName">The name for the newly created tag.</param>
		/// <returns>Successful response</returns>
		public async Task<Container> Tagmanager_accounts_containers_move_tag_idAsync(string path, bool allowUserPermissionFeatureUpdate, bool copySettings, bool copyTermsOfService, bool copyUsers, string tagId, string tagName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":move_tag_id&allowUserPermissionFeatureUpdate="+allowUserPermissionFeatureUpdate+"&copySettings="+copySettings+"&copyTermsOfService="+copyTermsOfService+"&copyUsers="+copyUsers+"&tagId=" + (tagId==null? "" : System.Uri.EscapeDataString(tagId))+"&tagName=" + (tagName==null? "" : System.Uri.EscapeDataString(tagName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Container>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Publishes a Container Version.
		/// Tagmanager_accounts_containers_versions_publish tagmanager/v2/{path}:publish
		/// </summary>
		/// <param name="path">GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}</param>
		/// <param name="fingerprint">When provided, this fingerprint must match the fingerprint of the container version in storage.</param>
		/// <returns>Successful response</returns>
		public async Task<PublishContainerVersionResponse> Tagmanager_accounts_containers_versions_publishAsync(string path, string fingerprint, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":publish&fingerprint=" + (fingerprint==null? "" : System.Uri.EscapeDataString(fingerprint));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PublishContainerVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Quick previews a workspace by creating a fake container version from all entities in the provided workspace.
		/// Tagmanager_accounts_containers_workspaces_quick_preview tagmanager/v2/{path}:quick_preview
		/// </summary>
		/// <param name="path">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<QuickPreviewResponse> Tagmanager_accounts_containers_workspaces_quick_previewAsync(string path, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":quick_preview";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QuickPreviewResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Re-generates the authorization code for a GTM Environment.
		/// Tagmanager_accounts_containers_environments_reauthorize tagmanager/v2/{path}:reauthorize
		/// </summary>
		/// <param name="path">GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}</param>
		/// <returns>Successful response</returns>
		public async Task<Environment> Tagmanager_accounts_containers_environments_reauthorizeAsync(string path, Environment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":reauthorize";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Environment>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.
		/// Tagmanager_accounts_containers_workspaces_resolve_conflict tagmanager/v2/{path}:resolve_conflict
		/// </summary>
		/// <param name="path">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <param name="fingerprint">When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict.</param>
		/// <returns>Successful response</returns>
		public async Task Tagmanager_accounts_containers_workspaces_resolve_conflictAsync(string path, string fingerprint, Entity requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":resolve_conflict&fingerprint=" + (fingerprint==null? "" : System.Uri.EscapeDataString(fingerprint));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Reverts changes to a GTM Zone in a GTM Workspace.
		/// Tagmanager_accounts_containers_workspaces_zones_revert tagmanager/v2/{path}:revert
		/// </summary>
		/// <param name="path">GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}</param>
		/// <param name="fingerprint">When provided, this fingerprint must match the fingerprint of the zone in storage.</param>
		/// <returns>Successful response</returns>
		public async Task<RevertZoneResponse> Tagmanager_accounts_containers_workspaces_zones_revertAsync(string path, string fingerprint, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":revert&fingerprint=" + (fingerprint==null? "" : System.Uri.EscapeDataString(fingerprint));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RevertZoneResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.
		/// Tagmanager_accounts_containers_versions_set_latest tagmanager/v2/{path}:set_latest
		/// </summary>
		/// <param name="path">GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}</param>
		/// <returns>Successful response</returns>
		public async Task<ContainerVersion> Tagmanager_accounts_containers_versions_set_latestAsync(string path, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":set_latest";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ContainerVersion>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the tagging snippet for a Container.
		/// Tagmanager_accounts_containers_snippet tagmanager/v2/{path}:snippet
		/// </summary>
		/// <param name="path">Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet</param>
		/// <returns>Successful response</returns>
		public async Task<GetContainerSnippetResponse> Tagmanager_accounts_containers_snippetAsync(string path, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":snippet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetContainerSnippetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.
		/// Tagmanager_accounts_containers_workspaces_sync tagmanager/v2/{path}:sync
		/// </summary>
		/// <param name="path">GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}</param>
		/// <returns>Successful response</returns>
		public async Task<SyncWorkspaceResponse> Tagmanager_accounts_containers_workspaces_syncAsync(string path, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":sync";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SyncWorkspaceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Undeletes a Container Version.
		/// Tagmanager_accounts_containers_versions_undelete tagmanager/v2/{path}:undelete
		/// </summary>
		/// <param name="path">GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}</param>
		/// <returns>Successful response</returns>
		public async Task<ContainerVersion> Tagmanager_accounts_containers_versions_undeleteAsync(string path, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tagmanager/v2/"+ (path==null? "" : System.Uri.EscapeDataString(path))+":undelete";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ContainerVersion>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Tagmanager_accounts_containers_workspaces_built_in_variables_revertType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		builtInVariableTypeUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pageUrl = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pageHostname = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pagePath = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		referrer = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickElement = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickClasses = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickId = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickTarget = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickUrl = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clickText = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firstPartyServingUrl = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formElement = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formClasses = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formId = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formTarget = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formUrl = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		formText = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		errorMessage = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		errorUrl = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		errorLine = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newHistoryUrl = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oldHistoryUrl = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newHistoryFragment = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oldHistoryFragment = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newHistoryState = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		oldHistoryState = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		historySource = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		containerVersion = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debugMode = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		randomNumber = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		containerId = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appId = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appName = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appVersionCode = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appVersionName = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		language = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		osVersion = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		platform = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sdkVersion = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deviceName = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resolution = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		advertiserId = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		advertisingTrackingEnabled = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		htmlId = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		environmentName = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampBrowserLanguage = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampCanonicalPath = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampCanonicalUrl = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampCanonicalHost = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampReferrer = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampTitle = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientId = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientTimezone = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientTimestamp = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScreenWidth = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScreenHeight = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScrollX = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientScrollY = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientMaxScrollX = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampClientMaxScrollY = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampTotalEngagedTime = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampPageViewId = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampPageLoadTime = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampPageDownloadTime = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ampGtmEvent = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eventName = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaign = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignAclid = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignAnid = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignClickTimestamp = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignContent = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignCp1 = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignGclid = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignSource = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCampaignTerm = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterCurrency = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterDynamicLinkAcceptTime = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterDynamicLinkLinkid = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageDeviceTime = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageId = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageName = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationMessageTime = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterNotificationTopic = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterPreviousAppVersion = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterPreviousOsVersion = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterPrice = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterProductId = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterQuantity = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		firebaseEventParameterValue = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoProvider = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoUrl = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoTitle = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoDuration = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoPercent = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoVisible = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoStatus = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		videoCurrentTime = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepthThreshold = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepthUnits = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scrollDepthDirection = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityRatio = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityTime = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityFirstTime = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		elementVisibilityRecentTime = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		requestPath = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		requestMethod = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clientName = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		queryString = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageLocationUrl = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageLocationPath = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serverPageLocationHostname = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		visitorRegion = 113,
	}
	
	public enum Tagmanager_accounts_containers_combineSettingSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		settingSourceUnspecified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

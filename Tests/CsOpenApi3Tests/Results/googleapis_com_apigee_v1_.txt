//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Describes why a bundle is invalid. Intended for use in error details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EdgeConfigstoreBundleBadBundle
	{
		
		/// <summary>
		/// Describes all precondition violations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="violations")]
		public EdgeConfigstoreBundleBadBundleViolation[] Violations { get; set; }
	}
	
	/// <summary>
	/// A message type used to describe a single bundle validation error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EdgeConfigstoreBundleBadBundleViolation
	{
		
		/// <summary>
		/// A description of why the bundle is invalid and how to fix it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The filename (including relative path from the bundle root) in which the error occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
	}
	
	/// <summary>
	/// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleApiHttpBody
	{
		
		/// <summary>
		/// The HTTP Content-Type header value specifying the content type of the body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// The HTTP request/response body as raw binary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Application specific response metadata. Must be set in the first response for streaming APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extensions")]
		public string[] Extensions { get; set; }
	}
	
	/// <summary>
	/// APIProductAssociation has the API product and its administrative state association.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1APIProductAssociation
	{
		
		/// <summary>
		/// API product to be associated with the credential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiproduct")]
		public string Apiproduct { get; set; }
		
		/// <summary>
		/// The API product credential associated status. Valid values are `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Access
	{
		
		/// <summary>
		/// Get action. For example, "Get" : { "name" : "target.name", "value" : "default" }
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GoogleCloudApigeeV1AccessGet Get { get; set; }
		
		/// <summary>
		/// Remove action. For example, "Remove" : { "name" : "target.name", "success" : true }
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GoogleCloudApigeeV1AccessRemove Remove { get; set; }
		
		/// <summary>
		/// Set action. For example, "Set" : { "name" : "target.name", "success" : true, "value" : "default" }
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GoogleCloudApigeeV1AccessSet Set { get; set; }
	}
	
	/// <summary>
	/// Get action. For example, "Get" : { "name" : "target.name", "value" : "default" }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AccessGet
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Remove action. For example, "Remove" : { "name" : "target.name", "success" : true }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AccessRemove
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public System.Nullable<System.Boolean> Success { get; set; }
	}
	
	/// <summary>
	/// Set action. For example, "Set" : { "name" : "target.name", "success" : true, "value" : "default" }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AccessSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="success")]
		public System.Nullable<System.Boolean> Success { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Request for ActivateNatAddressRequest. Activate the nat address request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ActivateNatAddressRequest
	{
	}
	
	/// <summary>
	/// Add-on configurations for the Apigee organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AddonsConfig
	{
		
		/// <summary>
		/// Configuration for the Advanced API Ops add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advancedApiOpsConfig")]
		public GoogleCloudApigeeV1AdvancedApiOpsConfig AdvancedApiOpsConfig { get; set; }
		
		/// <summary>
		/// Configuration for the Analytics add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsConfig")]
		public GoogleCloudApigeeV1AnalyticsConfig AnalyticsConfig { get; set; }
		
		/// <summary>
		/// Configurations of the API Security add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiSecurityConfig")]
		public GoogleCloudApigeeV1ApiSecurityConfig ApiSecurityConfig { get; set; }
		
		/// <summary>
		/// Configuration for the Connectors Platform add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectorsPlatformConfig")]
		public GoogleCloudApigeeV1ConnectorsPlatformConfig ConnectorsPlatformConfig { get; set; }
		
		/// <summary>
		/// Configuration for the Integration add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integrationConfig")]
		public GoogleCloudApigeeV1IntegrationConfig IntegrationConfig { get; set; }
		
		/// <summary>
		/// Configuration for the Monetization add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monetizationConfig")]
		public GoogleCloudApigeeV1MonetizationConfig MonetizationConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration for the Advanced API Ops add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AdvancedApiOpsConfig
	{
		
		/// <summary>
		/// Flag that specifies whether the Advanced API Ops add-on is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Configuration for the Analytics add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AnalyticsConfig
	{
		
		/// <summary>
		/// Whether the Analytics add-on is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Output only. Time at which the Analytics add-on expires in milliseconds since epoch. If unspecified, the add-on will never expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTimeMillis")]
		public string ExpireTimeMillis { get; set; }
		
		/// <summary>
		/// Output only. The state of the Analytics add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1AnalyticsConfigState> State { get; set; }
		
		/// <summary>
		/// Output only. The latest update time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1AnalyticsConfigState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDON_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 4,
	}
	
	/// <summary>
	/// Configurations of the API Security add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiSecurityConfig
	{
		
		/// <summary>
		/// Flag that specifies whether the API security add-on is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Output only. Time at which the API Security add-on expires in in milliseconds since epoch. If unspecified, the add-on will never expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
	}
	
	/// <summary>
	/// Configuration for the Connectors Platform add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ConnectorsPlatformConfig
	{
		
		/// <summary>
		/// Flag that specifies whether the Connectors Platform add-on is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Output only. Time at which the Connectors Platform add-on expires in milliseconds since epoch. If unspecified, the add-on will never expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
	}
	
	/// <summary>
	/// Configuration for the Integration add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1IntegrationConfig
	{
		
		/// <summary>
		/// Flag that specifies whether the Integration add-on is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Configuration for the Monetization add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1MonetizationConfig
	{
		
		/// <summary>
		/// Flag that specifies whether the Monetization add-on is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Request for AdjustDeveloperBalance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AdjustDeveloperBalanceRequest
	{
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjustment")]
		public GoogleTypeMoney Adjustment { get; set; }
	}
	
	/// <summary>
	/// Represents an amount of money with its currency type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeMoney
	{
		
		/// <summary>
		/// The three-letter currency code defined in ISO 4217.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
	}
	
	/// <summary>
	/// Reference to a certificate or key/certificate pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Alias
	{
		
		/// <summary>
		/// Resource ID for this alias. Values must match the regular expression `[^/]{1,255}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alias")]
		public string Alias { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certsInfo")]
		public GoogleCloudApigeeV1Certificate CertsInfo { get; set; }
		
		/// <summary>
		/// Type of alias.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudApigeeV1AliasType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Certificate
	{
		
		/// <summary>
		/// Chain of certificates under this name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certInfo")]
		public GoogleCloudApigeeV1CertInfo[] CertInfo { get; set; }
	}
	
	/// <summary>
	/// X.509 certificate as defined in RFC 5280.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CertInfo
	{
		
		/// <summary>
		/// X.509 basic constraints extension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basicConstraints")]
		public string BasicConstraints { get; set; }
		
		/// <summary>
		/// X.509 `notAfter` validity period in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiryDate")]
		public string ExpiryDate { get; set; }
		
		/// <summary>
		/// Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isValid")]
		public string IsValid { get; set; }
		
		/// <summary>
		/// X.509 issuer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuer")]
		public string Issuer { get; set; }
		
		/// <summary>
		/// Public key component of the X.509 subject public key info.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicKey")]
		public string PublicKey { get; set; }
		
		/// <summary>
		/// X.509 serial number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
		
		/// <summary>
		/// X.509 signatureAlgorithm.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sigAlgName")]
		public string SigAlgName { get; set; }
		
		/// <summary>
		/// X.509 subject.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// X.509 subject alternative names (SANs) extension.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subjectAlternativeNames")]
		public string[] SubjectAlternativeNames { get; set; }
		
		/// <summary>
		/// X.509 `notBefore` validity period in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validFrom")]
		public string ValidFrom { get; set; }
		
		/// <summary>
		/// X.509 version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1AliasType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALIAS_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CERT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KEY_CERT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AliasRevisionConfig
	{
		
		/// <summary>
		/// Location of the alias file. For example, a Google Cloud Storage URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Name of the alias revision included in the keystore in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}/revisions/{rev}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudApigeeV1AliasType Type { get; set; }
	}
	
	/// <summary>
	/// `ApiCategory` represents an API category. [Catalog items](/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apidocs) can be tagged with API categories; users viewing the API catalog in the portal will have the option to browse the catalog by category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiCategory
	{
		
		/// <summary>
		/// ID of the category (a UUID).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Name of the portal.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteId")]
		public string SiteId { get; set; }
		
		/// <summary>
		/// Time the category was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The API category resource wrapped with response status, error_code, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiCategoryResponse
	{
		
		/// <summary>
		/// `ApiCategory` represents an API category. [Catalog items](/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apidocs) can be tagged with API categories; users viewing the API catalog in the portal will have the option to browse the catalog by category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GoogleCloudApigeeV1ApiCategory Data { get; set; }
		
		/// <summary>
		/// Unique error code for the request, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Description of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique ID of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Status of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiProduct
	{
		
		/// <summary>
		/// Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiResources")]
		public string[] ApiResources { get; set; }
		
		/// <summary>
		/// Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in "pending" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in "approved" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approvalType")]
		public string ApprovalType { get; set; }
		
		/// <summary>
		/// Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Response only. Creation time of this environment as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Description of the API product. Include key information about the API product that is not captured by other fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Name displayed in the UI or developer portal to developers registering for API access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public string[] Environments { get; set; }
		
		/// <summary>
		/// List of graphQL operation configuration details associated with Apigee API proxies or remote services. Remote services are non-Apigee proxies, such as Istio-Envoy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="graphqlOperationGroup")]
		public GoogleCloudApigeeV1GraphQLOperationGroup GraphqlOperationGroup { get; set; }
		
		/// <summary>
		/// List of gRPC operation configuration details associated with Apigee API proxies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="grpcOperationGroup")]
		public GoogleCloudApigeeV1GrpcOperationGroup GrpcOperationGroup { get; set; }
		
		/// <summary>
		/// Response only. Modified time of this environment as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\-$ %`. **Note:** The internal name cannot be edited when updating the API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of operation configuration details associated with Apigee API proxies or remote services. Remote services are non-Apigee proxies, such as Istio-Envoy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationGroup")]
		public GoogleCloudApigeeV1OperationGroup OperationGroup { get; set; }
		
		/// <summary>
		/// Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxies")]
		public string[] Proxies { get; set; }
		
		/// <summary>
		/// Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public string Quota { get; set; }
		
		/// <summary>
		/// Scope of the quota decides how the quota counter gets applied and evaluate for quota violation. If the Scope is set as PROXY, then all the operations defined for the APIproduct that are associated with the same proxy will share the same quota counter set at the APIproduct level, making it a global counter at a proxy level. If the Scope is set as OPERATION, then each operations get the counter set at the API product dedicated, making it a local counter. Note that, the QuotaCounterScope applies only when an operation does not have dedicated quota set for itself.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaCounterScope")]
		public System.Nullable<GoogleCloudApigeeV1ApiProductQuotaCounterScope> QuotaCounterScope { get; set; }
		
		/// <summary>
		/// Time interval over which the number of request messages is calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaInterval")]
		public string QuotaInterval { get; set; }
		
		/// <summary>
		/// Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaTimeUnit")]
		public string QuotaTimeUnit { get; set; }
		
		/// <summary>
		/// Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
	}
	
	/// <summary>
	/// Key-value pair to store extra metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Attribute
	{
		
		/// <summary>
		/// API key of the attribute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Value of the attribute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// List of graphQL operation configuration details associated with Apigee API proxies or remote services. Remote services are non-Apigee proxies, such as Istio-Envoy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GraphQLOperationGroup
	{
		
		/// <summary>
		/// Flag that specifies whether the configuration is for Apigee API proxy or a remote service. Valid values include `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationConfigType")]
		public string OperationConfigType { get; set; }
		
		/// <summary>
		/// Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationConfigs")]
		public GoogleCloudApigeeV1GraphQLOperationConfig[] OperationConfigs { get; set; }
	}
	
	/// <summary>
	/// Binds the resources in a proxy or remote service with the GraphQL operation and its associated quota enforcement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GraphQLOperationConfig
	{
		
		/// <summary>
		/// Required. Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiSource")]
		public string ApiSource { get; set; }
		
		/// <summary>
		/// Custom attributes associated with the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleCloudApigeeV1GraphQLOperation[] Operations { get; set; }
		
		/// <summary>
		/// Quota contains the essential parameters needed that can be applied on the resources, methods, API source combination associated with this API product. While Quota is optional, setting it prevents requests from exceeding the provisioned parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public GoogleCloudApigeeV1Quota Quota { get; set; }
	}
	
	/// <summary>
	/// Represents the pairing of GraphQL operation types and the GraphQL operation name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GraphQLOperation
	{
		
		/// <summary>
		/// GraphQL operation name. The name and operation type will be used to apply quotas. If no name is specified, the quota will be applied to all GraphQL operations irrespective of their operation names in the payload.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Required. GraphQL operation types. Valid values include `query` or `mutation`. **Note**: Apigee does not currently support `subscription` types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationTypes")]
		public string[] OperationTypes { get; set; }
	}
	
	/// <summary>
	/// Quota contains the essential parameters needed that can be applied on the resources, methods, API source combination associated with this API product. While Quota is optional, setting it prevents requests from exceeding the provisioned parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Quota
	{
		
		/// <summary>
		/// Required. Time interval over which the number of request messages is calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interval")]
		public string Interval { get; set; }
		
		/// <summary>
		/// Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public string Limit { get; set; }
		
		/// <summary>
		/// Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeUnit")]
		public string TimeUnit { get; set; }
	}
	
	/// <summary>
	/// List of gRPC operation configuration details associated with Apigee API proxies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GrpcOperationGroup
	{
		
		/// <summary>
		/// Required. List of operation configurations for either Apigee API proxies that are associated with this API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationConfigs")]
		public GoogleCloudApigeeV1GrpcOperationConfig[] OperationConfigs { get; set; }
	}
	
	/// <summary>
	/// Binds the resources in a proxy or remote service with the gRPC operation and its associated quota enforcement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GrpcOperationConfig
	{
		
		/// <summary>
		/// Required. Name of the API proxy with which the gRPC operation and quota are associated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiSource")]
		public string ApiSource { get; set; }
		
		/// <summary>
		/// Custom attributes associated with the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy. Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply ["ListPets", "GetPet"].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="methods")]
		public string[] Methods { get; set; }
		
		/// <summary>
		/// Quota contains the essential parameters needed that can be applied on the resources, methods, API source combination associated with this API product. While Quota is optional, setting it prevents requests from exceeding the provisioned parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public GoogleCloudApigeeV1Quota Quota { get; set; }
		
		/// <summary>
		/// Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// List of operation configuration details associated with Apigee API proxies or remote services. Remote services are non-Apigee proxies, such as Istio-Envoy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OperationGroup
	{
		
		/// <summary>
		/// Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values include `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationConfigType")]
		public string OperationConfigType { get; set; }
		
		/// <summary>
		/// Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationConfigs")]
		public GoogleCloudApigeeV1OperationConfig[] OperationConfigs { get; set; }
	}
	
	/// <summary>
	/// Binds the resources in an API proxy or remote service with the allowed REST methods and associated quota enforcement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OperationConfig
	{
		
		/// <summary>
		/// Required. Name of the API proxy or remote service with which the resources, methods, and quota are associated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiSource")]
		public string ApiSource { get; set; }
		
		/// <summary>
		/// Custom attributes associated with the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// List of resource/method pairs for the API proxy or remote service to which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleCloudApigeeV1Operation[] Operations { get; set; }
		
		/// <summary>
		/// Quota contains the essential parameters needed that can be applied on the resources, methods, API source combination associated with this API product. While Quota is optional, setting it prevents requests from exceeding the provisioned parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public GoogleCloudApigeeV1Quota Quota { get; set; }
	}
	
	/// <summary>
	/// Represents the pairing of REST resource path and the actions (verbs) allowed on the resource path.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Operation
	{
		
		/// <summary>
		/// methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="methods")]
		public string[] Methods { get; set; }
		
		/// <summary>
		/// Required. REST resource path associated with the API proxy or remote service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1ApiProductQuotaCounterScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUOTA_COUNTER_SCOPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROXY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiProductRef
	{
		
		/// <summary>
		/// Name of the API product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiproduct")]
		public string Apiproduct { get; set; }
		
		/// <summary>
		/// Status of the API product. Valid values are `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Metadata describing the API proxy
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiProxy
	{
		
		/// <summary>
		/// Output only. The type of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProxyType")]
		public System.Nullable<GoogleCloudApigeeV1ApiProxyApiProxyType> ApiProxyType { get; set; }
		
		/// <summary>
		/// User labels applied to this API Proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. The id of the most recently created revision for this api proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestRevisionId")]
		public string LatestRevisionId { get; set; }
		
		/// <summary>
		/// Metadata common to many entities in this API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metaData")]
		public GoogleCloudApigeeV1EntityMetadata MetaData { get; set; }
		
		/// <summary>
		/// Output only. Name of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
		
		/// <summary>
		/// Output only. List of revisions defined for the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string[] Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1ApiProxyApiProxyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		API_PROXY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROGRAMMABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFIGURABLE = 2,
	}
	
	/// <summary>
	/// Metadata common to many entities in this API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EntityMetadata
	{
		
		/// <summary>
		/// Time at which the API proxy was created, in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Time at which the API proxy was most recently modified, in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// The type of entity described
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subType")]
		public string SubType { get; set; }
	}
	
	/// <summary>
	/// API proxy revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiProxyRevision
	{
		
		/// <summary>
		/// Output only. The archive that generated this proxy revision. This field is only present on proxy revisions that were generated by an archive. Proxies generated by archives cannot be updated, deleted, or deployed to other environments. Format: `organizations/*/environments/*/archiveDeployments/*`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive")]
		public string Archive { get; set; }
		
		/// <summary>
		/// Base URL of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basepaths")]
		public string[] Basepaths { get; set; }
		
		/// <summary>
		/// Version of the API proxy configuration schema. Currently, only 4.0 is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurationVersion")]
		public GoogleCloudApigeeV1ConfigVersion ConfigurationVersion { get; set; }
		
		/// <summary>
		/// Revision number, app name, and organization for the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextInfo")]
		public string ContextInfo { get; set; }
		
		/// <summary>
		/// Time that the API proxy revision was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Description of the API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Human-readable name of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Metadata describing the API proxy revision as a key-value map.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityMetaDataAsProperties")]
		public System.Collections.Generic.Dictionary<string, string> EntityMetaDataAsProperties { get; set; }
		
		/// <summary>
		/// Output only. This field will be marked as true if revision contains any policies marked as extensible.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasExtensiblePolicy")]
		public System.Nullable<System.Boolean> HasExtensiblePolicy { get; set; }
		
		/// <summary>
		/// List of IntegrationEndpoints in the '/integration-endpoints' directory of the API proxy. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integrationEndpoints")]
		public string[] IntegrationEndpoints { get; set; }
		
		/// <summary>
		/// Time that the API proxy revision was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Name of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of policy names included in the API proxy revision..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policies")]
		public string[] Policies { get; set; }
		
		/// <summary>
		/// List of proxy names included in the API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxies")]
		public string[] Proxies { get; set; }
		
		/// <summary>
		/// List of ProxyEndpoints in the `/proxies` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxyEndpoints")]
		public string[] ProxyEndpoints { get; set; }
		
		/// <summary>
		/// List of resource files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFiles")]
		public GoogleCloudApigeeV1ResourceFiles ResourceFiles { get; set; }
		
		/// <summary>
		/// List of the resources included in the API proxy revision formatted as "{type}://{name}".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public string[] Resources { get; set; }
		
		/// <summary>
		/// API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// List of the shared flows included in the API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedFlows")]
		public string[] SharedFlows { get; set; }
		
		/// <summary>
		/// OpenAPI Specification that is associated with the API proxy. The value is set to a URL or to a path in the specification store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spec")]
		public string Spec { get; set; }
		
		/// <summary>
		/// List of TargetEndpoints in the `/targets` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetEndpoints")]
		public string[] TargetEndpoints { get; set; }
		
		/// <summary>
		/// List of TargetServers referenced in any TargetEndpoint in the API proxy. Typically, you will see this element only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetServers")]
		public string[] TargetServers { get; set; }
		
		/// <summary>
		/// List of the targets included in the API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public string[] Targets { get; set; }
		
		/// <summary>
		/// List of the teams included in the API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="teams")]
		public string[] Teams { get; set; }
		
		/// <summary>
		/// Type. Set to `Application`. Maintained for compatibility with the Apigee Edge API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Version of the API proxy configuration schema. Currently, only 4.0 is supported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ConfigVersion
	{
		
		/// <summary>
		/// Major version of the API proxy configuration schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="majorVersion")]
		public System.Nullable<System.Int32> MajorVersion { get; set; }
		
		/// <summary>
		/// Minor version of the API proxy configuration schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minorVersion")]
		public System.Nullable<System.Int32> MinorVersion { get; set; }
	}
	
	/// <summary>
	/// List of resource files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ResourceFiles
	{
		
		/// <summary>
		/// List of resource files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFile")]
		public GoogleCloudApigeeV1ResourceFile[] ResourceFile { get; set; }
	}
	
	/// <summary>
	/// Metadata about a resource file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ResourceFile
	{
		
		/// <summary>
		/// ID of the resource file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Resource file type. {{ resource_file_type }}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Response for GetApiSecurityRuntimeConfig[EnvironmentService.GetApiSecurityRuntimeConfig].
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ApiSecurityRuntimeConfig
	{
		
		/// <summary>
		/// A list of up to 5 Cloud Storage Blobs that contain SecurityActions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string[] Location { get; set; }
		
		/// <summary>
		/// Name of the environment API Security Runtime configuration resource. Format: `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Revision ID of the API Security Runtime configuration. The higher the value, the more recently the configuration was deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Unique ID for the API Security Runtime configuration. The ID will only change if the environment is deleted and recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Time that the API Security Runtime configuration was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1App
	{
		
		/// <summary>
		/// List of API products associated with the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public GoogleCloudApigeeV1ApiProductRef[] ApiProducts { get; set; }
		
		/// <summary>
		/// Name of the AppGroup
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appGroup")]
		public string AppGroup { get; set; }
		
		/// <summary>
		/// ID of the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appId")]
		public string AppId { get; set; }
		
		/// <summary>
		/// List of attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callbackUrl")]
		public string CallbackUrl { get; set; }
		
		/// <summary>
		/// Name of the company that owns the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
		
		/// <summary>
		/// Output only. Unix time when the app was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public GoogleCloudApigeeV1Credential[] Credentials { get; set; }
		
		/// <summary>
		/// Email of the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="developerEmail")]
		public string DeveloperEmail { get; set; }
		
		/// <summary>
		/// ID of the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="developerId")]
		public string DeveloperId { get; set; }
		
		/// <summary>
		/// Duration, in milliseconds, of the consumer key that will be generated for the app. The default value, -1, indicates an infinite validity period. Once set, the expiration can't be updated. json key: keyExpiresIn
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyExpiresIn")]
		public string KeyExpiresIn { get; set; }
		
		/// <summary>
		/// Output only. Last modified time as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Name of the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
		
		/// <summary>
		/// Status of the credential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Credential
	{
		
		/// <summary>
		/// List of API products this credential can be used for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public GoogleCloudApigeeV1ApiProductRef[] ApiProducts { get; set; }
		
		/// <summary>
		/// List of attributes associated with this credential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Consumer key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerKey")]
		public string ConsumerKey { get; set; }
		
		/// <summary>
		/// Secret key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerSecret")]
		public string ConsumerSecret { get; set; }
		
		/// <summary>
		/// Time the credential will expire in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
		
		/// <summary>
		/// Time the credential was issued in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuedAt")]
		public string IssuedAt { get; set; }
		
		/// <summary>
		/// List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
		
		/// <summary>
		/// Status of the credential. Valid values include `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// AppGroup contains the request/response fields representing the logical grouping of apps. Note that appgroup_id, create_time and update_time cannot be changed by the user, and gets updated by the system. The name and the organization once provided cannot be edited subsequently.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AppGroup
	{
		
		/// <summary>
		/// Output only. Internal identifier that cannot be edited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appGroupId")]
		public string AppGroupId { get; set; }
		
		/// <summary>
		/// A list of attributes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// channel identifier identifies the owner maintaing this grouping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelId")]
		public string ChannelId { get; set; }
		
		/// <summary>
		/// A reference to the associated storefront/marketplace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelUri")]
		public string ChannelUri { get; set; }
		
		/// <summary>
		/// Output only. Created time as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// app group name displayed in the UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Modified time as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Immutable. Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._\-$ %.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. the org the app group is created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organization")]
		public string Organization { get; set; }
		
		/// <summary>
		/// Valid values are `active` or `inactive`. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as `active` or `inactive`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Response for [GetAppGroupApp].[AppGroupApps.GetAppGroupApp], [CreateAppGroupAppRequest].[AppGroupApp.CreateAppGroupAppRequest] and [DeleteAppGroupApp].[AppGroupApp.DeleteAppGroupApp]
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AppGroupApp
	{
		
		/// <summary>
		/// List of API products associated with the AppGroup app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public string[] ApiProducts { get; set; }
		
		/// <summary>
		/// Immutable. Name of the parent AppGroup whose resource name format is of syntax (organizations/*/appgroups/*).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appGroup")]
		public string AppGroup { get; set; }
		
		/// <summary>
		/// Immutable. ID of the AppGroup app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appId")]
		public string AppId { get; set; }
		
		/// <summary>
		/// List of attributes for the AppGroup app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to AppGroup apps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callbackUrl")]
		public string CallbackUrl { get; set; }
		
		/// <summary>
		/// Output only. Time the AppGroup app was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Output only. Set of credentials for the AppGroup app consisting of the consumer key/secret pairs associated with the API products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public GoogleCloudApigeeV1Credential[] Credentials { get; set; }
		
		/// <summary>
		/// Immutable. Expiration time, in seconds, for the consumer key that is generated for the AppGroup app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyExpiresIn")]
		public string KeyExpiresIn { get; set; }
		
		/// <summary>
		/// Output only. Time the AppGroup app was modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Immutable. Name of the AppGroup app whose resource name format is of syntax (organizations/*/appgroups/*/apps/*).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Scopes to apply to the AppGroup app. The specified scopes must already exist for the API product that you associate with the AppGroup app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
		
		/// <summary>
		/// Status of the App. Valid values include `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// AppGroupAppKey contains all the information associated with the credentials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AppGroupAppKey
	{
		
		/// <summary>
		/// Output only. List of API products and its status for which the credential can be used. **Note**: Use UpdateAppGroupAppKeyApiProductRequest API to make the association after the consumer key and secret are created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public GoogleCloudApigeeV1APIProductAssociation[] ApiProducts { get; set; }
		
		/// <summary>
		/// List of attributes associated with the credential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Immutable. Consumer key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerKey")]
		public string ConsumerKey { get; set; }
		
		/// <summary>
		/// Secret key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerSecret")]
		public string ConsumerSecret { get; set; }
		
		/// <summary>
		/// Output only. Time the AppGroup app expires in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
		
		/// <summary>
		/// Immutable. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresInSeconds")]
		public string ExpiresInSeconds { get; set; }
		
		/// <summary>
		/// Output only. Time the AppGroup app was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuedAt")]
		public string IssuedAt { get; set; }
		
		/// <summary>
		/// Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
		
		/// <summary>
		/// Status of the credential. Valid values include `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Archive Deployment information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ArchiveDeployment
	{
		
		/// <summary>
		/// Output only. The time at which the Archive Deployment was created in milliseconds since the epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Input only. The Google Cloud Storage signed URL returned from GenerateUploadUrl and used to upload the Archive zip file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
		
		/// <summary>
		/// User-supplied key-value pairs used to organize ArchiveDeployments. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. A reference to the LRO that created this Archive Deployment in the following format: `organizations/{org}/operations/{id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Output only. The time at which the Archive Deployment was updated in milliseconds since the epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedAt")]
		public string UpdatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AsyncQuery
	{
		
		/// <summary>
		/// Creation time of the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created")]
		public string Created { get; set; }
		
		/// <summary>
		/// Hostname is available only when query is executed at host level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envgroupHostname")]
		public string EnvgroupHostname { get; set; }
		
		/// <summary>
		/// Error is set when query fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// ExecutionTime is available only after the query is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionTime")]
		public string ExecutionTime { get; set; }
		
		/// <summary>
		/// Asynchronous Query Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="queryParams")]
		public GoogleCloudApigeeV1QueryMetadata QueryParams { get; set; }
		
		/// <summary>
		/// Asynchronous Report ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDefinitionId")]
		public string ReportDefinitionId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public GoogleCloudApigeeV1AsyncQueryResult Result { get; set; }
		
		/// <summary>
		/// ResultFileSize is available only after the query is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultFileSize")]
		public string ResultFileSize { get; set; }
		
		/// <summary>
		/// ResultRows is available only after the query is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultRows")]
		public string ResultRows { get; set; }
		
		/// <summary>
		/// Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
		
		/// <summary>
		/// Query state could be "enqueued", "running", "completed", "failed".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Last updated timestamp for the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public string Updated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryMetadata
	{
		
		/// <summary>
		/// Dimensions of the AsyncQuery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// End timestamp of the query range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimestamp")]
		public string EndTimestamp { get; set; }
		
		/// <summary>
		/// Metrics of the AsyncQuery. Example: ["name:message_count,func:sum,alias:sum_message_count"]
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public string[] Metrics { get; set; }
		
		/// <summary>
		/// Output format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputFormat")]
		public string OutputFormat { get; set; }
		
		/// <summary>
		/// Start timestamp of the query range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimestamp")]
		public string StartTimestamp { get; set; }
		
		/// <summary>
		/// Query GroupBy time unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeUnit")]
		public string TimeUnit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AsyncQueryResult
	{
		
		/// <summary>
		/// Query result will be unaccessable after this time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expires")]
		public string Expires { get; set; }
		
		/// <summary>
		/// Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1AsyncQueryResultView
	{
		
		/// <summary>
		/// Error code when there is a failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// Error message when there is a failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudApigeeV1QueryMetadata Metadata { get; set; }
		
		/// <summary>
		/// Rows of query result. Each row is a JSON object. Example: {sum(message_count): 1, developer_app: "(not set)",…}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public string[] Rows { get; set; }
		
		/// <summary>
		/// State of retrieving ResultView.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Attributes
	{
		
		/// <summary>
		/// List of attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attribute")]
		public GoogleCloudApigeeV1Attribute[] Attribute { get; set; }
	}
	
	/// <summary>
	/// Request for BatchUpdateSecurityIncident.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest
	{
		
		/// <summary>
		/// Optional. Required. The request message specifying the resources to update. A maximum of 1000 can be modified in a batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleCloudApigeeV1UpdateSecurityIncidentRequest[] Requests { get; set; }
	}
	
	/// <summary>
	/// Request for UpdateSecurityIncident.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1UpdateSecurityIncidentRequest
	{
		
		/// <summary>
		/// Represents an SecurityIncident resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityIncident")]
		public GoogleCloudApigeeV1SecurityIncident SecurityIncident { get; set; }
		
		/// <summary>
		/// Required. The list of fields to update. Allowed fields are: LINT.IfChange(allowed_update_fields_comment) - observability LINT.ThenChange()
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Represents an SecurityIncident resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityIncident
	{
		
		/// <summary>
		/// Output only. Detection types which are part of the incident. Examples: Flooder, OAuth Abuser, Static Content Scraper, Anomaly Detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectionTypes")]
		public string[] DetectionTypes { get; set; }
		
		/// <summary>
		/// Optional. Display name of the security incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. The time when events associated with the incident were first detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstDetectedTime")]
		public string FirstDetectedTime { get; set; }
		
		/// <summary>
		/// Output only. The time when events associated with the incident were last detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastDetectedTime")]
		public string LastDetectedTime { get; set; }
		
		/// <summary>
		/// Output only. The time when the incident observability was last changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastObservabilityChangeTime")]
		public string LastObservabilityChangeTime { get; set; }
		
		/// <summary>
		/// Immutable. Name of the security incident resource. Format: organizations/{org}/environments/{environment}/securityIncidents/{incident} Example: organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. Indicates if the user archived this incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observability")]
		public System.Nullable<GoogleCloudApigeeV1SecurityIncidentObservability> Observability { get; set; }
		
		/// <summary>
		/// Output only. Risk level of the incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="riskLevel")]
		public System.Nullable<GoogleCloudApigeeV1SecurityIncidentRiskLevel> RiskLevel { get; set; }
		
		/// <summary>
		/// Total traffic detected as part of the incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trafficCount")]
		public string TrafficCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1SecurityIncidentObservability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSERVABILITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1SecurityIncidentRiskLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_LEVEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODERATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVERE = 3,
	}
	
	/// <summary>
	/// Response for BatchUpdateSecurityIncident.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse
	{
		
		/// <summary>
		/// Output only. Updated security incidents
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityIncidents")]
		public GoogleCloudApigeeV1SecurityIncident[] SecurityIncidents { get; set; }
	}
	
	/// <summary>
	/// CanaryEvaluation represents the canary analysis between two versions of the runtime that is serving requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CanaryEvaluation
	{
		
		/// <summary>
		/// Required. The stable version that is serving requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="control")]
		public string Control { get; set; }
		
		/// <summary>
		/// Output only. Create time of the canary evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. End time for the evaluation's analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Labels that can be used to filter Apigee metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricLabels")]
		public GoogleCloudApigeeV1CanaryEvaluationMetricLabels MetricLabels { get; set; }
		
		/// <summary>
		/// Output only. Name of the canary evalution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Start time for the canary evaluation's analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The current state of the canary evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1CanaryEvaluationState> State { get; set; }
		
		/// <summary>
		/// Required. The newer version that is serving requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="treatment")]
		public string Treatment { get; set; }
		
		/// <summary>
		/// Output only. The resulting verdict of the canary evaluations: NONE, PASS, or FAIL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verdict")]
		public System.Nullable<GoogleCloudApigeeV1CanaryEvaluationVerdict> Verdict { get; set; }
	}
	
	/// <summary>
	/// Labels that can be used to filter Apigee metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CanaryEvaluationMetricLabels
	{
		
		/// <summary>
		/// The environment ID associated with the metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="env")]
		public string Env { get; set; }
		
		/// <summary>
		/// Required. The instance ID associated with the metrics. In Apigee Hybrid, the value is configured during installation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance_id")]
		public string Instance_id { get; set; }
		
		/// <summary>
		/// Required. The location associated with the metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1CanaryEvaluationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1CanaryEvaluationVerdict
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERDICT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAIL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CommonNameConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="matchWildCards")]
		public System.Nullable<System.Boolean> MatchWildCards { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Request for ComputeEnvironmentScores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ComputeEnvironmentScoresRequest
	{
		
		/// <summary>
		/// Optional. Filters are used to filter scored components. Return all the components if no filter is mentioned. Example: [{ "scorePath": "/org@myorg/envgroup@myenvgroup/env@myenv/proxies/proxy@myproxy/source" }, { "scorePath": "/org@myorg/envgroup@myenvgroup/env@myenv/proxies/proxy@myproxy/target", }] This will return components with path: "/org@myorg/envgroup@myenvgroup/env@myenv/proxies/proxy@myproxy/source" OR "/org@myorg/envgroup@myenvgroup/env@myenv/proxies/proxy@myproxy/target"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter[] Filters { get; set; }
		
		/// <summary>
		/// Optional. The maximum number of subcomponents to be returned in a single page. The service may return fewer than this value. If unspecified, at most 100 subcomponents will be returned in a single page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Optional. A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public GoogleTypeInterval TimeRange { get; set; }
	}
	
	/// <summary>
	/// Filter scores by component path. Used custom filter instead of AIP-160 as the use cases are highly constrained and predictable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ComputeEnvironmentScoresRequestFilter
	{
		
		/// <summary>
		/// Optional. Return scores for this component. Example: "/org@myorg/envgroup@myenvgroup/env@myenv/proxies/proxy@myproxy/source"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scorePath")]
		public string ScorePath { get; set; }
	}
	
	/// <summary>
	/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeInterval
	{
		
		/// <summary>
		/// Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Response for ComputeEnvironmentScores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ComputeEnvironmentScoresResponse
	{
		
		/// <summary>
		/// A page token, received from a previous `ComputeScore` call. Provide this to retrieve the subsequent page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of scores. One score per day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public GoogleCloudApigeeV1Score[] Scores { get; set; }
	}
	
	/// <summary>
	/// Represents Security Score.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Score
	{
		
		/// <summary>
		/// Component is an individual security element that is scored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="component")]
		public GoogleCloudApigeeV1ScoreComponent Component { get; set; }
		
		/// <summary>
		/// List of all the drilldown score components.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subcomponents")]
		public GoogleCloudApigeeV1ScoreComponent[] Subcomponents { get; set; }
		
		/// <summary>
		/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public GoogleTypeInterval TimeRange { get; set; }
	}
	
	/// <summary>
	/// Component is an individual security element that is scored.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ScoreComponent
	{
		
		/// <summary>
		/// Time when score was calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calculateTime")]
		public string CalculateTime { get; set; }
		
		/// <summary>
		/// Time in the requested time period when data was last captured to compute the score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCaptureTime")]
		public string DataCaptureTime { get; set; }
		
		/// <summary>
		/// List of paths for next components.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drilldownPaths")]
		public string[] DrilldownPaths { get; set; }
		
		/// <summary>
		/// List of recommendations to improve API security.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendations")]
		public GoogleCloudApigeeV1ScoreComponentRecommendation[] Recommendations { get; set; }
		
		/// <summary>
		/// Score for the component.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Int32> Score { get; set; }
		
		/// <summary>
		/// Path of the component. Example: /org@myorg/envgroup@myenvgroup/proxies/proxy@myproxy
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scorePath")]
		public string ScorePath { get; set; }
	}
	
	/// <summary>
	/// Recommendation based on security concerns and score.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ScoreComponentRecommendation
	{
		
		/// <summary>
		/// Actions for the recommendation to improve the security score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public GoogleCloudApigeeV1ScoreComponentRecommendationAction[] Actions { get; set; }
		
		/// <summary>
		/// Description of the recommendation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Potential impact of this recommendation on the overall score. This denotes how important this recommendation is to improve the score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="impact")]
		public System.Nullable<System.Int32> Impact { get; set; }
		
		/// <summary>
		/// Title represents recommendation title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Action to improve security score.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ScoreComponentRecommendationAction
	{
		
		/// <summary>
		/// Action context are all the relevant details for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actionContext")]
		public GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext ActionContext { get; set; }
		
		/// <summary>
		/// Description of the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Action context are all the relevant details for the action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ScoreComponentRecommendationActionActionContext
	{
		
		/// <summary>
		/// Documentation link for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentationLink")]
		public string DocumentationLink { get; set; }
	}
	
	/// <summary>
	/// Request for CreditDeveloperBalance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CreditDeveloperBalanceRequest
	{
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactionAmount")]
		public GoogleTypeMoney TransactionAmount { get; set; }
		
		/// <summary>
		/// Each transaction_id uniquely identifies a credit balance request. If multiple requests are received with the same transaction_id, only one of them will be considered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactionId")]
		public string TransactionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CustomReport
	{
		
		/// <summary>
		/// This field contains the chart type for the report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chartType")]
		public string ChartType { get; set; }
		
		/// <summary>
		/// Legacy field: not used. This field contains a list of comments associated with custom report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comments")]
		public string[] Comments { get; set; }
		
		/// <summary>
		/// Output only. Unix time when the app was created json key: createdAt
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// This contains the list of dimensions for the report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// This is the display name for the report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Environment name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// This field contains the filter expression
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Legacy field: not used. Contains the from time for the report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromTime")]
		public string FromTime { get; set; }
		
		/// <summary>
		/// Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Output only. Last viewed time of this entity as milliseconds since epoch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastViewedAt")]
		public string LastViewedAt { get; set; }
		
		/// <summary>
		/// Legacy field: not used This field contains the limit for the result retrieved
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public string Limit { get; set; }
		
		/// <summary>
		/// Required. This contains the list of metrics
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1CustomReportMetric[] Metrics { get; set; }
		
		/// <summary>
		/// Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Legacy field: not used. This field contains the offset for the data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		public string Offset { get; set; }
		
		/// <summary>
		/// Output only. Organization name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organization")]
		public string Organization { get; set; }
		
		/// <summary>
		/// This field contains report properties such as ui metadata etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudApigeeV1ReportProperty[] Properties { get; set; }
		
		/// <summary>
		/// Legacy field: not used much. Contains the list of sort by columns
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sortByCols")]
		public string[] SortByCols { get; set; }
		
		/// <summary>
		/// Legacy field: not used much. Contains the sort order for the sort columns
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sortOrder")]
		public string SortOrder { get; set; }
		
		/// <summary>
		/// Legacy field: not used. This field contains a list of tags associated with custom report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// This field contains the time unit of aggregation for the report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeUnit")]
		public string TimeUnit { get; set; }
		
		/// <summary>
		/// Legacy field: not used. Contains the end time for the report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="toTime")]
		public string ToTime { get; set; }
		
		/// <summary>
		/// Legacy field: not used. This field contains the top k parameter value for restricting the result
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topk")]
		public string Topk { get; set; }
	}
	
	/// <summary>
	/// This encapsulates a metric property of the form sum(message_count) where name is message_count and function is sum
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1CustomReportMetric
	{
		
		/// <summary>
		/// aggregate function
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="function")]
		public string Function { get; set; }
		
		/// <summary>
		/// name of the metric
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ReportProperty
	{
		
		/// <summary>
		/// name of the property
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="property")]
		public string Property { get; set; }
		
		/// <summary>
		/// property values
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GoogleCloudApigeeV1Attribute[] Value { get; set; }
	}
	
	/// <summary>
	/// Data collector configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DataCollector
	{
		
		/// <summary>
		/// Output only. The time at which the data collector was created in milliseconds since the epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// A description of the data collector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. The time at which the Data Collector was last updated in milliseconds since the epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// ID of the data collector. Must begin with `dc_`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. The type of data this data collector will collect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudApigeeV1DataCollectorType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1DataCollectorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLOAT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATETIME = 5,
	}
	
	/// <summary>
	/// Data collector and its configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DataCollectorConfig
	{
		
		/// <summary>
		/// Name of the data collector in the following format: `organizations/{org}/datacollectors/{datacollector}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Data type accepted by the data collector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudApigeeV1DataCollectorType Type { get; set; }
	}
	
	/// <summary>
	/// The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Datastore
	{
		
		/// <summary>
		/// Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Configuration detail for datastore
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datastoreConfig")]
		public GoogleCloudApigeeV1DatastoreConfig DatastoreConfig { get; set; }
		
		/// <summary>
		/// Required. Display name in UI
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// Output only. Organization that the datastore belongs to
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="org")]
		public string Org { get; set; }
		
		/// <summary>
		/// Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
		
		/// <summary>
		/// Destination storage type. Supported types `gcs` or `bigquery`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetType")]
		public string TargetType { get; set; }
	}
	
	/// <summary>
	/// Configuration detail for datastore
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DatastoreConfig
	{
		
		/// <summary>
		/// Name of the Cloud Storage bucket. Required for `gcs` target_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketName")]
		public string BucketName { get; set; }
		
		/// <summary>
		/// BigQuery dataset name Required for `bigquery` target_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetName")]
		public string DatasetName { get; set; }
		
		/// <summary>
		/// Path of Cloud Storage bucket Required for `gcs` target_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required. GCP project in which the datastore exists
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Prefix of BigQuery table Required for `bigquery` target_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tablePrefix")]
		public string TablePrefix { get; set; }
	}
	
	/// <summary>
	/// Date range of the data to export.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DateRange
	{
		
		/// <summary>
		/// Required. End date (exclusive) of the data to export in the format `yyyy-mm-dd`. The date range ends at 00:00:00 UTC on the end date- which will not be in the output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public string End { get; set; }
		
		/// <summary>
		/// Required. Start date of the data to export in the format `yyyy-mm-dd`. The date range begins at 00:00:00 UTC on the start date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public string Start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DebugMask
	{
		
		/// <summary>
		/// List of JSON paths that specify the JSON elements to be filtered from JSON payloads in error flows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="faultJSONPaths")]
		public string[] FaultJSONPaths { get; set; }
		
		/// <summary>
		/// List of XPaths that specify the XML elements to be filtered from XML payloads in error flows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="faultXPaths")]
		public string[] FaultXPaths { get; set; }
		
		/// <summary>
		/// Name of the debug mask.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Map of namespaces to URIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespaces")]
		public System.Collections.Generic.Dictionary<string, string> Namespaces { get; set; }
		
		/// <summary>
		/// List of JSON paths that specify the JSON elements to be filtered from JSON request message payloads.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestJSONPaths")]
		public string[] RequestJSONPaths { get; set; }
		
		/// <summary>
		/// List of XPaths that specify the XML elements to be filtered from XML request message payloads.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestXPaths")]
		public string[] RequestXPaths { get; set; }
		
		/// <summary>
		/// List of JSON paths that specify the JSON elements to be filtered from JSON response message payloads.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseJSONPaths")]
		public string[] ResponseJSONPaths { get; set; }
		
		/// <summary>
		/// List of XPaths that specify the XML elements to be filtered from XML response message payloads.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseXPaths")]
		public string[] ResponseXPaths { get; set; }
		
		/// <summary>
		/// List of variables that should be masked from the debug output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variables")]
		public string[] Variables { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DebugSession
	{
		
		/// <summary>
		/// Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Output only. The first transaction creation timestamp, recorded by UAP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// A unique ID for this DebugSession.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
		
		/// <summary>
		/// Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracesize")]
		public System.Nullable<System.Int32> Tracesize { get; set; }
		
		/// <summary>
		/// Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validity")]
		public System.Nullable<System.Int32> Validity { get; set; }
	}
	
	/// <summary>
	/// A transaction contains all of the debug information of the entire message flow of an API call processed by the runtime plane. The information is collected and recorded at critical points of the message flow in the runtime apiproxy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DebugSessionTransaction
	{
		
		/// <summary>
		/// Flag indicating whether a transaction is completed or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completed")]
		public System.Nullable<System.Boolean> Completed { get; set; }
		
		/// <summary>
		/// List of debug data collected by runtime plane at various defined points in the flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="point")]
		public GoogleCloudApigeeV1Point[] Point { get; set; }
	}
	
	/// <summary>
	/// Point is a group of information collected by runtime plane at critical points of the message flow of the processed API request. This is a list of supported point IDs, categorized to three major buckets. For each category, debug points that we are currently supporting are listed below: - Flow status debug points: StateChange FlowInfo Condition Execution DebugMask Error - Flow control debug points: FlowCallout Paused Resumed FlowReturn BreakFlow Error - Runtime debug points: ScriptExecutor FlowCalloutStepDefinition CustomTarget StepDefinition Oauth2ServicePoint RaiseFault NodeJS The detail information of the given debug point is stored in a list of results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Point
	{
		
		/// <summary>
		/// Name of a step in the transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// List of results extracted from a given debug point.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GoogleCloudApigeeV1Result[] Results { get; set; }
	}
	
	/// <summary>
	/// Result is short for "action result", could be different types identified by "action_result" field. Supported types: 1. DebugInfo : generic debug info collected by runtime recorded as a list of properties. For example, the contents could be virtual host info, state change result, or execution metadata. Required fields : properties, timestamp 2. RequestMessage: information of a http request. Contains headers, request URI and http methods type.Required fields : headers, uri, verb 3. ResponseMessage: information of a http response. Contains headers, reason phrase and http status code. Required fields : headers, reasonPhrase, statusCode 4. ErrorMessage: information of a http error message. Contains detail error message, reason phrase and status code. Required fields : content, headers, reasonPhrase, statusCode 5. VariableAccess: a list of variable access actions, can be Get, Set and Remove. Required fields : accessList
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Result
	{
		
		/// <summary>
		/// Type of the action result. Can be one of the five: DebugInfo, RequestMessage, ResponseMessage, ErrorMessage, VariableAccess
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ActionResult { get; set; }
		
		/// <summary>
		/// A list of variable access actions agaist the api proxy. Supported values: Get, Set, Remove.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessList")]
		public GoogleCloudApigeeV1Access[] AccessList { get; set; }
		
		/// <summary>
		/// Error message content. for example, "content" : "{\"fault\":{\"faultstring\":\"API timed out\",\"detail\":{\"errorcode\":\"flow.APITimedOut\"}}}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// A list of HTTP headers. for example, '"headers" : [ { "name" : "Content-Length", "value" : "83" }, { "name" : "Content-Type", "value" : "application/json" } ]'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public GoogleCloudApigeeV1Property[] Headers { get; set; }
		
		/// <summary>
		/// Message for compatibility with legacy Edge specification for Java Properties object in JSON.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudApigeeV1Properties Properties { get; set; }
		
		/// <summary>
		/// HTTP response phrase
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reasonPhrase")]
		public string ReasonPhrase { get; set; }
		
		/// <summary>
		/// HTTP response code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public string StatusCode { get; set; }
		
		/// <summary>
		/// Timestamp of when the result is recorded. Its format is dd-mm-yy hh:mm:ss:xxx. For example, `"timestamp" : "12-08-19 00:31:59:960"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		/// <summary>
		/// The relative path of the api proxy. for example, `"uRI" : "/iloveapis"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uRI")]
		public string URI { get; set; }
		
		/// <summary>
		/// HTTP method verb
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verb")]
		public string Verb { get; set; }
	}
	
	/// <summary>
	/// A single property entry in the Properties message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Property
	{
		
		/// <summary>
		/// The property key
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The property value
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Message for compatibility with legacy Edge specification for Java Properties object in JSON.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Properties
	{
		
		/// <summary>
		/// List of all properties in the object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="property")]
		public GoogleCloudApigeeV1Property[] Property { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeleteCustomReportResponse
	{
		
		/// <summary>
		/// The response contains only a message field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Response for certain delete operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeleteResponse
	{
		
		/// <summary>
		/// Unique error code for the request, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Google Cloud name of deleted resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcpResource")]
		public string GcpResource { get; set; }
		
		/// <summary>
		/// Description of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique ID of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Status of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Deployment
	{
		
		/// <summary>
		/// API proxy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProxy")]
		public string ApiProxy { get; set; }
		
		/// <summary>
		/// Time the API proxy was marked `deployed` in the control plane in millisconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployStartTime")]
		public string DeployStartTime { get; set; }
		
		/// <summary>
		/// Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Errors reported for this deployment. Populated only when state == ERROR. **Note**: This field is displayed only when viewing deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GoogleRpcStatus[] Errors { get; set; }
		
		/// <summary>
		/// Status reported by each runtime instance. **Note**: This field is displayed only when viewing deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public GoogleCloudApigeeV1InstanceDeploymentStatus[] Instances { get; set; }
		
		/// <summary>
		/// Status reported by runtime pods. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pods")]
		public GoogleCloudApigeeV1PodStatus[] Pods { get; set; }
		
		/// <summary>
		/// Output only. The type of the deployment (standard or extensible) Deployed proxy revision will be marked as extensible in following 2 cases. 1. The deployed proxy revision uses extensible policies. 2. If a environment supports flowhooks and flow hook is configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxyDeploymentType")]
		public System.Nullable<GoogleCloudApigeeV1DeploymentProxyDeploymentType> ProxyDeploymentType { get; set; }
		
		/// <summary>
		/// API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. **Note**: This field is displayed only when viewing deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routeConflicts")]
		public GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict[] RouteConflicts { get; set; }
		
		/// <summary>
		/// The full resource name of Cloud IAM Service Account that this deployment is using, eg, `projects/-/serviceAccounts/{email}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Current state of the deployment. **Note**: This field is displayed only when viewing deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1DeploymentState> State { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The status of a deployment as reported by a single instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1InstanceDeploymentStatus
	{
		
		/// <summary>
		/// Revisions currently deployed in MPs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedRevisions")]
		public GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision[] DeployedRevisions { get; set; }
		
		/// <summary>
		/// Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedRoutes")]
		public GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute[] DeployedRoutes { get; set; }
		
		/// <summary>
		/// ID of the instance reporting the status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
	}
	
	/// <summary>
	/// Revisions deployed in the MPs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision
	{
		
		/// <summary>
		/// Percentage of MP replicas reporting this revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentage")]
		public System.Nullable<System.Int32> Percentage { get; set; }
		
		/// <summary>
		/// API proxy revision reported as deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
	}
	
	/// <summary>
	/// Route deployed in the ingress routing table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute
	{
		
		/// <summary>
		/// Base path in the routing table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basepath")]
		public string Basepath { get; set; }
		
		/// <summary>
		/// Environment group where this route is installed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envgroup")]
		public string Envgroup { get; set; }
		
		/// <summary>
		/// Destination environment. This will be empty if the route is not yet reported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Percentage of ingress replicas reporting this route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentage")]
		public System.Nullable<System.Int32> Percentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1PodStatus
	{
		
		/// <summary>
		/// Version of the application running in the pod.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appVersion")]
		public string AppVersion { get; set; }
		
		/// <summary>
		/// Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentStatus")]
		public string DeploymentStatus { get; set; }
		
		/// <summary>
		/// Time the deployment status was reported in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentStatusTime")]
		public string DeploymentStatusTime { get; set; }
		
		/// <summary>
		/// Time the proxy was deployed in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentTime")]
		public string DeploymentTime { get; set; }
		
		/// <summary>
		/// Name of the pod which is reporting the status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="podName")]
		public string PodName { get; set; }
		
		/// <summary>
		/// Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="podStatus")]
		public string PodStatus { get; set; }
		
		/// <summary>
		/// Time the pod status was reported in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="podStatusTime")]
		public string PodStatusTime { get; set; }
		
		/// <summary>
		/// Code associated with the deployment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public string StatusCode { get; set; }
		
		/// <summary>
		/// Human-readable message associated with the status code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusCodeDetails")]
		public string StatusCodeDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1DeploymentProxyDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROXY_DEPLOYMENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTENSIBLE = 2,
	}
	
	/// <summary>
	/// Describes a routing conflict that may cause a deployment not to receive traffic at some base path.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict
	{
		
		/// <summary>
		/// Tuple representing a base path and the deployment containing it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conflictingDeployment")]
		public GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment ConflictingDeployment { get; set; }
		
		/// <summary>
		/// Human-readable description of this conflict.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Name of the environment group in which this conflict exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentGroup")]
		public string EnvironmentGroup { get; set; }
	}
	
	/// <summary>
	/// Tuple representing a base path and the deployment containing it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
	{
		
		/// <summary>
		/// Name of the deployed API proxy revision containing the base path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProxy")]
		public string ApiProxy { get; set; }
		
		/// <summary>
		/// Base path receiving traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basepath")]
		public string Basepath { get; set; }
		
		/// <summary>
		/// Name of the environment in which the proxy is deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Name of the deployed API proxy revision containing the base path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1DeploymentState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNTIME_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROGRESSING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 3,
	}
	
	/// <summary>
	/// Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeploymentChangeReport
	{
		
		/// <summary>
		/// All routing changes that may result from a deployment request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routingChanges")]
		public GoogleCloudApigeeV1DeploymentChangeReportRoutingChange[] RoutingChanges { get; set; }
		
		/// <summary>
		/// All base path conflicts detected for a deployment request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routingConflicts")]
		public GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict[] RoutingConflicts { get; set; }
		
		/// <summary>
		/// Describes what preconditions have failed. For example, if an RPC failed because it required the Terms of Service to be acknowledged, it could list the terms of service violation in the PreconditionFailure message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationErrors")]
		public GoogleRpcPreconditionFailure ValidationErrors { get; set; }
	}
	
	/// <summary>
	/// Describes a potential routing change that may occur as a result of some deployment operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeploymentChangeReportRoutingChange
	{
		
		/// <summary>
		/// Human-readable description of this routing change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Name of the environment group affected by this routing change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentGroup")]
		public string EnvironmentGroup { get; set; }
		
		/// <summary>
		/// Tuple representing a base path and the deployment containing it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromDeployment")]
		public GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment FromDeployment { get; set; }
		
		/// <summary>
		/// Set to `true` if using sequenced rollout would make this routing change safer. **Note**: This does not necessarily imply that automated sequenced rollout mode is supported for the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shouldSequenceRollout")]
		public System.Nullable<System.Boolean> ShouldSequenceRollout { get; set; }
		
		/// <summary>
		/// Tuple representing a base path and the deployment containing it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="toDeployment")]
		public GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment ToDeployment { get; set; }
	}
	
	/// <summary>
	/// Describes what preconditions have failed. For example, if an RPC failed because it required the Terms of Service to be acknowledged, it could list the terms of service violation in the PreconditionFailure message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcPreconditionFailure
	{
		
		/// <summary>
		/// Describes all precondition violations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="violations")]
		public GoogleRpcPreconditionFailureViolation[] Violations { get; set; }
	}
	
	/// <summary>
	/// A message type used to describe a single precondition failure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcPreconditionFailureViolation
	{
		
		/// <summary>
		/// A description of how the precondition failed. Developers can use this description to understand how to fix the failure. For example: "Terms of service not accepted".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The subject, relative to the type, that failed. For example, "google.com/cloud" relative to the "TOS" type would indicate which terms of service is being referenced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The type of PreconditionFailure. We recommend using a service-specific enum type to define the supported precondition violation subjects. For example, "TOS" for "Terms of Service violation".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// NEXT ID: 11
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeploymentConfig
	{
		
		/// <summary>
		/// Additional key-value metadata for the deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public System.Collections.Generic.Dictionary<string, string> Attributes { get; set; }
		
		/// <summary>
		/// Base path where the application will be hosted. Defaults to "/".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basePath")]
		public string BasePath { get; set; }
		
		/// <summary>
		/// The list of deployment groups in which this proxy should be deployed. Not currently populated for shared flows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentGroups")]
		public string[] DeploymentGroups { get; set; }
		
		/// <summary>
		/// A mapping from basepaths to proxy endpoint names in this proxy. Not populated for shared flows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoints")]
		public System.Collections.Generic.Dictionary<string, string> Endpoints { get; set; }
		
		/// <summary>
		/// Location of the API proxy bundle as a URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Name of the API or shared flow revision to be deployed in the following format: `organizations/{org}/apis/{api}/revisions/{rev}` or `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Unique ID of the API proxy revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxyUid")]
		public string ProxyUid { get; set; }
		
		/// <summary>
		/// The service account identity associated with this deployment. If non-empty, will be in the following format: `projects/-/serviceAccounts/{account_email}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Unique ID. The ID will only change if the deployment is deleted and recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// DeploymentGroupConfig represents a deployment group that should be present in a particular environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeploymentGroupConfig
	{
		
		/// <summary>
		/// Type of the deployment group, which will be either Standard or Extensible.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentGroupType")]
		public System.Nullable<GoogleCloudApigeeV1DeploymentGroupConfigDeploymentGroupType> DeploymentGroupType { get; set; }
		
		/// <summary>
		/// Name of the deployment group in the following format: `organizations/{org}/environments/{env}/deploymentGroups/{group}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Revision number which can be used by the runtime to detect if the deployment group has changed between two versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Unique ID. The ID will only change if the deployment group is deleted and recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1DeploymentGroupConfigDeploymentGroupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYMENT_GROUP_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTENSIBLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Developer
	{
		
		/// <summary>
		/// Access type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessType")]
		public string AccessType { get; set; }
		
		/// <summary>
		/// Developer app family.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appFamily")]
		public string AppFamily { get; set; }
		
		/// <summary>
		/// List of apps associated with the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apps")]
		public string[] Apps { get; set; }
		
		/// <summary>
		/// Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// List of companies associated with the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="companies")]
		public string[] Companies { get; set; }
		
		/// <summary>
		/// Output only. Time at which the developer was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="developerId")]
		public string DeveloperId { get; set; }
		
		/// <summary>
		/// Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required. First name of the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		/// <summary>
		/// Output only. Time at which the developer was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Required. Last name of the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		/// <summary>
		/// Output only. Name of the Apigee organization in which the developer resides.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizationName")]
		public string OrganizationName { get; set; }
		
		/// <summary>
		/// Output only. Status of the developer. Valid values are `active` and `inactive`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Required. User name of the developer. Not used by Apigee hybrid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeveloperApp
	{
		
		/// <summary>
		/// List of API products associated with the developer app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public string[] ApiProducts { get; set; }
		
		/// <summary>
		/// Developer app family.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appFamily")]
		public string AppFamily { get; set; }
		
		/// <summary>
		/// ID of the developer app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appId")]
		public string AppId { get; set; }
		
		/// <summary>
		/// List of attributes for the developer app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callbackUrl")]
		public string CallbackUrl { get; set; }
		
		/// <summary>
		/// Output only. Time the developer app was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public GoogleCloudApigeeV1Credential[] Credentials { get; set; }
		
		/// <summary>
		/// ID of the developer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="developerId")]
		public string DeveloperId { get; set; }
		
		/// <summary>
		/// Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyExpiresIn")]
		public string KeyExpiresIn { get; set; }
		
		/// <summary>
		/// Output only. Time the developer app was modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Name of the developer app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
		
		/// <summary>
		/// Status of the credential. Valid values include `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeveloperAppKey
	{
		
		/// <summary>
		/// List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public string[] ApiProducts { get; set; }
		
		/// <summary>
		/// List of attributes associated with the credential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GoogleCloudApigeeV1Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// Consumer key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerKey")]
		public string ConsumerKey { get; set; }
		
		/// <summary>
		/// Secret key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerSecret")]
		public string ConsumerSecret { get; set; }
		
		/// <summary>
		/// Time the developer app expires in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
		
		/// <summary>
		/// Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresInSeconds")]
		public string ExpiresInSeconds { get; set; }
		
		/// <summary>
		/// Time the developer app was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuedAt")]
		public string IssuedAt { get; set; }
		
		/// <summary>
		/// Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public string[] Scopes { get; set; }
		
		/// <summary>
		/// Status of the credential. Valid values include `approved` or `revoked`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Account balance for the developer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeveloperBalance
	{
		
		/// <summary>
		/// Output only. List of all wallets. Each individual wallet stores the account balance for a particular currency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wallets")]
		public GoogleCloudApigeeV1DeveloperBalanceWallet[] Wallets { get; set; }
	}
	
	/// <summary>
	/// Wallet used to manage an account balance for a particular currency.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeveloperBalanceWallet
	{
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public GoogleTypeMoney Balance { get; set; }
		
		/// <summary>
		/// Output only. Time at which the developer last added credit to the account in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastCreditTime")]
		public string LastCreditTime { get; set; }
	}
	
	/// <summary>
	/// Monetization configuration for the developer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeveloperMonetizationConfig
	{
		
		/// <summary>
		/// Billing type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingType")]
		public System.Nullable<GoogleCloudApigeeV1DeveloperMonetizationConfigBillingType> BillingType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1DeveloperMonetizationConfigBillingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILLING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPAID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTPAID = 2,
	}
	
	/// <summary>
	/// Structure of a DeveloperSubscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DeveloperSubscription
	{
		
		/// <summary>
		/// Name of the API product for which the developer is purchasing a subscription.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiproduct")]
		public string Apiproduct { get; set; }
		
		/// <summary>
		/// Output only. Time when the API product subscription was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Time when the API product subscription ends in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. Time when the API product subscription was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Output only. Name of the API product subscription.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Time when the API product subscription starts in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Encapsulates a metric grouped by dimension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DimensionMetric
	{
		
		/// <summary>
		/// Individual dimension names. E.g. ["dim1_name", "dim2_name"].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualNames")]
		public string[] IndividualNames { get; set; }
		
		/// <summary>
		/// List of metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1Metric[] Metrics { get; set; }
		
		/// <summary>
		/// Comma joined dimension names. E.g. "dim1_name,dim2_name". Deprecated. If name already has comma before join, we may get wrong splits. Please use individual_names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Encapsulates the metric data point. For example: ```{ "name": "sum(message_count)", "values" : [ { "timestamp": 1549004400000, "value": "39.0" }, { "timestamp" : 1548997200000, "value" : "0.0" } ] }``` or ```{ "name": "sum(message_count)", "values" : ["39.0"] }```
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Metric
	{
		
		/// <summary>
		/// Metric name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of metric values. Possible value formats include: `"values":["39.0"]` or `"values":[ { "value": "39.0", "timestamp": 1232434354} ]`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Message to disable an enabled SecurityAction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1DisableSecurityActionRequest
	{
	}
	
	/// <summary>
	/// Message to enable a disabled SecurityAction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EnableSecurityActionRequest
	{
	}
	
	/// <summary>
	/// Apigee endpoint attachment. For more information, see [Southbound networking patterns] (https://cloud.google.com/apigee/docs/api-platform/architecture/southbound-networking-patterns-endpoints).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EndpointAttachment
	{
		
		/// <summary>
		/// Output only. State of the endpoint attachment connection to the service attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionState")]
		public System.Nullable<GoogleCloudApigeeV1EndpointAttachmentConnectionState> ConnectionState { get; set; }
		
		/// <summary>
		/// Output only. Host that can be used in either the HTTP target endpoint directly or as the host in target server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Required. Location of the endpoint attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Format: projects/*/regions/*/serviceAttachments/*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAttachment")]
		public string ServiceAttachment { get; set; }
		
		/// <summary>
		/// Output only. State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1EndpointAttachmentState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1EndpointAttachmentConnectionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCEPTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOSED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FROZEN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEEDS_ATTENTION = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1EndpointAttachmentState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 4,
	}
	
	/// <summary>
	/// EndpointChainingRule specifies the proxies contained in a particular deployment group, so that other deployment groups can find them in chaining calls.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EndpointChainingRule
	{
		
		/// <summary>
		/// The deployment group to target for cross-shard chaining calls to these proxies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentGroup")]
		public string DeploymentGroup { get; set; }
		
		/// <summary>
		/// List of proxy ids which may be found in the given deployment group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxyIds")]
		public string[] ProxyIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Environment
	{
		
		/// <summary>
		/// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProxyType")]
		public GoogleCloudApigeeV1ApiProxyApiProxyType ApiProxyType { get; set; }
		
		/// <summary>
		/// Output only. Creation time of this environment as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and cannot be changed. When you enable archive deployment, you will be **prevented from performing** a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment, including: * Managing the deployment of API proxy or shared flow revisions * Creating, updating, or deleting resource files * Creating, updating, or deleting target servers
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentType")]
		public System.Nullable<GoogleCloudApigeeV1EnvironmentDeploymentType> DeploymentType { get; set; }
		
		/// <summary>
		/// Optional. Description of the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Display name for this environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied. To remove a forward proxy setting, update the field to an empty value. Note: At this time, PUT operations to add forwardProxyUri to an existing environment fail if the environment has nodeConfig set up. To successfully add the forwardProxyUri setting in this case, include the NodeConfig details with the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardProxyUri")]
		public string ForwardProxyUri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hasAttachedFlowHooks")]
		public System.Nullable<System.Boolean> HasAttachedFlowHooks { get; set; }
		
		/// <summary>
		/// Output only. Last modification time of this environment as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Required. Name of the environment. Values must match the regular expression `^[.\\p{Alnum}-_]{1,255}$`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// NodeConfig for setting the min/max number of nodes associated with the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodeConfig")]
		public GoogleCloudApigeeV1NodeConfig NodeConfig { get; set; }
		
		/// <summary>
		/// Message for compatibility with legacy Edge specification for Java Properties object in JSON.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudApigeeV1Properties Properties { get; set; }
		
		/// <summary>
		/// Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudApigeeV1EndpointAttachmentState State { get; set; }
		
		/// <summary>
		/// Optional. EnvironmentType selected for the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudApigeeV1EnvironmentType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1EnvironmentDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYMENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROXY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVE = 2,
	}
	
	/// <summary>
	/// NodeConfig for setting the min/max number of nodes associated with the environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1NodeConfig
	{
		
		/// <summary>
		/// Output only. The current total number of gateway nodes that each environment currently has across all instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentAggregateNodeCount")]
		public string CurrentAggregateNodeCount { get; set; }
		
		/// <summary>
		/// Optional. The maximum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended maximum number of nodes for that gateway.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxNodeCount")]
		public string MaxNodeCount { get; set; }
		
		/// <summary>
		/// Optional. The minimum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended minimum number of nodes for that gateway.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minNodeCount")]
		public string MinNodeCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1EnvironmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENVIRONMENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERMEDIATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPREHENSIVE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EnvironmentConfig
	{
		
		/// <summary>
		/// RuntimeAddonsConfig defines the runtime configurations for add-ons in an environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonsConfig")]
		public GoogleCloudApigeeV1RuntimeAddonsConfig AddonsConfig { get; set; }
		
		/// <summary>
		/// The location for the config blob of API Runtime Control, aka Envoy Adapter, for op-based authentication as a URI, e.g. a Cloud Storage URI. This is only used by Envoy-based gateways.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="arcConfigLocation")]
		public string ArcConfigLocation { get; set; }
		
		/// <summary>
		/// Time that the environment configuration was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// List of data collectors used by the deployments in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCollectors")]
		public GoogleCloudApigeeV1DataCollectorConfig[] DataCollectors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="debugMask")]
		public GoogleCloudApigeeV1DebugMask DebugMask { get; set; }
		
		/// <summary>
		/// List of deployment groups in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentGroups")]
		public GoogleCloudApigeeV1DeploymentGroupConfig[] DeploymentGroups { get; set; }
		
		/// <summary>
		/// List of deployments in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployments")]
		public GoogleCloudApigeeV1DeploymentConfig[] Deployments { get; set; }
		
		/// <summary>
		/// Revision ID for environment-scoped resources (e.g. target servers, keystores) in this config. This ID will increment any time a resource not scoped to a deployment group changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envScopedRevisionId")]
		public string EnvScopedRevisionId { get; set; }
		
		/// <summary>
		/// Feature flags inherited from the organization and environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureFlags")]
		public System.Collections.Generic.Dictionary<string, string> FeatureFlags { get; set; }
		
		/// <summary>
		/// List of flow hooks in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flowhooks")]
		public GoogleCloudApigeeV1FlowHookConfig[] Flowhooks { get; set; }
		
		/// <summary>
		/// The forward proxy's url to be used by the runtime. When set, runtime will send requests to the target via the given forward proxy. This is only used by programmable gateways.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardProxyUri")]
		public string ForwardProxyUri { get; set; }
		
		/// <summary>
		/// The location for the gateway config blob as a URI, e.g. a Cloud Storage URI. This is only used by Envoy-based gateways.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gatewayConfigLocation")]
		public string GatewayConfigLocation { get; set; }
		
		/// <summary>
		/// List of keystores in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keystores")]
		public GoogleCloudApigeeV1KeystoreConfig[] Keystores { get; set; }
		
		/// <summary>
		/// Name of the environment configuration in the following format: `organizations/{org}/environments/{env}/configs/{config}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Used by the Control plane to add context information to help detect the source of the document during diagnostics and debugging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// Name of the PubSub topic for the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pubsubTopic")]
		public string PubsubTopic { get; set; }
		
		/// <summary>
		/// List of resource references in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceReferences")]
		public GoogleCloudApigeeV1ReferenceConfig[] ResourceReferences { get; set; }
		
		/// <summary>
		/// List of resource versions in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public GoogleCloudApigeeV1ResourceConfig[] Resources { get; set; }
		
		/// <summary>
		/// Revision ID of the environment configuration. The higher the value, the more recently the configuration was deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// DEPRECATED: Use revision_id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequenceNumber")]
		public string SequenceNumber { get; set; }
		
		/// <summary>
		/// List of target servers in the environment. Disabled target servers are not displayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public GoogleCloudApigeeV1TargetServerConfig[] Targets { get; set; }
		
		/// <summary>
		/// NEXT ID: 8 RuntimeTraceConfig defines the configurations for distributed trace in an environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="traceConfig")]
		public GoogleCloudApigeeV1RuntimeTraceConfig TraceConfig { get; set; }
		
		/// <summary>
		/// Unique ID for the environment configuration. The ID will only change if the environment is deleted and recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// RuntimeAddonsConfig defines the runtime configurations for add-ons in an environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeAddonsConfig
	{
		
		/// <summary>
		/// Runtime configuration for the Analytics add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsConfig")]
		public GoogleCloudApigeeV1RuntimeAnalyticsConfig AnalyticsConfig { get; set; }
		
		/// <summary>
		/// Runtime configuration for the API Security add-on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiSecurityConfig")]
		public GoogleCloudApigeeV1RuntimeApiSecurityConfig ApiSecurityConfig { get; set; }
		
		/// <summary>
		/// Name of the addons config in the format: `organizations/{org}/environments/{env}/addonsConfig`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Revision number used by the runtime to detect config changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// UID is to detect if config is recreated after deletion. The add-on config will only be deleted when the environment itself gets deleted, thus it will always be the same as the UID of EnvironmentConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// Runtime configuration for the Analytics add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeAnalyticsConfig
	{
		
		/// <summary>
		/// If Runtime should send billing data to AX or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingPipelineEnabled")]
		public System.Nullable<System.Boolean> BillingPipelineEnabled { get; set; }
		
		/// <summary>
		/// If the Analytics is enabled or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Runtime configuration for the API Security add-on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeApiSecurityConfig
	{
		
		/// <summary>
		/// If the API Security is enabled or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1FlowHookConfig
	{
		
		/// <summary>
		/// Flag that specifies whether the flow should abort after an error in the flow hook. Defaults to `true` (continue on error).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="continueOnError")]
		public System.Nullable<System.Boolean> ContinueOnError { get; set; }
		
		/// <summary>
		/// Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{point}`. Valid `point` values include: `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, and `PostTargetFlowHook`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Name of the shared flow to invoke in the following format: `organizations/{org}/sharedflows/{sharedflow}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedFlowName")]
		public string SharedFlowName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1KeystoreConfig
	{
		
		/// <summary>
		/// Aliases in the keystore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aliases")]
		public GoogleCloudApigeeV1AliasRevisionConfig[] Aliases { get; set; }
		
		/// <summary>
		/// Resource name in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ReferenceConfig
	{
		
		/// <summary>
		/// Name of the reference in the following format: `organizations/{org}/environments/{env}/references/{reference}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Name of the referenced resource in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` Only references to keystore resources are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ResourceConfig
	{
		
		/// <summary>
		/// Location of the resource as a URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Resource name in the following format: `organizations/{org}/environments/{env}/resourcefiles/{type}/{file}/revisions/{rev}` Only environment-scoped resource files are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TargetServerConfig
	{
		
		/// <summary>
		/// Whether the target server is enabled. An empty/omitted value for this field should be interpreted as true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Host name of the target server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Target server revision name in the following format: `organizations/{org}/environments/{env}/targetservers/{targetserver}/revisions/{rev}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Port number for the target server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// The protocol used by this target server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public System.Nullable<GoogleCloudApigeeV1TargetServerConfigProtocol> Protocol { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tlsInfo")]
		public GoogleCloudApigeeV1TlsInfoConfig TlsInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1TargetServerConfigProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROTOCOL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRPC_TARGET = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRPC = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL_CALLOUT = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TlsInfoConfig
	{
		
		/// <summary>
		/// List of ciphers that are granted access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ciphers")]
		public string[] Ciphers { get; set; }
		
		/// <summary>
		/// Flag that specifies whether client-side authentication is enabled for the target server. Enables two-way TLS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientAuthEnabled")]
		public System.Nullable<System.Boolean> ClientAuthEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="commonName")]
		public GoogleCloudApigeeV1CommonNameConfig CommonName { get; set; }
		
		/// <summary>
		/// Flag that specifies whether one-way TLS is enabled. Set to `true` to enable one-way TLS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Flag that specifies whether to ignore TLS certificate validation errors. Set to `true` to ignore errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ignoreValidationErrors")]
		public System.Nullable<System.Boolean> IgnoreValidationErrors { get; set; }
		
		/// <summary>
		/// Name of the alias used for client-side authentication in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyAlias")]
		public string KeyAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyAliasReference")]
		public GoogleCloudApigeeV1KeyAliasReference KeyAliasReference { get; set; }
		
		/// <summary>
		/// List of TLS protocols that are granted access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocols")]
		public string[] Protocols { get; set; }
		
		/// <summary>
		/// Name of the keystore or keystore reference containing trusted certificates for the server in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` or `organizations/{org}/environments/{env}/references/{reference}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustStore")]
		public string TrustStore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1KeyAliasReference
	{
		
		/// <summary>
		/// Alias ID. Must exist in the keystore referred to by the reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aliasId")]
		public string AliasId { get; set; }
		
		/// <summary>
		/// Reference name in the following format: `organizations/{org}/environments/{env}/references/{reference}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
	}
	
	/// <summary>
	/// NEXT ID: 8 RuntimeTraceConfig defines the configurations for distributed trace in an environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeTraceConfig
	{
		
		/// <summary>
		/// Endpoint of the exporter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exporter")]
		public System.Nullable<GoogleCloudApigeeV1RuntimeTraceConfigExporter> Exporter { get; set; }
		
		/// <summary>
		/// Name of the trace config in the following format: `organizations/{org}/environment/{env}/traceConfig`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of trace configuration overrides for spicific API proxies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overrides")]
		public GoogleCloudApigeeV1RuntimeTraceConfigOverride[] Overrides { get; set; }
		
		/// <summary>
		/// The timestamp that the revision was created or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreateTime")]
		public string RevisionCreateTime { get; set; }
		
		/// <summary>
		/// Revision number which can be used by the runtime to detect if the trace config has changed between two versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// NEXT ID: 3 RuntimeTraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingConfig")]
		public GoogleCloudApigeeV1RuntimeTraceSamplingConfig SamplingConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RuntimeTraceConfigExporter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPORTER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JAEGER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_TRACE = 2,
	}
	
	/// <summary>
	/// NEXT ID: 7 Trace configuration override for a specific API proxy in an environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeTraceConfigOverride
	{
		
		/// <summary>
		/// Name of the API proxy that will have its trace configuration overridden following format: `organizations/{org}/apis/{api}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProxy")]
		public string ApiProxy { get; set; }
		
		/// <summary>
		/// Name of the trace config override in the following format: `organizations/{org}/environment/{env}/traceConfig/overrides/{override}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The timestamp that the revision was created or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreateTime")]
		public string RevisionCreateTime { get; set; }
		
		/// <summary>
		/// Revision number which can be used by the runtime to detect if the trace config override has changed between two versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// NEXT ID: 3 RuntimeTraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingConfig")]
		public GoogleCloudApigeeV1RuntimeTraceSamplingConfig SamplingConfig { get; set; }
		
		/// <summary>
		/// Unique ID for the configuration override. The ID will only change if the override is deleted and recreated. Corresponds to name's "override" field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// NEXT ID: 3 RuntimeTraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeTraceSamplingConfig
	{
		
		/// <summary>
		/// Sampler of distributed tracing. OFF is the default value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampler")]
		public System.Nullable<GoogleCloudApigeeV1RuntimeTraceSamplingConfigSampler> Sampler { get; set; }
		
		/// <summary>
		/// Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingRate")]
		public System.Nullable<System.Single> SamplingRate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RuntimeTraceSamplingConfigSampler
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAMPLER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROBABILITY = 2,
	}
	
	/// <summary>
	/// EnvironmentGroup configuration. An environment group is used to group one or more Apigee environments under a single host name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EnvironmentGroup
	{
		
		/// <summary>
		/// Output only. The time at which the environment group was created as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Required. Host names for this environment group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostnames")]
		public string[] Hostnames { get; set; }
		
		/// <summary>
		/// Output only. The time at which the environment group was last updated as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// ID of the environment group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. State of the environment group. Values other than ACTIVE means the resource is not ready to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudApigeeV1EndpointAttachmentState State { get; set; }
	}
	
	/// <summary>
	/// EnvironmentGroupAttachment is a resource which defines an attachment of an environment to an environment group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EnvironmentGroupAttachment
	{
		
		/// <summary>
		/// Output only. The time at which the environment group attachment was created as milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Required. ID of the attached environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Output only. ID of the environment group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentGroupId")]
		public string EnvironmentGroupId { get; set; }
		
		/// <summary>
		/// ID of the environment group attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// EnvironmentGroupConfig is a revisioned snapshot of an EnvironmentGroup and its associated routing rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1EnvironmentGroupConfig
	{
		
		/// <summary>
		/// A list of proxies in each deployment group for proxy chaining calls.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpointChainingRules")]
		public GoogleCloudApigeeV1EndpointChainingRule[] EndpointChainingRules { get; set; }
		
		/// <summary>
		/// Host names for the environment group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostnames")]
		public string[] Hostnames { get; set; }
		
		/// <summary>
		/// When this message appears in the top-level IngressConfig, this field will be populated in lieu of the inlined routing_rules and hostnames fields. Some URL for downloading the full EnvironmentGroupConfig for this group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Revision id that defines the ordering of the EnvironmentGroupConfig resource. The higher the revision, the more recently the configuration was deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Ordered list of routing rules defining how traffic to this environment group's hostnames should be routed to different environments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routingRules")]
		public GoogleCloudApigeeV1RoutingRule[] RoutingRules { get; set; }
		
		/// <summary>
		/// A unique id for the environment group config that will only change if the environment group is deleted and recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RoutingRule
	{
		
		/// <summary>
		/// URI path prefix used to route to the specified environment. May contain one or more wildcards. For example, path segments consisting of a single `*` character will match any string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basepath")]
		public string Basepath { get; set; }
		
		/// <summary>
		/// Name of a deployment group in an environment bound to the environment group in the following format: `organizations/{org}/environment/{env}/deploymentGroups/{group}` Only one of environment or deployment_group will be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentGroup")]
		public string DeploymentGroup { get; set; }
		
		/// <summary>
		/// The env group config revision_id when this rule was added or last updated. This value is set when the rule is created and will only update if the the environment_id changes. It is used to determine if the runtime is up to date with respect to this rule. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envGroupRevision")]
		public string EnvGroupRevision { get; set; }
		
		/// <summary>
		/// Name of an environment bound to the environment group in the following format: `organizations/{org}/environments/{env}`. Only one of environment or deployment_group will be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Conflicting targets, which will be resource names specifying either deployment groups or environments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherTargets")]
		public string[] OtherTargets { get; set; }
		
		/// <summary>
		/// The resource name of the proxy revision that is receiving this basepath in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="receiver")]
		public string Receiver { get; set; }
		
		/// <summary>
		/// The unix timestamp when this rule was updated. This is updated whenever env_group_revision is updated. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request for ExpireDeveloperSubscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest
	{
	}
	
	/// <summary>
	/// Details of an export job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Export
	{
		
		/// <summary>
		/// Output only. Time the export job was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created")]
		public string Created { get; set; }
		
		/// <summary>
		/// Name of the datastore that is the destination of the export job [datastore]
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datastoreName")]
		public string DatastoreName { get; set; }
		
		/// <summary>
		/// Description of the export job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. Error is set when export fails
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// Output only. Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionTime")]
		public string ExecutionTime { get; set; }
		
		/// <summary>
		/// Display name of the export job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
		
		/// <summary>
		/// Output only. Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Output only. Time the export job was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public string Updated { get; set; }
	}
	
	/// <summary>
	/// Request body for [CreateExportRequest]
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ExportRequest
	{
		
		/// <summary>
		/// Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvDelimiter")]
		public string CsvDelimiter { get; set; }
		
		/// <summary>
		/// Required. Name of the preconfigured datastore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datastoreName")]
		public string DatastoreName { get; set; }
		
		/// <summary>
		/// Date range of the data to export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRange")]
		public GoogleCloudApigeeV1DateRange DateRange { get; set; }
		
		/// <summary>
		/// Optional. Description of the export job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. Display name of the export job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputFormat")]
		public string OutputFormat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1FlowHook
	{
		
		/// <summary>
		/// Optional. Flag that specifies whether execution should continue if the flow hook throws an exception. Set to `true` to continue execution. Set to `false` to stop execution if the flow hook throws an exception. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="continueOnError")]
		public System.Nullable<System.Boolean> ContinueOnError { get; set; }
		
		/// <summary>
		/// Description of the flow hook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. Where in the API call flow the flow hook is invoked. Must be one of `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, or `PostTargetFlowHook`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flowHookPoint")]
		public string FlowHookPoint { get; set; }
		
		/// <summary>
		/// Shared flow attached to this flow hook, or empty if there is none attached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedFlow")]
		public string SharedFlow { get; set; }
	}
	
	/// <summary>
	/// Request for GenerateDownloadUrl method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GenerateDownloadUrlRequest
	{
	}
	
	/// <summary>
	/// Response for GenerateDownloadUrl method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GenerateDownloadUrlResponse
	{
		
		/// <summary>
		/// The Google Cloud Storage signed URL that can be used to download the Archive zip file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downloadUri")]
		public string DownloadUri { get; set; }
	}
	
	/// <summary>
	/// Request for GenerateUploadUrl method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GenerateUploadUrlRequest
	{
	}
	
	/// <summary>
	/// Response for GenerateUploadUrl method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GenerateUploadUrlResponse
	{
		
		/// <summary>
		/// The Google Cloud Storage signed URL that can be used to upload a new Archive zip file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uploadUri")]
		public string UploadUri { get; set; }
	}
	
	/// <summary>
	/// The response for GetAsyncQueryResultUrl
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse
	{
		
		/// <summary>
		/// The list of Signed URLs generated by the CreateAsyncQuery request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="urls")]
		public GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo[] Urls { get; set; }
	}
	
	/// <summary>
	/// A Signed URL and the relevant metadata associated with it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo
	{
		
		/// <summary>
		/// The MD5 Hash of the JSON data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="md5")]
		public string Md5 { get; set; }
		
		/// <summary>
		/// The size of the returned file in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeBytes")]
		public string SizeBytes { get; set; }
		
		/// <summary>
		/// The signed URL of the JSON data. Will be of the form `https://storage.googleapis.com/example-bucket/cat.jpeg?X-Goog-Algorithm= GOOG4-RSA-SHA256&X-Goog-Credential=example%40example-project.iam.gserviceaccount .com%2F20181026%2Fus-central1%2Fstorage%2Fgoog4_request&X-Goog-Date=20181026T18 1309Z&X-Goog-Expires=900&X-Goog-SignedHeaders=host&X-Goog-Signature=247a2aa45f16 9edf4d187d54e7cc46e4731b1e6273242c4f4c39a1d2507a0e58706e25e3a85a7dbb891d62afa849 6def8e260c1db863d9ace85ff0a184b894b117fe46d1225c82f2aa19efd52cf21d3e2022b3b868dc c1aca2741951ed5bf3bb25a34f5e9316a2841e8ff4c530b22ceaa1c5ce09c7cbb5732631510c2058 0e61723f5594de3aea497f195456a2ff2bdd0d13bad47289d8611b6f9cfeef0c46c91a455b94e90a 66924f722292d21e24d31dcfb38ce0c0f353ffa5a9756fc2a9f2b40bc2113206a81e324fc4fd6823 a29163fa845c8ae7eca1fcf6e5bb48b3200983c56c5ca81fffb151cca7402beddfc4a76b13344703 2ea7abedc098d2eb14a7`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Request for GetSyncAuthorization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1GetSyncAuthorizationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1IngressConfig
	{
		
		/// <summary>
		/// List of environment groups in the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentGroups")]
		public GoogleCloudApigeeV1EnvironmentGroupConfig[] EnvironmentGroups { get; set; }
		
		/// <summary>
		/// Name of the resource in the following format: `organizations/{org}/deployedIngressConfig`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Time at which the IngressConfig revision was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreateTime")]
		public string RevisionCreateTime { get; set; }
		
		/// <summary>
		/// Revision id that defines the ordering on IngressConfig resources. The higher the revision, the more recently the configuration was deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// A unique id for the ingress config that will only change if the organization is deleted and recreated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// Apigee runtime instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Instance
	{
		
		/// <summary>
		/// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect to the service attachment. It is an optional field which the customers can provide during the instance creation. By default, the customer project associated with the Apigee organization will be included to the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerAcceptList")]
		public string[] ConsumerAcceptList { get; set; }
		
		/// <summary>
		/// Output only. Time the instance was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Optional. Description of the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskEncryptionKeyName")]
		public string DiskEncryptionKeyName { get; set; }
		
		/// <summary>
		/// Optional. Display name for the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Optional. Comma-separated list of CIDR blocks of length 22 and/or 28 used to create the Apigee instance. Providing CIDR ranges is optional. You can provide just /22 or /28 or both (or neither). Ranges you provide should be freely available as part of a larger named range you have allocated to the Service Networking peering. If this parameter is not provided, Apigee automatically requests an available /22 and /28 CIDR block from Service Networking. Use the /22 CIDR block for configuring your firewall needs to allow traffic from Apigee. Input formats: `a.b.c.d/22` or `e.f.g.h/28` or `a.b.c.d/22,e.f.g.h/28`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipRange")]
		public string IpRange { get; set; }
		
		/// <summary>
		/// Output only. Time the instance was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Required. Compute Engine location where the instance resides.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\d]$`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="peeringCidrRange")]
		public System.Nullable<GoogleCloudApigeeV1InstancePeeringCidrRange> PeeringCidrRange { get; set; }
		
		/// <summary>
		/// Output only. Port number of the exposed Apigee endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// Output only. Version of the runtime system running in the instance. The runtime system is the set of components that serve the API Proxy traffic in your Environments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeVersion")]
		public string RuntimeVersion { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the service attachment created for the instance in the format: `projects/*/regions/*/serviceAttachments/*` Apigee customers can privately forward traffic to this service attachment using the PSC endpoints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAttachment")]
		public string ServiceAttachment { get; set; }
		
		/// <summary>
		/// Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudApigeeV1EndpointAttachmentState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1InstancePeeringCidrRange
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CIDR_RANGE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_16 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_17 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_18 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_19 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_20 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_22 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLASH_23 = 7,
	}
	
	/// <summary>
	/// InstanceAttachment represents the installation of an environment onto an instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1InstanceAttachment
	{
		
		/// <summary>
		/// Output only. Time the attachment was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// ID of the attached environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Output only. ID of the attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Key value map pair where the value represents the data associated with the corresponding key. **Note**: Supported for Apigee hybrid 1.8.x and higher.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1KeyValueEntry
	{
		
		/// <summary>
		/// Resource URI that can be used to identify the scope of the key value map entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Data or payload that is being retrieved and associated with the unique key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Collection of key/value string pairs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1KeyValueMap
	{
		
		/// <summary>
		/// Required. Flag that specifies whether entry values will be encrypted. This field is retained for backward compatibility and the value of encrypted will always be `true`. Apigee X and hybrid do not support unencrypted key value maps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encrypted")]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
		
		/// <summary>
		/// Required. ID of the key value map.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Datastore for Certificates and Aliases.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Keystore
	{
		
		/// <summary>
		/// Output only. Aliases in this keystore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aliases")]
		public string[] Aliases { get; set; }
		
		/// <summary>
		/// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:].-]{1,255}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response for `ListApiCategoriesRequest`. Next ID: 6
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListApiCategoriesResponse
	{
		
		/// <summary>
		/// The API category resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GoogleCloudApigeeV1ApiCategory[] Data { get; set; }
		
		/// <summary>
		/// Unique error code for the request, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public string ErrorCode { get; set; }
		
		/// <summary>
		/// Description of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique ID of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Status of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListApiProductsResponse
	{
		
		/// <summary>
		/// Lists all API product names defined for an organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProduct")]
		public GoogleCloudApigeeV1ApiProduct[] ApiProduct { get; set; }
	}
	
	/// <summary>
	/// To change this message, in the same CL add a change log in go/changing-api-proto-breaks-ui
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListApiProxiesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="proxies")]
		public GoogleCloudApigeeV1ApiProxy[] Proxies { get; set; }
	}
	
	/// <summary>
	/// Response for ListAppGroupApps
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListAppGroupAppsResponse
	{
		
		/// <summary>
		/// List of AppGroup apps and their credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appGroupApps")]
		public GoogleCloudApigeeV1AppGroupApp[] AppGroupApps { get; set; }
		
		/// <summary>
		/// Token that can be sent as `next_page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// ListAppGroupsResponse contains the 0 or more AppGroups, along with the optional page token and the total count of apps.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListAppGroupsResponse
	{
		
		/// <summary>
		/// List of AppGroups.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appGroups")]
		public GoogleCloudApigeeV1AppGroup[] AppGroups { get; set; }
		
		/// <summary>
		/// Token that can be sent as `next_page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Total count of AppGroups.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListAppsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public GoogleCloudApigeeV1App[] App { get; set; }
		
		/// <summary>
		/// Token that can be sent as `next_page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Total count of Apps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
	}
	
	/// <summary>
	/// Response for ListArchiveDeployments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListArchiveDeploymentsResponse
	{
		
		/// <summary>
		/// Archive Deployments in the specified environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archiveDeployments")]
		public GoogleCloudApigeeV1ArchiveDeployment[] ArchiveDeployments { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListArchiveDeployments request to retrieve the next page. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response for ListAsyncQueries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListAsyncQueriesResponse
	{
		
		/// <summary>
		/// The asynchronous queries belong to requested resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queries")]
		public GoogleCloudApigeeV1AsyncQuery[] Queries { get; set; }
	}
	
	/// <summary>
	/// This message encapsulates a list of custom report definitions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListCustomReportsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="qualifier")]
		public GoogleCloudApigeeV1CustomReport[] Qualifier { get; set; }
	}
	
	/// <summary>
	/// Response for ListDataCollectors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListDataCollectorsResponse
	{
		
		/// <summary>
		/// Data collectors in the specified organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataCollectors")]
		public GoogleCloudApigeeV1DataCollector[] DataCollectors { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListDataCollectors request to retrieve the next page. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response for ListDatastores
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListDatastoresResponse
	{
		
		/// <summary>
		/// A list of datastores
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datastores")]
		public GoogleCloudApigeeV1Datastore[] Datastores { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListDebugSessionsResponse
	{
		
		/// <summary>
		/// Page token that you can include in a ListDebugSessionsRequest to retrieve the next page. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Session info that includes debug session ID and the first transaction creation timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessions")]
		public GoogleCloudApigeeV1Session[] Sessions { get; set; }
	}
	
	/// <summary>
	/// Session carries the debug session id and its creation time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Session
	{
		
		/// <summary>
		/// The debug session ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The first transaction creation timestamp in millisecond, recorded by UAP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampMs")]
		public string TimestampMs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListDeploymentsResponse
	{
		
		/// <summary>
		/// List of deployments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployments")]
		public GoogleCloudApigeeV1Deployment[] Deployments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListDeveloperAppsResponse
	{
		
		/// <summary>
		/// List of developer apps and their credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="app")]
		public GoogleCloudApigeeV1DeveloperApp[] App { get; set; }
	}
	
	/// <summary>
	/// Response for ListDeveloperSubscriptions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse
	{
		
		/// <summary>
		/// List of all subscriptions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="developerSubscriptions")]
		public GoogleCloudApigeeV1DeveloperSubscription[] DeveloperSubscriptions { get; set; }
		
		/// <summary>
		/// Value that can be sent as `startKey` to retrieve the next page of content. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextStartKey")]
		public string NextStartKey { get; set; }
	}
	
	/// <summary>
	/// Response for ListEndpointAttachments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListEndpointAttachmentsResponse
	{
		
		/// <summary>
		/// Endpoint attachments in the specified organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpointAttachments")]
		public GoogleCloudApigeeV1EndpointAttachment[] EndpointAttachments { get; set; }
		
		/// <summary>
		/// Page token that you can include in an `ListEndpointAttachments` request to retrieve the next page. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListEnvironmentGroupAttachments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse
	{
		
		/// <summary>
		/// EnvironmentGroupAttachments for the specified environment group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentGroupAttachments")]
		public GoogleCloudApigeeV1EnvironmentGroupAttachment[] EnvironmentGroupAttachments { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListEnvironmentGroupAttachments request to retrieve the next page. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListEnvironmentGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListEnvironmentGroupsResponse
	{
		
		/// <summary>
		/// EnvironmentGroups in the specified organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentGroups")]
		public GoogleCloudApigeeV1EnvironmentGroup[] EnvironmentGroups { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListEnvironmentGroups request to retrieve the next page. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListEnvironmentResources
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListEnvironmentResourcesResponse
	{
		
		/// <summary>
		/// List of resources files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFile")]
		public GoogleCloudApigeeV1ResourceFile[] ResourceFile { get; set; }
	}
	
	/// <summary>
	/// The response for ListExports
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListExportsResponse
	{
		
		/// <summary>
		/// Details of the export jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exports")]
		public GoogleCloudApigeeV1Export[] Exports { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListHybridIssuersResponse
	{
		
		/// <summary>
		/// Lists of hybrid services and its trusted issuer email ids.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuers")]
		public GoogleCloudApigeeV1ServiceIssuersMapping[] Issuers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ServiceIssuersMapping
	{
		
		/// <summary>
		/// List of trusted issuer email ids.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailIds")]
		public string[] EmailIds { get; set; }
		
		/// <summary>
		/// String indicating the Apigee service name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Response for ListInstanceAttachments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListInstanceAttachmentsResponse
	{
		
		/// <summary>
		/// Attachments for the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachments")]
		public GoogleCloudApigeeV1InstanceAttachment[] Attachments { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListInstanceAttachments request to retrieve the next page of content. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListInstances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListInstancesResponse
	{
		
		/// <summary>
		/// Instances in the specified organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public GoogleCloudApigeeV1Instance[] Instances { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListInstance request to retrieve the next page of content. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The request structure for listing key value map keys and its corresponding values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListKeyValueEntriesResponse
	{
		
		/// <summary>
		/// One or more key value map keys and values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyValueEntries")]
		public GoogleCloudApigeeV1KeyValueEntry[] KeyValueEntries { get; set; }
		
		/// <summary>
		/// Token that can be sent as `next_page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response for ListNatAddresses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListNatAddressesResponse
	{
		
		/// <summary>
		/// List of NAT Addresses for the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="natAddresses")]
		public GoogleCloudApigeeV1NatAddress[] NatAddresses { get; set; }
		
		/// <summary>
		/// Page token that you can include in a ListNatAddresses request to retrieve the next page of content. If omitted, no subsequent pages exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Apigee NAT(network address translation) address. A NAT address is a static external IP address used for Internet egress traffic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1NatAddress
	{
		
		/// <summary>
		/// Output only. The static IPV4 address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddress")]
		public string IpAddress { get; set; }
		
		/// <summary>
		/// Required. Resource ID of the NAT address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. State of the nat address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1NatAddressState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1NatAddressState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESERVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListOfDevelopersResponse
	{
		
		/// <summary>
		/// List of developers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="developer")]
		public GoogleCloudApigeeV1Developer[] Developer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListOrganizationsResponse
	{
		
		/// <summary>
		/// List of Apigee organizations and associated Google Cloud projects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizations")]
		public GoogleCloudApigeeV1OrganizationProjectMapping[] Organizations { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OrganizationProjectMapping
	{
		
		/// <summary>
		/// Output only. The Google Cloud region where control plane data is located. For more information, see https://cloud.google.com/about/locations/.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Name of the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organization")]
		public string Organization { get; set; }
		
		/// <summary>
		/// Google Cloud project associated with the Apigee organization
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// DEPRECATED: Use `project_id`. An Apigee Organization is mapped to a single project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectIds")]
		public string[] ProjectIds { get; set; }
	}
	
	/// <summary>
	/// Response for ListRatePlans.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListRatePlansResponse
	{
		
		/// <summary>
		/// Value that can be sent as `startKey` to retrieve the next page of content. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextStartKey")]
		public string NextStartKey { get; set; }
		
		/// <summary>
		/// List of rate plans in an organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ratePlans")]
		public GoogleCloudApigeeV1RatePlan[] RatePlans { get; set; }
	}
	
	/// <summary>
	/// Rate plan details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RatePlan
	{
		
		/// <summary>
		/// Name of the API product that the rate plan is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiproduct")]
		public string Apiproduct { get; set; }
		
		/// <summary>
		/// Frequency at which the customer will be billed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingPeriod")]
		public System.Nullable<GoogleCloudApigeeV1RatePlanBillingPeriod> BillingPeriod { get; set; }
		
		/// <summary>
		/// API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is `STAIRSTEP` and the ranges are defined as follows: ``` { "start": 1, "end": 100, "fee": 75 }, { "start": 101, "end": 200, "fee": 100 }, } ``` Then the following fees would be charged based on the total number of API calls (assuming the currency selected is `USD`): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumptionPricingRates")]
		public GoogleCloudApigeeV1RateRange[] ConsumptionPricingRates { get; set; }
		
		/// <summary>
		/// Pricing model used for consumption-based charges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumptionPricingType")]
		public System.Nullable<GoogleCloudApigeeV1RatePlanConsumptionPricingType> ConsumptionPricingType { get; set; }
		
		/// <summary>
		/// Output only. Time that the rate plan was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Description of the rate plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Display name of the rate plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Time when the rate plan will expire in milliseconds since epoch. Set to 0 or `null` to indicate that the rate plan should never expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Frequency at which the fixed fee is charged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixedFeeFrequency")]
		public System.Nullable<System.Int32> FixedFeeFrequency { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixedRecurringFee")]
		public GoogleTypeMoney FixedRecurringFee { get; set; }
		
		/// <summary>
		/// Output only. Time the rate plan was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Output only. Name of the rate plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// DEPRECATED: This field is no longer supported and will eventually be removed when Apigee Hybrid 1.5/1.6 is no longer supported. Instead, use the `billingType` field inside `DeveloperMonetizationConfig` resource. Flag that specifies the billing account type, prepaid or postpaid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paymentFundingModel")]
		public System.Nullable<GoogleCloudApigeeV1RatePlanPaymentFundingModel> PaymentFundingModel { get; set; }
		
		/// <summary>
		/// Details of the revenue sharing model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revenueShareRates")]
		public GoogleCloudApigeeV1RevenueShareRange[] RevenueShareRates { get; set; }
		
		/// <summary>
		/// Method used to calculate the revenue that is shared with developers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revenueShareType")]
		public System.Nullable<GoogleCloudApigeeV1RatePlanRevenueShareType> RevenueShareType { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="setupFee")]
		public GoogleTypeMoney SetupFee { get; set; }
		
		/// <summary>
		/// Time when the rate plan becomes active in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Current state of the rate plan (draft or published).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1RatePlanState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RatePlanBillingPeriod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILLING_PERIOD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 2,
	}
	
	/// <summary>
	/// API call volume range and the fees charged when the total number of API calls is within the range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RateRange
	{
		
		/// <summary>
		/// Ending value of the range. Set to 0 or `null` for the last range of values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public string End { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fee")]
		public GoogleTypeMoney Fee { get; set; }
		
		/// <summary>
		/// Starting value of the range. Set to 0 or `null` for the initial range of values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public string Start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RatePlanConsumptionPricingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSUMPTION_PRICING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIXED_PER_UNIT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIERED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STAIRSTEP = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RatePlanPaymentFundingModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_FUNDING_MODEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPAID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTPAID = 2,
	}
	
	/// <summary>
	/// API call volume range and the percentage of revenue to share with the developer when the total number of API calls is within the range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RevenueShareRange
	{
		
		/// <summary>
		/// Ending value of the range. Set to 0 or `null` for the last range of values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public string End { get; set; }
		
		/// <summary>
		/// Percentage of the revenue to be shared with the developer. For example, to share 21 percent of the total revenue with the developer, set this value to 21. Specify a decimal number with a maximum of two digits following the decimal point.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharePercentage")]
		public System.Nullable<System.Double> SharePercentage { get; set; }
		
		/// <summary>
		/// Starting value of the range. Set to 0 or `null` for the initial range of values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public string Start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RatePlanRevenueShareType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVENUE_SHARE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIXED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOLUME_BANDED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1RatePlanState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISHED = 2,
	}
	
	/// <summary>
	/// Contains a list of SecurityActions in response to a ListSecurityActionRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListSecurityActionsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The SecurityActions for the specified environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityActions")]
		public GoogleCloudApigeeV1SecurityAction[] SecurityActions { get; set; }
	}
	
	/// <summary>
	/// A SecurityAction is rule that can be enforced at an environment level. The result is one of: - A denied API call - An explicitly allowed API call - A flagged API call (HTTP headers added before the target receives it) At least one condition is required to create a SecurityAction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityAction
	{
		
		/// <summary>
		/// Message that should be set in case of an Allow Action. This does not have any fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allow")]
		public GoogleCloudApigeeV1SecurityActionAllow Allow { get; set; }
		
		/// <summary>
		/// The following are a list of conditions. A valid SecurityAction must contain at least one condition. Within a condition, each element is ORed. Across conditions elements are ANDed. For example if a SecurityAction has the following: api_keys: ["key1", "key2"] and developers: ["dev1", "dev2"] then this is interpreted as: enforce the action if the incoming request has ((api_key = "key1" OR api_key="key") AND (developer="dev1" OR developer="dev2"))
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditionConfig")]
		public GoogleCloudApigeeV1SecurityActionConditionConfig ConditionConfig { get; set; }
		
		/// <summary>
		/// Output only. The create time for this SecurityAction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Message that should be set in case of a Deny Action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deny")]
		public GoogleCloudApigeeV1SecurityActionDeny Deny { get; set; }
		
		/// <summary>
		/// Optional. An optional user provided description of the SecurityAction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The expiration for this SecurityAction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// The message that should be set in the case of a Flag action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flag")]
		public GoogleCloudApigeeV1SecurityActionFlag Flag { get; set; }
		
		/// <summary>
		/// Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1SecurityActionState> State { get; set; }
		
		/// <summary>
		/// Input only. The TTL for this SecurityAction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ttl")]
		public string Ttl { get; set; }
		
		/// <summary>
		/// Output only. The update time for this SecurityAction. This reflects when this SecurityAction changed states.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Message that should be set in case of an Allow Action. This does not have any fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityActionAllow
	{
	}
	
	/// <summary>
	/// The following are a list of conditions. A valid SecurityAction must contain at least one condition. Within a condition, each element is ORed. Across conditions elements are ANDed. For example if a SecurityAction has the following: api_keys: ["key1", "key2"] and developers: ["dev1", "dev2"] then this is interpreted as: enforce the action if the incoming request has ((api_key = "key1" OR api_key="key") AND (developer="dev1" OR developer="dev2"))
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityActionConditionConfig
	{
		
		/// <summary>
		/// Optional. A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper, OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection and Advanced API Scraper.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="botReasons")]
		public string[] BotReasons { get; set; }
		
		/// <summary>
		/// Optional. A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddressRanges")]
		public string[] IpAddressRanges { get; set; }
	}
	
	/// <summary>
	/// Message that should be set in case of a Deny Action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityActionDeny
	{
		
		/// <summary>
		/// Optional. The HTTP response code if the Action = DENY.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseCode")]
		public System.Nullable<System.Int32> ResponseCode { get; set; }
	}
	
	/// <summary>
	/// The message that should be set in the case of a Flag action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityActionFlag
	{
		
		/// <summary>
		/// Optional. A list of HTTP headers to be sent to the target in case of a FLAG SecurityAction. Limit 5 headers per SecurityAction. At least one is mandatory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public GoogleCloudApigeeV1SecurityActionHttpHeader[] Headers { get; set; }
	}
	
	/// <summary>
	/// An HTTP header.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityActionHttpHeader
	{
		
		/// <summary>
		/// The header name to be sent to the target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The header value to be sent to the target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1SecurityActionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 2,
	}
	
	/// <summary>
	/// Response for ListSecurityIncidents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListSecurityIncidentsResponse
	{
		
		/// <summary>
		/// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of security incidents in the organization
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityIncidents")]
		public GoogleCloudApigeeV1SecurityIncident[] SecurityIncidents { get; set; }
	}
	
	/// <summary>
	/// Response for ListSecurityProfileRevisions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse
	{
		
		/// <summary>
		/// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of security profile revisions. The revisions may be attached or unattached to any environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityProfiles")]
		public GoogleCloudApigeeV1SecurityProfile[] SecurityProfiles { get; set; }
	}
	
	/// <summary>
	/// Represents a SecurityProfile resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityProfile
	{
		
		/// <summary>
		/// Description of the security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// DEPRECATED: DO NOT USE Display name of the security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// List of environments attached to security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public GoogleCloudApigeeV1SecurityProfileEnvironment[] Environments { get; set; }
		
		/// <summary>
		/// Output only. Maximum security score that can be generated by this profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxScore")]
		public System.Nullable<System.Int32> MaxScore { get; set; }
		
		/// <summary>
		/// Output only. Minimum security score that can be generated by this profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minScore")]
		public System.Nullable<System.Int32> MinScore { get; set; }
		
		/// <summary>
		/// Immutable. Name of the security profile resource. Format: organizations/{org}/securityProfiles/{profile}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// ProfileConfig defines a set of categories and policies which will be used to compute security score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profileConfig")]
		public GoogleCloudApigeeV1ProfileConfig ProfileConfig { get; set; }
		
		/// <summary>
		/// Output only. The time when revision was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionCreateTime")]
		public string RevisionCreateTime { get; set; }
		
		/// <summary>
		/// Output only. Revision ID of the security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// Output only. DEPRECATED: DO NOT USE The time when revision was published. Once published, the security profile revision cannot be updated further and can be attached to environments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionPublishTime")]
		public string RevisionPublishTime { get; set; }
		
		/// <summary>
		/// Output only. The time when revision was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionUpdateTime")]
		public string RevisionUpdateTime { get; set; }
		
		/// <summary>
		/// List of profile scoring configs in this revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scoringConfigs")]
		public GoogleCloudApigeeV1SecurityProfileScoringConfig[] ScoringConfigs { get; set; }
	}
	
	/// <summary>
	/// Environment information of attached environments. Scoring an environment is enabled only if it is attached to a security profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityProfileEnvironment
	{
		
		/// <summary>
		/// Output only. Time at which environment was attached to the security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachTime")]
		public string AttachTime { get; set; }
		
		/// <summary>
		/// Output only. Name of the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
	}
	
	/// <summary>
	/// ProfileConfig defines a set of categories and policies which will be used to compute security score.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfig
	{
		
		/// <summary>
		/// List of categories of profile config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public GoogleCloudApigeeV1ProfileConfigCategory[] Categories { get; set; }
	}
	
	/// <summary>
	/// Advanced API Security provides security profile that scores the following categories.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigCategory
	{
		
		/// <summary>
		/// Checks for abuse, which includes any requests sent to the API for purposes other than what it is intended for, such as high volumes of requests, data scraping, and abuse related to authorization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse")]
		public GoogleCloudApigeeV1ProfileConfigAbuse Abuse { get; set; }
		
		/// <summary>
		/// By default, following policies will be included: - JWS - JWT - OAuth - BasicAuth - APIKey
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorization")]
		public GoogleCloudApigeeV1ProfileConfigAuthorization Authorization { get; set; }
		
		/// <summary>
		/// Checks to see if you have CORS policy in place.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cors")]
		public GoogleCloudApigeeV1ProfileConfigCORS Cors { get; set; }
		
		/// <summary>
		/// By default, following policies will be included: - OASValidation - SOAPMessageValidation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mediation")]
		public GoogleCloudApigeeV1ProfileConfigMediation Mediation { get; set; }
		
		/// <summary>
		/// Checks to see if you have configured mTLS for the target server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mtls")]
		public GoogleCloudApigeeV1ProfileConfigMTLS Mtls { get; set; }
		
		/// <summary>
		/// By default, following policies will be included: - XMLThreatProtection - JSONThreatProtection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="threat")]
		public GoogleCloudApigeeV1ProfileConfigThreat Threat { get; set; }
	}
	
	/// <summary>
	/// Checks for abuse, which includes any requests sent to the API for purposes other than what it is intended for, such as high volumes of requests, data scraping, and abuse related to authorization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigAbuse
	{
	}
	
	/// <summary>
	/// By default, following policies will be included: - JWS - JWT - OAuth - BasicAuth - APIKey
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigAuthorization
	{
	}
	
	/// <summary>
	/// Checks to see if you have CORS policy in place.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigCORS
	{
	}
	
	/// <summary>
	/// By default, following policies will be included: - OASValidation - SOAPMessageValidation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigMediation
	{
	}
	
	/// <summary>
	/// Checks to see if you have configured mTLS for the target server.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigMTLS
	{
	}
	
	/// <summary>
	/// By default, following policies will be included: - XMLThreatProtection - JSONThreatProtection
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProfileConfigThreat
	{
	}
	
	/// <summary>
	/// Security configurations to manage scoring.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityProfileScoringConfig
	{
		
		/// <summary>
		/// Description of the config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Path of the component config used for scoring.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scorePath")]
		public string ScorePath { get; set; }
		
		/// <summary>
		/// Title of the config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Response for ListSecurityProfiles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListSecurityProfilesResponse
	{
		
		/// <summary>
		/// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of security profiles in the organization. The profiles may be attached or unattached to any environment. This will return latest revision of each profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityProfiles")]
		public GoogleCloudApigeeV1SecurityProfile[] SecurityProfiles { get; set; }
	}
	
	/// <summary>
	/// The response for SecurityReports.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListSecurityReportsResponse
	{
		
		/// <summary>
		/// If the number of security reports exceeded the page size requested, the token can be used to fetch the next page in a subsequent call. If the response is the last page and there are no more reports to return this field is left empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The security reports belong to requested resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityReports")]
		public GoogleCloudApigeeV1SecurityReport[] SecurityReports { get; set; }
	}
	
	/// <summary>
	/// SecurityReport saves all the information about the created security report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityReport
	{
		
		/// <summary>
		/// Creation time of the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created")]
		public string Created { get; set; }
		
		/// <summary>
		/// Display Name specified by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Hostname is available only when query is executed at host level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envgroupHostname")]
		public string EnvgroupHostname { get; set; }
		
		/// <summary>
		/// Error is set when query fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// ExecutionTime is available only after the query is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionTime")]
		public string ExecutionTime { get; set; }
		
		/// <summary>
		/// Metadata for the security report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryParams")]
		public GoogleCloudApigeeV1SecurityReportMetadata QueryParams { get; set; }
		
		/// <summary>
		/// Report Definition ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDefinitionId")]
		public string ReportDefinitionId { get; set; }
		
		/// <summary>
		/// Contains informations about the security report results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public GoogleCloudApigeeV1SecurityReportResultMetadata Result { get; set; }
		
		/// <summary>
		/// ResultFileSize is available only after the query is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultFileSize")]
		public string ResultFileSize { get; set; }
		
		/// <summary>
		/// ResultRows is available only after the query is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultRows")]
		public string ResultRows { get; set; }
		
		/// <summary>
		/// Self link of the query. Example: `/organizations/myorg/environments/myenv/securityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostSecurityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
		
		/// <summary>
		/// Query state could be "enqueued", "running", "completed", "expired" and "failed".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Output only. Last updated timestamp for the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public string Updated { get; set; }
	}
	
	/// <summary>
	/// Metadata for the security report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityReportMetadata
	{
		
		/// <summary>
		/// Dimensions of the SecurityReport.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// End timestamp of the query range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimestamp")]
		public string EndTimestamp { get; set; }
		
		/// <summary>
		/// Metrics of the SecurityReport. Example: ["name:bot_count,func:sum,alias:sum_bot_count"]
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public string[] Metrics { get; set; }
		
		/// <summary>
		/// MIME type / Output format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Start timestamp of the query range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimestamp")]
		public string StartTimestamp { get; set; }
		
		/// <summary>
		/// Query GroupBy time unit. Example: "seconds", "minute", "hour"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeUnit")]
		public string TimeUnit { get; set; }
	}
	
	/// <summary>
	/// Contains informations about the security report results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityReportResultMetadata
	{
		
		/// <summary>
		/// Output only. Expire_time is set to 7 days after report creation. Query result will be unaccessable after this time. Example: "2021-05-04T13:38:52-07:00"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expires")]
		public string Expires { get; set; }
		
		/// <summary>
		/// Self link of the query results. Example: `/organizations/myorg/environments/myenv/securityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostSecurityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	/// <summary>
	/// To change this message, in the same CL add a change log in go/changing-api-proto-breaks-ui
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListSharedFlowsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="sharedFlows")]
		public GoogleCloudApigeeV1SharedFlow[] SharedFlows { get; set; }
	}
	
	/// <summary>
	/// The metadata describing a shared flow
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SharedFlow
	{
		
		/// <summary>
		/// The id of the most recently created revision for this shared flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestRevisionId")]
		public string LatestRevisionId { get; set; }
		
		/// <summary>
		/// Metadata common to many entities in this API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metaData")]
		public GoogleCloudApigeeV1EntityMetadata MetaData { get; set; }
		
		/// <summary>
		/// The ID of the shared flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of revisions of this shared flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string[] Revision { get; set; }
	}
	
	/// <summary>
	/// Response for ListTraceConfigOverrides.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ListTraceConfigOverridesResponse
	{
		
		/// <summary>
		/// Token value that can be passed as `page_token` to retrieve the next page of content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List all trace configuration overrides in an environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="traceConfigOverrides")]
		public GoogleCloudApigeeV1TraceConfigOverride[] TraceConfigOverrides { get; set; }
	}
	
	/// <summary>
	/// A representation of a configuration override.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TraceConfigOverride
	{
		
		/// <summary>
		/// ID of the API proxy that will have its trace configuration overridden.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProxy")]
		public string ApiProxy { get; set; }
		
		/// <summary>
		/// ID of the trace configuration override specified as a system-generated UUID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// TraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingConfig")]
		public GoogleCloudApigeeV1TraceSamplingConfig SamplingConfig { get; set; }
	}
	
	/// <summary>
	/// TraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TraceSamplingConfig
	{
		
		/// <summary>
		/// Sampler of distributed tracing. OFF is the default value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampler")]
		public GoogleCloudApigeeV1RuntimeTraceSamplingConfigSampler Sampler { get; set; }
		
		/// <summary>
		/// Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingRate")]
		public System.Nullable<System.Single> SamplingRate { get; set; }
	}
	
	/// <summary>
	/// Encapsulates additional information about query execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Metadata
	{
		
		/// <summary>
		/// List of error messages as strings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string[] Errors { get; set; }
		
		/// <summary>
		/// List of additional information such as data source, if result was truncated. For example: ``` "notices": [ "Source:Postgres", "PG Host:uappg0rw.e2e.apigeeks.net", "query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed", "Table used: edge.api.uapgroup2.agg_api" ]```
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notices")]
		public string[] Notices { get; set; }
	}
	
	/// <summary>
	/// The optionally aggregated metric to query with its ordering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1MetricAggregation
	{
		
		/// <summary>
		/// Aggregation function associated with the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregation")]
		public System.Nullable<GoogleCloudApigeeV1MetricAggregationAggregation> Aggregation { get; set; }
		
		/// <summary>
		/// Name of the metric
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Ordering for this aggregation in the result. For time series this is ignored since the ordering of points depends only on the timestamp, not the values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<GoogleCloudApigeeV1MetricAggregationOrder> Order { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1MetricAggregationAggregation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGGREGATION_FUNCTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVG = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT_DISTINCT = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1MetricAggregationOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORDER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASCENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCENDING = 2,
	}
	
	/// <summary>
	/// Metadata describing an Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OperationMetadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="operationType")]
		public System.Nullable<GoogleCloudApigeeV1OperationMetadataOperationType> OperationType { get; set; }
		
		/// <summary>
		/// Information about operation progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="progress")]
		public GoogleCloudApigeeV1OperationMetadataProgress Progress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudApigeeV1OperationMetadataProgressState State { get; set; }
		
		/// <summary>
		/// Name of the resource for which the operation is operating on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetResourceName")]
		public string TargetResourceName { get; set; }
		
		/// <summary>
		/// Warnings encountered while executing the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public string[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OperationMetadataOperationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSERT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 3,
	}
	
	/// <summary>
	/// Information about operation progress.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OperationMetadataProgress
	{
		
		/// <summary>
		/// Description of the operation's progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The additional details of the progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public System.Collections.Generic.Dictionary<string, object> Details { get; set; }
		
		/// <summary>
		/// The percentage of the operation progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentDone")]
		public System.Nullable<System.Int32> PercentDone { get; set; }
		
		/// <summary>
		/// State of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudApigeeV1OperationMetadataProgressState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OperationMetadataProgressState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINISHED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OptimizedStats
	{
		
		/// <summary>
		/// Encapsulates a response format for JavaScript Optimized Scenario.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GoogleCloudApigeeV1OptimizedStatsResponse Response { get; set; }
	}
	
	/// <summary>
	/// Encapsulates a response format for JavaScript Optimized Scenario.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OptimizedStatsResponse
	{
		
		/// <summary>
		/// List of time unit values. Time unit refers to an epoch timestamp value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] TimeUnit { get; set; }
		
		/// <summary>
		/// Encapsulates additional information about query execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metaData")]
		public GoogleCloudApigeeV1Metadata MetaData { get; set; }
		
		/// <summary>
		/// Boolean flag that indicates whether the results were truncated based on the limit parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultTruncated")]
		public System.Nullable<System.Boolean> ResultTruncated { get; set; }
		
		/// <summary>
		/// Encapsulates a data node as represented below: ``` { "identifier": { "names": [ "apiproxy" ], "values": [ "sirjee" ] }, "metric": [ { "env": "prod", "name": "sum(message_count)", "values": [ 36.0 ] } ] }``` or ``` { "env": "prod", "name": "sum(message_count)", "values": [ 36.0 ] }``` Depending on whether a dimension is present in the query or not the data node type can be a simple metric value or dimension identifier with list of metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GoogleCloudApigeeV1OptimizedStatsNode Stats { get; set; }
	}
	
	/// <summary>
	/// Encapsulates a data node as represented below: ``` { "identifier": { "names": [ "apiproxy" ], "values": [ "sirjee" ] }, "metric": [ { "env": "prod", "name": "sum(message_count)", "values": [ 36.0 ] } ] }``` or ``` { "env": "prod", "name": "sum(message_count)", "values": [ 36.0 ] }``` Depending on whether a dimension is present in the query or not the data node type can be a simple metric value or dimension identifier with list of metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1OptimizedStatsNode
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string[] Data { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Organization
	{
		
		/// <summary>
		/// Add-on configurations for the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonsConfig")]
		public GoogleCloudApigeeV1AddonsConfig AddonsConfig { get; set; }
		
		/// <summary>
		/// Required. DEPRECATED: This field will eventually be deprecated and replaced with a differently-named field. Primary Google Cloud region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsRegion")]
		public string AnalyticsRegion { get; set; }
		
		/// <summary>
		/// Cloud KMS key name used for encrypting API consumer data. Required for US/EU regions when [BillingType](#BillingType) is `SUBSCRIPTION`. When [BillingType](#BillingType) is `EVALUATION` or the region is not US/EU, a Google-Managed encryption key will be used. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiConsumerDataEncryptionKeyName")]
		public string ApiConsumerDataEncryptionKeyName { get; set; }
		
		/// <summary>
		/// This field is needed only for customers with control plane in US or EU. Apigee stores some control plane data only in single region. This field determines which single region Apigee should use. For example: "us-west1" when control plane is in US or "europe-west2" when control plane is in EU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiConsumerDataLocation")]
		public string ApiConsumerDataLocation { get; set; }
		
		/// <summary>
		/// Output only. Apigee Project ID associated with the organization. Use this project to allowlist Apigee in the Service Attachment when using private service connect with Apigee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apigeeProjectId")]
		public string ApigeeProjectId { get; set; }
		
		/// <summary>
		/// Not used by Apigee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public string[] Attributes { get; set; }
		
		/// <summary>
		/// Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizedNetwork")]
		public string AuthorizedNetwork { get; set; }
		
		/// <summary>
		/// Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingType")]
		public System.Nullable<GoogleCloudApigeeV1OrganizationBillingType> BillingType { get; set; }
		
		/// <summary>
		/// Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caCertificate")]
		public string CaCertificate { get; set; }
		
		/// <summary>
		/// Cloud KMS key name used for encrypting control plane data that is stored in a multi region. Required when [BillingType](#BillingType) is `SUBSCRIPTION`. When [BillingType](#BillingType) is `EVALUATION`, a Google-Managed encryption key will be used. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="controlPlaneEncryptionKeyName")]
		public string ControlPlaneEncryptionKeyName { get; set; }
		
		/// <summary>
		/// Output only. Time that the Apigee organization was created in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Not used by Apigee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerName")]
		public string CustomerName { get; set; }
		
		/// <summary>
		/// Description of the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Valid only when RuntimeType is set to CLOUD. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableVpcPeering")]
		public System.Nullable<System.Boolean> DisableVpcPeering { get; set; }
		
		/// <summary>
		/// Display name for the Apigee organization. Unused, but reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. List of environments in the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public string[] Environments { get; set; }
		
		/// <summary>
		/// Output only. Time that the Apigee organization is scheduled for deletion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiresAt")]
		public string ExpiresAt { get; set; }
		
		/// <summary>
		/// Output only. Time that the Apigee organization was last modified in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// Output only. Name of the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configuration for the Portals settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="portalDisabled")]
		public System.Nullable<System.Boolean> PortalDisabled { get; set; }
		
		/// <summary>
		/// Output only. Project ID associated with the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Message for compatibility with legacy Edge specification for Java Properties object in JSON.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudApigeeV1Properties Properties { get; set; }
		
		/// <summary>
		/// Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: "projects/foo/locations/us/keyRings/bar/cryptoKeys/baz". **Note:** Not supported for Apigee hybrid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeDatabaseEncryptionKeyName")]
		public string RuntimeDatabaseEncryptionKeyName { get; set; }
		
		/// <summary>
		/// Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeType")]
		public System.Nullable<GoogleCloudApigeeV1OrganizationRuntimeType> RuntimeType { get; set; }
		
		/// <summary>
		/// Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudApigeeV1EndpointAttachmentState State { get; set; }
		
		/// <summary>
		/// Output only. Subscription plan that the customer has purchased. Output only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionPlan")]
		public System.Nullable<GoogleCloudApigeeV1OrganizationSubscriptionPlan> SubscriptionPlan { get; set; }
		
		/// <summary>
		/// Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionType")]
		public System.Nullable<GoogleCloudApigeeV1OrganizationSubscriptionType> SubscriptionType { get; set; }
		
		/// <summary>
		/// Not used by Apigee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudApigeeV1OrganizationType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OrganizationBillingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILLING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVALUATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYG = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OrganizationRuntimeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNTIME_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HYBRID = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OrganizationSubscriptionPlan
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION_PLAN_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION_2021 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION_2024 = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OrganizationSubscriptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIAL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1OrganizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_TRIAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PAID = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_INTERNAL = 3,
	}
	
	/// <summary>
	/// Request for ProvisionOrganization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ProvisionOrganizationRequest
	{
		
		/// <summary>
		/// Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to `us-west1`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsRegion")]
		public string AnalyticsRegion { get; set; }
		
		/// <summary>
		/// Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizedNetwork")]
		public string AuthorizedNetwork { get; set; }
		
		/// <summary>
		/// Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableVpcPeering")]
		public System.Nullable<System.Boolean> DisableVpcPeering { get; set; }
		
		/// <summary>
		/// Cloud Platform location for the runtime instance. Defaults to zone `us-west1-a`. If a region is provided, `EVAL` organizations will use the region for automatically selecting a zone for the runtime instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeLocation")]
		public string RuntimeLocation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Query
	{
		
		/// <summary>
		/// Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvDelimiter")]
		public string CsvDelimiter { get; set; }
		
		/// <summary>
		/// A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envgroupHostname")]
		public string EnvgroupHostname { get; set; }
		
		/// <summary>
		/// Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupByTimeUnit")]
		public string GroupByTimeUnit { get; set; }
		
		/// <summary>
		/// Maximum number of rows that can be returned in the result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// A list of Metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1QueryMetric[] Metrics { get; set; }
		
		/// <summary>
		/// Asynchronous Query Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputFormat")]
		public string OutputFormat { get; set; }
		
		/// <summary>
		/// Asynchronous Report ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDefinitionId")]
		public string ReportDefinitionId { get; set; }
		
		/// <summary>
		/// Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: "timeRange": { "start": "2018-07-29T00:13:00Z", "end": "2018-08-01T00:18:00Z" }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public object TimeRange { get; set; }
	}
	
	/// <summary>
	/// More info about Metric: https://docs.apigee.com/api-platform/analytics/analytics-reference#metrics
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryMetric
	{
		
		/// <summary>
		/// Alias for the metric. Alias will be used to replace metric name in query results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alias")]
		public string Alias { get; set; }
		
		/// <summary>
		/// Aggregation function: avg, min, max, or sum.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="function")]
		public string Function { get; set; }
		
		/// <summary>
		/// Required. Metric name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// One of `+`, `-`, `/`, `%`, `*`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public string Operator { get; set; }
		
		/// <summary>
		/// Operand value should be provided when operator is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Request payload representing the query to be run for fetching security statistics as rows.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryTabularStatsRequest
	{
		
		/// <summary>
		/// Required. List of dimension names to group the aggregations by.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// Filter further on specific dimension values. Follows the same grammar as custom report's filter expressions. Example, apiproxy eq 'foobar'. https://cloud.google.com/apigee/docs/api-platform/analytics/analytics-reference#filters
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Required. List of metrics and their aggregations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1MetricAggregation[] Metrics { get; set; }
		
		/// <summary>
		/// Page size represents the number of rows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Identifies a sequence of rows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public GoogleTypeInterval TimeRange { get; set; }
	}
	
	/// <summary>
	/// Encapsulates two kinds of stats that are results of the dimensions and aggregations requested. - Tabular rows. - Time series data. Example of tabular rows, Represents security stats results as a row of flat values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryTabularStatsResponse
	{
		
		/// <summary>
		/// Column names corresponding to the same order as the inner values in the stats field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public string[] Columns { get; set; }
		
		/// <summary>
		/// Next page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Resultant rows from the executed query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// QueryTimeSeriesStatsRequest represents a query that returns a collection of time series sequences grouped by their values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryTimeSeriesStatsRequest
	{
		
		/// <summary>
		/// List of dimension names to group the aggregations by. If no dimensions are passed, a single trend line representing the requested metric aggregations grouped by environment is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// Filter further on specific dimension values. Follows the same grammar as custom report's filter expressions. Example, apiproxy eq 'foobar'. https://cloud.google.com/apigee/docs/api-platform/analytics/analytics-reference#filters
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Required. List of metrics and their aggregations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1MetricAggregation[] Metrics { get; set; }
		
		/// <summary>
		/// Page size represents the number of time series sequences, one per unique set of dimensions and their values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Page token stands for a specific collection of time series sequences.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public GoogleTypeInterval TimeRange { get; set; }
		
		/// <summary>
		/// Order the sequences in increasing or decreasing order of timestamps. Default is descending order of timestamps (latest first).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampOrder")]
		public GoogleCloudApigeeV1MetricAggregationOrder TimestampOrder { get; set; }
		
		/// <summary>
		/// Time buckets to group the stats by.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowSize")]
		public System.Nullable<GoogleCloudApigeeV1QueryTimeSeriesStatsRequestWindowSize> WindowSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1QueryTimeSeriesStatsRequestWindowSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOW_SIZE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUTE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOUR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 4,
	}
	
	/// <summary>
	/// Represents security stats result as a collection of time series sequences.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryTimeSeriesStatsResponse
	{
		
		/// <summary>
		/// Column names corresponding to the same order as the inner values in the stats field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public string[] Columns { get; set; }
		
		/// <summary>
		/// Next page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Results of the query returned as a JSON array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence[] Values { get; set; }
	}
	
	/// <summary>
	/// A sequence of time series.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence
	{
		
		/// <summary>
		/// Map of dimensions and their values that uniquely identifies a time series sequence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public System.Collections.Generic.Dictionary<string, string> Dimensions { get; set; }
		
		/// <summary>
		/// List of points. First value of each inner list is a timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="points")]
		public string[] Points { get; set; }
	}
	
	/// <summary>
	/// A Reference configuration. References must refer to a keystore that also exists in the parent environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Reference
	{
		
		/// <summary>
		/// Optional. A human-readable description of this reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refers")]
		public string Refers { get; set; }
		
		/// <summary>
		/// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
	}
	
	/// <summary>
	/// Request for ReportInstanceStatus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ReportInstanceStatusRequest
	{
		
		/// <summary>
		/// A unique ID for the instance which is guaranteed to be unique in case the user installs multiple hybrid runtimes with the same instance ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceUid")]
		public string InstanceUid { get; set; }
		
		/// <summary>
		/// The time the report was generated in the runtime. Used to prevent an old status from overwriting a newer one. An instance should space out it's status reports so that clock skew does not play a factor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportTime")]
		public string ReportTime { get; set; }
		
		/// <summary>
		/// Status for config resources
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public GoogleCloudApigeeV1ResourceStatus[] Resources { get; set; }
	}
	
	/// <summary>
	/// The status of a resource loaded in the runtime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ResourceStatus
	{
		
		/// <summary>
		/// The resource name. Currently only two resources are supported: EnvironmentGroup - organizations/{org}/envgroups/{envgroup} EnvironmentConfig - organizations/{org}/environments/{environment}/deployedConfig
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Revisions of the resource currently deployed in the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisions")]
		public GoogleCloudApigeeV1RevisionStatus[] Revisions { get; set; }
		
		/// <summary>
		/// The total number of replicas that should have this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalReplicas")]
		public System.Nullable<System.Int32> TotalReplicas { get; set; }
		
		/// <summary>
		/// The uid of the resource. In the unexpected case that the instance has multiple uids for the same name, they should be reported under separate ResourceStatuses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// The status of a specific resource revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RevisionStatus
	{
		
		/// <summary>
		/// Errors reported when attempting to load this revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GoogleCloudApigeeV1UpdateError[] Errors { get; set; }
		
		/// <summary>
		/// The json content of the resource revision. Large specs should be sent individually via the spec field to avoid hitting request size limits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsonSpec")]
		public string JsonSpec { get; set; }
		
		/// <summary>
		/// The number of replicas that have successfully loaded this revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replicas")]
		public System.Nullable<System.Int32> Replicas { get; set; }
		
		/// <summary>
		/// The revision of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// Details on why a resource update failed in the runtime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1UpdateError
	{
		
		/// <summary>
		/// Status code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<GoogleCloudApigeeV1UpdateErrorCode> Code { get; set; }
		
		/// <summary>
		/// User-friendly error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The sub resource specific to this error (e.g. a proxy deployed within the EnvironmentConfig). If empty the error refers to the top level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the type of error. This provides a more reliable means to deduplicate errors across revisions and instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleCloudApigeeV1UpdateErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_ARGUMENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEADLINE_EXCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_FOUND = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALREADY_EXISTS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMISSION_DENIED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAUTHENTICATED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_EXHAUSTED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_PRECONDITION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABORTED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUT_OF_RANGE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIMPLEMENTED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_LOSS = 16,
	}
	
	/// <summary>
	/// Placeholder for future enhancements to status reporting protocol
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1ReportInstanceStatusResponse
	{
	}
	
	/// <summary>
	/// Runtime configuration for the organization. Response for GetRuntimeConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1RuntimeConfig
	{
		
		/// <summary>
		/// Cloud Storage bucket used for uploading Analytics records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsBucket")]
		public string AnalyticsBucket { get; set; }
		
		/// <summary>
		/// Name of the resource in the following format: `organizations/{org}/runtimeConfig`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Tenant project ID associated with the Apigee organization. The tenant project is used to host Google-managed resources that are dedicated to this Apigee organization. Clients have limited access to resources within the tenant project used to support Apigee runtime instances. Access to the tenant project is managed using SetSyncAuthorization. It can be empty if the tenant project hasn't been created yet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantProjectId")]
		public string TenantProjectId { get; set; }
		
		/// <summary>
		/// Cloud Storage bucket used for uploading Trace records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="traceBucket")]
		public string TraceBucket { get; set; }
	}
	
	/// <summary>
	/// Response for Schema call
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Schema
	{
		
		/// <summary>
		/// List of schema fields grouped as dimensions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public GoogleCloudApigeeV1SchemaSchemaElement[] Dimensions { get; set; }
		
		/// <summary>
		/// Additional metadata associated with schema. This is a legacy field and usually consists of an empty array of strings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public string[] Meta { get; set; }
		
		/// <summary>
		/// List of schema fields grouped as dimensions that can be used with an aggregate function such as `sum`, `avg`, `min`, and `max`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1SchemaSchemaElement[] Metrics { get; set; }
	}
	
	/// <summary>
	/// Message type for the schema element
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SchemaSchemaElement
	{
		
		/// <summary>
		/// Name of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Properties for the schema field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudApigeeV1SchemaSchemaProperty Properties { get; set; }
	}
	
	/// <summary>
	/// Properties for the schema field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SchemaSchemaProperty
	{
		
		/// <summary>
		/// Time the field was created in RFC3339 string form. For example: `2016-02-26T10:23:09.592Z`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Flag that specifies whether the field is standard in the dataset or a custom field created by the customer. `true` indicates that it is a custom field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom")]
		public string Custom { get; set; }
		
		/// <summary>
		/// Data type of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// SecurityActionsConfig reflects the current state of the SecurityActions feature. This is a singleton resource: https://google.aip.dev/156
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityActionsConfig
	{
		
		/// <summary>
		/// The flag that controls whether this feature is enabled. This is `unset` by default. When this flag is `false`, even if individual rules are enabled, no SecurityActions will be enforced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// This is a singleton resource, the name will always be set by SecurityActions and any user input will be ignored. The name is always: `organizations/{org}/environments/{env}/security_actions_config`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The update time for configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents a SecurityProfileEnvironmentAssociation resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation
	{
		
		/// <summary>
		/// Output only. The time when environment was attached to the security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachTime")]
		public string AttachTime { get; set; }
		
		/// <summary>
		/// Immutable. Name of the environment that the profile is attached to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// DEPRECATED: DO NOT USE Revision ID of the security profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityProfileRevisionId")]
		public string SecurityProfileRevisionId { get; set; }
	}
	
	/// <summary>
	/// Body structure when user makes a request to create a security report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityReportQuery
	{
		
		/// <summary>
		/// Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvDelimiter")]
		public string CsvDelimiter { get; set; }
		
		/// <summary>
		/// A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public string[] Dimensions { get; set; }
		
		/// <summary>
		/// Security Report display name which users can specify.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostSecurityReport where analytics data will be grouped by organization and hostname.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envgroupHostname")]
		public string EnvgroupHostname { get; set; }
		
		/// <summary>
		/// Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupByTimeUnit")]
		public string GroupByTimeUnit { get; set; }
		
		/// <summary>
		/// Maximum number of rows that can be returned in the result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// A list of Metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1SecurityReportQueryMetric[] Metrics { get; set; }
		
		/// <summary>
		/// Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Report Definition ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDefinitionId")]
		public string ReportDefinitionId { get; set; }
		
		/// <summary>
		/// Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: "timeRange": { "start": "2018-07-29T00:13:00Z", "end": "2018-08-01T00:18:00Z" }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public object TimeRange { get; set; }
	}
	
	/// <summary>
	/// Metric of the Query
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityReportQueryMetric
	{
		
		/// <summary>
		/// Aggregation function: avg, min, max, or sum.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregationFunction")]
		public string AggregationFunction { get; set; }
		
		/// <summary>
		/// Alias for the metric. Alias will be used to replace metric name in query results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alias")]
		public string Alias { get; set; }
		
		/// <summary>
		/// Required. Metric name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// One of `+`, `-`, `/`, `%`, `*`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operator")]
		public string Operator { get; set; }
		
		/// <summary>
		/// Operand value should be provided when operator is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The response for security report result view APIs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecurityReportResultView
	{
		
		/// <summary>
		/// Error code when there is a failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// Error message when there is a failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// Metadata for the security report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudApigeeV1SecurityReportMetadata Metadata { get; set; }
		
		/// <summary>
		/// Rows of security report result. Each row is a JSON object. Example: {sum(message_count): 1, developer_app: "(not set)",…}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public string[] Rows { get; set; }
		
		/// <summary>
		/// State of retrieving ResultView.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
	}
	
	/// <summary>
	/// SecuritySettings reflects the current state of the SecuritySettings feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SecuritySettings
	{
		
		/// <summary>
		/// Optional. If true the user consents to the use of ML models for Abuse detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mlRetrainingFeedbackEnabled")]
		public System.Nullable<System.Boolean> MlRetrainingFeedbackEnabled { get; set; }
		
		/// <summary>
		/// Identifier. Full resource name is always `organizations/{org}/securitySettings`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Request for SetAddonEnablement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SetAddonEnablementRequest
	{
		
		/// <summary>
		/// If the Analytics should be enabled in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyticsEnabled")]
		public System.Nullable<System.Boolean> AnalyticsEnabled { get; set; }
		
		/// <summary>
		/// If the API Security should be enabled in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiSecurityEnabled")]
		public System.Nullable<System.Boolean> ApiSecurityEnabled { get; set; }
	}
	
	/// <summary>
	/// Request for SetAddons.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SetAddonsRequest
	{
		
		/// <summary>
		/// Add-on configurations for the Apigee organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addonsConfig")]
		public GoogleCloudApigeeV1AddonsConfig AddonsConfig { get; set; }
	}
	
	/// <summary>
	/// The metadata describing a shared flow revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SharedFlowRevision
	{
		
		/// <summary>
		/// Version of the API proxy configuration schema. Currently, only 4.0 is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configurationVersion")]
		public GoogleCloudApigeeV1ConfigVersion ConfigurationVersion { get; set; }
		
		/// <summary>
		/// A textual description of the shared flow revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextInfo")]
		public string ContextInfo { get; set; }
		
		/// <summary>
		/// Time at which this shared flow revision was created, in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdAt")]
		public string CreatedAt { get; set; }
		
		/// <summary>
		/// Description of the shared flow revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The human readable name of this shared flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A Key-Value map of metadata about this shared flow revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityMetaDataAsProperties")]
		public System.Collections.Generic.Dictionary<string, string> EntityMetaDataAsProperties { get; set; }
		
		/// <summary>
		/// Time at which this shared flow revision was most recently modified, in milliseconds since epoch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedAt")]
		public string LastModifiedAt { get; set; }
		
		/// <summary>
		/// The resource ID of the parent shared flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of policy names included in this shared flow revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policies")]
		public string[] Policies { get; set; }
		
		/// <summary>
		/// List of resource files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFiles")]
		public GoogleCloudApigeeV1ResourceFiles ResourceFiles { get; set; }
		
		/// <summary>
		/// A list of the resources included in this shared flow revision formatted as "{type}://{name}".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public string[] Resources { get; set; }
		
		/// <summary>
		/// The resource ID of this revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// A list of the shared flow names included in this shared flow revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedFlows")]
		public string[] SharedFlows { get; set; }
		
		/// <summary>
		/// The string "Application"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Encapsulates a `stats` response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Stats
	{
		
		/// <summary>
		/// List of query results on the environment level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public GoogleCloudApigeeV1StatsEnvironmentStats[] Environments { get; set; }
		
		/// <summary>
		/// List of query results grouped by host.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hosts")]
		public GoogleCloudApigeeV1StatsHostStats[] Hosts { get; set; }
		
		/// <summary>
		/// Encapsulates additional information about query execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metaData")]
		public GoogleCloudApigeeV1Metadata MetaData { get; set; }
	}
	
	/// <summary>
	/// Encapsulates the environment wrapper: ``` "environments": [ { "metrics": [ { "name": "sum(message_count)", "values": [ "2.52056245E8" ] } ], "name": "prod" } ]```
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1StatsEnvironmentStats
	{
		
		/// <summary>
		/// List of metrics grouped under dimensions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public GoogleCloudApigeeV1DimensionMetric[] Dimensions { get; set; }
		
		/// <summary>
		/// In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only top-level metrics is provided. If dimensions are included, then there will be a top-level dimensions field under environments which will contain metrics values and the dimension name. Example: ``` "environments": [ { "dimensions": [ { "metrics": [ { "name": "sum(message_count)", "values": [ "2.14049521E8" ] } ], "name": "nit_proxy" } ], "name": "prod" } ]``` or ```"environments": [ { "metrics": [ { "name": "sum(message_count)", "values": [ "2.19026331E8" ] } ], "name": "prod" } ]``` List of metric values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1Metric[] Metrics { get; set; }
		
		/// <summary>
		/// Name of the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Encapsulates the hostname wrapper: ``` "hosts": [ { "metrics": [ { "name": "sum(message_count)", "values": [ "2.52056245E8" ] } ], "name": "example.com" } ]```
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1StatsHostStats
	{
		
		/// <summary>
		/// List of metrics grouped under dimensions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensions")]
		public GoogleCloudApigeeV1DimensionMetric[] Dimensions { get; set; }
		
		/// <summary>
		/// In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only the top-level metrics are provided. If dimensions are included, then there will be a top-level dimensions field under hostnames which will contain metrics values and the dimension name. Example: ``` "hosts": [ { "dimensions": [ { "metrics": [ { "name": "sum(message_count)", "values": [ "2.14049521E8" ] } ], "name": "nit_proxy" } ], "name": "example.com" } ]``` OR ```"hosts": [ { "metrics": [ { "name": "sum(message_count)", "values": [ "2.19026331E8" ] } ], "name": "example.com" } ]``` List of metric values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudApigeeV1Metric[] Metrics { get; set; }
		
		/// <summary>
		/// Hostname used in query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Pub/Sub subscription of an environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1Subscription
	{
		
		/// <summary>
		/// Full name of the Pub/Sub subcription. Use the following structure in your request: `subscription "projects/foo/subscription/bar"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1SyncAuthorization
	{
		
		/// <summary>
		/// Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous updates from overwriting each other. For example, when you call [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response. Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid race conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Required. Array of service accounts to grant access to control plane resources, each specified using the following format: `serviceAccount:` service-account-name. The service-account-name is formatted like an email address. For example: `my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about#create-the-service-accounts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identities")]
		public string[] Identities { get; set; }
	}
	
	/// <summary>
	/// TargetServer configuration. TargetServers are used to decouple a proxy TargetEndpoint HTTPTargetConnections from concrete URLs for backend services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TargetServer
	{
		
		/// <summary>
		/// Optional. A human-readable description of this TargetServer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isEnabled")]
		public System.Nullable<System.Boolean> IsEnabled { get; set; }
		
		/// <summary>
		/// Required. The resource id of this target server. Values must match the regular expression 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// Immutable. The protocol used by this TargetServer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public GoogleCloudApigeeV1TargetServerConfigProtocol Protocol { get; set; }
		
		/// <summary>
		/// TLS configuration information for virtual hosts and TargetServers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sSLInfo")]
		public GoogleCloudApigeeV1TlsInfo SSLInfo { get; set; }
	}
	
	/// <summary>
	/// TLS configuration information for virtual hosts and TargetServers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TlsInfo
	{
		
		/// <summary>
		/// The SSL/TLS cipher suites to be used. For programmable proxies, it must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites. For configurable proxies, it must follow the configuration specified in: https://commondatastorage.googleapis.com/chromium-boringssl-docs/ssl.h.html#Cipher-suite-configuration. This setting has no effect for configurable proxies when negotiating TLS 1.3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ciphers")]
		public string[] Ciphers { get; set; }
		
		/// <summary>
		/// Optional. Enables two-way TLS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientAuthEnabled")]
		public System.Nullable<System.Boolean> ClientAuthEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="commonName")]
		public GoogleCloudApigeeV1TlsInfoCommonName CommonName { get; set; }
		
		/// <summary>
		/// Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ignoreValidationErrors")]
		public System.Nullable<System.Boolean> IgnoreValidationErrors { get; set; }
		
		/// <summary>
		/// Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyAlias")]
		public string KeyAlias { get; set; }
		
		/// <summary>
		/// Required if `client_auth_enabled` is true. The resource ID of the keystore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyStore")]
		public string KeyStore { get; set; }
		
		/// <summary>
		/// The TLS versioins to be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocols")]
		public string[] Protocols { get; set; }
		
		/// <summary>
		/// The resource ID of the truststore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustStore")]
		public string TrustStore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TlsInfoCommonName
	{
		
		/// <summary>
		/// The TLS Common Name string of the certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		/// <summary>
		/// Indicates whether the cert should be matched against as a wildcard cert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wildcardMatch")]
		public System.Nullable<System.Boolean> WildcardMatch { get; set; }
	}
	
	/// <summary>
	/// The response for TestDatastore
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TestDatastoreResponse
	{
		
		/// <summary>
		/// Output only. Error message of test connection failure
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// Output only. It could be `completed` or `failed`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
	}
	
	/// <summary>
	/// TraceConfig defines the configurations in an environment of distributed trace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1TraceConfig
	{
		
		/// <summary>
		/// Required. Endpoint of the exporter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Required. Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exporter")]
		public GoogleCloudApigeeV1RuntimeTraceConfigExporter Exporter { get; set; }
		
		/// <summary>
		/// TraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingConfig")]
		public GoogleCloudApigeeV1TraceSamplingConfig SamplingConfig { get; set; }
	}
	
	/// <summary>
	/// Request for UpdateAppGroupAppKey
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest
	{
		
		/// <summary>
		/// Approve or revoke the consumer key by setting this value to `approve` or `revoke` respectively. The `Content-Type` header, if set, must be set to `application/octet-stream`, with empty body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// The list of API products that will be associated with the credential. This list will be appended to the existing list of associated API Products for this App Key. Duplicates will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiProducts")]
		public string[] ApiProducts { get; set; }
		
		/// <summary>
		/// AppGroupAppKey contains all the information associated with the credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appGroupAppKey")]
		public GoogleCloudApigeeV1AppGroupAppKey AppGroupAppKey { get; set; }
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public GoogleIamV1AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<GoogleIamV1AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleIamV1AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeExpr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public GoogleIamV1AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
		/// Apigee_organizations_create v1/organizations
		/// </summary>
		/// <param name="parent">Required. Name of the Google Cloud project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: `projects/`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_createAsync(string parent, GoogleCloudApigeeV1Organization requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/organizations?parent=" + (parent==null? "" : System.Uri.EscapeDataString(parent));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Reports the latest status for a runtime instance.
		/// Apigee_organizations_instances_reportStatus v1/{instance}:reportStatus
		/// </summary>
		/// <param name="instance">The name of the instance reporting this status. For SaaS the request will be rejected if no instance exists under this name. Format is organizations/{org}/instances/{instance}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ReportInstanceStatusResponse> Apigee_organizations_instances_reportStatusAsync(string instance, GoogleCloudApigeeV1ReportInstanceStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (instance==null? "" : System.Uri.EscapeDataString(instance))+":reportStatus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ReportInstanceStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an API category.
		/// Apigee_organizations_sites_apicategories_delete v1/{name}
		/// </summary>
		/// <param name="name">Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`</param>
		/// <param name="retention">Optional. This setting is applicable only for organizations that are soft-deleted (i.e., BillingType is not EVALUATION). It controls how long Organization data will be retained after the initial delete operation completes. During this period, the Organization may be restored to its last known state. After this period, the Organization will no longer be able to be restored.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeleteResponse> Apigee_organizations_sites_apicategories_deleteAsync(string name, Apigee_organizations_sites_apicategories_deleteRetention retention, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&retention=" + retention;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeleteResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an API category.
		/// Apigee_organizations_sites_apicategories_get v1/{name}
		/// </summary>
		/// <param name="name">Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`</param>
		/// <param name="format">Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata is returned.</param>
		/// <param name="envgroupHostname">Required. Hostname for which the interactive query will be executed.</param>
		/// <param name="filter">Filter that enables you to drill-down on specific dimension values.</param>
		/// <param name="limit">Maximum number of result items to return. The default and maximum value that can be returned is 14400.</param>
		/// <param name="offset">Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`.</param>
		/// <param name="realtime">No longer used by Apigee. Supported for backwards compatibility.</param>
		/// <param name="select">Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`</param>
		/// <param name="sort">Flag that specifies whether the sort order should be ascending or descending. Valid values include `DESC` and `ASC`.</param>
		/// <param name="sortby">Comma-separated list of columns used to sort the final result.</param>
		/// <param name="timeRange">Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`.</param>
		/// <param name="timeUnit">Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`.</param>
		/// <param name="topk">Top number of results to return. For example, to return the top 5 results, set `topk=5`.</param>
		/// <param name="tsAscending">Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.</param>
		/// <param name="tzo">Timezone offset value.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ApiCategoryResponse> Apigee_organizations_sites_apicategories_getAsync(
					string name, 
					Apigee_organizations_sites_apicategories_getFormat format, 
					string envgroupHostname, 
					string filter, 
					string limit, 
					string offset, 
					bool realtime, 
					string select, 
					string sort, 
					string sortby, 
					string timeRange, 
					string timeUnit, 
					string topk, 
					bool tsAscending, 
					string tzo, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&format=" + format+"&envgroupHostname=" + (envgroupHostname==null? "" : System.Uri.EscapeDataString(envgroupHostname))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&limit=" + (limit==null? "" : System.Uri.EscapeDataString(limit))+"&offset=" + (offset==null? "" : System.Uri.EscapeDataString(offset))+"&realtime="+realtime+"&select=" + (select==null? "" : System.Uri.EscapeDataString(select))+"&sort=" + (sort==null? "" : System.Uri.EscapeDataString(sort))+"&sortby=" + (sortby==null? "" : System.Uri.EscapeDataString(sortby))+"&timeRange=" + (timeRange==null? "" : System.Uri.EscapeDataString(timeRange))+"&timeUnit=" + (timeUnit==null? "" : System.Uri.EscapeDataString(timeUnit))+"&topk=" + (topk==null? "" : System.Uri.EscapeDataString(topk))+"&tsAscending="+tsAscending+"&tzo=" + (tzo==null? "" : System.Uri.EscapeDataString(tzo));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ApiCategoryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an API category.
		/// Apigee_organizations_sites_apicategories_patch v1/{name}
		/// </summary>
		/// <param name="name">Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`</param>
		/// <param name="updateMask">Required. The list of fields to update.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ApiCategoryResponse> Apigee_organizations_sites_apicategories_patchAsync(string name, string updateMask, GoogleCloudApigeeV1ApiCategory requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ApiCategoryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates a shared flow revision. This operation is only allowed on revisions which have never been deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or application/octet-stream.
		/// Apigee_organizations_sharedflows_revisions_updateSharedFlowRevision v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the shared flow revision to update. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`</param>
		/// <param name="validate">Ignored. All uploads are validated regardless of the value of this field. It is kept for compatibility with existing APIs. Must be `true` or `false` if provided.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SharedFlowRevision> Apigee_organizations_sharedflows_revisions_updateSharedFlowRevisionAsync(string name, bool validate, GoogleApiHttpBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&validate="+validate;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SharedFlowRevision>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Update an existing custom report definition
		/// Apigee_organizations_reports_update v1/{name}
		/// </summary>
		/// <param name="name">Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`</param>
		/// <param name="ignoreExpiryValidation">Required. Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.</param>
		/// <param name="ignoreNewlineValidation">Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1CustomReport> Apigee_organizations_reports_updateAsync(string name, bool ignoreExpiryValidation, bool ignoreNewlineValidation, GoogleCloudApigeeV1CustomReport requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&ignoreExpiryValidation="+ignoreExpiryValidation+"&ignoreNewlineValidation="+ignoreNewlineValidation;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1CustomReport>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates attributes for a developer app. This API replaces the current attributes with those specified in the request.
		/// Apigee_organizations_developers_apps_attributes v1/{name}/attributes
		/// </summary>
		/// <param name="name">Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Attributes> Apigee_organizations_developers_apps_attributesAsync(string name, GoogleCloudApigeeV1Attributes requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/attributes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Attributes>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the certificate from an alias in PEM-encoded form.
		/// Apigee_organizations_environments_keystores_aliases_getCertificate v1/{name}/certificate
		/// </summary>
		/// <param name="name">Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleApiHttpBody> Apigee_organizations_environments_keystores_aliases_getCertificateAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/certificate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleApiHttpBody>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
		/// Apigee_organizations_environments_keystores_aliases_csr v1/{name}/csr
		/// </summary>
		/// <param name="name">Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleApiHttpBody> Apigee_organizations_environments_keystores_aliases_csrAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/csr";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleApiHttpBody>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the data from a debug session. This does not cancel the debug session or prevent further data from being collected if the session is still active in runtime pods.
		/// Apigee_organizations_environments_apis_revisions_debugsessions_deleteData v1/{name}/data
		/// </summary>
		/// <param name="name">Required. The name of the debug session to delete. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Apigee_organizations_environments_apis_revisions_debugsessions_deleteDataAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/data";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Undeploys a shared flow revision from an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
		/// Apigee_organizations_environments_sharedflows_revisions_undeploy v1/{name}/deployments
		/// </summary>
		/// <param name="name">Required. Name of the shared flow revision to undeploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`</param>
		/// <param name="sequencedRollout">Flag that specifies whether to enable sequenced rollout. If set to `true`, the environment group routing rules corresponding to this deployment will be removed before removing the deployment from the runtime. This is likely to be a rare use case; it is only needed when the intended effect of undeploying this proxy is to cause the traffic it currently handles to be rerouted to some other existing proxy in the environment group. The GenerateUndeployChangeReport API may be used to examine routing changes before issuing the undeployment request, and its response will indicate if a sequenced rollout is recommended for the undeployment.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Apigee_organizations_environments_sharedflows_revisions_undeployAsync(string name, bool sequencedRollout, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/deployments&sequencedRollout="+sequencedRollout;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the deployment of a shared flow revision and actual state reported by runtime pods.
		/// Apigee_organizations_environments_sharedflows_revisions_getDeployments v1/{name}/deployments
		/// </summary>
		/// <param name="name">Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Deployment> Apigee_organizations_environments_sharedflows_revisions_getDeploymentsAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/deployments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Deployment>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deploys a revision of a shared flow. If another revision of the same shared flow is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot use a shared flow until it has been deployed to an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
		/// Apigee_organizations_environments_sharedflows_revisions_deploy v1/{name}/deployments
		/// </summary>
		/// <param name="name">Required. Name of the shared flow revision to deploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`</param>
		/// <param name="_override">Flag that specifies whether the new deployment replaces other deployed revisions of the shared flow in the environment. Set `override` to `true` to replace other deployed revisions. By default, `override` is `false` and the deployment is rejected if other revisions of the shared flow are deployed in the environment.</param>
		/// <param name="serviceAccount">Google Cloud IAM service account. The service account represents the identity of the deployed proxy, and determines what permissions it has. The format must be `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Deployment> Apigee_organizations_environments_sharedflows_revisions_deployAsync(string name, bool _override, string serviceAccount, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/deployments&override="+_override+"&serviceAccount=" + (serviceAccount==null? "" : System.Uri.EscapeDataString(serviceAccount));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Deployment>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates a report for a dry run analysis of a DeployApiProxy request without committing the deployment. In addition to the standard validations performed when adding deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being created. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
		/// Apigee_organizations_environments_apis_revisions_deployments_generateDeployChangeReport v1/{name}/deployments:generateDeployChangeReport
		/// </summary>
		/// <param name="name">Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`</param>
		/// <param name="_override">Flag that specifies whether to force the deployment of the new revision over the currently deployed revision by overriding conflict checks.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeploymentChangeReport> Apigee_organizations_environments_apis_revisions_deployments_generateDeployChangeReportAsync(string name, bool _override, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/deployments:generateDeployChangeReport&override="+_override;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeploymentChangeReport>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Generates a report for a dry run analysis of an UndeployApiProxy request without committing the undeploy. In addition to the standard validations performed when removing deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being removed. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
		/// Apigee_organizations_environments_apis_revisions_deployments_generateUndeployChangeReport v1/{name}/deployments:generateUndeployChangeReport
		/// </summary>
		/// <param name="name">Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeploymentChangeReport> Apigee_organizations_environments_apis_revisions_deployments_generateUndeployChangeReportAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/deployments:generateUndeployChangeReport";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeploymentChangeReport>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Apigee_organizations_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Apigee_organizations_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Activates the NAT address. The Apigee instance can now use this for Internet egress traffic. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_natAddresses_activate v1/{name}:activate
		/// </summary>
		/// <param name="name">Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_instances_natAddresses_activateAsync(string name, GoogleCloudApigeeV1ActivateNatAddressRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":activate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adjust the prepaid balance for the developer. This API will be used in scenarios where the developer has been under-charged or over-charged.
		/// Apigee_organizations_developers_balance_adjust v1/{name}:adjust
		/// </summary>
		/// <param name="name">Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperBalance> Apigee_organizations_developers_balance_adjustAsync(string name, GoogleCloudApigeeV1AdjustDeveloperBalanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":adjust";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperBalance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Credits the account balance for the developer.
		/// Apigee_organizations_developers_balance_credit v1/{name}:credit
		/// </summary>
		/// <param name="name">Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperBalance> Apigee_organizations_developers_balance_creditAsync(string name, GoogleCloudApigeeV1CreditDeveloperBalanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":credit";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperBalance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Disable a SecurityAction. The `state` of the SecurityAction after disabling is `DISABLED`. `DisableSecurityAction` can be called on SecurityActions in the state `ENABLED`; SecurityActions in a different state (including `DISABLED`) return an error.
		/// Apigee_organizations_environments_securityActions_disable v1/{name}:disable
		/// </summary>
		/// <param name="name">Required. The name of the SecurityAction to disable. Format: organizations/{org}/environments/{env}/securityActions/{security_action}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityAction> Apigee_organizations_environments_securityActions_disableAsync(string name, GoogleCloudApigeeV1DisableSecurityActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":disable";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityAction>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Enable a SecurityAction. The `state` of the SecurityAction after enabling is `ENABLED`. `EnableSecurityAction` can be called on SecurityActions in the state `DISABLED`; SecurityActions in a different state (including `ENABLED) return an error.
		/// Apigee_organizations_environments_securityActions_enable v1/{name}:enable
		/// </summary>
		/// <param name="name">Required. The name of the SecurityAction to enable. Format: organizations/{org}/environments/{env}/securityActions/{security_action}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityAction> Apigee_organizations_environments_securityActions_enableAsync(string name, GoogleCloudApigeeV1EnableSecurityActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":enable";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityAction>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Expires an API product subscription immediately.
		/// Apigee_organizations_developers_subscriptions_expire v1/{name}:expire
		/// </summary>
		/// <param name="name">Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperSubscription> Apigee_organizations_developers_subscriptions_expireAsync(string name, GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":expire";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperSubscription>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Generates a signed URL for downloading the original zip file used to create an Archive Deployment. The URL is only valid for a limited period and should be used within minutes after generation. Each call returns a new upload URL.
		/// Apigee_organizations_environments_archiveDeployments_generateDownloadUrl v1/{name}:generateDownloadUrl
		/// </summary>
		/// <param name="name">Required. The name of the Archive Deployment you want to download.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1GenerateDownloadUrlResponse> Apigee_organizations_environments_archiveDeployments_generateDownloadUrlAsync(string name, GoogleCloudApigeeV1GenerateDownloadUrlRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":generateDownloadUrl";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1GenerateDownloadUrlResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the project ID and region for an Apigee organization.
		/// Apigee_organizations_getProjectMapping v1/{name}:getProjectMapping
		/// </summary>
		/// <param name="name">Required. Apigee organization name in the following format: `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1OrganizationProjectMapping> Apigee_organizations_getProjectMappingAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":getProjectMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1OrganizationProjectMapping>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.
		/// Apigee_organizations_getSyncAuthorization v1/{name}:getSyncAuthorization
		/// </summary>
		/// <param name="name">Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SyncAuthorization> Apigee_organizations_getSyncAuthorizationAsync(string name, GoogleCloudApigeeV1GetSyncAuthorizationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":getSyncAuthorization";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SyncAuthorization>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// ListSecurityProfileRevisions lists all the revisions of the security profile.
		/// Apigee_organizations_securityProfiles_listRevisions v1/{name}:listRevisions
		/// </summary>
		/// <param name="name">Required. For a specific profile, list all the revisions. Format: `organizations/{org}/securityProfiles/{profile}`</param>
		/// <param name="pageSize">The maximum number of profile revisions to return. The service may return fewer than this value. If unspecified, at most 50 revisions will be returned.</param>
		/// <param name="pageToken">A page token, received from a previous `ListSecurityProfileRevisions` call. Provide this to retrieve the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse> Apigee_organizations_securityProfiles_listRevisionsAsync(string name, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":listRevisions&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an add-on enablement status of an environment.
		/// Apigee_organizations_environments_addonsConfig_setAddonEnablement v1/{name}:setAddonEnablement
		/// </summary>
		/// <param name="name">Required. Name of the add-ons config. Must be in the format of `/organizations/{org}/environments/{env}/addonsConfig`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_environments_addonsConfig_setAddonEnablementAsync(string name, GoogleCloudApigeeV1SetAddonEnablementRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":setAddonEnablement";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sets the permissions required to allow the Synchronizer to download environment data from the control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.
		/// Apigee_organizations_setSyncAuthorization v1/{name}:setSyncAuthorization
		/// </summary>
		/// <param name="name">Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SyncAuthorization> Apigee_organizations_setSyncAuthorizationAsync(string name, GoogleCloudApigeeV1SyncAuthorization requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":setSyncAuthorization";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SyncAuthorization>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieve security statistics as tabular rows.
		/// Apigee_organizations_environments_securityStats_queryTabularStats v1/{orgenv}/securityStats:queryTabularStats
		/// </summary>
		/// <param name="orgenv">Required. Should be of the form organizations//environments/.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1QueryTabularStatsResponse> Apigee_organizations_environments_securityStats_queryTabularStatsAsync(string orgenv, GoogleCloudApigeeV1QueryTabularStatsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (orgenv==null? "" : System.Uri.EscapeDataString(orgenv))+"/securityStats:queryTabularStats";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1QueryTabularStatsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieve security statistics as a collection of time series.
		/// Apigee_organizations_environments_securityStats_queryTimeSeriesStats v1/{orgenv}/securityStats:queryTimeSeriesStats
		/// </summary>
		/// <param name="orgenv">Required. Should be of the form organizations//environments/.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1QueryTimeSeriesStatsResponse> Apigee_organizations_environments_securityStats_queryTimeSeriesStatsAsync(string orgenv, GoogleCloudApigeeV1QueryTimeSeriesStatsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (orgenv==null? "" : System.Uri.EscapeDataString(orgenv))+"/securityStats:queryTimeSeriesStats";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1QueryTimeSeriesStatsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Configures the add-ons for the Apigee organization. The existing add-on configuration will be fully replaced.
		/// Apigee_organizations_setAddons v1/{org}:setAddons
		/// </summary>
		/// <param name="org">Required. Name of the organization. Use the following structure in your request: `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_setAddonsAsync(string org, GoogleCloudApigeeV1SetAddonsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (org==null? "" : System.Uri.EscapeDataString(org))+":setAddons";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the Apigee organizations and associated Google Cloud projects that you have permission to access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
		/// Apigee_organizations_list v1/{parent}
		/// </summary>
		/// <param name="parent">Required. Use the following structure in your request: `organizations`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListOrganizationsResponse> Apigee_organizations_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListOrganizationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body.
		/// Apigee_organizations_environments_keystores_aliases_create v1/{parent}/aliases
		/// </summary>
		/// <param name="parent">Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.</param>
		/// <param name="_password">DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required.</param>
		/// <param name="alias">Alias for the key/certificate pair. Values must match the regular expression `[\w\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body.</param>
		/// <param name="format">Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`</param>
		/// <param name="ignoreExpiryValidation">Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.</param>
		/// <param name="ignoreNewlineValidation">Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Alias> Apigee_organizations_environments_keystores_aliases_createAsync(string parent, string _password, string alias, string format, bool ignoreExpiryValidation, bool ignoreNewlineValidation, GoogleApiHttpBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/aliases&_password=" + (_password==null? "" : System.Uri.EscapeDataString(_password))+"&alias=" + (alias==null? "" : System.Uri.EscapeDataString(alias))+"&format=" + (format==null? "" : System.Uri.EscapeDataString(format))+"&ignoreExpiryValidation="+ignoreExpiryValidation+"&ignoreNewlineValidation="+ignoreNewlineValidation;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Alias>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List Datastores
		/// Apigee_organizations_analytics_datastores_list v1/{parent}/analytics/datastores
		/// </summary>
		/// <param name="parent">Required. The parent organization name. Must be of the form `organizations/{org}`.</param>
		/// <param name="targetType">Optional. TargetType is used to fetch all Datastores that match the type</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListDatastoresResponse> Apigee_organizations_analytics_datastores_listAsync(string parent, string targetType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analytics/datastores&targetType=" + (targetType==null? "" : System.Uri.EscapeDataString(targetType));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListDatastoresResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a Datastore for an org
		/// Apigee_organizations_analytics_datastores_create v1/{parent}/analytics/datastores
		/// </summary>
		/// <param name="parent">Required. The parent organization name. Must be of the form `organizations/{org}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Datastore> Apigee_organizations_analytics_datastores_createAsync(string parent, GoogleCloudApigeeV1Datastore requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analytics/datastores";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Datastore>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Test if Datastore configuration is correct. This includes checking if credentials provided by customer have required permissions in target destination storage
		/// Apigee_organizations_analytics_datastores_test v1/{parent}/analytics/datastores:test
		/// </summary>
		/// <param name="parent">Required. The parent organization name Must be of the form `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1TestDatastoreResponse> Apigee_organizations_analytics_datastores_testAsync(string parent, GoogleCloudApigeeV1Datastore requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analytics/datastores:test";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1TestDatastoreResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the details and status of all analytics export jobs belonging to the parent organization and environment.
		/// Apigee_organizations_environments_analytics_exports_list v1/{parent}/analytics/exports
		/// </summary>
		/// <param name="parent">Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListExportsResponse> Apigee_organizations_environments_analytics_exports_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analytics/exports";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListExportsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of "enqueued".
		/// Apigee_organizations_environments_analytics_exports_create v1/{parent}/analytics/exports
		/// </summary>
		/// <param name="parent">Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Export> Apigee_organizations_environments_analytics_exports_createAsync(string parent, GoogleCloudApigeeV1ExportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/analytics/exports";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Export>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the API categories associated with a portal.
		/// Apigee_organizations_sites_apicategories_list v1/{parent}/apicategories
		/// </summary>
		/// <param name="parent">Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListApiCategoriesResponse> Apigee_organizations_sites_apicategories_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apicategories";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListApiCategoriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new API category.
		/// Apigee_organizations_sites_apicategories_create v1/{parent}/apicategories
		/// </summary>
		/// <param name="parent">Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ApiCategoryResponse> Apigee_organizations_sites_apicategories_createAsync(string parent, GoogleCloudApigeeV1ApiCategory requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apicategories";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ApiCategoryResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters.
		/// Apigee_organizations_apiproducts_list v1/{parent}/apiproducts
		/// </summary>
		/// <param name="parent">Required. Name of the organization. Use the following structure in your request: `organizations/{org}`</param>
		/// <param name="attributename">Name of the attribute used to filter the search.</param>
		/// <param name="attributevalue">Value of the attribute used to filter the search.</param>
		/// <param name="count">Enter the number of API products you want returned in the API call. The limit is 1000.</param>
		/// <param name="expand">Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API.</param>
		/// <param name="startKey">Gets a list of API products starting with a specific API product in the list. For example, if you're returning 50 API products at a time (using the `count` query parameter), you can view products 50-99 by entering the name of the 50th API product in the first API (without using `startKey`). Product name is case sensitive.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListApiProductsResponse> Apigee_organizations_apiproducts_listAsync(string parent, string attributename, string attributevalue, string count, bool expand, string startKey, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apiproducts&attributename=" + (attributename==null? "" : System.Uri.EscapeDataString(attributename))+"&attributevalue=" + (attributevalue==null? "" : System.Uri.EscapeDataString(attributevalue))+"&count=" + (count==null? "" : System.Uri.EscapeDataString(count))+"&expand="+expand+"&startKey=" + (startKey==null? "" : System.Uri.EscapeDataString(startKey));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListApiProductsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an API product in an organization. You create API products after you have proxied backend services using API proxies. An API product is a collection of API resources combined with quota settings and metadata that you can use to deliver customized and productized API bundles to your developer community. This metadata can include: - Scope - Environments - API proxies - Extensible profile API products enable you repackage APIs on the fly, without having to do any additional coding or configuration. Apigee recommends that you start with a simple API product including only required elements. You then provision credentials to apps to enable them to start testing your APIs. After you have authentication and authorization working against a simple API product, you can iterate to create finer-grained API products, defining different sets of API resources for each API product. **WARNING:** - If you don't specify an API proxy in the request body, *any* app associated with the product can make calls to *any* API in your entire organization. - If you don't specify an environment in the request body, the product allows access to all environments. For more information, see What is an API product?
		/// Apigee_organizations_apiproducts_create v1/{parent}/apiproducts
		/// </summary>
		/// <param name="parent">Required. Name of the organization in which the API product will be created. Use the following structure in your request: `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ApiProduct> Apigee_organizations_apiproducts_createAsync(string parent, GoogleCloudApigeeV1ApiProduct requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apiproducts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ApiProduct>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the names of all API proxies in an organization. The names returned correspond to the names defined in the configuration files for each API proxy.
		/// Apigee_organizations_apis_list v1/{parent}/apis
		/// </summary>
		/// <param name="parent">Required. Name of the organization in the following format: `organizations/{org}`</param>
		/// <param name="includeMetaData">Flag that specifies whether to include API proxy metadata in the response.</param>
		/// <param name="includeRevisions">Flag that specifies whether to include a list of revisions in the response.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListApiProxiesResponse> Apigee_organizations_apis_listAsync(string parent, bool includeMetaData, bool includeRevisions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apis&includeMetaData="+includeMetaData+"&includeRevisions="+includeRevisions;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListApiProxiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client.
		/// Apigee_organizations_apis_create v1/{parent}/apis
		/// </summary>
		/// <param name="parent">Required. Name of the organization in the following format: `organizations/{org}`</param>
		/// <param name="action">Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.</param>
		/// <param name="name">Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-</param>
		/// <param name="validate">Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ApiProxyRevision> Apigee_organizations_apis_createAsync(string parent, string action, string name, bool validate, GoogleApiHttpBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apis&action=" + (action==null? "" : System.Uri.EscapeDataString(action))+"&name=" + (name==null? "" : System.Uri.EscapeDataString(name))+"&validate="+validate;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ApiProxyRevision>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all AppGroups in an organization. A maximum of 1000 AppGroups are returned in the response if PageSize is not specified, or if the PageSize is greater than 1000.
		/// Apigee_organizations_appgroups_list v1/{parent}/appgroups
		/// </summary>
		/// <param name="parent">Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`.</param>
		/// <param name="filter">The filter expression to be used to get the list of AppGroups, where filtering can be done on status, channelId or channelUri of the app group. Examples: filter=status=active", filter=channelId=, filter=channelUri=</param>
		/// <param name="pageSize">Count of AppGroups a single page can have in the response. If unspecified, at most 1000 AppGroups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">The starting index record for listing the AppGroups.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListAppGroupsResponse> Apigee_organizations_appgroups_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/appgroups&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListAppGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an AppGroup. Once created, user can register apps under the AppGroup to obtain secret key and password. At creation time, the AppGroup's state is set as `active`.
		/// Apigee_organizations_appgroups_create v1/{parent}/appgroups
		/// </summary>
		/// <param name="parent">Required. Name of the Apigee organization in which the AppGroup is created. Use the following structure in your request: `organizations/{org}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1AppGroup> Apigee_organizations_appgroups_createAsync(string parent, GoogleCloudApigeeV1AppGroup requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/appgroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1AppGroup>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all apps created by a developer in an Apigee organization. Optionally, you can request an expanded view of the developer apps. A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper apps returned using the `startKey` and `count` query parameters.
		/// Apigee_organizations_developers_apps_list v1/{parent}/apps
		/// </summary>
		/// <param name="parent">Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`</param>
		/// <param name="count">Number of developer apps to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.</param>
		/// <param name="expand">Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters.</param>
		/// <param name="shallowExpand">Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the results in shallow mode.</param>
		/// <param name="startKey">**Note**: Must be used in conjunction with the `count` parameter. Name of the developer app from which to start displaying the list of developer apps. For example, if you're returning 50 developer apps at a time (using the `count` query parameter), you can view developer apps 50-99 by entering the name of the 50th developer app. The developer app name is case sensitive.</param>
		/// <param name="ids">Optional. Comma-separated list of app IDs on which to filter.</param>
		/// <param name="includeCred">Optional. Flag that specifies whether to include credentials in the response.</param>
		/// <param name="keyStatus">Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to `approved`.</param>
		/// <param name="pageSize">Optional. Count of apps a single page can have in the response. If unspecified, at most 100 apps will be returned. The maximum value is 100; values above 100 will be coerced to 100. "page_size" is supported from ver 1.10.0 and above.</param>
		/// <param name="pageToken">Optional. The starting index record for listing the developers. "page_token" is supported from ver 1.10.0 and above.</param>
		/// <param name="rows">Optional. Maximum number of app IDs to return. Defaults to 10000.</param>
		/// <param name="status">Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to `approved`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListDeveloperAppsResponse> Apigee_organizations_developers_apps_listAsync(string parent, string count, bool expand, bool shallowExpand, string startKey, string ids, bool includeCred, string keyStatus, int pageSize, string pageToken, string rows, string status, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apps&count=" + (count==null? "" : System.Uri.EscapeDataString(count))+"&expand="+expand+"&shallowExpand="+shallowExpand+"&startKey=" + (startKey==null? "" : System.Uri.EscapeDataString(startKey))+"&ids=" + (ids==null? "" : System.Uri.EscapeDataString(ids))+"&includeCred="+includeCred+"&keyStatus=" + (keyStatus==null? "" : System.Uri.EscapeDataString(keyStatus))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&rows=" + (rows==null? "" : System.Uri.EscapeDataString(rows))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListDeveloperAppsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an app associated with a developer. This API associates the developer app with the specified API product and auto-generates an API key for the app to use in calls to API proxies inside that API product. The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears in the UI.
		/// Apigee_organizations_developers_apps_create v1/{parent}/apps
		/// </summary>
		/// <param name="parent">Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperApp> Apigee_organizations_developers_apps_createAsync(string parent, GoogleCloudApigeeV1DeveloperApp requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/apps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperApp>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the ArchiveDeployments in the specified Environment.
		/// Apigee_organizations_environments_archiveDeployments_list v1/{parent}/archiveDeployments
		/// </summary>
		/// <param name="parent">Required. Name of the Environment for which to list Archive Deployments in the format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="filter">Optional. An optional query used to return a subset of Archive Deployments using the semantics defined in https://google.aip.dev/160.</param>
		/// <param name="pageSize">Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25 deployments will be returned.</param>
		/// <param name="pageToken">Optional. Page token, returned from a previous ListArchiveDeployments call, that you can use to retrieve the next page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListArchiveDeploymentsResponse> Apigee_organizations_environments_archiveDeployments_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/archiveDeployments&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListArchiveDeploymentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new ArchiveDeployment.
		/// Apigee_organizations_environments_archiveDeployments_create v1/{parent}/archiveDeployments
		/// </summary>
		/// <param name="parent">Required. The Environment this Archive Deployment will be created in.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_environments_archiveDeployments_createAsync(string parent, GoogleCloudApigeeV1ArchiveDeployment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/archiveDeployments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Generates a signed URL for uploading an Archive zip file to Google Cloud Storage. Once the upload is complete, the signed URL should be passed to CreateArchiveDeployment. When uploading to the generated signed URL, please follow these restrictions: * Source file type should be a zip file. * Source file size should not exceed 1GB limit. * No credentials should be attached - the signed URLs provide access to the target bucket using internal service identity; if credentials were attached, the identity from the credentials would be used, but that identity does not have permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to be specified: * `content-type: application/zip` * `x-goog-content-length-range: 0,1073741824` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`
		/// Apigee_organizations_environments_archiveDeployments_generateUploadUrl v1/{parent}/archiveDeployments:generateUploadUrl
		/// </summary>
		/// <param name="parent">Required. The organization and environment to upload to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1GenerateUploadUrlResponse> Apigee_organizations_environments_archiveDeployments_generateUploadUrlAsync(string parent, GoogleCloudApigeeV1GenerateUploadUrlRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/archiveDeployments:generateUploadUrl";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1GenerateUploadUrlResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_attachments_list v1/{parent}/attachments
		/// </summary>
		/// <param name="parent">Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`</param>
		/// <param name="pageSize">Maximum number of instance attachments to return. Defaults to 25.</param>
		/// <param name="pageToken">Page token, returned by a previous ListInstanceAttachments call, that you can use to retrieve the next page of content.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListInstanceAttachmentsResponse> Apigee_organizations_instances_attachments_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/attachments&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListInstanceAttachmentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_attachments_create v1/{parent}/attachments
		/// </summary>
		/// <param name="parent">Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_instances_attachments_createAsync(string parent, GoogleCloudApigeeV1InstanceAttachment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/attachments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all developer attributes.
		/// Apigee_organizations_developers_attributes_list v1/{parent}/attributes
		/// </summary>
		/// <param name="parent">Required. Email address of the developer for which attributes are being listed. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Attributes> Apigee_organizations_developers_attributes_listAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/attributes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Attributes>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates developer attributes. This API replaces the existing attributes with those specified in the request. Add new attributes, and include or exclude any existing attributes that you want to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
		/// Apigee_organizations_developers_attributes v1/{parent}/attributes
		/// </summary>
		/// <param name="parent">Required. Email address of the developer for which attributes are being updated. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Attributes> Apigee_organizations_developers_attributesAsync(string parent, GoogleCloudApigeeV1Attributes requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/attributes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Attributes>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a new canary evaluation for an organization.
		/// Apigee_organizations_instances_canaryevaluations_create v1/{parent}/canaryevaluations
		/// </summary>
		/// <param name="parent">Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_instances_canaryevaluations_createAsync(string parent, GoogleCloudApigeeV1CanaryEvaluation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/canaryevaluations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all data collectors.
		/// Apigee_organizations_datacollectors_list v1/{parent}/datacollectors
		/// </summary>
		/// <param name="parent">Required. Name of the organization for which to list data collectors in the following format: `organizations/{org}`.</param>
		/// <param name="pageSize">Maximum number of data collectors to return. The page size defaults to 25.</param>
		/// <param name="pageToken">Page token, returned from a previous ListDataCollectors call, that you can use to retrieve the next page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListDataCollectorsResponse> Apigee_organizations_datacollectors_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/datacollectors&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListDataCollectorsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new data collector.
		/// Apigee_organizations_datacollectors_create v1/{parent}/datacollectors
		/// </summary>
		/// <param name="parent">Required. Name of the organization in which to create the data collector in the following format: `organizations/{org}`.</param>
		/// <param name="dataCollectorId">ID of the data collector. Overrides any ID in the data collector resource. Must be a string beginning with `dc_` that contains only letters, numbers, and underscores.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DataCollector> Apigee_organizations_datacollectors_createAsync(string parent, string dataCollectorId, GoogleCloudApigeeV1DataCollector requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/datacollectors&dataCollectorId=" + (dataCollectorId==null? "" : System.Uri.EscapeDataString(dataCollectorId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DataCollector>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists debug sessions that are currently active in the given API Proxy revision.
		/// Apigee_organizations_environments_apis_revisions_debugsessions_list v1/{parent}/debugsessions
		/// </summary>
		/// <param name="parent">Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.</param>
		/// <param name="pageSize">Maximum number of debug sessions to return. The page size defaults to 25.</param>
		/// <param name="pageToken">Page token, returned from a previous ListDebugSessions call, that you can use to retrieve the next page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListDebugSessionsResponse> Apigee_organizations_environments_apis_revisions_debugsessions_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/debugsessions&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListDebugSessionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a debug session for a deployed API Proxy revision.
		/// Apigee_organizations_environments_apis_revisions_debugsessions_create v1/{parent}/debugsessions
		/// </summary>
		/// <param name="parent">Required. The resource name of the API Proxy revision deployment for which to create the DebugSession. Must be of the form `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.</param>
		/// <param name="timeout">Optional. The time in seconds after which this DebugSession should end. A timeout specified in DebugSession will overwrite this value.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DebugSession> Apigee_organizations_environments_apis_revisions_debugsessions_createAsync(string parent, string timeout, GoogleCloudApigeeV1DebugSession requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/debugsessions&timeout=" + (timeout==null? "" : System.Uri.EscapeDataString(timeout));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DebugSession>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all deployments of a shared flow revision.
		/// Apigee_organizations_sharedflows_revisions_deployments_list v1/{parent}/deployments
		/// </summary>
		/// <param name="parent">Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.</param>
		/// <param name="sharedFlows">Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListDeploymentsResponse> Apigee_organizations_sharedflows_revisions_deployments_listAsync(string parent, bool sharedFlows, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deployments&sharedFlows="+sharedFlows;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListDeploymentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all developers in an organization by email address. By default, the response does not include company developers. Set the `includeCompany` query parameter to `true` to include company developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of developers returned using the `startKey` and `count` query parameters.
		/// Apigee_organizations_developers_list v1/{parent}/developers
		/// </summary>
		/// <param name="parent">Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`.</param>
		/// <param name="app">Optional. List only Developers that are associated with the app. Note that start_key, count are not applicable for this filter criteria.</param>
		/// <param name="count">Optional. Number of developers to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.</param>
		/// <param name="expand">Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters.</param>
		/// <param name="ids">Optional. List of IDs to include, separated by commas.</param>
		/// <param name="includeCompany">Flag that specifies whether to include company details in the response.</param>
		/// <param name="startKey">**Note**: Must be used in conjunction with the `count` parameter. Email address of the developer from which to start displaying the list of developers. For example, if the an unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com ``` and your `startKey` is `fezzik@example.com`, the list returned will be ``` fezzik@example.com buttercup@example.com ```</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListOfDevelopersResponse> Apigee_organizations_developers_listAsync(string parent, string app, string count, bool expand, string ids, bool includeCompany, string startKey, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/developers&app=" + (app==null? "" : System.Uri.EscapeDataString(app))+"&count=" + (count==null? "" : System.Uri.EscapeDataString(count))+"&expand="+expand+"&ids=" + (ids==null? "" : System.Uri.EscapeDataString(ids))+"&includeCompany="+includeCompany+"&startKey=" + (startKey==null? "" : System.Uri.EscapeDataString(startKey));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListOfDevelopersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a developer. Once created, the developer can register an app and obtain an API key. At creation time, a developer is set as `active`. To change the developer status, use the SetDeveloperStatus API.
		/// Apigee_organizations_developers_create v1/{parent}/developers
		/// </summary>
		/// <param name="parent">Required. Name of the Apigee organization in which the developer is created. Use the following structure in your request: `organizations/{org}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Developer> Apigee_organizations_developers_createAsync(string parent, GoogleCloudApigeeV1Developer requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/developers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Developer>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the endpoint attachments in an organization.
		/// Apigee_organizations_endpointAttachments_list v1/{parent}/endpointAttachments
		/// </summary>
		/// <param name="parent">Required. Name of the organization for which to list endpoint attachments. Use the following structure in your request: `organizations/{org}`</param>
		/// <param name="pageSize">Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25 attachments will be returned.</param>
		/// <param name="pageToken">Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you can use to retrieve the next page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListEndpointAttachmentsResponse> Apigee_organizations_endpointAttachments_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/endpointAttachments&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListEndpointAttachmentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_endpointAttachments_create v1/{parent}/endpointAttachments
		/// </summary>
		/// <param name="parent">Required. Organization the endpoint attachment will be created in.</param>
		/// <param name="endpointAttachmentId">ID to use for the endpoint attachment. ID must start with a lowercase letter followed by up to 31 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. The minimum length is 2.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_endpointAttachments_createAsync(string parent, string endpointAttachmentId, GoogleCloudApigeeV1EndpointAttachment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/endpointAttachments&endpointAttachmentId=" + (endpointAttachmentId==null? "" : System.Uri.EscapeDataString(endpointAttachmentId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists key value entries for key values maps scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
		/// Apigee_organizations_keyvaluemaps_entries_list v1/{parent}/entries
		/// </summary>
		/// <param name="parent">Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.</param>
		/// <param name="pageSize">Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will be returned.</param>
		/// <param name="pageToken">Optional. Page token. If provides, must be a valid key value entry returned from a previous call that can be used to retrieve the next page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListKeyValueEntriesResponse> Apigee_organizations_keyvaluemaps_entries_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListKeyValueEntriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates key value entries in a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
		/// Apigee_organizations_keyvaluemaps_entries_create v1/{parent}/entries
		/// </summary>
		/// <param name="parent">Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1KeyValueEntry> Apigee_organizations_keyvaluemaps_entries_createAsync(string parent, GoogleCloudApigeeV1KeyValueEntry requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entries";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1KeyValueEntry>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all environment groups.
		/// Apigee_organizations_envgroups_list v1/{parent}/envgroups
		/// </summary>
		/// <param name="parent">Required. Name of the organization for which to list environment groups in the following format: `organizations/{org}`.</param>
		/// <param name="pageSize">Maximum number of environment groups to return. The page size defaults to 25.</param>
		/// <param name="pageToken">Page token, returned from a previous ListEnvironmentGroups call, that you can use to retrieve the next page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListEnvironmentGroupsResponse> Apigee_organizations_envgroups_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/envgroups&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListEnvironmentGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new environment group.
		/// Apigee_organizations_envgroups_create v1/{parent}/envgroups
		/// </summary>
		/// <param name="parent">Required. Name of the organization in which to create the environment group in the following format: `organizations/{org}`.</param>
		/// <param name="name">ID of the environment group. Overrides any ID in the environment_group resource.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_envgroups_createAsync(string parent, string name, GoogleCloudApigeeV1EnvironmentGroup requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/envgroups&name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// CreateSecurityProfileEnvironmentAssociation creates profile environment association i.e. attaches environment to security profile.
		/// Apigee_organizations_securityProfiles_environments_create v1/{parent}/environments
		/// </summary>
		/// <param name="parent">Required. Name of organization and security profile ID. Format: organizations/{org}/securityProfiles/{profile}</param>
		/// <param name="name">Optional. Name of the environment.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation> Apigee_organizations_securityProfiles_environments_createAsync(string parent, string name, GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/environments&name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Return a list of Asynchronous Queries at host level.
		/// Apigee_organizations_hostQueries_list v1/{parent}/hostQueries
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}`.</param>
		/// <param name="dataset">Filter response list by dataset. Example: `api`, `mint`</param>
		/// <param name="envgroupHostname">Required. Filter response list by hostname.</param>
		/// <param name="from">Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.</param>
		/// <param name="inclQueriesWithoutReport">Flag to include asynchronous queries that don't have a report denifition.</param>
		/// <param name="status">Filter response list by asynchronous query status.</param>
		/// <param name="submittedBy">Filter response list by user who submitted queries.</param>
		/// <param name="to">Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListAsyncQueriesResponse> Apigee_organizations_hostQueries_listAsync(string parent, string dataset, string envgroupHostname, string from, string inclQueriesWithoutReport, string status, string submittedBy, string to, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/hostQueries&dataset=" + (dataset==null? "" : System.Uri.EscapeDataString(dataset))+"&envgroupHostname=" + (envgroupHostname==null? "" : System.Uri.EscapeDataString(envgroupHostname))+"&from=" + (from==null? "" : System.Uri.EscapeDataString(from))+"&inclQueriesWithoutReport=" + (inclQueriesWithoutReport==null? "" : System.Uri.EscapeDataString(inclQueriesWithoutReport))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&submittedBy=" + (submittedBy==null? "" : System.Uri.EscapeDataString(submittedBy))+"&to=" + (to==null? "" : System.Uri.EscapeDataString(to));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListAsyncQueriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
		/// Apigee_organizations_hostQueries_create v1/{parent}/hostQueries
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1AsyncQuery> Apigee_organizations_hostQueries_createAsync(string parent, GoogleCloudApigeeV1Query requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/hostQueries";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1AsyncQuery>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Return a list of Security Reports at host level.
		/// Apigee_organizations_hostSecurityReports_list v1/{parent}/hostSecurityReports
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}`.</param>
		/// <param name="dataset">Filter response list by dataset. Example: `api`, `mint`</param>
		/// <param name="envgroupHostname">Required. Filter response list by hostname.</param>
		/// <param name="from">Filter response list by returning security reports that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.</param>
		/// <param name="pageSize">The maximum number of security report to return in the list response.</param>
		/// <param name="pageToken">Token returned from the previous list response to fetch the next page.</param>
		/// <param name="status">Filter response list by security report status.</param>
		/// <param name="submittedBy">Filter response list by user who submitted queries.</param>
		/// <param name="to">Filter response list by returning security reports that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSecurityReportsResponse> Apigee_organizations_hostSecurityReports_listAsync(string parent, string dataset, string envgroupHostname, string from, int pageSize, string pageToken, string status, string submittedBy, string to, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/hostSecurityReports&dataset=" + (dataset==null? "" : System.Uri.EscapeDataString(dataset))+"&envgroupHostname=" + (envgroupHostname==null? "" : System.Uri.EscapeDataString(envgroupHostname))+"&from=" + (from==null? "" : System.Uri.EscapeDataString(from))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&submittedBy=" + (submittedBy==null? "" : System.Uri.EscapeDataString(submittedBy))+"&to=" + (to==null? "" : System.Uri.EscapeDataString(to));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSecurityReportsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
		/// Apigee_organizations_hostSecurityReports_create v1/{parent}/hostSecurityReports
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityReport> Apigee_organizations_hostSecurityReports_createAsync(string parent, GoogleCloudApigeeV1SecurityReportQuery requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/hostSecurityReports";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityReport>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_list v1/{parent}/instances
		/// </summary>
		/// <param name="parent">Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.</param>
		/// <param name="pageSize">Maximum number of instances to return. Defaults to 25.</param>
		/// <param name="pageToken">Page token, returned from a previous ListInstances call, that you can use to retrieve the next page of content.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListInstancesResponse> Apigee_organizations_instances_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/instances&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListInstancesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Apigee runtime instance. The instance is accessible from the authorized network configured on the organization. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_create v1/{parent}/instances
		/// </summary>
		/// <param name="parent">Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_instances_createAsync(string parent, GoogleCloudApigeeV1Instance requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/instances";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API. **Note**: All keys start out with status=approved, even if status=revoked is passed when the key is created. To revoke a key, use the UpdateDeveloperAppKey API.
		/// Apigee_organizations_developers_apps_keys_create v1/{parent}/keys
		/// </summary>
		/// <param name="parent">Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperAppKey> Apigee_organizations_developers_apps_keys_createAsync(string parent, GoogleCloudApigeeV1DeveloperAppKey requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/keys";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperAppKey>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API. **Note**: All keys start out with status=approved, even if status=revoked is passed when the key is created. To revoke a key, use the UpdateDeveloperAppKey API.
		/// Apigee_organizations_developers_apps_keys_create_create v1/{parent}/keys/create
		/// </summary>
		/// <param name="parent">Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperAppKey> Apigee_organizations_developers_apps_keys_create_createAsync(string parent, GoogleCloudApigeeV1DeveloperAppKey requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/keys/create";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperAppKey>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
		/// Apigee_organizations_environments_keystores_create v1/{parent}/keystores
		/// </summary>
		/// <param name="parent">Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`</param>
		/// <param name="name">Optional. Name of the keystore. Overrides the value in Keystore.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Keystore> Apigee_organizations_environments_keystores_createAsync(string parent, string name, GoogleCloudApigeeV1Keystore requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/keystores&name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Keystore>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a key value map in an organization.
		/// Apigee_organizations_keyvaluemaps_create v1/{parent}/keyvaluemaps
		/// </summary>
		/// <param name="parent">Required. Name of the organization in which to create the key value map file. Use the following structure in your request: `organizations/{org}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1KeyValueMap> Apigee_organizations_keyvaluemaps_createAsync(string parent, GoogleCloudApigeeV1KeyValueMap requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/keyvaluemaps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1KeyValueMap>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_natAddresses_list v1/{parent}/natAddresses
		/// </summary>
		/// <param name="parent">Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`</param>
		/// <param name="pageSize">Maximum number of natAddresses to return. Defaults to 25.</param>
		/// <param name="pageToken">Page token, returned from a previous ListNatAddresses call, that you can use to retrieve the next page of content.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListNatAddressesResponse> Apigee_organizations_instances_natAddresses_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/natAddresses&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListNatAddressesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a NAT address. The address is created in the RESERVED state and a static external IP address will be provisioned. At this time, the instance will not use this IP address for Internet egress traffic. The address can be activated for use once any required firewall IP whitelisting has been completed. **Note:** Not supported for Apigee hybrid.
		/// Apigee_organizations_instances_natAddresses_create v1/{parent}/natAddresses
		/// </summary>
		/// <param name="parent">Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_organizations_instances_natAddresses_createAsync(string parent, GoogleCloudApigeeV1NatAddress requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/natAddresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all of the distributed trace configuration overrides in an environment.
		/// Apigee_organizations_environments_traceConfig_overrides_list v1/{parent}/overrides
		/// </summary>
		/// <param name="parent">Required. Parent resource of the trace configuration override. Use the following structure in your request: "organizations/*/environments/*/traceConfig".</param>
		/// <param name="pageSize">Maximum number of trace configuration overrides to return. If not specified, the maximum number returned is 25. The maximum number cannot exceed 100.</param>
		/// <param name="pageToken">A page token, returned from a previous `ListTraceConfigOverrides` call. Token value that can be used to retrieve the subsequent page. When paginating, all other parameters provided to `ListTraceConfigOverrides` must match those specified in the call to obtain the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListTraceConfigOverridesResponse> Apigee_organizations_environments_traceConfig_overrides_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/overrides&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListTraceConfigOverridesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a trace configuration override. The response contains a system-generated UUID, that can be used to view, update, or delete the configuration override. Use the List API to view the existing trace configuration overrides.
		/// Apigee_organizations_environments_traceConfig_overrides_create v1/{parent}/overrides
		/// </summary>
		/// <param name="parent">Required. Parent resource of the trace configuration override. Use the following structure in your request. "organizations/*/environments/*/traceConfig".</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1TraceConfigOverride> Apigee_organizations_environments_traceConfig_overrides_createAsync(string parent, GoogleCloudApigeeV1TraceConfigOverride requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/overrides";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1TraceConfigOverride>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Return a list of Asynchronous Queries
		/// Apigee_organizations_environments_queries_list v1/{parent}/queries
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <param name="dataset">Filter response list by dataset. Example: `api`, `mint`</param>
		/// <param name="from">Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.</param>
		/// <param name="inclQueriesWithoutReport">Flag to include asynchronous queries that don't have a report denifition.</param>
		/// <param name="status">Filter response list by asynchronous query status.</param>
		/// <param name="submittedBy">Filter response list by user who submitted queries.</param>
		/// <param name="to">Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListAsyncQueriesResponse> Apigee_organizations_environments_queries_listAsync(string parent, string dataset, string from, string inclQueriesWithoutReport, string status, string submittedBy, string to, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/queries&dataset=" + (dataset==null? "" : System.Uri.EscapeDataString(dataset))+"&from=" + (from==null? "" : System.Uri.EscapeDataString(from))+"&inclQueriesWithoutReport=" + (inclQueriesWithoutReport==null? "" : System.Uri.EscapeDataString(inclQueriesWithoutReport))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&submittedBy=" + (submittedBy==null? "" : System.Uri.EscapeDataString(submittedBy))+"&to=" + (to==null? "" : System.Uri.EscapeDataString(to));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListAsyncQueriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submit a query to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
		/// Apigee_organizations_environments_queries_create v1/{parent}/queries
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1AsyncQuery> Apigee_organizations_environments_queries_createAsync(string parent, GoogleCloudApigeeV1Query requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/queries";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1AsyncQuery>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all the rate plans for an API product.
		/// Apigee_organizations_apiproducts_rateplans_list v1/{parent}/rateplans
		/// </summary>
		/// <param name="parent">Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to return rate plans for all API products within the organization.</param>
		/// <param name="count">Number of rate plans to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The maximum limit is 1000. Defaults to 100.</param>
		/// <param name="expand">Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API. Defaults to `false`.</param>
		/// <param name="orderBy">Name of the attribute used for sorting. Valid values include: * `name`: Name of the rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`: Time when the rate plan becomes active. * `endTime`: Time when the rate plan expires. **Note**: Not supported by Apigee at this time.</param>
		/// <param name="startKey">Name of the rate plan from which to start displaying the list of rate plans. If omitted, the list starts from the first item. For example, to view the rate plans from 51-150, set the value of `startKey` to the name of the 51st rate plan and set the value of `count` to 100.</param>
		/// <param name="state">State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListRatePlansResponse> Apigee_organizations_apiproducts_rateplans_listAsync(string parent, int count, bool expand, string orderBy, string startKey, GoogleCloudApigeeV1RatePlanState state, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/rateplans&count="+count+"&expand="+expand+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&startKey=" + (startKey==null? "" : System.Uri.EscapeDataString(startKey))+"&state=" + state;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListRatePlansResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a rate plan that is associated with an API product in an organization. Using rate plans, API product owners can monetize their API products by configuring one or more of the following: - Billing frequency - Initial setup fees for using an API product - Payment funding model (postpaid only) - Fixed recurring or consumption-based charges for using an API product - Revenue sharing with developer partners An API product can have multiple rate plans associated with it but *only one* rate plan can be active at any point of time. **Note: From the developer's perspective, they purchase API products not rate plans.
		/// Apigee_organizations_apiproducts_rateplans_create v1/{parent}/rateplans
		/// </summary>
		/// <param name="parent">Required. Name of the API product that is associated with the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1RatePlan> Apigee_organizations_apiproducts_rateplans_createAsync(string parent, GoogleCloudApigeeV1RatePlan requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/rateplans";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1RatePlan>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a Reference in the specified environment.
		/// Apigee_organizations_environments_references_create v1/{parent}/references
		/// </summary>
		/// <param name="parent">Required. The parent environment name under which the Reference will be created. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Reference> Apigee_organizations_environments_references_createAsync(string parent, GoogleCloudApigeeV1Reference requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/references";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Reference>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Return a list of Custom Reports
		/// Apigee_organizations_reports_list v1/{parent}/reports
		/// </summary>
		/// <param name="parent">Required. The parent organization name under which the API product will be listed `organizations/{organization_id}/reports`</param>
		/// <param name="expand">Set to 'true' to get expanded details about each custom report.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListCustomReportsResponse> Apigee_organizations_reports_listAsync(string parent, bool expand, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/reports&expand="+expand;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListCustomReportsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart.
		/// Apigee_organizations_reports_create v1/{parent}/reports
		/// </summary>
		/// <param name="parent">Required. The parent organization name under which the Custom Report will be created. Must be of the form: `organizations/{organization_id}/reports`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1CustomReport> Apigee_organizations_reports_createAsync(string parent, GoogleCloudApigeeV1CustomReport requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/reports";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1CustomReport>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
		/// Apigee_organizations_environments_resourcefiles_list v1/{parent}/resourcefiles
		/// </summary>
		/// <param name="parent">Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="type">Optional. Type of resource files to list. {{ resource_file_type }}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListEnvironmentResourcesResponse> Apigee_organizations_environments_resourcefiles_listAsync(string parent, string type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/resourcefiles&type=" + (type==null? "" : System.Uri.EscapeDataString(type));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListEnvironmentResourcesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
		/// Apigee_organizations_environments_resourcefiles_create v1/{parent}/resourcefiles
		/// </summary>
		/// <param name="parent">Required. Name of the environment in which to create the resource file in the following format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="name">Required. Name of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}</param>
		/// <param name="type">Required. Resource file type. {{ resource_file_type }}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ResourceFile> Apigee_organizations_environments_resourcefiles_createAsync(string parent, string name, string type, GoogleApiHttpBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/resourcefiles&name=" + (name==null? "" : System.Uri.EscapeDataString(name))+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ResourceFile>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
		/// Apigee_organizations_environments_resourcefiles_listEnvironmentResources v1/{parent}/resourcefiles/{type}
		/// </summary>
		/// <param name="parent">Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="type">Optional. Type of resource files to list. {{ resource_file_type }}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListEnvironmentResourcesResponse> Apigee_organizations_environments_resourcefiles_listEnvironmentResourcesAsync(string parent, string type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/resourcefiles/"+ (type==null? "" : System.Uri.EscapeDataString(type));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListEnvironmentResourcesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
		/// Apigee_organizations_environments_resourcefiles_delete v1/{parent}/resourcefiles/{type}/{name}
		/// </summary>
		/// <param name="parent">Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="type">Required. Resource file type. {{ resource_file_type }}</param>
		/// <param name="name">Required. ID of the resource file to delete. Must match the regular expression: [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ResourceFile> Apigee_organizations_environments_resourcefiles_deleteAsync(string parent, string type, string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/resourcefiles/"+ (type==null? "" : System.Uri.EscapeDataString(type))+"/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ResourceFile>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the contents of a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
		/// Apigee_organizations_environments_resourcefiles_get v1/{parent}/resourcefiles/{type}/{name}
		/// </summary>
		/// <param name="parent">Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="type">Required. Resource file type. {{ resource_file_type }}</param>
		/// <param name="name">Required. ID of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleApiHttpBody> Apigee_organizations_environments_resourcefiles_getAsync(string parent, string type, string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/resourcefiles/"+ (type==null? "" : System.Uri.EscapeDataString(type))+"/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleApiHttpBody>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
		/// Apigee_organizations_environments_resourcefiles_update v1/{parent}/resourcefiles/{type}/{name}
		/// </summary>
		/// <param name="parent">Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.</param>
		/// <param name="type">Required. Resource file type. {{ resource_file_type }}</param>
		/// <param name="name">Required. ID of the resource file to update. Must match the regular expression: [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ResourceFile> Apigee_organizations_environments_resourcefiles_updateAsync(string parent, string type, string name, GoogleApiHttpBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/resourcefiles/"+ (type==null? "" : System.Uri.EscapeDataString(type))+"/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ResourceFile>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of SecurityActions. This returns both enabled and disabled actions.
		/// Apigee_organizations_environments_securityActions_list v1/{parent}/securityActions
		/// </summary>
		/// <param name="parent">Required. The parent, which owns this collection of SecurityActions. Format: organizations/{org}/environments/{env}</param>
		/// <param name="filter">The filter expression to filter List results. https://google.aip.dev/160. Allows for filtering over: state and api_proxies. E.g.: state = ACTIVE AND apiProxies:foo. Filtering by action is not supported https://github.com/aip-dev/google.aip.dev/issues/624</param>
		/// <param name="pageSize">The maximum number of SecurityActions to return. If unspecified, at most 50 SecurityActions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous `ListSecurityActions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSecurityActions` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSecurityActionsResponse> Apigee_organizations_environments_securityActions_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityActions&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSecurityActionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// CreateSecurityAction creates a SecurityAction.
		/// Apigee_organizations_environments_securityActions_create v1/{parent}/securityActions
		/// </summary>
		/// <param name="parent">Required. The organization and environment that this SecurityAction applies to. Format: organizations/{org}/environments/{env}</param>
		/// <param name="securityActionId">Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityAction> Apigee_organizations_environments_securityActions_createAsync(string parent, string securityActionId, GoogleCloudApigeeV1SecurityAction requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityActions&securityActionId=" + (securityActionId==null? "" : System.Uri.EscapeDataString(securityActionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityAction>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// ListSecurityIncidents lists all the security incident associated with the environment.
		/// Apigee_organizations_environments_securityIncidents_list v1/{parent}/securityIncidents
		/// </summary>
		/// <param name="parent">Required. For a specific organization, list of all the security incidents. Format: `organizations/{org}/environments/{environment}`</param>
		/// <param name="filter">The filter expression to be used to get the list of security incidents, where filtering can be done on API Proxies. Example: filter = "api_proxy = /", "first_detected_time >", "last_detected_time <"</param>
		/// <param name="pageSize">Optional. The maximum number of incidents to return. The service may return fewer than this value. If unspecified, at most 50 incidents will be returned.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListSecurityIncident` call. Provide this to retrieve the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSecurityIncidentsResponse> Apigee_organizations_environments_securityIncidents_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityIncidents&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSecurityIncidentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BatchUpdateSecurityIncident updates multiple existing security incidents.
		/// Apigee_organizations_environments_securityIncidents_batchUpdate v1/{parent}/securityIncidents:batchUpdate
		/// </summary>
		/// <param name="parent">Optional. The parent resource shared by all security incidents being updated. If this is set, the parent field in the UpdateSecurityIncidentRequest messages must either be empty or match this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse> Apigee_organizations_environments_securityIncidents_batchUpdateAsync(string parent, GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityIncidents:batchUpdate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// ListSecurityProfiles lists all the security profiles associated with the org including attached and unattached profiles.
		/// Apigee_organizations_securityProfiles_list v1/{parent}/securityProfiles
		/// </summary>
		/// <param name="parent">Required. For a specific organization, list of all the security profiles. Format: `organizations/{org}`</param>
		/// <param name="pageSize">The maximum number of profiles to return. The service may return fewer than this value. If unspecified, at most 50 profiles will be returned.</param>
		/// <param name="pageToken">A page token, received from a previous `ListSecurityProfiles` call. Provide this to retrieve the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSecurityProfilesResponse> Apigee_organizations_securityProfiles_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityProfiles&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSecurityProfilesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// CreateSecurityProfile create a new custom security profile.
		/// Apigee_organizations_securityProfiles_create v1/{parent}/securityProfiles
		/// </summary>
		/// <param name="parent">Required. Name of organization. Format: organizations/{org}</param>
		/// <param name="securityProfileId">Required. The ID to use for the SecurityProfile, which will become the final component of the action's resource name. This value should be 1-63 characters and validated by "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityProfile> Apigee_organizations_securityProfiles_createAsync(string parent, string securityProfileId, GoogleCloudApigeeV1SecurityProfile requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityProfiles&securityProfileId=" + (securityProfileId==null? "" : System.Uri.EscapeDataString(securityProfileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityProfile>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Return a list of Security Reports
		/// Apigee_organizations_environments_securityReports_list v1/{parent}/securityReports
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <param name="dataset">Filter response list by dataset. Example: `api`, `mint`</param>
		/// <param name="from">Filter response list by returning security reports that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.</param>
		/// <param name="pageSize">The maximum number of security report to return in the list response.</param>
		/// <param name="pageToken">Token returned from the previous list response to fetch the next page.</param>
		/// <param name="status">Filter response list by security reports status.</param>
		/// <param name="submittedBy">Filter response list by user who submitted queries.</param>
		/// <param name="to">Filter response list by returning security reports that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSecurityReportsResponse> Apigee_organizations_environments_securityReports_listAsync(string parent, string dataset, string from, int pageSize, string pageToken, string status, string submittedBy, string to, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityReports&dataset=" + (dataset==null? "" : System.Uri.EscapeDataString(dataset))+"&from=" + (from==null? "" : System.Uri.EscapeDataString(from))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&submittedBy=" + (submittedBy==null? "" : System.Uri.EscapeDataString(submittedBy))+"&to=" + (to==null? "" : System.Uri.EscapeDataString(to));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSecurityReportsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submit a report request to be processed in the background. If the submission succeeds, the API returns a 200 status and an ID that refer to the report request. In addition to the HTTP status 200, the `state` of "enqueued" means that the request succeeded.
		/// Apigee_organizations_environments_securityReports_create v1/{parent}/securityReports
		/// </summary>
		/// <param name="parent">Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SecurityReport> Apigee_organizations_environments_securityReports_createAsync(string parent, GoogleCloudApigeeV1SecurityReportQuery requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/securityReports";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SecurityReport>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all shared flows in the organization.
		/// Apigee_organizations_sharedflows_list v1/{parent}/sharedflows
		/// </summary>
		/// <param name="parent">Required. The name of the parent organization under which to get shared flows. Must be of the form: `organizations/{organization_id}`</param>
		/// <param name="includeMetaData">Indicates whether to include shared flow metadata in the response.</param>
		/// <param name="includeRevisions">Indicates whether to include a list of revisions in the response.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListSharedFlowsResponse> Apigee_organizations_sharedflows_listAsync(string parent, bool includeMetaData, bool includeRevisions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/sharedflows&includeMetaData="+includeMetaData+"&includeRevisions="+includeRevisions;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListSharedFlowsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.
		/// Apigee_organizations_sharedflows_create v1/{parent}/sharedflows
		/// </summary>
		/// <param name="parent">Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`</param>
		/// <param name="action">Required. Must be set to either `import` or `validate`.</param>
		/// <param name="name">Required. The name to give the shared flow</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1SharedFlowRevision> Apigee_organizations_sharedflows_createAsync(string parent, string action, string name, GoogleApiHttpBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/sharedflows&action=" + (action==null? "" : System.Uri.EscapeDataString(action))+"&name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1SharedFlowRevision>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all API product subscriptions for a developer.
		/// Apigee_organizations_developers_subscriptions_list v1/{parent}/subscriptions
		/// </summary>
		/// <param name="parent">Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`</param>
		/// <param name="count">Number of API product subscriptions to return in the API call. Use with `startKey` to provide more targeted filtering. Defaults to 100. The maximum limit is 1000.</param>
		/// <param name="startKey">Name of the API product subscription from which to start displaying the list of subscriptions. If omitted, the list starts from the first item. For example, to view the API product subscriptions from 51-150, set the value of `startKey` to the name of the 51st subscription and set the value of `count` to 100.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse> Apigee_organizations_developers_subscriptions_listAsync(string parent, int count, string startKey, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/subscriptions&count="+count+"&startKey=" + (startKey==null? "" : System.Uri.EscapeDataString(startKey));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a subscription to an API product.
		/// Apigee_organizations_developers_subscriptions_create v1/{parent}/subscriptions
		/// </summary>
		/// <param name="parent">Required. Email address of the developer that is purchasing a subscription to the API product. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1DeveloperSubscription> Apigee_organizations_developers_subscriptions_createAsync(string parent, GoogleCloudApigeeV1DeveloperSubscription requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/subscriptions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1DeveloperSubscription>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a TargetServer in the specified environment.
		/// Apigee_organizations_environments_targetservers_create v1/{parent}/targetservers
		/// </summary>
		/// <param name="parent">Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`.</param>
		/// <param name="name">Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1TargetServer> Apigee_organizations_environments_targetservers_createAsync(string parent, string name, GoogleCloudApigeeV1TargetServer requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/targetservers&name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1TargetServer>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name for this subscription. The "name" and "push_config" must *not* be specified.
		/// Apigee_organizations_environments_subscribe v1/{parent}:subscribe
		/// </summary>
		/// <param name="parent">Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1Subscription> Apigee_organizations_environments_subscribeAsync(string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":subscribe";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1Subscription>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a subscription for the environment's Pub/Sub topic.
		/// Apigee_organizations_environments_unsubscribe v1/{parent}:unsubscribe
		/// </summary>
		/// <param name="parent">Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Apigee_organizations_environments_unsubscribeAsync(string parent, GoogleCloudApigeeV1Subscription requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":unsubscribe";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// ComputeEnvironmentScores calculates scores for requested time range for the specified security profile and environment.
		/// Apigee_organizations_securityProfiles_environments_computeEnvironmentScores v1/{profileEnvironment}:computeEnvironmentScores
		/// </summary>
		/// <param name="profileEnvironment">Required. Name of organization and environment and profile id for which score needs to be computed. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudApigeeV1ComputeEnvironmentScoresResponse> Apigee_organizations_securityProfiles_environments_computeEnvironmentScoresAsync(string profileEnvironment, GoogleCloudApigeeV1ComputeEnvironmentScoresRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (profileEnvironment==null? "" : System.Uri.EscapeDataString(profileEnvironment))+":computeEnvironmentScores";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudApigeeV1ComputeEnvironmentScoresResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provisions a new Apigee organization with a functioning runtime. This is the standard way to create trial organizations for a free Apigee trial.
		/// Apigee_projects_provisionOrganization v1/{project}:provisionOrganization
		/// </summary>
		/// <param name="project">Required. Name of the GCP project with which to associate the Apigee organization.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Apigee_projects_provisionOrganizationAsync(string project, GoogleCloudApigeeV1ProvisionOrganizationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (project==null? "" : System.Uri.EscapeDataString(project))+":provisionOrganization";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the IAM policy on an environment. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy` permission to call this API.
		/// Apigee_organizations_environments_getIamPolicy v1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Apigee_organizations_environments_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API.
		/// Apigee_organizations_environments_setIamPolicy v1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Apigee_organizations_environments_setIamPolicyAsync(string resource, GoogleIamV1SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Tests the permissions of a user on an environment, and returns a subset of permissions that the user has on the environment. If the environment does not exist, an empty permission set is returned (a NOT_FOUND error is not returned).
		/// Apigee_organizations_environments_testIamPermissions v1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1TestIamPermissionsResponse> Apigee_organizations_environments_testIamPermissionsAsync(string resource, GoogleIamV1TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum Apigee_organizations_sites_apicategories_deleteRetention
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_RETENTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINIMUM = 1,
	}
	
	public enum Apigee_organizations_sites_apicategories_getFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGRESS_CONFIG_VIEW_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

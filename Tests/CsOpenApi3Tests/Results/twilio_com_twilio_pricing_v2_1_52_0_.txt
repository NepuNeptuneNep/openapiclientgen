//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2trunking_country
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2trunking_country_instance
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The list of [OriginatingCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originating_call_prices")]
		public Pricingv2trunking_country_instanceOriginating_call_prices[] Pricingv2trunking_country_instanceOriginating_call_prices { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The list of [TerminatingPrefixPrice](https://www.twilio.com/docs/voice/pricing#outbound-prefix-price-with-origin) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="terminating_prefix_prices")]
		public Pricingv2trunking_country_instanceTerminating_prefix_prices[] Pricingv2trunking_country_instanceTerminating_prefix_prices { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv2trunking_country_instanceOriginating_call_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv2trunking_country_instanceTerminating_prefix_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination_prefixes")]
		public string[] Destination_prefixes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="origination_prefixes")]
		public string[] Origination_prefixes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2trunking_number
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The destination phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_number")]
		public string Destination_number { get; set; }
		
		/// <summary>
		/// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The [OriginatingCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originating_call_price")]
		public Pricingv2trunking_numberOriginating_call_price Originating_call_price { get; set; }
		
		/// <summary>
		/// The origination phone number in [[E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_number")]
		public string Origination_number { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="terminating_prefix_prices")]
		public Pricingv2trunking_numberTerminating_prefix_prices[] Pricingv2trunking_numberTerminating_prefix_prices { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv2trunking_numberOriginating_call_price
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv2trunking_numberTerminating_prefix_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination_prefixes")]
		public string[] Destination_prefixes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="origination_prefixes")]
		public string[] Origination_prefixes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2voice
	{
		
		/// <summary>
		/// The URLs of the related Countries and Numbers resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public string Links { get; set; }
		
		/// <summary>
		/// The resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2voicevoice_country
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2voicevoice_country_instance
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The list of [InboundCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inbound_call_prices")]
		public Pricingv2voicevoice_country_instanceInbound_call_prices[] Pricingv2voicevoice_country_instanceInbound_call_prices { get; set; }
		
		/// <summary>
		/// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The list of [OutboundPrefixPriceWithOrigin](https://www.twilio.com/docs/voice/pricing#outbound-prefix-price-with-origin) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_prefix_prices")]
		public Pricingv2voicevoice_country_instanceOutbound_prefix_prices[] Pricingv2voicevoice_country_instanceOutbound_prefix_prices { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv2voicevoice_country_instanceInbound_call_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv2voicevoice_country_instanceOutbound_prefix_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination_prefixes")]
		public string[] Destination_prefixes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="origination_prefixes")]
		public string[] Origination_prefixes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Pricingv2voicevoice_number
	{
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The destination phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination_number")]
		public string Destination_number { get; set; }
		
		/// <summary>
		/// The [InboundCallPrice](https://www.twilio.com/docs/voice/pricing#inbound-call-price) record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inbound_call_price")]
		public Pricingv2voicevoice_numberInbound_call_price Inbound_call_price { get; set; }
		
		/// <summary>
		/// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The origination phone number in [[E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_number")]
		public string Origination_number { get; set; }
		
		/// <summary>
		/// The list of [OutboundCallPriceWithOrigin](https://www.twilio.com/docs/voice/pricing#outbound-call-price-with-origin) records.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outbound_call_prices")]
		public Pricingv2voicevoice_numberOutbound_call_prices[] Pricingv2voicevoice_numberOutbound_call_prices { get; set; }
		
		/// <summary>
		/// The currency in which prices are measured, specified in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// The absolute URL of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class Pricingv2voicevoice_numberInbound_call_price
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public string Number_type { get; set; }
	}
	
	public class Pricingv2voicevoice_numberOutbound_call_prices
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_price")]
		public System.Nullable<System.Double> Base_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_price")]
		public System.Nullable<System.Double> Current_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="origination_prefixes")]
		public string[] Origination_prefixes { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// ListTrunkingCountry v2/Trunking/Countries
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.</param>
		/// <param name="Page">The page index. This value is simply for client state.</param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListTrunkingCountryReturn> ListTrunkingCountryAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Trunking/Countries?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListTrunkingCountryReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch a specific Country.
		/// FetchTrunkingCountry v2/Trunking/Countries/{IsoCountry}
		/// </summary>
		/// <param name="IsoCountry">The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the origin-based voice pricing information to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv2trunking_country_instance> FetchTrunkingCountryAsync(string IsoCountry, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Trunking/Countries/"+ (IsoCountry==null? "" : System.Uri.EscapeDataString(IsoCountry));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv2trunking_country_instance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch pricing information for a specific destination and, optionally, origination phone number.
		/// FetchTrunkingNumber v2/Trunking/Numbers/{DestinationNumber}
		/// </summary>
		/// <param name="DestinationNumber">The destination phone number, in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to fetch the origin-based voice pricing information. E.164 format consists of a + followed by the country code and subscriber number.</param>
		/// <param name="OriginationNumber">The origination phone number, in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to fetch the origin-based voice pricing information. E.164 format consists of a + followed by the country code and subscriber number.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv2trunking_number> FetchTrunkingNumberAsync(string DestinationNumber, string OriginationNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Trunking/Numbers/"+ (DestinationNumber==null? "" : System.Uri.EscapeDataString(DestinationNumber))+"&OriginationNumber=" + (OriginationNumber==null? "" : System.Uri.EscapeDataString(OriginationNumber));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv2trunking_number>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListVoiceCountry v2/Voice/Countries
		/// </summary>
		/// <param name="PageSize">How many resources to return in each list page. The default is 50, and the maximum is 1000.</param>
		/// <param name="Page">The page index. This value is simply for client state.</param>
		/// <param name="PageToken">The page token. This is provided by the API.</param>
		/// <returns>OK</returns>
		public async Task<ListVoiceCountryReturn> ListVoiceCountryAsync(int PageSize, int Page, string PageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Voice/Countries?PageSize="+PageSize+"&Page="+Page+"&PageToken=" + (PageToken==null? "" : System.Uri.EscapeDataString(PageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListVoiceCountryReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch a specific Country.
		/// FetchVoiceCountry v2/Voice/Countries/{IsoCountry}
		/// </summary>
		/// <param name="IsoCountry">The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the origin-based voice pricing information to fetch.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv2voicevoice_country_instance> FetchVoiceCountryAsync(string IsoCountry, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Voice/Countries/"+ (IsoCountry==null? "" : System.Uri.EscapeDataString(IsoCountry));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv2voicevoice_country_instance>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch pricing information for a specific destination and, optionally, origination phone number.
		/// FetchVoiceNumber v2/Voice/Numbers/{DestinationNumber}
		/// </summary>
		/// <param name="DestinationNumber">The destination phone number, in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to fetch the origin-based voice pricing information. E.164 format consists of a + followed by the country code and subscriber number.</param>
		/// <param name="OriginationNumber">The origination phone number, in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, for which to fetch the origin-based voice pricing information. E.164 format consists of a + followed by the country code and subscriber number.</param>
		/// <returns>OK</returns>
		public async Task<Pricingv2voicevoice_number> FetchVoiceNumberAsync(string DestinationNumber, string OriginationNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/Voice/Numbers/"+ (DestinationNumber==null? "" : System.Uri.EscapeDataString(DestinationNumber))+"&OriginationNumber=" + (OriginationNumber==null? "" : System.Uri.EscapeDataString(OriginationNumber));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Pricingv2voicevoice_number>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ListTrunkingCountryReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="countries")]
		public Pricingv2trunking_country[] Countries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListTrunkingCountryReturnMeta Meta { get; set; }
	}
	
	public class ListTrunkingCountryReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ListVoiceCountryReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="countries")]
		public Pricingv2voicevoice_country[] Countries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public ListVoiceCountryReturnMeta Meta { get; set; }
	}
	
	public class ListVoiceCountryReturnMeta
	{
		
		[System.Runtime.Serialization.DataMember(Name="first_page_url")]
		public string First_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_url")]
		public string Next_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_url")]
		public string Previous_page_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
